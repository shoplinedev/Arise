"use strict";

(self["webpackChunkArise"] = self["webpackChunkArise"] || []).push([ [ "contact-form" ], {
    "./src/assets/stage/contact-form/index.js": (__unused_webpack_module, __unused_webpack___webpack_exports__, __webpack_require__) => {
        __webpack_require__("./node_modules/regenerator-runtime/runtime.js");
        __webpack_require__("./node_modules/core-js/modules/es.array.find.js");
        __webpack_require__("./node_modules/core-js/modules/es.object.to-string.js");
        __webpack_require__("./node_modules/core-js/modules/es.promise.js");
        __webpack_require__("./node_modules/core-js/modules/es.object.define-property.js");
        var utils_form = __webpack_require__("../shared/browser/utils/form/index.js");
        var request = __webpack_require__("../shared/browser/utils/request.js");
        var i18n = __webpack_require__("../shared/browser/utils/i18n.js");
        var EMAIL_VALID_REGEXP = /^[0-9a-zA-Z\+]+[0-9a-zA-Z\.\-\+\_]*[0-9a-zA-Z\+]+@[0-9a-zA-Z\u4e00-\u9fa5]+(\-?[0-9a-zA-Z\u4e00-\u9fa5]+)*(\.[0-9a-zA-Z\u4e00-\u9fa5]+)+$|^[0-9a-zA-Z\+]+[0-9a-zA-Z\.\-\+\_]*[0-9a-zA-Z\+]+@[0-9a-zA-Z\u4e00-\u9fa5]+(\-?[0-9a-zA-Z\u4e00-\u9fa5]+)*(\.[0-9a-zA-Z\u4e00-\u9fa5]+\-[0-9a-zA-Z\u4e00-\u9fa5]+)+$|^[0-9a-zA-Z\+]+[0-9a-zA-Z\.\-\+\_]*[0-9a-zA-Z\+]+@[0-9a-zA-Z\u4e00-\u9fa5]+(\-?[0-9a-zA-Z\u4e00-\u9fa5]+)*(\.[0-9a-zA-Z\u4e00-\u9fa5]+(\-[0-9a-zA-Z\u4e00-\u9fa5]+)*)+$|^[0-9a-zA-Z\+]+@[0-9a-zA-Z\u4e00-\u9fa5]+(\-?[0-9a-zA-Z\u4e00-\u9fa5]+)*(\.[0-9a-zA-Z\u4e00-\u9fa5]+)+$|^[0-9a-zA-Z\+]+@[0-9a-zA-Z\u4e00-\u9fa5]+(\-?[0-9a-zA-Z\u4e00-\u9fa5]+)*(\.[0-9a-zA-Z\u4e00-\u9fa5]+\-[0-9a-zA-Z\u4e00-\u9fa5]+)+$|^[0-9a-zA-Z\+]+@[0-9a-zA-Z\u4e00-\u9fa5]+(\-?[0-9a-zA-Z\u4e00-\u9fa5]+)*(\.[0-9a-zA-Z\u4e00-\u9fa5]+(\-[0-9a-zA-Z\u4e00-\u9fa5]+)*)+$/;
        var sectionsLoad = __webpack_require__("../shared/browser/utils/sectionsLoad/index.js");
        var toast = __webpack_require__("./src/assets/commons/components/toast/index.js");
        function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {
            try {
                var info = gen[key](arg);
                var value = info.value;
            } catch (error) {
                reject(error);
                return;
            }
            if (info.done) resolve(value); else Promise.resolve(value).then(_next, _throw);
        }
        function _asyncToGenerator(fn) {
            return function() {
                var self = this, args = arguments;
                return new Promise((function(resolve, reject) {
                    var gen = fn.apply(self, args);
                    function _next(value) {
                        asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value);
                    }
                    function _throw(err) {
                        asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err);
                    }
                    _next(void 0);
                }));
            };
        }
        function _classCallCheck(instance, Constructor) {
            if (!(instance instanceof Constructor)) throw new TypeError("Cannot call a class as a function");
        }
        function _defineProperties(target, props) {
            for (var i = 0; i < props.length; i++) {
                var descriptor = props[i];
                descriptor.enumerable = descriptor.enumerable || false;
                descriptor.configurable = true;
                if ("value" in descriptor) descriptor.writable = true;
                Object.defineProperty(target, descriptor.key, descriptor);
            }
        }
        function _createClass(Constructor, protoProps, staticProps) {
            if (protoProps) _defineProperties(Constructor.prototype, protoProps);
            if (staticProps) _defineProperties(Constructor, staticProps);
            return Constructor;
        }
        function _defineProperty(obj, key, value) {
            if (key in obj) Object.defineProperty(obj, key, {
                value,
                enumerable: true,
                configurable: true,
                writable: true
            }); else obj[key] = value;
            return obj;
        }
        var emailRE = EMAIL_VALID_REGEXP;
        var SEND_API = "/merchant/form/contactUs";
        var contact_form_toast = new toast["default"]({
            content: "content",
            className: "contact-form__toast",
            duration: 5e3
        });
        var fields = [ {
            name: "name",
            value: ""
        }, {
            name: "email",
            value: "",
            rules: [ {
                message: (0, i18n.t)("products.product_details.enter_email_address"),
                required: true
            }, {
                message: (0, i18n.t)("products.product_details.enter_valid_email_address"),
                pattern: emailRE
            } ]
        }, {
            name: "phone",
            value: ""
        }, {
            name: "comment",
            value: ""
        } ];
        var ContactForm = function() {
            function ContactForm(container) {
                _classCallCheck(this, ContactForm);
                _defineProperty(this, "container", null);
                _defineProperty(this, "contactForm", null);
                _defineProperty(this, "submitBtn", null);
                this.container = container;
                var sectionId = container.data("section-id");
                this.submitBtn = container.find(".contact-form__submit");
                this.contactForm = utils_form["default"].takeForm("contact-form-".concat(sectionId));
                this.contactForm.init();
                this.contactForm.setFields(fields);
                this.initSubmitBtn();
            }
            _createClass(ContactForm, [ {
                key: "validateForm",
                value: function() {
                    var _this = this;
                    return new Promise((function(resolve, reject) {
                        _this.contactForm.validateFields().then((function(res) {
                            if (res.pass) resolve(); else reject(res);
                        }));
                    }));
                }
            }, {
                key: "initSubmitBtn",
                value: function() {
                    var _this2 = this;
                    this.submitBtn.on("click", function() {
                        var _ref = _asyncToGenerator(regeneratorRuntime.mark((function _callee(event) {
                            var contactData;
                            return regeneratorRuntime.wrap((function(_context) {
                                while (1) switch (_context.prev = _context.next) {
                                  case 0:
                                    event.preventDefault();
                                    _context.next = 3;
                                    return _this2.validateForm();

                                  case 3:
                                    contactData = _this2.contactForm.getFieldsValue();
                                    _context.prev = 4;
                                    _context.next = 7;
                                    return request["default"].post(SEND_API, contactData);

                                  case 7:
                                    contact_form_toast.open((0, i18n.t)("general.contact_us.send_success"));
                                    _this2.contactForm.setFields(fields);
                                    _context.next = 14;
                                    break;

                                  case 11:
                                    _context.prev = 11;
                                    _context.t0 = _context["catch"](4);
                                    contact_form_toast.open("Network Error");

                                  case 14:
                                  case "end":
                                    return _context.stop();
                                }
                            }), _callee, null, [ [ 4, 11 ] ]);
                        })));
                        return function(_x) {
                            return _ref.apply(this, arguments);
                        };
                    }());
                }
            }, {
                key: "onUnload",
                value: function() {
                    this.contactForm.destroy();
                    this.submitBtn.off("click");
                }
            } ]);
            return ContactForm;
        }();
        _defineProperty(ContactForm, "type", "contact-form");
        (0, sectionsLoad.registrySectionConstructor)(ContactForm.type, ContactForm);
    }
}, __webpack_require__ => {
    var __webpack_exec__ = moduleId => __webpack_require__(__webpack_require__.s = moduleId);
    __webpack_require__.O(0, [ "vendor" ], (() => __webpack_exec__("./src/assets/stage/contact-form/index.js")));
    __webpack_require__.O();
} ]);