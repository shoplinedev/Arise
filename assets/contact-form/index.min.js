(self["webpackChunkArise"] = self["webpackChunkArise"] || []).push([ [ "contact-form" ], {
    "./src/assets/stage/contact-form/index.js": (__unused_webpack_module, __unused_webpack___webpack_exports__, __webpack_require__) => {
        "use strict";
        __webpack_require__("./node_modules/regenerator-runtime/runtime.js");
        __webpack_require__("./node_modules/core-js/modules/es.array.find.js");
        __webpack_require__("./node_modules/core-js/modules/es.object.to-string.js");
        __webpack_require__("./node_modules/core-js/modules/es.promise.js");
        __webpack_require__("./node_modules/core-js/modules/es.object.define-property.js");
        var utils_form = __webpack_require__("../shared/browser/utils/form/index.js");
        var request = __webpack_require__("../shared/browser/utils/request.js");
        var i18n = __webpack_require__("../shared/browser/utils/i18n.js");
        var EMAIL_VALID_REGEXP = /^[0-9a-zA-Z\+]+[0-9a-zA-Z\.\-\+\_]*[0-9a-zA-Z\+]+@[0-9a-zA-Z\u4e00-\u9fa5]+(\-?[0-9a-zA-Z\u4e00-\u9fa5]+)*(\.[0-9a-zA-Z\u4e00-\u9fa5]+)+$|^[0-9a-zA-Z\+]+[0-9a-zA-Z\.\-\+\_]*[0-9a-zA-Z\+]+@[0-9a-zA-Z\u4e00-\u9fa5]+(\-?[0-9a-zA-Z\u4e00-\u9fa5]+)*(\.[0-9a-zA-Z\u4e00-\u9fa5]+\-[0-9a-zA-Z\u4e00-\u9fa5]+)+$|^[0-9a-zA-Z\+]+[0-9a-zA-Z\.\-\+\_]*[0-9a-zA-Z\+]+@[0-9a-zA-Z\u4e00-\u9fa5]+(\-?[0-9a-zA-Z\u4e00-\u9fa5]+)*(\.[0-9a-zA-Z\u4e00-\u9fa5]+(\-[0-9a-zA-Z\u4e00-\u9fa5]+)*)+$|^[0-9a-zA-Z\+]+@[0-9a-zA-Z\u4e00-\u9fa5]+(\-?[0-9a-zA-Z\u4e00-\u9fa5]+)*(\.[0-9a-zA-Z\u4e00-\u9fa5]+)+$|^[0-9a-zA-Z\+]+@[0-9a-zA-Z\u4e00-\u9fa5]+(\-?[0-9a-zA-Z\u4e00-\u9fa5]+)*(\.[0-9a-zA-Z\u4e00-\u9fa5]+\-[0-9a-zA-Z\u4e00-\u9fa5]+)+$|^[0-9a-zA-Z\+]+@[0-9a-zA-Z\u4e00-\u9fa5]+(\-?[0-9a-zA-Z\u4e00-\u9fa5]+)*(\.[0-9a-zA-Z\u4e00-\u9fa5]+(\-[0-9a-zA-Z\u4e00-\u9fa5]+)*)+$/;
        var sectionsLoad = __webpack_require__("../shared/browser/utils/sectionsLoad/index.js");
        var toast = __webpack_require__("./src/assets/commons/components/toast/index.js");
        function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {
            try {
                var info = gen[key](arg);
                var value = info.value;
            } catch (error) {
                reject(error);
                return;
            }
            if (info.done) resolve(value); else Promise.resolve(value).then(_next, _throw);
        }
        function _asyncToGenerator(fn) {
            return function() {
                var self = this, args = arguments;
                return new Promise((function(resolve, reject) {
                    var gen = fn.apply(self, args);
                    function _next(value) {
                        asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value);
                    }
                    function _throw(err) {
                        asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err);
                    }
                    _next(void 0);
                }));
            };
        }
        function _classCallCheck(instance, Constructor) {
            if (!(instance instanceof Constructor)) throw new TypeError("Cannot call a class as a function");
        }
        function _defineProperties(target, props) {
            for (var i = 0; i < props.length; i++) {
                var descriptor = props[i];
                descriptor.enumerable = descriptor.enumerable || false;
                descriptor.configurable = true;
                if ("value" in descriptor) descriptor.writable = true;
                Object.defineProperty(target, descriptor.key, descriptor);
            }
        }
        function _createClass(Constructor, protoProps, staticProps) {
            if (protoProps) _defineProperties(Constructor.prototype, protoProps);
            if (staticProps) _defineProperties(Constructor, staticProps);
            return Constructor;
        }
        function _defineProperty(obj, key, value) {
            if (key in obj) Object.defineProperty(obj, key, {
                value,
                enumerable: true,
                configurable: true,
                writable: true
            }); else obj[key] = value;
            return obj;
        }
        var emailRE = EMAIL_VALID_REGEXP;
        var SEND_API = "/merchant/form/contactUs";
        var contact_form_toast = new toast["default"]({
            content: "content",
            className: "contact-form__toast",
            duration: 5e3
        });
        var fields = [ {
            name: "name",
            value: ""
        }, {
            name: "email",
            value: "",
            rules: [ {
                message: (0, i18n.t)("productDetail.inquiry.emailEmptyErr"),
                required: true
            }, {
                message: (0, i18n.t)("productDetail.inquiry.emailFormatErr"),
                pattern: emailRE
            } ]
        }, {
            name: "phone",
            value: ""
        }, {
            name: "comment",
            value: ""
        } ];
        var ContactForm = function() {
            function ContactForm(container) {
                _classCallCheck(this, ContactForm);
                _defineProperty(this, "container", null);
                _defineProperty(this, "contactForm", null);
                _defineProperty(this, "submitBtn", null);
                this.container = container;
                var sectionId = container.data("section-id");
                this.submitBtn = container.find(".contact-form__submit");
                this.contactForm = utils_form["default"].takeForm("contact-form-".concat(sectionId));
                this.contactForm.init();
                this.contactForm.setFields(fields);
                this.initSubmitBtn();
            }
            _createClass(ContactForm, [ {
                key: "validateForm",
                value: function() {
                    var _this = this;
                    return new Promise((function(resolve, reject) {
                        _this.contactForm.validateFields().then((function(res) {
                            if (res.pass) resolve(); else reject(res);
                        }));
                    }));
                }
            }, {
                key: "initSubmitBtn",
                value: function() {
                    var _this2 = this;
                    this.submitBtn.on("click", function() {
                        var _ref = _asyncToGenerator(regeneratorRuntime.mark((function _callee(event) {
                            var contactData;
                            return regeneratorRuntime.wrap((function(_context) {
                                while (1) switch (_context.prev = _context.next) {
                                  case 0:
                                    event.preventDefault();
                                    _context.next = 3;
                                    return _this2.validateForm();

                                  case 3:
                                    contactData = _this2.contactForm.getFieldsValue();
                                    _context.prev = 4;
                                    _context.next = 7;
                                    return request["default"].post(SEND_API, contactData);

                                  case 7:
                                    contact_form_toast.open((0, i18n.t)("contactForm.sendSuccess"));
                                    _this2.contactForm.setFields(fields);
                                    _context.next = 14;
                                    break;

                                  case 11:
                                    _context.prev = 11;
                                    _context.t0 = _context["catch"](4);
                                    contact_form_toast.open("Network Error");

                                  case 14:
                                  case "end":
                                    return _context.stop();
                                }
                            }), _callee, null, [ [ 4, 11 ] ]);
                        })));
                        return function(_x) {
                            return _ref.apply(this, arguments);
                        };
                    }());
                }
            }, {
                key: "onUnload",
                value: function() {
                    this.contactForm.destroy();
                    this.submitBtn.off("click");
                }
            } ]);
            return ContactForm;
        }();
        _defineProperty(ContactForm, "type", "contact-form");
        (0, sectionsLoad.registrySectionConstructor)(ContactForm.type, ContactForm);
    },
    "../shared/browser/node_modules/core-js/modules/es.promise.all-settled.js": (__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {
        "use strict";
        var $ = __webpack_require__("../shared/browser/node_modules/core-js/internals/export.js");
        var call = __webpack_require__("../shared/browser/node_modules/core-js/internals/function-call.js");
        var aCallable = __webpack_require__("../shared/browser/node_modules/core-js/internals/a-callable.js");
        var newPromiseCapabilityModule = __webpack_require__("../shared/browser/node_modules/core-js/internals/new-promise-capability.js");
        var perform = __webpack_require__("../shared/browser/node_modules/core-js/internals/perform.js");
        var iterate = __webpack_require__("../shared/browser/node_modules/core-js/internals/iterate.js");
        $({
            target: "Promise",
            stat: true
        }, {
            allSettled: function(iterable) {
                var C = this;
                var capability = newPromiseCapabilityModule.f(C);
                var resolve = capability.resolve;
                var reject = capability.reject;
                var result = perform((function() {
                    var promiseResolve = aCallable(C.resolve);
                    var values = [];
                    var counter = 0;
                    var remaining = 1;
                    iterate(iterable, (function(promise) {
                        var index = counter++;
                        var alreadyCalled = false;
                        remaining++;
                        call(promiseResolve, C, promise).then((function(value) {
                            if (alreadyCalled) return;
                            alreadyCalled = true;
                            values[index] = {
                                status: "fulfilled",
                                value
                            };
                            --remaining || resolve(values);
                        }), (function(error) {
                            if (alreadyCalled) return;
                            alreadyCalled = true;
                            values[index] = {
                                status: "rejected",
                                reason: error
                            };
                            --remaining || resolve(values);
                        }));
                    }));
                    --remaining || resolve(values);
                }));
                if (result.error) reject(result.value);
                return capability.promise;
            }
        });
    },
    "../shared/browser/node_modules/core-js/modules/es.reflect.delete-property.js": (__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {
        var $ = __webpack_require__("../shared/browser/node_modules/core-js/internals/export.js");
        var anObject = __webpack_require__("../shared/browser/node_modules/core-js/internals/an-object.js");
        var getOwnPropertyDescriptor = __webpack_require__("../shared/browser/node_modules/core-js/internals/object-get-own-property-descriptor.js").f;
        $({
            target: "Reflect",
            stat: true
        }, {
            deleteProperty: function(target, propertyKey) {
                var descriptor = getOwnPropertyDescriptor(anObject(target), propertyKey);
                return descriptor && !descriptor.configurable ? false : delete target[propertyKey];
            }
        });
    },
    "../shared/browser/utils/form/form.js": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
        "use strict";
        __webpack_require__.d(__webpack_exports__, {
            default: () => __WEBPACK_DEFAULT_EXPORT__
        });
        __webpack_require__("./node_modules/regenerator-runtime/runtime.js");
        __webpack_require__("../shared/browser/node_modules/core-js/modules/es.symbol.js");
        __webpack_require__("../shared/browser/node_modules/core-js/modules/es.symbol.description.js");
        __webpack_require__("../shared/browser/node_modules/core-js/modules/es.object.to-string.js");
        __webpack_require__("../shared/browser/node_modules/core-js/modules/es.function.bind.js");
        __webpack_require__("../shared/browser/node_modules/core-js/modules/es.array.concat.js");
        __webpack_require__("../shared/browser/node_modules/core-js/modules/es.object.assign.js");
        __webpack_require__("../shared/browser/node_modules/core-js/modules/es.array.for-each.js");
        __webpack_require__("../shared/browser/node_modules/core-js/modules/web.dom-collections.for-each.js");
        __webpack_require__("../shared/browser/node_modules/core-js/modules/es.array.map.js");
        __webpack_require__("../shared/browser/node_modules/core-js/modules/es.array.from.js");
        __webpack_require__("../shared/browser/node_modules/core-js/modules/es.string.iterator.js");
        __webpack_require__("../shared/browser/node_modules/core-js/modules/es.array.reduce.js");
        __webpack_require__("../shared/browser/node_modules/core-js/modules/es.function.name.js");
        __webpack_require__("../shared/browser/node_modules/core-js/modules/es.array.find.js");
        __webpack_require__("../shared/browser/node_modules/core-js/modules/es.array.includes.js");
        __webpack_require__("../shared/browser/node_modules/core-js/modules/es.string.includes.js");
        __webpack_require__("../shared/browser/node_modules/core-js/modules/es.object.entries.js");
        __webpack_require__("../shared/browser/node_modules/core-js/modules/es.object.keys.js");
        __webpack_require__("../shared/browser/node_modules/core-js/modules/es.array.filter.js");
        __webpack_require__("../shared/browser/node_modules/core-js/modules/es.regexp.constructor.js");
        __webpack_require__("../shared/browser/node_modules/core-js/modules/es.regexp.exec.js");
        __webpack_require__("../shared/browser/node_modules/core-js/modules/es.regexp.to-string.js");
        __webpack_require__("../shared/browser/node_modules/core-js/modules/es.array.iterator.js");
        __webpack_require__("../shared/browser/node_modules/core-js/modules/es.promise.js");
        __webpack_require__("../shared/browser/node_modules/core-js/modules/es.promise.all-settled.js");
        __webpack_require__("../shared/browser/node_modules/core-js/modules/web.dom-collections.iterator.js");
        __webpack_require__("../shared/browser/node_modules/core-js/modules/es.set.js");
        __webpack_require__("../shared/browser/node_modules/core-js/modules/esnext.set.add-all.js");
        __webpack_require__("../shared/browser/node_modules/core-js/modules/esnext.set.delete-all.js");
        __webpack_require__("../shared/browser/node_modules/core-js/modules/esnext.set.difference.js");
        __webpack_require__("../shared/browser/node_modules/core-js/modules/esnext.set.every.js");
        __webpack_require__("../shared/browser/node_modules/core-js/modules/esnext.set.filter.js");
        __webpack_require__("../shared/browser/node_modules/core-js/modules/esnext.set.find.js");
        __webpack_require__("../shared/browser/node_modules/core-js/modules/esnext.set.intersection.js");
        __webpack_require__("../shared/browser/node_modules/core-js/modules/esnext.set.is-disjoint-from.js");
        __webpack_require__("../shared/browser/node_modules/core-js/modules/esnext.set.is-subset-of.js");
        __webpack_require__("../shared/browser/node_modules/core-js/modules/esnext.set.is-superset-of.js");
        __webpack_require__("../shared/browser/node_modules/core-js/modules/esnext.set.join.js");
        __webpack_require__("../shared/browser/node_modules/core-js/modules/esnext.set.map.js");
        __webpack_require__("../shared/browser/node_modules/core-js/modules/esnext.set.reduce.js");
        __webpack_require__("../shared/browser/node_modules/core-js/modules/esnext.set.some.js");
        __webpack_require__("../shared/browser/node_modules/core-js/modules/esnext.set.symmetric-difference.js");
        __webpack_require__("../shared/browser/node_modules/core-js/modules/esnext.set.union.js");
        __webpack_require__("../shared/browser/node_modules/core-js/modules/es.object.define-property.js");
        __webpack_require__("../shared/browser/node_modules/core-js/modules/es.object.get-own-property-descriptor.js");
        __webpack_require__("../shared/browser/node_modules/core-js/modules/es.object.get-own-property-descriptors.js");
        __webpack_require__("../shared/browser/node_modules/core-js/modules/es.object.define-properties.js");
        __webpack_require__("../shared/browser/node_modules/core-js/modules/es.array.is-array.js");
        __webpack_require__("../shared/browser/node_modules/core-js/modules/es.symbol.iterator.js");
        __webpack_require__("../shared/browser/node_modules/core-js/modules/es.array.slice.js");
        var _yy_sl_theme_shared_utils_event_bus__WEBPACK_IMPORTED_MODULE_51__ = __webpack_require__("../shared/browser/utils/event-bus.js");
        function _typeof(obj) {
            "@babel/helpers - typeof";
            if ("function" === typeof Symbol && "symbol" === typeof Symbol.iterator) _typeof = function(obj) {
                return typeof obj;
            }; else _typeof = function(obj) {
                return obj && "function" === typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
            };
            return _typeof(obj);
        }
        function _slicedToArray(arr, i) {
            return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();
        }
        function _nonIterableRest() {
            throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
        }
        function _iterableToArrayLimit(arr, i) {
            var _i = arr && ("undefined" !== typeof Symbol && arr[Symbol.iterator] || arr["@@iterator"]);
            if (null == _i) return;
            var _arr = [];
            var _n = true;
            var _d = false;
            var _s, _e;
            try {
                for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {
                    _arr.push(_s.value);
                    if (i && _arr.length === i) break;
                }
            } catch (err) {
                _d = true;
                _e = err;
            } finally {
                try {
                    if (!_n && null != _i["return"]) _i["return"]();
                } finally {
                    if (_d) throw _e;
                }
            }
            return _arr;
        }
        function _arrayWithHoles(arr) {
            if (Array.isArray(arr)) return arr;
        }
        function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {
            try {
                var info = gen[key](arg);
                var value = info.value;
            } catch (error) {
                reject(error);
                return;
            }
            if (info.done) resolve(value); else Promise.resolve(value).then(_next, _throw);
        }
        function _asyncToGenerator(fn) {
            return function() {
                var self = this, args = arguments;
                return new Promise((function(resolve, reject) {
                    var gen = fn.apply(self, args);
                    function _next(value) {
                        asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value);
                    }
                    function _throw(err) {
                        asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err);
                    }
                    _next(void 0);
                }));
            };
        }
        function _toConsumableArray(arr) {
            return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();
        }
        function _nonIterableSpread() {
            throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
        }
        function _unsupportedIterableToArray(o, minLen) {
            if (!o) return;
            if ("string" === typeof o) return _arrayLikeToArray(o, minLen);
            var n = Object.prototype.toString.call(o).slice(8, -1);
            if ("Object" === n && o.constructor) n = o.constructor.name;
            if ("Map" === n || "Set" === n) return Array.from(o);
            if ("Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);
        }
        function _iterableToArray(iter) {
            if ("undefined" !== typeof Symbol && null != iter[Symbol.iterator] || null != iter["@@iterator"]) return Array.from(iter);
        }
        function _arrayWithoutHoles(arr) {
            if (Array.isArray(arr)) return _arrayLikeToArray(arr);
        }
        function _arrayLikeToArray(arr, len) {
            if (null == len || len > arr.length) len = arr.length;
            for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];
            return arr2;
        }
        function ownKeys(object, enumerableOnly) {
            var keys = Object.keys(object);
            if (Object.getOwnPropertySymbols) {
                var symbols = Object.getOwnPropertySymbols(object);
                if (enumerableOnly) symbols = symbols.filter((function(sym) {
                    return Object.getOwnPropertyDescriptor(object, sym).enumerable;
                }));
                keys.push.apply(keys, symbols);
            }
            return keys;
        }
        function _objectSpread(target) {
            for (var i = 1; i < arguments.length; i++) {
                var source = null != arguments[i] ? arguments[i] : {};
                if (i % 2) ownKeys(Object(source), true).forEach((function(key) {
                    _defineProperty(target, key, source[key]);
                })); else if (Object.getOwnPropertyDescriptors) Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); else ownKeys(Object(source)).forEach((function(key) {
                    Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
                }));
            }
            return target;
        }
        function _defineProperty(obj, key, value) {
            if (key in obj) Object.defineProperty(obj, key, {
                value,
                enumerable: true,
                configurable: true,
                writable: true
            }); else obj[key] = value;
            return obj;
        }
        function _classCallCheck(instance, Constructor) {
            if (!(instance instanceof Constructor)) throw new TypeError("Cannot call a class as a function");
        }
        function _defineProperties(target, props) {
            for (var i = 0; i < props.length; i++) {
                var descriptor = props[i];
                descriptor.enumerable = descriptor.enumerable || false;
                descriptor.configurable = true;
                if ("value" in descriptor) descriptor.writable = true;
                Object.defineProperty(target, descriptor.key, descriptor);
            }
        }
        function _createClass(Constructor, protoProps, staticProps) {
            if (protoProps) _defineProperties(Constructor.prototype, protoProps);
            if (staticProps) _defineProperties(Constructor, staticProps);
            return Constructor;
        }
        var ValidateTrigger = {
            ONCHANGE: "onChange",
            MANUAL: "manual",
            ONBLUR: "manual",
            ONNATIVECHANGE: "onNativeChange"
        };
        var isPromiseFulfilledResult = function(result) {
            return "fulfilled" === result.status;
        };
        var formItemName = "sl-form-item-name";
        var REQUIRED_SYMBOL = Symbol("required");
        var CustomForm = function() {
            function CustomForm() {
                var fid = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : "";
                var _ref = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {
                    onDestory: function() {}
                }, onDestory = _ref.onDestory;
                _classCallCheck(this, CustomForm);
                this.fid = fid;
                this.onDestory = onDestory;
                this.formEntity = null;
                this.validateRecord = {};
                this.config = {
                    validateTrigger: ValidateTrigger.MANUAL,
                    requiredErrMsg: "这是必填字段!",
                    defaultErrMsg: "请输入合法的值",
                    errContainerClss: "errClass",
                    validateWhenInit: false,
                    emitChangeWhenInit: false
                };
                this.canValidate = false;
                this.canEmitChange = true;
                this.hadInit = false;
                this.el = document.querySelector("#".concat(fid));
                var eventBus = new _yy_sl_theme_shared_utils_event_bus__WEBPACK_IMPORTED_MODULE_51__.SL_EventEmitter;
                this.eventBus = eventBus;
                this.on = this.eventBus.on.bind(eventBus);
                this.emit = this.eventBus.emit.bind(eventBus);
            }
            _createClass(CustomForm, [ {
                key: "init",
                value: function(config) {
                    if (this.hadInit) return false;
                    try {
                        this.initFormConfig(config);
                        var formItems = this.el.querySelectorAll("[".concat(formItemName, "]"));
                        var _this$calculatePropsA = this.calculatePropsAndInitialData(formItems), initialData = _this$calculatePropsA.initialData, childrenProps = _this$calculatePropsA.childrenProps;
                        this.formEntity = {
                            data: initialData,
                            childrenProps,
                            el: this.el
                        };
                        this.initEventListener(this.el);
                        this.hadInit = true;
                    } catch (e) {
                        console.warn("".concat(this.fid, " is not found, ").concat(e));
                    }
                }
            }, {
                key: "initFormConfig",
                value: function(config) {
                    if (config) {
                        Object.assign(this.config, config);
                        if (config && config.validateWhenInit) this.canValidate = true;
                        if (config && config.emitChangeWhenInit) this.canEmitChange = true;
                    }
                }
            }, {
                key: "initEventListener",
                value: function(el) {
                    var _this = this;
                    el.addEventListener("input", (function(e) {
                        return _this.handleFormInputEvent(e);
                    }));
                    var formItems = el.querySelectorAll("[".concat(formItemName, "]"));
                    formItems.forEach((function(el) {
                        var inp = el.querySelector("input,textarea");
                        if (inp) {
                            inp.addEventListener("change", (function(e) {
                                console.log("input-change", _this.config.validateTrigger);
                                if (_this.config.validateTrigger === ValidateTrigger.ONNATIVECHANGE) {
                                    var target = e.target;
                                    var parentNode = _this.recursionFindParent(target, formItemName);
                                    if (!parentNode) return;
                                    var targetName = parentNode.getAttribute(formItemName);
                                    _this.validateFields([ targetName ]);
                                }
                            }));
                            inp.addEventListener("blur", (function(e) {
                                var target = e.target;
                                var parentNode = _this.recursionFindParent(target, formItemName);
                                if (!parentNode) return;
                                var targetName = parentNode.getAttribute(formItemName);
                                if (_this.config.validateTrigger === ValidateTrigger.ONBLUR) _this.validateFields([ targetName ]);
                                if (_this.config.blurSucHandler || _this.config.blurErrHandler) _this.validateFields([ targetName ], false).then((function(res) {
                                    if (!res) return;
                                    if (res.pass) _this.config && _this.config.blurSucHandler && _this.config.blurSucHandler(targetName, target.value, _this.formEntity.data); else _this.config && _this.config.blurErrHandler && _this.config.blurErrHandler(res);
                                }));
                            }));
                        }
                    }));
                }
            }, {
                key: "handleFormInputEvent",
                value: function(e) {
                    if (!this.fid) return;
                    var target = e.target;
                    var parentNode = this.recursionFindParent(target, formItemName);
                    if (!parentNode) return;
                    var targetName = parentNode.getAttribute(formItemName);
                    if (targetName) {
                        this.canValidate = true;
                        if (this.isRadioOrCheckbox(target, [ "checkbox" ])) this.setLocalsValue(targetName, target.checked); else this.setLocalsValue(targetName, target.value);
                    }
                }
            }, {
                key: "recursionFindParent",
                value: function(el, attr) {
                    var parent = el.parentElement;
                    if (!parent) return null;
                    var val = parent.getAttribute(attr);
                    if (val) return parent;
                    return this.recursionFindParent(parent, attr);
                }
            }, {
                key: "calculatePropsAndInitialData",
                value: function(nodeList) {
                    if (0 === nodeList.length) return {
                        initialData: {},
                        childrenProps: []
                    };
                    var childrenProps = [];
                    var initialData = {};
                    try {
                        childrenProps = Array.from(nodeList).map((function(formItem) {
                            var name = formItem.getAttribute(formItemName);
                            var child = formItem.querySelector("input,select,textarea");
                            var attrs = child.getAttributeNames();
                            var childAttrs = attrs.reduce((function(acc, curAttr) {
                                if ("value" === curAttr) initialData[name] = child.getAttribute(curAttr) || child.value;
                                return _objectSpread(_objectSpread({}, acc), {}, _defineProperty({}, curAttr, child.getAttribute(curAttr)));
                            }), {});
                            return Object.assign(childAttrs, {
                                name
                            });
                        }));
                    } catch (e) {
                        console.error("".concat(this.fid, " calculate form item error: "), e);
                    }
                    return {
                        initialData,
                        childrenProps
                    };
                }
            }, {
                key: "setValues",
                value: function(fields) {
                    var _this2 = this;
                    fields.forEach((function(_ref2) {
                        var name = _ref2.name, value = _ref2.value, rules = _ref2.rules;
                        _this2.setDomValue(_this2.el, name, value);
                        _this2.setRule(rules, name);
                        _this2.setLocalsValue(name, value);
                    }));
                }
            }, {
                key: "setRule",
                value: function(rules, name) {
                    var target = this.formEntity.childrenProps.find((function(prop) {
                        return prop.name === name;
                    }));
                    if (target) target.rules = rules || [];
                }
            }, {
                key: "isRadioOrCheckbox",
                value: function(target) {
                    var nodeTypeList = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : [ "radio", "checkbox" ];
                    var nodeType = target && target.getAttribute("type");
                    if (!nodeType) return false;
                    return "input" === target.nodeName.toLocaleLowerCase() && nodeTypeList.includes(nodeType);
                }
            }, {
                key: "setDomValue",
                value: function(parent, name, value) {
                    var _this3 = this;
                    var targets = parent.querySelectorAll("[".concat(formItemName, "=").concat(name, "] input,[").concat(formItemName, "=").concat(name, "] select,[").concat(formItemName, "=").concat(name, "] textarea"));
                    if (targets.length) targets.forEach((function(target) {
                        if (_this3.isRadioOrCheckbox(target)) {
                            if (target.value === value) target.click();
                        } else if (!target.name || target.name === name) target.value = null !== value && void 0 !== value ? value : "";
                    }));
                }
            }, {
                key: "setLocalsValue",
                value: function(name, value) {
                    var changedValue = _defineProperty({}, name, value);
                    var allValues = Object.assign(this.formEntity && this.formEntity.data, changedValue);
                    var validateResultPro = null;
                    if (this.canValidate && this.config.validateTrigger === ValidateTrigger.ONCHANGE) validateResultPro = this.validateFields([ name ]);
                    if (this.canEmitChange) this.eventBus.emit("valuesChange", {
                        changedValue,
                        allValues,
                        validateResult: validateResultPro
                    });
                }
            }, {
                key: "flattenRulesList",
                value: function(list) {
                    return list.reduce((function(acc, field) {
                        var subRules = field && field.rules.map((function(rule) {
                            return _objectSpread(_objectSpread({}, rule), {}, {
                                name: field.name
                            });
                        })) || [];
                        return [].concat(_toConsumableArray(acc), _toConsumableArray(subRules));
                    }), []);
                }
            }, {
                key: "getErrTmpStr",
                value: function(messages) {
                    var className = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : "";
                    return messages.reduce((function(acc, message) {
                        return acc + '<div class="'.concat(className, '" style="margin-top: 6px;color: #f04949;font-size: 12px;line-height: 1.4;">').concat(message, "</div>");
                    }), "");
                }
            }, {
                key: "getErrListContainer",
                value: function(id, formItemContainer) {
                    var target = this.el.querySelector("[".concat(id, "]"));
                    if (target) return target;
                    var div = document.createElement("div");
                    div.setAttribute(id, "1");
                    formItemContainer.appendChild(div);
                    return div;
                }
            }, {
                key: "setErrMsgIntoDom",
                value: function(errFields) {
                    var _this4 = this;
                    errFields.forEach((function(_ref3) {
                        var name = _ref3.name, messages = _ref3.messages;
                        var errTmp = _this4.getErrTmpStr(messages, _this4.config.errContainerClss);
                        var id = "cf-".concat(_this4.fid, "-").concat(name);
                        var target = _this4.el.querySelector("[".concat(formItemName, "=").concat(name, "]"));
                        if (!Array.from(target.classList).includes(_this4.config.errContainerClss)) target.classList.add(_this4.config.errContainerClss);
                        var container = _this4.getErrListContainer(id, target);
                        container.innerHTML = errTmp;
                    }));
                }
            }, {
                key: "removeErrList",
                value: function(fields) {
                    var _this5 = this;
                    fields.forEach((function(name) {
                        var target = _this5.el.querySelector("[cf-".concat(_this5.fid, "-").concat(name, "]"));
                        if (target) target.remove();
                        if (_this5.config.errContainerClss) {
                            var formItemWrapper = _this5.el.querySelector("[".concat(formItemName, "=").concat(name, "]"));
                            formItemWrapper && formItemWrapper.classList && formItemWrapper.classList.remove && formItemWrapper.classList.remove(_this5.config.errContainerClss);
                        }
                    }));
                }
            }, {
                key: "setErrFields",
                value: function(target, errFields, name, errMsg) {
                    if (!target) errFields.push({
                        name,
                        messages: [ errMsg ]
                    }); else target.messages.push(errMsg);
                }
            }, {
                key: "setFields",
                value: function(fields, callback) {
                    var needEmit = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : true;
                    var needValidate = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : false;
                    try {
                        this.canValidate = needValidate;
                        this.canEmitChange = needEmit;
                        this.setValues(fields);
                        callback && callback();
                    } catch (e) {
                        console.warn("".concat(this.fid, " set fields fail,"), e);
                    } finally {
                        this.canEmitChange = true;
                    }
                }
            }, {
                key: "setRules",
                value: function(rulesField) {
                    var _this6 = this;
                    rulesField.forEach((function(_ref4) {
                        var name = _ref4.name, rules = _ref4.rules;
                        _this6.setRule(rules, name);
                    }));
                }
            }, {
                key: "getFieldValue",
                value: function(fieldName) {
                    this.init();
                    return this.formEntity.data[fieldName];
                }
            }, {
                key: "getFieldsValue",
                value: function() {
                    this.init();
                    return this.formEntity && this.formEntity.data;
                }
            }, {
                key: "getLegalFieldsValue",
                value: function() {
                    var _getLegalFieldsValue = _asyncToGenerator(regeneratorRuntime.mark((function _callee() {
                        var result, unPassFields;
                        return regeneratorRuntime.wrap((function(_context) {
                            while (1) switch (_context.prev = _context.next) {
                              case 0:
                                _context.next = 2;
                                return this.validateFields([], false);

                              case 2:
                                result = _context.sent;
                                if (!(result && result.pass)) {
                                    _context.next = 5;
                                    break;
                                }
                                return _context.abrupt("return", this.formEntity && this.formEntity.data);

                              case 5:
                                unPassFields = result && result.errFields && result.errFields.map((function(field) {
                                    return field.name;
                                }));
                                return _context.abrupt("return", Object.entries(this.formEntity.data).reduce((function(acc, _ref5) {
                                    var _ref6 = _slicedToArray(_ref5, 2), k = _ref6[0], v = _ref6[1];
                                    if (unPassFields.includes(k)) return acc;
                                    return _objectSpread(_objectSpread({}, acc), {}, _defineProperty({}, k, v));
                                }), {}));

                              case 7:
                              case "end":
                                return _context.stop();
                            }
                        }), _callee, this);
                    })));
                    function getLegalFieldsValue() {
                        return _getLegalFieldsValue.apply(this, arguments);
                    }
                    return getLegalFieldsValue;
                }()
            }, {
                key: "validateFields",
                value: function() {
                    var _validateFields = _asyncToGenerator(regeneratorRuntime.mark((function _callee2(fields) {
                        var _this7 = this;
                        var handleError, childrenProps, data, needValidateFieldsName, needValidatefields, validateList, needValidateRules, validateResult, errFields, successFields, _loop, i, _ret, _args2 = arguments;
                        return regeneratorRuntime.wrap((function(_context2) {
                            while (1) switch (_context2.prev = _context2.next) {
                              case 0:
                                handleError = _args2.length > 1 && void 0 !== _args2[1] ? _args2[1] : true;
                                if (this.formEntity) {
                                    _context2.next = 3;
                                    break;
                                }
                                return _context2.abrupt("return", null);

                              case 3:
                                childrenProps = this.formEntity.childrenProps;
                                data = JSON.parse(JSON.stringify(this.formEntity.data));
                                needValidateFieldsName = fields && fields.length ? fields : Object.keys(this.formEntity.data);
                                needValidatefields = childrenProps.filter((function(prop) {
                                    return prop.rules && prop.rules.length > 0 && needValidateFieldsName && needValidateFieldsName.includes(prop.name);
                                }));
                                validateList = [];
                                needValidateRules = this.flattenRulesList(needValidatefields);
                                try {
                                    needValidateRules.forEach((function(rule) {
                                        var _ref7 = rule || {}, required = _ref7.required, validator = _ref7.validator, pattern = _ref7.pattern, name = _ref7.name;
                                        var value = data[name];
                                        _this7.validateRecord[name] = value;
                                        if (value) if (validator) validateList.push(validator(value, data)); else if (pattern) validateList.push(new RegExp(pattern).test(value)); else validateList.push(true); else if (validator && required) validateList.push(validator(value, data)); else validateList.push(required ? REQUIRED_SYMBOL : true);
                                    }));
                                } catch (e) {
                                    console.warn("".concat(this.fid, " calculate validator list fail:"), e);
                                }
                                _context2.next = 12;
                                return Promise.allSettled(validateList);

                              case 12:
                                validateResult = _context2.sent;
                                errFields = [];
                                successFields = new Set;
                                _loop = function(i) {
                                    var _needValidateRules$i = needValidateRules[i], name = _needValidateRules$i.name, message = _needValidateRules$i.message;
                                    if (_this7.validateRecord[name] !== data[name]) return {
                                        v: null
                                    };
                                    var result = validateResult[i];
                                    var target = errFields.find((function(err) {
                                        return err.name === name;
                                    }));
                                    if (isPromiseFulfilledResult(result)) if (result.value === REQUIRED_SYMBOL) {
                                        var requiredErrMsg = needValidateRules[i] && needValidateRules[i].message || _this7.config.requiredErrMsg;
                                        if (!target) errFields.push({
                                            name,
                                            messages: [ requiredErrMsg ]
                                        });
                                    } else if (false === result.value) {
                                        var errMsg = message || _this7.config.defaultErrMsg;
                                        _this7.setErrFields(target, errFields, name, errMsg);
                                    } else successFields.add(name); else {
                                        var _errMsg = message || result.reason || _this7.config.defaultErrMsg;
                                        _this7.setErrFields(target, errFields, name, _errMsg);
                                    }
                                };
                                i = 0;

                              case 17:
                                if (!(i < validateResult.length)) {
                                    _context2.next = 24;
                                    break;
                                }
                                _ret = _loop(i);
                                if (!("object" === _typeof(_ret))) {
                                    _context2.next = 21;
                                    break;
                                }
                                return _context2.abrupt("return", _ret.v);

                              case 21:
                                i++;
                                _context2.next = 17;
                                break;

                              case 24:
                                if (handleError) {
                                    this.removeErrList(successFields);
                                    this.setErrMsgIntoDom(errFields);
                                    if (errFields.length) this.config.validateTrigger = this.config.validateTriggerAfterValidationFailed || ValidateTrigger.ONCHANGE;
                                }
                                return _context2.abrupt("return", errFields.length ? {
                                    pass: false,
                                    errFields
                                } : {
                                    pass: true
                                });

                              case 26:
                              case "end":
                                return _context2.stop();
                            }
                        }), _callee2, this);
                    })));
                    function validateFields(_x) {
                        return _validateFields.apply(this, arguments);
                    }
                    return validateFields;
                }()
            }, {
                key: "resetErrStatus",
                value: function() {
                    var fields = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : Object.keys(this.formEntity.data);
                    this.removeErrList(fields);
                }
            }, {
                key: "destroy",
                value: function() {
                    this.el.removeEventListener("input", this.handleFormInputEvent);
                    this.hadInit = false;
                    this.el = null;
                    this.eventBus = null;
                    this.formEntity = null;
                    this.onDestory && this.onDestory(this.fid);
                    this.fid = null;
                }
            } ]);
            return CustomForm;
        }();
        const __WEBPACK_DEFAULT_EXPORT__ = CustomForm;
    },
    "../shared/browser/utils/form/index.js": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
        "use strict";
        __webpack_require__.d(__webpack_exports__, {
            default: () => __WEBPACK_DEFAULT_EXPORT__
        });
        __webpack_require__("../shared/browser/node_modules/core-js/modules/es.object.define-property.js");
        __webpack_require__("../shared/browser/node_modules/core-js/modules/es.reflect.delete-property.js");
        var _form__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("../shared/browser/utils/form/form.js");
        function _classCallCheck(instance, Constructor) {
            if (!(instance instanceof Constructor)) throw new TypeError("Cannot call a class as a function");
        }
        function _defineProperties(target, props) {
            for (var i = 0; i < props.length; i++) {
                var descriptor = props[i];
                descriptor.enumerable = descriptor.enumerable || false;
                descriptor.configurable = true;
                if ("value" in descriptor) descriptor.writable = true;
                Object.defineProperty(target, descriptor.key, descriptor);
            }
        }
        function _createClass(Constructor, protoProps, staticProps) {
            if (protoProps) _defineProperties(Constructor.prototype, protoProps);
            if (staticProps) _defineProperties(Constructor, staticProps);
            return Constructor;
        }
        function _defineProperty(obj, key, value) {
            if (key in obj) Object.defineProperty(obj, key, {
                value,
                enumerable: true,
                configurable: true,
                writable: true
            }); else obj[key] = value;
            return obj;
        }
        var Form = function() {
            function Form() {
                _classCallCheck(this, Form);
            }
            _createClass(Form, null, [ {
                key: "takeForm",
                value: function(fid) {
                    var _this = this;
                    if (this.formInstanceList[fid]) return this.formInstanceList[fid];
                    this.formInstanceList[fid] = new _form__WEBPACK_IMPORTED_MODULE_2__["default"](fid, {
                        onDestory: function(fid) {
                            Reflect.deleteProperty(_this.formInstanceList, fid);
                        }
                    });
                    return this.formInstanceList[fid];
                }
            } ]);
            return Form;
        }();
        _defineProperty(Form, "formInstanceList", {});
        const __WEBPACK_DEFAULT_EXPORT__ = Form;
    }
}, __webpack_require__ => {
    var __webpack_exec__ = moduleId => __webpack_require__(__webpack_require__.s = moduleId);
    __webpack_require__.O(0, [ "vendor" ], (() => __webpack_exec__("./src/assets/stage/contact-form/index.js")));
    __webpack_require__.O();
} ]);