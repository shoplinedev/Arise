(self["webpackChunkArise"] = self["webpackChunkArise"] || []).push([ [ "vendor" ], {
    "./node_modules/@yy/sl-mc/libs/inbox-send/index.js": (__unused_webpack_module, exports, __webpack_require__) => {
        "use strict";
        function _typeof(obj) {
            "@babel/helpers - typeof";
            if ("function" === typeof Symbol && "symbol" === typeof Symbol.iterator) _typeof = function(obj) {
                return typeof obj;
            }; else _typeof = function(obj) {
                return obj && "function" === typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
            };
            return _typeof(obj);
        }
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        exports.sendToMerchant = exports.EMessageType = void 0;
        var _snakeCase2 = _interopRequireDefault(__webpack_require__("./node_modules/lodash/snakeCase.js"));
        var _mapKeys2 = _interopRequireDefault(__webpack_require__("./node_modules/lodash/mapKeys.js"));
        var _isString2 = _interopRequireDefault(__webpack_require__("./node_modules/lodash/isString.js"));
        var _request = _interopRequireWildcard(__webpack_require__("./node_modules/@yy/sl-mc/libs/service/request.js"));
        function _getRequireWildcardCache(nodeInterop) {
            if ("function" !== typeof WeakMap) return null;
            var cacheBabelInterop = new WeakMap;
            var cacheNodeInterop = new WeakMap;
            return (_getRequireWildcardCache = function(nodeInterop) {
                return nodeInterop ? cacheNodeInterop : cacheBabelInterop;
            })(nodeInterop);
        }
        function _interopRequireWildcard(obj, nodeInterop) {
            if (!nodeInterop && obj && obj.__esModule) return obj;
            if (null === obj || "object" !== _typeof(obj) && "function" !== typeof obj) return {
                default: obj
            };
            var cache = _getRequireWildcardCache(nodeInterop);
            if (cache && cache.has(obj)) return cache.get(obj);
            var newObj = {};
            var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
            for (var key in obj) if ("default" !== key && Object.prototype.hasOwnProperty.call(obj, key)) {
                var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
                if (desc && (desc.get || desc.set)) Object.defineProperty(newObj, key, desc); else newObj[key] = obj[key];
            }
            newObj["default"] = obj;
            if (cache) cache.set(obj, newObj);
            return newObj;
        }
        function _interopRequireDefault(obj) {
            return obj && obj.__esModule ? obj : {
                default: obj
            };
        }
        function ownKeys(object, enumerableOnly) {
            var keys = Object.keys(object);
            if (Object.getOwnPropertySymbols) {
                var symbols = Object.getOwnPropertySymbols(object);
                if (enumerableOnly) symbols = symbols.filter((function(sym) {
                    return Object.getOwnPropertyDescriptor(object, sym).enumerable;
                }));
                keys.push.apply(keys, symbols);
            }
            return keys;
        }
        function _objectSpread(target) {
            for (var i = 1; i < arguments.length; i++) {
                var source = null != arguments[i] ? arguments[i] : {};
                if (i % 2) ownKeys(Object(source), true).forEach((function(key) {
                    _defineProperty(target, key, source[key]);
                })); else if (Object.getOwnPropertyDescriptors) Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); else ownKeys(Object(source)).forEach((function(key) {
                    Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
                }));
            }
            return target;
        }
        function _defineProperty(obj, key, value) {
            if (key in obj) Object.defineProperty(obj, key, {
                value,
                enumerable: true,
                configurable: true,
                writable: true
            }); else obj[key] = value;
            return obj;
        }
        function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {
            try {
                var info = gen[key](arg);
                var value = info.value;
            } catch (error) {
                reject(error);
                return;
            }
            if (info.done) resolve(value); else Promise.resolve(value).then(_next, _throw);
        }
        function _asyncToGenerator(fn) {
            return function() {
                var self = this, args = arguments;
                return new Promise((function(resolve, reject) {
                    var gen = fn.apply(self, args);
                    function _next(value) {
                        asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value);
                    }
                    function _throw(err) {
                        asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err);
                    }
                    _next(void 0);
                }));
            };
        }
        var EMessageType;
        exports.EMessageType = EMessageType;
        (function(EMessageType) {
            EMessageType["text"] = "text";
            EMessageType["image"] = "image";
            EMessageType["video"] = "video";
            EMessageType["imageAndText"] = "image-and-text";
            EMessageType["videoAndText"] = "video-and-text";
        })(EMessageType || (exports.EMessageType = EMessageType = {}));
        var sendToMerchant = function() {
            var _ref = _asyncToGenerator(regeneratorRuntime.mark((function _callee(params) {
                return regeneratorRuntime.wrap((function(_context) {
                    while (1) switch (_context.prev = _context.next) {
                      case 0:
                        return _context.abrupt("return", _request["default"].post("/api/sc/mc/shop/online/send", _objectSpread({}, params), {
                            transformResponse: [ function(data) {
                                try {
                                    var response = (0, _isString2["default"])(data) && data.length ? JSON.parse(data) : data;
                                    var responseData = null === response || void 0 === response ? void 0 : response.data;
                                    if ((0, _request.transformSuccess)(response) && responseData) response.data = (0, 
                                    _mapKeys2["default"])(responseData, (function(value, key) {
                                        return (0, _snakeCase2["default"])(key);
                                    }));
                                    return response;
                                } catch (e) {
                                    return data;
                                }
                            } ]
                        }));

                      case 1:
                      case "end":
                        return _context.stop();
                    }
                }), _callee);
            })));
            return function(_x) {
                return _ref.apply(this, arguments);
            };
        }();
        exports.sendToMerchant = sendToMerchant;
    },
    "./node_modules/@yy/sl-mc/libs/index.js": (__unused_webpack_module, exports, __webpack_require__) => {
        "use strict";
        function _typeof(obj) {
            "@babel/helpers - typeof";
            if ("function" === typeof Symbol && "symbol" === typeof Symbol.iterator) _typeof = function(obj) {
                return typeof obj;
            }; else _typeof = function(obj) {
                return obj && "function" === typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
            };
            return _typeof(obj);
        }
        ({
            value: true
        });
        exports.mcUtil = void 0;
        var _mcUtil = _interopRequireWildcard(__webpack_require__("./node_modules/@yy/sl-mc/libs/inbox-send/index.js"));
        exports.mcUtil = _mcUtil;
        function _getRequireWildcardCache(nodeInterop) {
            if ("function" !== typeof WeakMap) return null;
            var cacheBabelInterop = new WeakMap;
            var cacheNodeInterop = new WeakMap;
            return (_getRequireWildcardCache = function(nodeInterop) {
                return nodeInterop ? cacheNodeInterop : cacheBabelInterop;
            })(nodeInterop);
        }
        function _interopRequireWildcard(obj, nodeInterop) {
            if (!nodeInterop && obj && obj.__esModule) return obj;
            if (null === obj || "object" !== _typeof(obj) && "function" !== typeof obj) return {
                default: obj
            };
            var cache = _getRequireWildcardCache(nodeInterop);
            if (cache && cache.has(obj)) return cache.get(obj);
            var newObj = {};
            var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
            for (var key in obj) if ("default" !== key && Object.prototype.hasOwnProperty.call(obj, key)) {
                var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
                if (desc && (desc.get || desc.set)) Object.defineProperty(newObj, key, desc); else newObj[key] = obj[key];
            }
            newObj["default"] = obj;
            if (cache) cache.set(obj, newObj);
            return newObj;
        }
    },
    "./node_modules/@yy/sl-mc/libs/service/request.js": (__unused_webpack_module, exports, __webpack_require__) => {
        "use strict";
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        exports["default"] = exports.transformSuccess = void 0;
        var _axios = _interopRequireDefault(__webpack_require__("./node_modules/@yy/sl-mc/node_modules/axios/index.js"));
        function _interopRequireDefault(obj) {
            return obj && obj.__esModule ? obj : {
                default: obj
            };
        }
        var instance = _axios["default"].create({
            timeout: 5e3,
            withCredentials: true
        });
        instance.interceptors.response.use((function(config) {
            if (200 !== config.status) return Promise.reject();
            return config.data;
        }), (function(error) {
            return Promise.reject(error);
        }));
        var transformSuccess = function(res) {
            return true === res.success || "true" === res.success || "success" === res.success || "SUCCESS" === res.success || 200 === res.code || "SUCCESS" === res.code || false;
        };
        exports.transformSuccess = transformSuccess;
        var _default = instance;
        exports["default"] = _default;
    },
    "./node_modules/@yy/sl-mc/node_modules/axios/index.js": (module, __unused_webpack_exports, __webpack_require__) => {
        "use strict";
        module.exports = __webpack_require__("./node_modules/@yy/sl-mc/node_modules/axios/lib/axios.js");
    },
    "./node_modules/@yy/sl-mc/node_modules/axios/lib/adapters/xhr.js": (module, __unused_webpack_exports, __webpack_require__) => {
        "use strict";
        var utils = __webpack_require__("./node_modules/@yy/sl-mc/node_modules/axios/lib/utils.js");
        var settle = __webpack_require__("./node_modules/@yy/sl-mc/node_modules/axios/lib/core/settle.js");
        var cookies = __webpack_require__("./node_modules/@yy/sl-mc/node_modules/axios/lib/helpers/cookies.js");
        var buildURL = __webpack_require__("./node_modules/@yy/sl-mc/node_modules/axios/lib/helpers/buildURL.js");
        var buildFullPath = __webpack_require__("./node_modules/@yy/sl-mc/node_modules/axios/lib/core/buildFullPath.js");
        var parseHeaders = __webpack_require__("./node_modules/@yy/sl-mc/node_modules/axios/lib/helpers/parseHeaders.js");
        var isURLSameOrigin = __webpack_require__("./node_modules/@yy/sl-mc/node_modules/axios/lib/helpers/isURLSameOrigin.js");
        var createError = __webpack_require__("./node_modules/@yy/sl-mc/node_modules/axios/lib/core/createError.js");
        var defaults = __webpack_require__("./node_modules/@yy/sl-mc/node_modules/axios/lib/defaults.js");
        var Cancel = __webpack_require__("./node_modules/@yy/sl-mc/node_modules/axios/lib/cancel/Cancel.js");
        module.exports = function(config) {
            return new Promise((function(resolve, reject) {
                var requestData = config.data;
                var requestHeaders = config.headers;
                var responseType = config.responseType;
                var onCanceled;
                function done() {
                    if (config.cancelToken) config.cancelToken.unsubscribe(onCanceled);
                    if (config.signal) config.signal.removeEventListener("abort", onCanceled);
                }
                if (utils.isFormData(requestData)) delete requestHeaders["Content-Type"];
                var request = new XMLHttpRequest;
                if (config.auth) {
                    var username = config.auth.username || "";
                    var password = config.auth.password ? unescape(encodeURIComponent(config.auth.password)) : "";
                    requestHeaders.Authorization = "Basic " + btoa(username + ":" + password);
                }
                var fullPath = buildFullPath(config.baseURL, config.url);
                request.open(config.method.toUpperCase(), buildURL(fullPath, config.params, config.paramsSerializer), true);
                request.timeout = config.timeout;
                function onloadend() {
                    if (!request) return;
                    var responseHeaders = "getAllResponseHeaders" in request ? parseHeaders(request.getAllResponseHeaders()) : null;
                    var responseData = !responseType || "text" === responseType || "json" === responseType ? request.responseText : request.response;
                    var response = {
                        data: responseData,
                        status: request.status,
                        statusText: request.statusText,
                        headers: responseHeaders,
                        config,
                        request
                    };
                    settle((function(value) {
                        resolve(value);
                        done();
                    }), (function(err) {
                        reject(err);
                        done();
                    }), response);
                    request = null;
                }
                if ("onloadend" in request) request.onloadend = onloadend; else request.onreadystatechange = function() {
                    if (!request || 4 !== request.readyState) return;
                    if (0 === request.status && !(request.responseURL && 0 === request.responseURL.indexOf("file:"))) return;
                    setTimeout(onloadend);
                };
                request.onabort = function() {
                    if (!request) return;
                    reject(createError("Request aborted", config, "ECONNABORTED", request));
                    request = null;
                };
                request.onerror = function() {
                    reject(createError("Network Error", config, null, request));
                    request = null;
                };
                request.ontimeout = function() {
                    var timeoutErrorMessage = "timeout of " + config.timeout + "ms exceeded";
                    var transitional = config.transitional || defaults.transitional;
                    if (config.timeoutErrorMessage) timeoutErrorMessage = config.timeoutErrorMessage;
                    reject(createError(timeoutErrorMessage, config, transitional.clarifyTimeoutError ? "ETIMEDOUT" : "ECONNABORTED", request));
                    request = null;
                };
                if (utils.isStandardBrowserEnv()) {
                    var xsrfValue = (config.withCredentials || isURLSameOrigin(fullPath)) && config.xsrfCookieName ? cookies.read(config.xsrfCookieName) : void 0;
                    if (xsrfValue) requestHeaders[config.xsrfHeaderName] = xsrfValue;
                }
                if ("setRequestHeader" in request) utils.forEach(requestHeaders, (function(val, key) {
                    if ("undefined" === typeof requestData && "content-type" === key.toLowerCase()) delete requestHeaders[key]; else request.setRequestHeader(key, val);
                }));
                if (!utils.isUndefined(config.withCredentials)) request.withCredentials = !!config.withCredentials;
                if (responseType && "json" !== responseType) request.responseType = config.responseType;
                if ("function" === typeof config.onDownloadProgress) request.addEventListener("progress", config.onDownloadProgress);
                if ("function" === typeof config.onUploadProgress && request.upload) request.upload.addEventListener("progress", config.onUploadProgress);
                if (config.cancelToken || config.signal) {
                    onCanceled = function(cancel) {
                        if (!request) return;
                        reject(!cancel || cancel && cancel.type ? new Cancel("canceled") : cancel);
                        request.abort();
                        request = null;
                    };
                    config.cancelToken && config.cancelToken.subscribe(onCanceled);
                    if (config.signal) config.signal.aborted ? onCanceled() : config.signal.addEventListener("abort", onCanceled);
                }
                if (!requestData) requestData = null;
                request.send(requestData);
            }));
        };
    },
    "./node_modules/@yy/sl-mc/node_modules/axios/lib/axios.js": (module, __unused_webpack_exports, __webpack_require__) => {
        "use strict";
        var utils = __webpack_require__("./node_modules/@yy/sl-mc/node_modules/axios/lib/utils.js");
        var bind = __webpack_require__("./node_modules/@yy/sl-mc/node_modules/axios/lib/helpers/bind.js");
        var Axios = __webpack_require__("./node_modules/@yy/sl-mc/node_modules/axios/lib/core/Axios.js");
        var mergeConfig = __webpack_require__("./node_modules/@yy/sl-mc/node_modules/axios/lib/core/mergeConfig.js");
        var defaults = __webpack_require__("./node_modules/@yy/sl-mc/node_modules/axios/lib/defaults.js");
        function createInstance(defaultConfig) {
            var context = new Axios(defaultConfig);
            var instance = bind(Axios.prototype.request, context);
            utils.extend(instance, Axios.prototype, context);
            utils.extend(instance, context);
            instance.create = function(instanceConfig) {
                return createInstance(mergeConfig(defaultConfig, instanceConfig));
            };
            return instance;
        }
        var axios = createInstance(defaults);
        axios.Axios = Axios;
        axios.Cancel = __webpack_require__("./node_modules/@yy/sl-mc/node_modules/axios/lib/cancel/Cancel.js");
        axios.CancelToken = __webpack_require__("./node_modules/@yy/sl-mc/node_modules/axios/lib/cancel/CancelToken.js");
        axios.isCancel = __webpack_require__("./node_modules/@yy/sl-mc/node_modules/axios/lib/cancel/isCancel.js");
        axios.VERSION = __webpack_require__("./node_modules/@yy/sl-mc/node_modules/axios/lib/env/data.js").version;
        axios.all = function(promises) {
            return Promise.all(promises);
        };
        axios.spread = __webpack_require__("./node_modules/@yy/sl-mc/node_modules/axios/lib/helpers/spread.js");
        axios.isAxiosError = __webpack_require__("./node_modules/@yy/sl-mc/node_modules/axios/lib/helpers/isAxiosError.js");
        module.exports = axios;
        module.exports["default"] = axios;
    },
    "./node_modules/@yy/sl-mc/node_modules/axios/lib/cancel/Cancel.js": module => {
        "use strict";
        function Cancel(message) {
            this.message = message;
        }
        Cancel.prototype.toString = function() {
            return "Cancel" + (this.message ? ": " + this.message : "");
        };
        Cancel.prototype.__CANCEL__ = true;
        module.exports = Cancel;
    },
    "./node_modules/@yy/sl-mc/node_modules/axios/lib/cancel/CancelToken.js": (module, __unused_webpack_exports, __webpack_require__) => {
        "use strict";
        var Cancel = __webpack_require__("./node_modules/@yy/sl-mc/node_modules/axios/lib/cancel/Cancel.js");
        function CancelToken(executor) {
            if ("function" !== typeof executor) throw new TypeError("executor must be a function.");
            var resolvePromise;
            this.promise = new Promise((function(resolve) {
                resolvePromise = resolve;
            }));
            var token = this;
            this.promise.then((function(cancel) {
                if (!token._listeners) return;
                var i;
                var l = token._listeners.length;
                for (i = 0; i < l; i++) token._listeners[i](cancel);
                token._listeners = null;
            }));
            this.promise.then = function(onfulfilled) {
                var _resolve;
                var promise = new Promise((function(resolve) {
                    token.subscribe(resolve);
                    _resolve = resolve;
                })).then(onfulfilled);
                promise.cancel = function() {
                    token.unsubscribe(_resolve);
                };
                return promise;
            };
            executor((function(message) {
                if (token.reason) return;
                token.reason = new Cancel(message);
                resolvePromise(token.reason);
            }));
        }
        CancelToken.prototype.throwIfRequested = function() {
            if (this.reason) throw this.reason;
        };
        CancelToken.prototype.subscribe = function(listener) {
            if (this.reason) {
                listener(this.reason);
                return;
            }
            if (this._listeners) this._listeners.push(listener); else this._listeners = [ listener ];
        };
        CancelToken.prototype.unsubscribe = function(listener) {
            if (!this._listeners) return;
            var index = this._listeners.indexOf(listener);
            if (-1 !== index) this._listeners.splice(index, 1);
        };
        CancelToken.source = function() {
            var cancel;
            var token = new CancelToken((function(c) {
                cancel = c;
            }));
            return {
                token,
                cancel
            };
        };
        module.exports = CancelToken;
    },
    "./node_modules/@yy/sl-mc/node_modules/axios/lib/cancel/isCancel.js": module => {
        "use strict";
        module.exports = function(value) {
            return !!(value && value.__CANCEL__);
        };
    },
    "./node_modules/@yy/sl-mc/node_modules/axios/lib/core/Axios.js": (module, __unused_webpack_exports, __webpack_require__) => {
        "use strict";
        var utils = __webpack_require__("./node_modules/@yy/sl-mc/node_modules/axios/lib/utils.js");
        var buildURL = __webpack_require__("./node_modules/@yy/sl-mc/node_modules/axios/lib/helpers/buildURL.js");
        var InterceptorManager = __webpack_require__("./node_modules/@yy/sl-mc/node_modules/axios/lib/core/InterceptorManager.js");
        var dispatchRequest = __webpack_require__("./node_modules/@yy/sl-mc/node_modules/axios/lib/core/dispatchRequest.js");
        var mergeConfig = __webpack_require__("./node_modules/@yy/sl-mc/node_modules/axios/lib/core/mergeConfig.js");
        var validator = __webpack_require__("./node_modules/@yy/sl-mc/node_modules/axios/lib/helpers/validator.js");
        var validators = validator.validators;
        function Axios(instanceConfig) {
            this.defaults = instanceConfig;
            this.interceptors = {
                request: new InterceptorManager,
                response: new InterceptorManager
            };
        }
        Axios.prototype.request = function(config) {
            if ("string" === typeof config) {
                config = arguments[1] || {};
                config.url = arguments[0];
            } else config = config || {};
            config = mergeConfig(this.defaults, config);
            if (config.method) config.method = config.method.toLowerCase(); else if (this.defaults.method) config.method = this.defaults.method.toLowerCase(); else config.method = "get";
            var transitional = config.transitional;
            if (void 0 !== transitional) validator.assertOptions(transitional, {
                silentJSONParsing: validators.transitional(validators.boolean),
                forcedJSONParsing: validators.transitional(validators.boolean),
                clarifyTimeoutError: validators.transitional(validators.boolean)
            }, false);
            var requestInterceptorChain = [];
            var synchronousRequestInterceptors = true;
            this.interceptors.request.forEach((function(interceptor) {
                if ("function" === typeof interceptor.runWhen && false === interceptor.runWhen(config)) return;
                synchronousRequestInterceptors = synchronousRequestInterceptors && interceptor.synchronous;
                requestInterceptorChain.unshift(interceptor.fulfilled, interceptor.rejected);
            }));
            var responseInterceptorChain = [];
            this.interceptors.response.forEach((function(interceptor) {
                responseInterceptorChain.push(interceptor.fulfilled, interceptor.rejected);
            }));
            var promise;
            if (!synchronousRequestInterceptors) {
                var chain = [ dispatchRequest, void 0 ];
                Array.prototype.unshift.apply(chain, requestInterceptorChain);
                chain = chain.concat(responseInterceptorChain);
                promise = Promise.resolve(config);
                while (chain.length) promise = promise.then(chain.shift(), chain.shift());
                return promise;
            }
            var newConfig = config;
            while (requestInterceptorChain.length) {
                var onFulfilled = requestInterceptorChain.shift();
                var onRejected = requestInterceptorChain.shift();
                try {
                    newConfig = onFulfilled(newConfig);
                } catch (error) {
                    onRejected(error);
                    break;
                }
            }
            try {
                promise = dispatchRequest(newConfig);
            } catch (error) {
                return Promise.reject(error);
            }
            while (responseInterceptorChain.length) promise = promise.then(responseInterceptorChain.shift(), responseInterceptorChain.shift());
            return promise;
        };
        Axios.prototype.getUri = function(config) {
            config = mergeConfig(this.defaults, config);
            return buildURL(config.url, config.params, config.paramsSerializer).replace(/^\?/, "");
        };
        utils.forEach([ "delete", "get", "head", "options" ], (function(method) {
            Axios.prototype[method] = function(url, config) {
                return this.request(mergeConfig(config || {}, {
                    method,
                    url,
                    data: (config || {}).data
                }));
            };
        }));
        utils.forEach([ "post", "put", "patch" ], (function(method) {
            Axios.prototype[method] = function(url, data, config) {
                return this.request(mergeConfig(config || {}, {
                    method,
                    url,
                    data
                }));
            };
        }));
        module.exports = Axios;
    },
    "./node_modules/@yy/sl-mc/node_modules/axios/lib/core/InterceptorManager.js": (module, __unused_webpack_exports, __webpack_require__) => {
        "use strict";
        var utils = __webpack_require__("./node_modules/@yy/sl-mc/node_modules/axios/lib/utils.js");
        function InterceptorManager() {
            this.handlers = [];
        }
        InterceptorManager.prototype.use = function(fulfilled, rejected, options) {
            this.handlers.push({
                fulfilled,
                rejected,
                synchronous: options ? options.synchronous : false,
                runWhen: options ? options.runWhen : null
            });
            return this.handlers.length - 1;
        };
        InterceptorManager.prototype.eject = function(id) {
            if (this.handlers[id]) this.handlers[id] = null;
        };
        InterceptorManager.prototype.forEach = function(fn) {
            utils.forEach(this.handlers, (function(h) {
                if (null !== h) fn(h);
            }));
        };
        module.exports = InterceptorManager;
    },
    "./node_modules/@yy/sl-mc/node_modules/axios/lib/core/buildFullPath.js": (module, __unused_webpack_exports, __webpack_require__) => {
        "use strict";
        var isAbsoluteURL = __webpack_require__("./node_modules/@yy/sl-mc/node_modules/axios/lib/helpers/isAbsoluteURL.js");
        var combineURLs = __webpack_require__("./node_modules/@yy/sl-mc/node_modules/axios/lib/helpers/combineURLs.js");
        module.exports = function(baseURL, requestedURL) {
            if (baseURL && !isAbsoluteURL(requestedURL)) return combineURLs(baseURL, requestedURL);
            return requestedURL;
        };
    },
    "./node_modules/@yy/sl-mc/node_modules/axios/lib/core/createError.js": (module, __unused_webpack_exports, __webpack_require__) => {
        "use strict";
        var enhanceError = __webpack_require__("./node_modules/@yy/sl-mc/node_modules/axios/lib/core/enhanceError.js");
        module.exports = function(message, config, code, request, response) {
            var error = new Error(message);
            return enhanceError(error, config, code, request, response);
        };
    },
    "./node_modules/@yy/sl-mc/node_modules/axios/lib/core/dispatchRequest.js": (module, __unused_webpack_exports, __webpack_require__) => {
        "use strict";
        var utils = __webpack_require__("./node_modules/@yy/sl-mc/node_modules/axios/lib/utils.js");
        var transformData = __webpack_require__("./node_modules/@yy/sl-mc/node_modules/axios/lib/core/transformData.js");
        var isCancel = __webpack_require__("./node_modules/@yy/sl-mc/node_modules/axios/lib/cancel/isCancel.js");
        var defaults = __webpack_require__("./node_modules/@yy/sl-mc/node_modules/axios/lib/defaults.js");
        var Cancel = __webpack_require__("./node_modules/@yy/sl-mc/node_modules/axios/lib/cancel/Cancel.js");
        function throwIfCancellationRequested(config) {
            if (config.cancelToken) config.cancelToken.throwIfRequested();
            if (config.signal && config.signal.aborted) throw new Cancel("canceled");
        }
        module.exports = function(config) {
            throwIfCancellationRequested(config);
            config.headers = config.headers || {};
            config.data = transformData.call(config, config.data, config.headers, config.transformRequest);
            config.headers = utils.merge(config.headers.common || {}, config.headers[config.method] || {}, config.headers);
            utils.forEach([ "delete", "get", "head", "post", "put", "patch", "common" ], (function(method) {
                delete config.headers[method];
            }));
            var adapter = config.adapter || defaults.adapter;
            return adapter(config).then((function(response) {
                throwIfCancellationRequested(config);
                response.data = transformData.call(config, response.data, response.headers, config.transformResponse);
                return response;
            }), (function(reason) {
                if (!isCancel(reason)) {
                    throwIfCancellationRequested(config);
                    if (reason && reason.response) reason.response.data = transformData.call(config, reason.response.data, reason.response.headers, config.transformResponse);
                }
                return Promise.reject(reason);
            }));
        };
    },
    "./node_modules/@yy/sl-mc/node_modules/axios/lib/core/enhanceError.js": module => {
        "use strict";
        module.exports = function(error, config, code, request, response) {
            error.config = config;
            if (code) error.code = code;
            error.request = request;
            error.response = response;
            error.isAxiosError = true;
            error.toJSON = function() {
                return {
                    message: this.message,
                    name: this.name,
                    description: this.description,
                    number: this.number,
                    fileName: this.fileName,
                    lineNumber: this.lineNumber,
                    columnNumber: this.columnNumber,
                    stack: this.stack,
                    config: this.config,
                    code: this.code,
                    status: this.response && this.response.status ? this.response.status : null
                };
            };
            return error;
        };
    },
    "./node_modules/@yy/sl-mc/node_modules/axios/lib/core/mergeConfig.js": (module, __unused_webpack_exports, __webpack_require__) => {
        "use strict";
        var utils = __webpack_require__("./node_modules/@yy/sl-mc/node_modules/axios/lib/utils.js");
        module.exports = function(config1, config2) {
            config2 = config2 || {};
            var config = {};
            function getMergedValue(target, source) {
                if (utils.isPlainObject(target) && utils.isPlainObject(source)) return utils.merge(target, source); else if (utils.isPlainObject(source)) return utils.merge({}, source); else if (utils.isArray(source)) return source.slice();
                return source;
            }
            function mergeDeepProperties(prop) {
                if (!utils.isUndefined(config2[prop])) return getMergedValue(config1[prop], config2[prop]); else if (!utils.isUndefined(config1[prop])) return getMergedValue(void 0, config1[prop]);
            }
            function valueFromConfig2(prop) {
                if (!utils.isUndefined(config2[prop])) return getMergedValue(void 0, config2[prop]);
            }
            function defaultToConfig2(prop) {
                if (!utils.isUndefined(config2[prop])) return getMergedValue(void 0, config2[prop]); else if (!utils.isUndefined(config1[prop])) return getMergedValue(void 0, config1[prop]);
            }
            function mergeDirectKeys(prop) {
                if (prop in config2) return getMergedValue(config1[prop], config2[prop]); else if (prop in config1) return getMergedValue(void 0, config1[prop]);
            }
            var mergeMap = {
                url: valueFromConfig2,
                method: valueFromConfig2,
                data: valueFromConfig2,
                baseURL: defaultToConfig2,
                transformRequest: defaultToConfig2,
                transformResponse: defaultToConfig2,
                paramsSerializer: defaultToConfig2,
                timeout: defaultToConfig2,
                timeoutMessage: defaultToConfig2,
                withCredentials: defaultToConfig2,
                adapter: defaultToConfig2,
                responseType: defaultToConfig2,
                xsrfCookieName: defaultToConfig2,
                xsrfHeaderName: defaultToConfig2,
                onUploadProgress: defaultToConfig2,
                onDownloadProgress: defaultToConfig2,
                decompress: defaultToConfig2,
                maxContentLength: defaultToConfig2,
                maxBodyLength: defaultToConfig2,
                transport: defaultToConfig2,
                httpAgent: defaultToConfig2,
                httpsAgent: defaultToConfig2,
                cancelToken: defaultToConfig2,
                socketPath: defaultToConfig2,
                responseEncoding: defaultToConfig2,
                validateStatus: mergeDirectKeys
            };
            utils.forEach(Object.keys(config1).concat(Object.keys(config2)), (function(prop) {
                var merge = mergeMap[prop] || mergeDeepProperties;
                var configValue = merge(prop);
                utils.isUndefined(configValue) && merge !== mergeDirectKeys || (config[prop] = configValue);
            }));
            return config;
        };
    },
    "./node_modules/@yy/sl-mc/node_modules/axios/lib/core/settle.js": (module, __unused_webpack_exports, __webpack_require__) => {
        "use strict";
        var createError = __webpack_require__("./node_modules/@yy/sl-mc/node_modules/axios/lib/core/createError.js");
        module.exports = function(resolve, reject, response) {
            var validateStatus = response.config.validateStatus;
            if (!response.status || !validateStatus || validateStatus(response.status)) resolve(response); else reject(createError("Request failed with status code " + response.status, response.config, null, response.request, response));
        };
    },
    "./node_modules/@yy/sl-mc/node_modules/axios/lib/core/transformData.js": (module, __unused_webpack_exports, __webpack_require__) => {
        "use strict";
        var utils = __webpack_require__("./node_modules/@yy/sl-mc/node_modules/axios/lib/utils.js");
        var defaults = __webpack_require__("./node_modules/@yy/sl-mc/node_modules/axios/lib/defaults.js");
        module.exports = function(data, headers, fns) {
            var context = this || defaults;
            utils.forEach(fns, (function(fn) {
                data = fn.call(context, data, headers);
            }));
            return data;
        };
    },
    "./node_modules/@yy/sl-mc/node_modules/axios/lib/defaults.js": (module, __unused_webpack_exports, __webpack_require__) => {
        "use strict";
        var utils = __webpack_require__("./node_modules/@yy/sl-mc/node_modules/axios/lib/utils.js");
        var normalizeHeaderName = __webpack_require__("./node_modules/@yy/sl-mc/node_modules/axios/lib/helpers/normalizeHeaderName.js");
        var enhanceError = __webpack_require__("./node_modules/@yy/sl-mc/node_modules/axios/lib/core/enhanceError.js");
        var DEFAULT_CONTENT_TYPE = {
            "Content-Type": "application/x-www-form-urlencoded"
        };
        function setContentTypeIfUnset(headers, value) {
            if (!utils.isUndefined(headers) && utils.isUndefined(headers["Content-Type"])) headers["Content-Type"] = value;
        }
        function getDefaultAdapter() {
            var adapter;
            if ("undefined" !== typeof XMLHttpRequest) adapter = __webpack_require__("./node_modules/@yy/sl-mc/node_modules/axios/lib/adapters/xhr.js"); else if ("undefined" !== typeof process && "[object process]" === Object.prototype.toString.call(process)) adapter = __webpack_require__("./node_modules/@yy/sl-mc/node_modules/axios/lib/adapters/xhr.js");
            return adapter;
        }
        function stringifySafely(rawValue, parser, encoder) {
            if (utils.isString(rawValue)) try {
                (parser || JSON.parse)(rawValue);
                return utils.trim(rawValue);
            } catch (e) {
                if ("SyntaxError" !== e.name) throw e;
            }
            return (encoder || JSON.stringify)(rawValue);
        }
        var defaults = {
            transitional: {
                silentJSONParsing: true,
                forcedJSONParsing: true,
                clarifyTimeoutError: false
            },
            adapter: getDefaultAdapter(),
            transformRequest: [ function(data, headers) {
                normalizeHeaderName(headers, "Accept");
                normalizeHeaderName(headers, "Content-Type");
                if (utils.isFormData(data) || utils.isArrayBuffer(data) || utils.isBuffer(data) || utils.isStream(data) || utils.isFile(data) || utils.isBlob(data)) return data;
                if (utils.isArrayBufferView(data)) return data.buffer;
                if (utils.isURLSearchParams(data)) {
                    setContentTypeIfUnset(headers, "application/x-www-form-urlencoded;charset=utf-8");
                    return data.toString();
                }
                if (utils.isObject(data) || headers && "application/json" === headers["Content-Type"]) {
                    setContentTypeIfUnset(headers, "application/json");
                    return stringifySafely(data);
                }
                return data;
            } ],
            transformResponse: [ function(data) {
                var transitional = this.transitional || defaults.transitional;
                var silentJSONParsing = transitional && transitional.silentJSONParsing;
                var forcedJSONParsing = transitional && transitional.forcedJSONParsing;
                var strictJSONParsing = !silentJSONParsing && "json" === this.responseType;
                if (strictJSONParsing || forcedJSONParsing && utils.isString(data) && data.length) try {
                    return JSON.parse(data);
                } catch (e) {
                    if (strictJSONParsing) {
                        if ("SyntaxError" === e.name) throw enhanceError(e, this, "E_JSON_PARSE");
                        throw e;
                    }
                }
                return data;
            } ],
            timeout: 0,
            xsrfCookieName: "XSRF-TOKEN",
            xsrfHeaderName: "X-XSRF-TOKEN",
            maxContentLength: -1,
            maxBodyLength: -1,
            validateStatus: function(status) {
                return status >= 200 && status < 300;
            },
            headers: {
                common: {
                    Accept: "application/json, text/plain, */*"
                }
            }
        };
        utils.forEach([ "delete", "get", "head" ], (function(method) {
            defaults.headers[method] = {};
        }));
        utils.forEach([ "post", "put", "patch" ], (function(method) {
            defaults.headers[method] = utils.merge(DEFAULT_CONTENT_TYPE);
        }));
        module.exports = defaults;
    },
    "./node_modules/@yy/sl-mc/node_modules/axios/lib/env/data.js": module => {
        "use strict";
        module.exports = {
            version: "0.22.0"
        };
    },
    "./node_modules/@yy/sl-mc/node_modules/axios/lib/helpers/bind.js": module => {
        "use strict";
        module.exports = function(fn, thisArg) {
            return function() {
                var args = new Array(arguments.length);
                for (var i = 0; i < args.length; i++) args[i] = arguments[i];
                return fn.apply(thisArg, args);
            };
        };
    },
    "./node_modules/@yy/sl-mc/node_modules/axios/lib/helpers/buildURL.js": (module, __unused_webpack_exports, __webpack_require__) => {
        "use strict";
        var utils = __webpack_require__("./node_modules/@yy/sl-mc/node_modules/axios/lib/utils.js");
        function encode(val) {
            return encodeURIComponent(val).replace(/%3A/gi, ":").replace(/%24/g, "$").replace(/%2C/gi, ",").replace(/%20/g, "+").replace(/%5B/gi, "[").replace(/%5D/gi, "]");
        }
        module.exports = function(url, params, paramsSerializer) {
            if (!params) return url;
            var serializedParams;
            if (paramsSerializer) serializedParams = paramsSerializer(params); else if (utils.isURLSearchParams(params)) serializedParams = params.toString(); else {
                var parts = [];
                utils.forEach(params, (function(val, key) {
                    if (null === val || "undefined" === typeof val) return;
                    if (utils.isArray(val)) key += "[]"; else val = [ val ];
                    utils.forEach(val, (function(v) {
                        if (utils.isDate(v)) v = v.toISOString(); else if (utils.isObject(v)) v = JSON.stringify(v);
                        parts.push(encode(key) + "=" + encode(v));
                    }));
                }));
                serializedParams = parts.join("&");
            }
            if (serializedParams) {
                var hashmarkIndex = url.indexOf("#");
                if (-1 !== hashmarkIndex) url = url.slice(0, hashmarkIndex);
                url += (-1 === url.indexOf("?") ? "?" : "&") + serializedParams;
            }
            return url;
        };
    },
    "./node_modules/@yy/sl-mc/node_modules/axios/lib/helpers/combineURLs.js": module => {
        "use strict";
        module.exports = function(baseURL, relativeURL) {
            return relativeURL ? baseURL.replace(/\/+$/, "") + "/" + relativeURL.replace(/^\/+/, "") : baseURL;
        };
    },
    "./node_modules/@yy/sl-mc/node_modules/axios/lib/helpers/cookies.js": (module, __unused_webpack_exports, __webpack_require__) => {
        "use strict";
        var utils = __webpack_require__("./node_modules/@yy/sl-mc/node_modules/axios/lib/utils.js");
        module.exports = utils.isStandardBrowserEnv() ? function() {
            return {
                write: function(name, value, expires, path, domain, secure) {
                    var cookie = [];
                    cookie.push(name + "=" + encodeURIComponent(value));
                    if (utils.isNumber(expires)) cookie.push("expires=" + new Date(expires).toGMTString());
                    if (utils.isString(path)) cookie.push("path=" + path);
                    if (utils.isString(domain)) cookie.push("domain=" + domain);
                    if (true === secure) cookie.push("secure");
                    document.cookie = cookie.join("; ");
                },
                read: function(name) {
                    var match = document.cookie.match(new RegExp("(^|;\\s*)(" + name + ")=([^;]*)"));
                    return match ? decodeURIComponent(match[3]) : null;
                },
                remove: function(name) {
                    this.write(name, "", Date.now() - 864e5);
                }
            };
        }() : function() {
            return {
                write: function() {},
                read: function() {
                    return null;
                },
                remove: function() {}
            };
        }();
    },
    "./node_modules/@yy/sl-mc/node_modules/axios/lib/helpers/isAbsoluteURL.js": module => {
        "use strict";
        module.exports = function(url) {
            return /^([a-z][a-z\d\+\-\.]*:)?\/\//i.test(url);
        };
    },
    "./node_modules/@yy/sl-mc/node_modules/axios/lib/helpers/isAxiosError.js": module => {
        "use strict";
        module.exports = function(payload) {
            return "object" === typeof payload && true === payload.isAxiosError;
        };
    },
    "./node_modules/@yy/sl-mc/node_modules/axios/lib/helpers/isURLSameOrigin.js": (module, __unused_webpack_exports, __webpack_require__) => {
        "use strict";
        var utils = __webpack_require__("./node_modules/@yy/sl-mc/node_modules/axios/lib/utils.js");
        module.exports = utils.isStandardBrowserEnv() ? function() {
            var msie = /(msie|trident)/i.test(navigator.userAgent);
            var urlParsingNode = document.createElement("a");
            var originURL;
            function resolveURL(url) {
                var href = url;
                if (msie) {
                    urlParsingNode.setAttribute("href", href);
                    href = urlParsingNode.href;
                }
                urlParsingNode.setAttribute("href", href);
                return {
                    href: urlParsingNode.href,
                    protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, "") : "",
                    host: urlParsingNode.host,
                    search: urlParsingNode.search ? urlParsingNode.search.replace(/^\?/, "") : "",
                    hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, "") : "",
                    hostname: urlParsingNode.hostname,
                    port: urlParsingNode.port,
                    pathname: "/" === urlParsingNode.pathname.charAt(0) ? urlParsingNode.pathname : "/" + urlParsingNode.pathname
                };
            }
            originURL = resolveURL(window.location.href);
            return function(requestURL) {
                var parsed = utils.isString(requestURL) ? resolveURL(requestURL) : requestURL;
                return parsed.protocol === originURL.protocol && parsed.host === originURL.host;
            };
        }() : function() {
            return function() {
                return true;
            };
        }();
    },
    "./node_modules/@yy/sl-mc/node_modules/axios/lib/helpers/normalizeHeaderName.js": (module, __unused_webpack_exports, __webpack_require__) => {
        "use strict";
        var utils = __webpack_require__("./node_modules/@yy/sl-mc/node_modules/axios/lib/utils.js");
        module.exports = function(headers, normalizedName) {
            utils.forEach(headers, (function(value, name) {
                if (name !== normalizedName && name.toUpperCase() === normalizedName.toUpperCase()) {
                    headers[normalizedName] = value;
                    delete headers[name];
                }
            }));
        };
    },
    "./node_modules/@yy/sl-mc/node_modules/axios/lib/helpers/parseHeaders.js": (module, __unused_webpack_exports, __webpack_require__) => {
        "use strict";
        var utils = __webpack_require__("./node_modules/@yy/sl-mc/node_modules/axios/lib/utils.js");
        var ignoreDuplicateOf = [ "age", "authorization", "content-length", "content-type", "etag", "expires", "from", "host", "if-modified-since", "if-unmodified-since", "last-modified", "location", "max-forwards", "proxy-authorization", "referer", "retry-after", "user-agent" ];
        module.exports = function(headers) {
            var parsed = {};
            var key;
            var val;
            var i;
            if (!headers) return parsed;
            utils.forEach(headers.split("\n"), (function(line) {
                i = line.indexOf(":");
                key = utils.trim(line.substr(0, i)).toLowerCase();
                val = utils.trim(line.substr(i + 1));
                if (key) {
                    if (parsed[key] && ignoreDuplicateOf.indexOf(key) >= 0) return;
                    if ("set-cookie" === key) parsed[key] = (parsed[key] ? parsed[key] : []).concat([ val ]); else parsed[key] = parsed[key] ? parsed[key] + ", " + val : val;
                }
            }));
            return parsed;
        };
    },
    "./node_modules/@yy/sl-mc/node_modules/axios/lib/helpers/spread.js": module => {
        "use strict";
        module.exports = function(callback) {
            return function(arr) {
                return callback.apply(null, arr);
            };
        };
    },
    "./node_modules/@yy/sl-mc/node_modules/axios/lib/helpers/validator.js": (module, __unused_webpack_exports, __webpack_require__) => {
        "use strict";
        var VERSION = __webpack_require__("./node_modules/@yy/sl-mc/node_modules/axios/lib/env/data.js").version;
        var validators = {};
        [ "object", "boolean", "number", "function", "string", "symbol" ].forEach((function(type, i) {
            validators[type] = function(thing) {
                return typeof thing === type || "a" + (i < 1 ? "n " : " ") + type;
            };
        }));
        var deprecatedWarnings = {};
        validators.transitional = function(validator, version, message) {
            function formatMessage(opt, desc) {
                return "[Axios v" + VERSION + "] Transitional option '" + opt + "'" + desc + (message ? ". " + message : "");
            }
            return function(value, opt, opts) {
                if (false === validator) throw new Error(formatMessage(opt, " has been removed" + (version ? " in " + version : "")));
                if (version && !deprecatedWarnings[opt]) {
                    deprecatedWarnings[opt] = true;
                    console.warn(formatMessage(opt, " has been deprecated since v" + version + " and will be removed in the near future"));
                }
                return validator ? validator(value, opt, opts) : true;
            };
        };
        function assertOptions(options, schema, allowUnknown) {
            if ("object" !== typeof options) throw new TypeError("options must be an object");
            var keys = Object.keys(options);
            var i = keys.length;
            while (i-- > 0) {
                var opt = keys[i];
                var validator = schema[opt];
                if (validator) {
                    var value = options[opt];
                    var result = void 0 === value || validator(value, opt, options);
                    if (true !== result) throw new TypeError("option " + opt + " must be " + result);
                    continue;
                }
                if (true !== allowUnknown) throw Error("Unknown option " + opt);
            }
        }
        module.exports = {
            assertOptions,
            validators
        };
    },
    "./node_modules/@yy/sl-mc/node_modules/axios/lib/utils.js": (module, __unused_webpack_exports, __webpack_require__) => {
        "use strict";
        var bind = __webpack_require__("./node_modules/@yy/sl-mc/node_modules/axios/lib/helpers/bind.js");
        var toString = Object.prototype.toString;
        function isArray(val) {
            return "[object Array]" === toString.call(val);
        }
        function isUndefined(val) {
            return "undefined" === typeof val;
        }
        function isBuffer(val) {
            return null !== val && !isUndefined(val) && null !== val.constructor && !isUndefined(val.constructor) && "function" === typeof val.constructor.isBuffer && val.constructor.isBuffer(val);
        }
        function isArrayBuffer(val) {
            return "[object ArrayBuffer]" === toString.call(val);
        }
        function isFormData(val) {
            return "undefined" !== typeof FormData && val instanceof FormData;
        }
        function isArrayBufferView(val) {
            var result;
            if ("undefined" !== typeof ArrayBuffer && ArrayBuffer.isView) result = ArrayBuffer.isView(val); else result = val && val.buffer && val.buffer instanceof ArrayBuffer;
            return result;
        }
        function isString(val) {
            return "string" === typeof val;
        }
        function isNumber(val) {
            return "number" === typeof val;
        }
        function isObject(val) {
            return null !== val && "object" === typeof val;
        }
        function isPlainObject(val) {
            if ("[object Object]" !== toString.call(val)) return false;
            var prototype = Object.getPrototypeOf(val);
            return null === prototype || prototype === Object.prototype;
        }
        function isDate(val) {
            return "[object Date]" === toString.call(val);
        }
        function isFile(val) {
            return "[object File]" === toString.call(val);
        }
        function isBlob(val) {
            return "[object Blob]" === toString.call(val);
        }
        function isFunction(val) {
            return "[object Function]" === toString.call(val);
        }
        function isStream(val) {
            return isObject(val) && isFunction(val.pipe);
        }
        function isURLSearchParams(val) {
            return "undefined" !== typeof URLSearchParams && val instanceof URLSearchParams;
        }
        function trim(str) {
            return str.trim ? str.trim() : str.replace(/^\s+|\s+$/g, "");
        }
        function isStandardBrowserEnv() {
            if ("undefined" !== typeof navigator && ("ReactNative" === navigator.product || "NativeScript" === navigator.product || "NS" === navigator.product)) return false;
            return "undefined" !== typeof window && "undefined" !== typeof document;
        }
        function forEach(obj, fn) {
            if (null === obj || "undefined" === typeof obj) return;
            if ("object" !== typeof obj) obj = [ obj ];
            if (isArray(obj)) for (var i = 0, l = obj.length; i < l; i++) fn.call(null, obj[i], i, obj); else for (var key in obj) if (Object.prototype.hasOwnProperty.call(obj, key)) fn.call(null, obj[key], key, obj);
        }
        function merge() {
            var result = {};
            function assignValue(val, key) {
                if (isPlainObject(result[key]) && isPlainObject(val)) result[key] = merge(result[key], val); else if (isPlainObject(val)) result[key] = merge({}, val); else if (isArray(val)) result[key] = val.slice(); else result[key] = val;
            }
            for (var i = 0, l = arguments.length; i < l; i++) forEach(arguments[i], assignValue);
            return result;
        }
        function extend(a, b, thisArg) {
            forEach(b, (function(val, key) {
                if (thisArg && "function" === typeof val) a[key] = bind(val, thisArg); else a[key] = val;
            }));
            return a;
        }
        function stripBOM(content) {
            if (65279 === content.charCodeAt(0)) content = content.slice(1);
            return content;
        }
        module.exports = {
            isArray,
            isArrayBuffer,
            isBuffer,
            isFormData,
            isArrayBufferView,
            isString,
            isNumber,
            isObject,
            isPlainObject,
            isUndefined,
            isDate,
            isFile,
            isBlob,
            isFunction,
            isStream,
            isURLSearchParams,
            isStandardBrowserEnv,
            forEach,
            merge,
            extend,
            trim,
            stripBOM
        };
    },
    "./node_modules/@babel/runtime/regenerator/index.js": (module, __unused_webpack_exports, __webpack_require__) => {
        module.exports = __webpack_require__("./node_modules/regenerator-runtime/runtime.js");
    },
    "./node_modules/@funnyecho/hamon/dist/index.js": function(__unused_webpack_module, exports) {
        "use strict";
        var __extends = this && this.__extends || function() {
            var extendStatics = function(d, b) {
                extendStatics = Object.setPrototypeOf || {
                    __proto__: []
                } instanceof Array && function(d, b) {
                    d.__proto__ = b;
                } || function(d, b) {
                    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
                };
                return extendStatics(d, b);
            };
            return function(d, b) {
                extendStatics(d, b);
                function __() {
                    this.constructor = d;
                }
                d.prototype = null === b ? Object.create(b) : (__.prototype = b.prototype, new __);
            };
        }();
        var __read = this && this.__read || function(o, n) {
            var m = "function" === typeof Symbol && o[Symbol.iterator];
            if (!m) return o;
            var r, e, i = m.call(o), ar = [];
            try {
                while ((void 0 === n || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
            } catch (error) {
                e = {
                    error
                };
            } finally {
                try {
                    if (r && !r.done && (m = i["return"])) m.call(i);
                } finally {
                    if (e) throw e.error;
                }
            }
            return ar;
        };
        var __spread = this && this.__spread || function() {
            for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));
            return ar;
        };
        var __values = this && this.__values || function(o) {
            var s = "function" === typeof Symbol && Symbol.iterator, m = s && o[s], i = 0;
            if (m) return m.call(o);
            if (o && "number" === typeof o.length) return {
                next: function() {
                    if (o && i >= o.length) o = void 0;
                    return {
                        value: o && o[i++],
                        done: !o
                    };
                }
            };
            throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
        };
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        function once(fn) {
            var called = false;
            return function() {
                var args = [];
                for (var _i = 0; _i < arguments.length; _i++) args[_i] = arguments[_i];
                if (called) return;
                called = true;
                fn.apply(void 0, __spread(args));
            };
        }
        function invokeSeriesNext(observer, args, list) {
            var onComplete;
            if ("function" === typeof observer.onComplete) onComplete = observer.onComplete; else onComplete = function(err, result) {};
            if (!list.length) {
                if (observer.shouldWaterfall) onComplete(null, args[0]); else onComplete(null, void 0);
                return;
            }
            var tap = list.shift();
            var downstreamTaps = list;
            var downstreamArgs = Array.from(args);
            var nextArgs = __spread(args, [ function(err, result) {
                if (null != err) {
                    onComplete(err);
                    return;
                }
                if (void 0 !== result && true === observer.shouldBail) {
                    onComplete(null, result);
                    return;
                }
                if (void 0 !== result && true === observer.shouldWaterfall) downstreamArgs[0] = result;
                invokeSeriesNext(observer, downstreamArgs, downstreamTaps);
            } ]);
            tap.fn.apply(tap, __spread(nextArgs));
        }
        function invokeParallel(observer, args, list) {
            var e_1, _a;
            var onComplete;
            if ("function" === typeof observer.onComplete) onComplete = observer.onComplete; else onComplete = function(err, result) {};
            if (!list.length) {
                onComplete(null, void 0);
                return;
            }
            var parallelSize = list.length;
            var nextArgs = __spread(args, [ function(err, result) {
                if (null != err) {
                    onComplete(err);
                    return;
                }
                if (void 0 !== result && true === observer.shouldBail) {
                    onComplete(null, result);
                    return;
                }
                --parallelSize;
                if (parallelSize <= 0) {
                    onComplete(null, args[0]);
                    return;
                }
            } ]);
            try {
                for (var list_1 = __values(list), list_1_1 = list_1.next(); !list_1_1.done; list_1_1 = list_1.next()) {
                    var option = list_1_1.value;
                    option.fn.apply(option, __spread(nextArgs));
                }
            } catch (e_1_1) {
                e_1 = {
                    error: e_1_1
                };
            } finally {
                try {
                    if (list_1_1 && !list_1_1.done && (_a = list_1.return)) _a.call(list_1);
                } finally {
                    if (e_1) throw e_1.error;
                }
            }
        }
        function invokeSynchronously(observer, args, list) {
            var e_2, _a;
            if (!list.length) if (observer.shouldWaterfall) return args[0]; else return;
            var downstreamArgs = Array.from(args);
            try {
                for (var list_2 = __values(list), list_2_1 = list_2.next(); !list_2_1.done; list_2_1 = list_2.next()) {
                    var option = list_2_1.value;
                    var fn = option.fn;
                    var result = fn.apply(void 0, __spread(downstreamArgs));
                    if (void 0 !== result && true === observer.shouldBail) return result;
                    if (void 0 !== result && true === observer.shouldWaterfall) downstreamArgs[0] = result;
                }
            } catch (e_2_1) {
                e_2 = {
                    error: e_2_1
                };
            } finally {
                try {
                    if (list_2_1 && !list_2_1.done && (_a = list_2.return)) _a.call(list_2);
                } finally {
                    if (e_2) throw e_2.error;
                }
            }
            if (observer.shouldWaterfall) return downstreamArgs[0]; else return;
        }
        var Hook = function() {
            function Hook(bucketHashcode) {
                this.tapIdSeed = 0;
                this.presetTapBucket = new Set;
                this.tapBuckets = new Map;
                this.tapOptionsCache = new Map;
                this.bucketHashcode = bucketHashcode;
            }
            Hook.prototype.exhaust = function() {
                this.presetTapBucket.clear();
                this.tapBuckets.clear();
                this.tapOptionsCache.clear();
            };
            Hook.prototype.destroy = function() {
                this.exhaust();
            };
            Hook.prototype.insertSyncTap = function(fn, bucket) {
                return this.tapping(fn, bucket);
            };
            Hook.prototype.insertAsyncTap = function(fn, bucket) {
                function asyncTapFn() {
                    var args = [];
                    for (var _i = 0; _i < arguments.length; _i++) args[_i] = arguments[_i];
                    var invokeCb = args[args.length - 1];
                    try {
                        fn.apply(void 0, __spread(args));
                    } catch (e) {
                        invokeCb(e);
                    }
                }
                return this.tapping(asyncTapFn, bucket);
            };
            Hook.prototype.insertPromiseTap = function(fn, bucket) {
                function promiseTapFn() {
                    var args = [];
                    for (var _i = 0; _i < arguments.length; _i++) args[_i] = arguments[_i];
                    var invokeCb = args.pop();
                    var invokeArgs = args;
                    try {
                        Promise.resolve(fn.apply(void 0, __spread(invokeArgs))).then((function(tapResult) {
                            invokeCb(null, tapResult);
                        }), (function(e) {
                            invokeCb(e);
                        }));
                    } catch (e) {
                        invokeCb(e);
                    }
                }
                return this.tapping(promiseTapFn, bucket);
            };
            Hook.prototype.invokeSeries = function(args, observer) {
                if (!observer) observer = {};
                if ("function" === typeof observer.onComplete) observer.onComplete = once(observer.onComplete);
                invokeSeriesNext(observer, args, Array.from(this.getBucketTaps(args)));
            };
            Hook.prototype.invokeParallel = function(args, observer) {
                if (!observer) observer = {};
                if ("function" === typeof observer.onComplete) observer.onComplete = once(observer.onComplete);
                invokeParallel(observer, args, Array.from(this.getBucketTaps(args)));
            };
            Hook.prototype.invokeSynchronously = function(args, observer) {
                if (!observer) observer = {};
                return invokeSynchronously(observer, args, Array.from(this.getBucketTaps(args)));
            };
            Hook.prototype.getBucketTaps = function(args) {
                var e_3, _a;
                var presetTaps = Array.from(this.presetTapBucket);
                var bucketTaps = [];
                if ("function" === typeof this.bucketHashcode) {
                    var bucket = this.bucketHashcode.apply(this, __spread(args));
                    if (this.tapBuckets.has(bucket)) bucketTaps = Array.from(this.tapBuckets.get(bucket));
                }
                var selectedTapIds = new Set(__spread(presetTaps, bucketTaps));
                var selectedTapOptions = new Set;
                try {
                    for (var selectedTapIds_1 = __values(selectedTapIds), selectedTapIds_1_1 = selectedTapIds_1.next(); !selectedTapIds_1_1.done; selectedTapIds_1_1 = selectedTapIds_1.next()) {
                        var tapId = selectedTapIds_1_1.value;
                        selectedTapOptions.add(this.tapOptionsCache.get(tapId));
                    }
                } catch (e_3_1) {
                    e_3 = {
                        error: e_3_1
                    };
                } finally {
                    try {
                        if (selectedTapIds_1_1 && !selectedTapIds_1_1.done && (_a = selectedTapIds_1.return)) _a.call(selectedTapIds_1);
                    } finally {
                        if (e_3) throw e_3.error;
                    }
                }
                return selectedTapOptions;
            };
            Hook.prototype.tapping = function(fn, bucketHash) {
                var _this = this;
                var tapBucket = this.presetTapBucket;
                if (bucketHash) {
                    if (!this.tapBuckets.has(bucketHash)) this.tapBuckets.set(bucketHash, new Set);
                    tapBucket = this.tapBuckets.get(bucketHash);
                }
                var tapId = this.generateTapId();
                var options = {
                    fn,
                    bucket: bucketHash
                };
                this.tapOptionsCache.set(tapId, options);
                tapBucket.add(tapId);
                return function() {
                    _this.popoutTap(tapId);
                };
            };
            Hook.prototype.popoutTap = function(tapId) {
                var options = this.tapOptionsCache.get(tapId);
                if (!options) return;
                var bucketHash = options.bucket;
                if (!bucketHash) this.presetTapBucket.delete(tapId); else if (this.tapBuckets.has(bucketHash)) this.tapBuckets.get(bucketHash).delete(tapId);
                this.tapOptionsCache.delete(tapId);
            };
            Hook.prototype.generateTapId = function() {
                return "tap:" + ++this.tapIdSeed + "?" + Date.now();
            };
            return Hook;
        }();
        exports.Hook = Hook;
        var SyncTapHook = function(_super) {
            __extends(SyncTapHook, _super);
            function SyncTapHook() {
                return null !== _super && _super.apply(this, arguments) || this;
            }
            SyncTapHook.prototype.tap = function(fn, bucket) {
                return this.insertSyncTap(fn, bucket);
            };
            return SyncTapHook;
        }(Hook);
        exports.SyncTapHook = SyncTapHook;
        var AsyncTapHook = function(_super) {
            __extends(AsyncTapHook, _super);
            function AsyncTapHook() {
                return null !== _super && _super.apply(this, arguments) || this;
            }
            AsyncTapHook.prototype.tapAsync = function(fn, bucket) {
                return this.insertAsyncTap(fn, bucket);
            };
            AsyncTapHook.prototype.tapPromise = function(fn, bucket) {
                return this.insertPromiseTap(fn, bucket);
            };
            return AsyncTapHook;
        }(Hook);
        exports.AsyncTapHook = AsyncTapHook;
        var SyncHook = function(_super) {
            __extends(SyncHook, _super);
            function SyncHook() {
                return null !== _super && _super.apply(this, arguments) || this;
            }
            SyncHook.prototype.call = function() {
                var args = [];
                for (var _i = 0; _i < arguments.length; _i++) args[_i] = arguments[_i];
                this.invokeSynchronously(args);
            };
            return SyncHook;
        }(SyncTapHook);
        exports.SyncHook = SyncHook;
        var SyncBailHook = function(_super) {
            __extends(SyncBailHook, _super);
            function SyncBailHook() {
                return null !== _super && _super.apply(this, arguments) || this;
            }
            SyncBailHook.prototype.call = function() {
                var args = [];
                for (var _i = 0; _i < arguments.length; _i++) args[_i] = arguments[_i];
                return this.invokeSynchronously(args, {
                    shouldBail: true
                });
            };
            return SyncBailHook;
        }(SyncTapHook);
        exports.SyncBailHook = SyncBailHook;
        var SyncWaterfallHook = function(_super) {
            __extends(SyncWaterfallHook, _super);
            function SyncWaterfallHook() {
                return null !== _super && _super.apply(this, arguments) || this;
            }
            SyncWaterfallHook.prototype.call = function() {
                var args = [];
                for (var _i = 0; _i < arguments.length; _i++) args[_i] = arguments[_i];
                return this.invokeSynchronously(args, {
                    shouldWaterfall: true
                });
            };
            return SyncWaterfallHook;
        }(SyncTapHook);
        exports.SyncWaterfallHook = SyncWaterfallHook;
        var AsyncParallelHook = function(_super) {
            __extends(AsyncParallelHook, _super);
            function AsyncParallelHook() {
                return null !== _super && _super.apply(this, arguments) || this;
            }
            AsyncParallelHook.prototype.callAsync = function() {
                var args = [];
                for (var _i = 0; _i < arguments.length; _i++) args[_i] = arguments[_i];
                var asyncCb = args.pop();
                this.invokeParallel(args, {
                    onComplete: function(err) {
                        if (null != err) asyncCb(err); else asyncCb();
                    }
                });
            };
            AsyncParallelHook.prototype.callPromise = function() {
                var _this = this;
                var args = [];
                for (var _i = 0; _i < arguments.length; _i++) args[_i] = arguments[_i];
                return new Promise((function(resolve, reject) {
                    _this.invokeParallel(args, {
                        onComplete: function(err) {
                            if (null != err) reject(err); else resolve();
                        }
                    });
                }));
            };
            return AsyncParallelHook;
        }(AsyncTapHook);
        exports.AsyncParallelHook = AsyncParallelHook;
        var AsyncParallelBailHook = function(_super) {
            __extends(AsyncParallelBailHook, _super);
            function AsyncParallelBailHook() {
                return null !== _super && _super.apply(this, arguments) || this;
            }
            AsyncParallelBailHook.prototype.callAsync = function() {
                var args = [];
                for (var _i = 0; _i < arguments.length; _i++) args[_i] = arguments[_i];
                var asyncCb = args.pop();
                this.invokeParallel(args, {
                    shouldBail: true,
                    onComplete: asyncCb
                });
            };
            AsyncParallelBailHook.prototype.callPromise = function() {
                var _this = this;
                var args = [];
                for (var _i = 0; _i < arguments.length; _i++) args[_i] = arguments[_i];
                return new Promise((function(resolve, reject) {
                    _this.invokeParallel(args, {
                        shouldBail: true,
                        onComplete: function(err, result) {
                            if (null != err) reject(err); else resolve(result);
                        }
                    });
                }));
            };
            return AsyncParallelBailHook;
        }(AsyncTapHook);
        exports.AsyncParallelBailHook = AsyncParallelBailHook;
        var AsyncSeriesHook = function(_super) {
            __extends(AsyncSeriesHook, _super);
            function AsyncSeriesHook() {
                return null !== _super && _super.apply(this, arguments) || this;
            }
            AsyncSeriesHook.prototype.callAsync = function() {
                var args = [];
                for (var _i = 0; _i < arguments.length; _i++) args[_i] = arguments[_i];
                var asyncCb = args.pop();
                this.invokeSeries(args, {
                    onComplete: function(err) {
                        if (null != err) asyncCb(err); else asyncCb();
                    }
                });
            };
            AsyncSeriesHook.prototype.callPromise = function() {
                var _this = this;
                var args = [];
                for (var _i = 0; _i < arguments.length; _i++) args[_i] = arguments[_i];
                return new Promise((function(resolve, reject) {
                    _this.invokeSeries(args, {
                        onComplete: function(err) {
                            if (null != err) reject(err); else resolve();
                        }
                    });
                }));
            };
            return AsyncSeriesHook;
        }(AsyncTapHook);
        exports.AsyncSeriesHook = AsyncSeriesHook;
        var AsyncSeriesBailHook = function(_super) {
            __extends(AsyncSeriesBailHook, _super);
            function AsyncSeriesBailHook() {
                return null !== _super && _super.apply(this, arguments) || this;
            }
            AsyncSeriesBailHook.prototype.callAsync = function() {
                var args = [];
                for (var _i = 0; _i < arguments.length; _i++) args[_i] = arguments[_i];
                var asyncCb = args.pop();
                this.invokeSeries(args, {
                    shouldBail: true,
                    onComplete: asyncCb
                });
            };
            AsyncSeriesBailHook.prototype.callPromise = function() {
                var _this = this;
                var args = [];
                for (var _i = 0; _i < arguments.length; _i++) args[_i] = arguments[_i];
                return new Promise((function(resolve, reject) {
                    _this.invokeSeries(args, {
                        shouldBail: true,
                        onComplete: function(err, result) {
                            if (null != err) reject(err); else resolve(result);
                        }
                    });
                }));
            };
            return AsyncSeriesBailHook;
        }(AsyncTapHook);
        exports.AsyncSeriesBailHook = AsyncSeriesBailHook;
        var AsyncSeriesWaterfallHook = function(_super) {
            __extends(AsyncSeriesWaterfallHook, _super);
            function AsyncSeriesWaterfallHook() {
                return null !== _super && _super.apply(this, arguments) || this;
            }
            AsyncSeriesWaterfallHook.prototype.callAsync = function() {
                var args = [];
                for (var _i = 0; _i < arguments.length; _i++) args[_i] = arguments[_i];
                var asyncCb = args.pop();
                this.invokeSeries(args, {
                    shouldWaterfall: true,
                    onComplete: asyncCb
                });
            };
            AsyncSeriesWaterfallHook.prototype.callPromise = function() {
                var _this = this;
                var args = [];
                for (var _i = 0; _i < arguments.length; _i++) args[_i] = arguments[_i];
                return new Promise((function(resolve, reject) {
                    _this.invokeSeries(args, {
                        shouldWaterfall: true,
                        onComplete: function(err, result) {
                            if (null != err) reject(err); else resolve(result);
                        }
                    });
                }));
            };
            return AsyncSeriesWaterfallHook;
        }(AsyncTapHook);
        exports.AsyncSeriesWaterfallHook = AsyncSeriesWaterfallHook;
        exports["default"] = {
            SyncHook,
            SyncBailHook,
            SyncWaterfallHook,
            AsyncSeriesHook,
            AsyncSeriesBailHook,
            AsyncSeriesWaterfallHook,
            AsyncParallelHook,
            AsyncParallelBailHook
        };
    },
    "./node_modules/@sl/cart/lib/api-cart/index.js": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
        "use strict";
        __webpack_require__.d(__webpack_exports__, {
            ApiCart: () => ApiCart
        });
        var _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__("./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js");
        var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/@babel/runtime/helpers/esm/defineProperty.js");
        var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/@babel/runtime/regenerator/index.js");
        var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default = __webpack_require__.n(_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__);
        var _utils_reportData_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__("./node_modules/@sl/cart/lib/utils/reportData/utils.js");
        var _report__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./node_modules/@sl/cart/lib/api-cart/report.js");
        var _service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("./node_modules/@sl/cart/lib/api-cart/service/index.js");
        function ownKeys(object, enumerableOnly) {
            var keys = Object.keys(object);
            if (Object.getOwnPropertySymbols) {
                var symbols = Object.getOwnPropertySymbols(object);
                enumerableOnly && (symbols = symbols.filter((function(sym) {
                    return Object.getOwnPropertyDescriptor(object, sym).enumerable;
                }))), keys.push.apply(keys, symbols);
            }
            return keys;
        }
        function _objectSpread(target) {
            for (var i = 1; i < arguments.length; i++) {
                var source = null != arguments[i] ? arguments[i] : {};
                i % 2 ? ownKeys(Object(source), !0).forEach((function(key) {
                    (0, _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_1__["default"])(target, key, source[key]);
                })) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach((function(key) {
                    Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
                }));
            }
            return target;
        }
        var isFunction = function(fn) {
            return "function" === typeof fn;
        };
        var ApiCartAdd = function(data) {
            var _window, _window2, _window2$HdSdk, _window2$HdSdk$shopTr, _window2$HdSdk$shopTr2;
            var items = data.items, hdReportV2Data = data.hdReportV2Data, onSuccess = data.onSuccess, onError = data.onError, cartId = data.cartId;
            var payAmount = items.reduce((function(a, p) {
                return a + p.price * p.quantity;
            }), 0);
            var currency = null === (_window = window) || void 0 === _window ? void 0 : _window.SL_State.get("storeInfo.currency");
            var eventId = "addToCart".concat((0, _utils_reportData_utils__WEBPACK_IMPORTED_MODULE_4__.getEventID)());
            var dataId = (null === (_window2 = window) || void 0 === _window2 ? void 0 : null === (_window2$HdSdk = _window2.HdSdk) || void 0 === _window2$HdSdk ? void 0 : null === (_window2$HdSdk$shopTr = _window2$HdSdk.shopTracker) || void 0 === _window2$HdSdk$shopTr ? void 0 : null === (_window2$HdSdk$shopTr2 = _window2$HdSdk$shopTr.getDataId) || void 0 === _window2$HdSdk$shopTr2 ? void 0 : _window2$HdSdk$shopTr2.call(_window2$HdSdk$shopTr)) || "";
            var dataReportReq = (0, _utils_reportData_utils__WEBPACK_IMPORTED_MODULE_4__.getAddtoCartReportParams)(payAmount, currency, eventId, dataId);
            (0, _service__WEBPACK_IMPORTED_MODULE_3__.fetchAddToCart)({
                items: items.map((function(v) {
                    return {
                        skuId: v.id,
                        spuId: v.spuId,
                        num: v.quantity,
                        properties: v.properties
                    };
                })),
                dataReportReq
            }).then((function(res) {
                if (res.success) {
                    var _window3, _window3$Shopline;
                    null === onSuccess || void 0 === onSuccess ? void 0 : onSuccess(res);
                    var event = null === (_window3 = window) || void 0 === _window3 ? void 0 : null === (_window3$Shopline = _window3.Shopline) || void 0 === _window3$Shopline ? void 0 : _window3$Shopline.event;
                    if (event) event.emit("Cart::NavigateCart");
                    (0, _report__WEBPACK_IMPORTED_MODULE_2__.batchAddToCartHdReport)(items, 1, cartId);
                    (0, _report__WEBPACK_IMPORTED_MODULE_2__.addToCartThirdReport)(items, eventId);
                    if (hdReportV2Data) (0, _report__WEBPACK_IMPORTED_MODULE_2__.addToCartHdReportV2)(_objectSpread(_objectSpread({
                        items
                    }, hdReportV2Data), {}, {
                        dataId,
                        eventId
                    }), 1, cartId);
                } else {
                    null === onError || void 0 === onError ? void 0 : onError(res);
                    (0, _report__WEBPACK_IMPORTED_MODULE_2__.batchAddToCartHdReport)(items, 0, cartId);
                    if (hdReportV2Data) (0, _report__WEBPACK_IMPORTED_MODULE_2__.addToCartHdReportV2)(_objectSpread(_objectSpread({
                        items
                    }, hdReportV2Data), {}, {
                        dataId,
                        eventId
                    }), 0, cartId);
                }
            })).catch((function(err) {
                null === onError || void 0 === onError ? void 0 : onError(err);
                (0, _report__WEBPACK_IMPORTED_MODULE_2__.batchAddToCartHdReport)(items, 0, cartId);
                if (hdReportV2Data) (0, _report__WEBPACK_IMPORTED_MODULE_2__.addToCartHdReportV2)(_objectSpread(_objectSpread({
                    items
                }, hdReportV2Data), {}, {
                    dataId,
                    eventId
                }), 0, cartId);
            }));
        };
        var ApiCartUpdate = function(data) {
            var _ref = data || {}, updates = _ref.updates, onSuccess = _ref.onSuccess, onError = _ref.onError;
            var itemList = updates.map((function(v) {
                return {
                    skuId: v.id,
                    spuId: v.spuId,
                    num: v.quantity,
                    properties: v.properties,
                    groupId: v.itemId
                };
            }));
            try {
                (0, _service__WEBPACK_IMPORTED_MODULE_3__.fetchUpdateCart)({
                    items: itemList
                }).then((function(res) {
                    if (null !== res && void 0 !== res && res.success) onSuccess && isFunction(onSuccess) && onSuccess(res); else onError && isFunction(onError) && onError(res);
                }));
            } catch (error) {
                onError && isFunction(onError) && onError(error);
            }
        };
        var ApiCartChange = function(data) {
            var _ref2 = data || {}, changes = _ref2.changes, onSuccess = _ref2.onSuccess, onError = _ref2.onError;
            var item = {
                skuId: changes.id,
                spuId: changes.spuId,
                num: changes.quantity,
                properties: changes.properties,
                groupId: changes.itemId
            };
            try {
                (0, _service__WEBPACK_IMPORTED_MODULE_3__.fetchChangeCart)({
                    item
                }).then((function(res) {
                    if (null !== res && void 0 !== res && res.success) onSuccess && isFunction(onSuccess) && onSuccess(res); else onError && isFunction(onError) && onError(res);
                }));
            } catch (error) {
                onError && isFunction(onError) && onError(error);
            }
        };
        var ApiCartClear = function(data) {
            var _ref3 = data || {}, onSuccess = _ref3.onSuccess, onError = _ref3.onError;
            try {
                (0, _service__WEBPACK_IMPORTED_MODULE_3__.fetchChangeClear)().then((function(res) {
                    if (null !== res && void 0 !== res && res.success) onSuccess && isFunction(onSuccess) && onSuccess(res); else onError && isFunction(onError) && onError(res);
                }));
            } catch (error) {
                onError && isFunction(onError) && onError(error);
            }
        };
        var addDataReport = function(items, eventId, dataId) {
            var _window4;
            var payAmount = items.reduce((function(a, p) {
                return a + p.price * p.quantity;
            }), 0);
            var currency = null === (_window4 = window) || void 0 === _window4 ? void 0 : _window4.SL_State.get("storeInfo.currency");
            var dataReportReq = (0, _utils_reportData_utils__WEBPACK_IMPORTED_MODULE_4__.getAddtoCartReportParams)(payAmount, currency, eventId, dataId);
            (0, _service__WEBPACK_IMPORTED_MODULE_3__.fetchDataReportAdd)({
                ids: items.map((function(v) {
                    return v.id;
                })),
                dataReportReq
            });
        };
        function isJsonParse(str) {
            try {
                JSON.parse(str);
            } catch (e) {
                return false;
            }
            return true;
        }
        var initInterceptorAjaxAddToCart = function() {
            var _window5, _window6;
            (null === (_window5 = window) || void 0 === _window5 ? void 0 : _window5.__AJAX_INTERCEPTOR__) && (null === (_window6 = window) || void 0 === _window6 ? void 0 : _window6.__AJAX_INTERCEPTOR__(function() {
                var _ref4 = (0, _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_5__["default"])(_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default().mark((function _callee(request, response) {
                    var _reqData$items, _window$HdSdk, _window$HdSdk$shopTra, _window$HdSdk$shopTra2, _data, reqData, _res, cartId, DEFAULT_PAGE, eventId, reportItems, dataId;
                    return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default().wrap((function(_context) {
                        while (1) switch (_context.prev = _context.next) {
                          case 0:
                            _context.prev = 0;
                            if (!(request.url.indexOf("/ajax-cart/add.js") > 0 && response)) {
                                _context.next = 22;
                                break;
                            }
                            _data = isJsonParse(response.response) ? JSON.parse(response.response) : {};
                            reqData = isJsonParse(request.body) ? JSON.parse(request.body) : {};
                            _context.next = 6;
                            return (0, _service__WEBPACK_IMPORTED_MODULE_3__.fetchCartId)();

                          case 6:
                            _res = _context.sent;
                            cartId = _res.data;
                            DEFAULT_PAGE = -999;
                            eventId = "addToCart".concat((0, _utils_reportData_utils__WEBPACK_IMPORTED_MODULE_4__.getEventID)());
                            reportItems = (null === (_reqData$items = reqData.items) || void 0 === _reqData$items ? void 0 : _reqData$items.map((function(v) {
                                var _data$items, _item$variant_options;
                                var item = null === (_data$items = _data.items) || void 0 === _data$items ? void 0 : _data$items.find((function(v1) {
                                    return v1.id === v.id;
                                }));
                                if (!item) return null;
                                return {
                                    id: item.id,
                                    quantity: v.quantity,
                                    spuId: item.product_id,
                                    name: item.title,
                                    productName: item.product_title,
                                    price: 100 * (item.price || 0),
                                    page: DEFAULT_PAGE,
                                    itemNo: item.sku,
                                    variant: null === (_item$variant_options = item.variant_options) || void 0 === _item$variant_options ? void 0 : _item$variant_options.join(","),
                                    properties: item.properties,
                                    url: item.url
                                };
                            })).filter(Boolean)) || [];
                            dataId = (null === (_window$HdSdk = window.HdSdk) || void 0 === _window$HdSdk ? void 0 : null === (_window$HdSdk$shopTra = _window$HdSdk.shopTracker) || void 0 === _window$HdSdk$shopTra ? void 0 : null === (_window$HdSdk$shopTra2 = _window$HdSdk$shopTra.getDataId) || void 0 === _window$HdSdk$shopTra2 ? void 0 : _window$HdSdk$shopTra2.call(_window$HdSdk$shopTra)) || "";
                            if (!(200 === (null === response || void 0 === response ? void 0 : response.status) && reportItems.length > 0 && !(null !== _data && void 0 !== _data && _data.errors))) {
                                _context.next = 20;
                                break;
                            }
                            _context.next = 15;
                            return addDataReport(reportItems, eventId, dataId);

                          case 15:
                            (0, _report__WEBPACK_IMPORTED_MODULE_2__.batchAddToCartHdReport)(reportItems, 1, cartId);
                            (0, _report__WEBPACK_IMPORTED_MODULE_2__.addToCartThirdReport)(reportItems, eventId);
                            (0, _report__WEBPACK_IMPORTED_MODULE_2__.addToCartHdReportV2)({
                                items: reportItems,
                                page: DEFAULT_PAGE,
                                module: DEFAULT_PAGE,
                                dataId,
                                eventId
                            }, 1, cartId);
                            _context.next = 22;
                            break;

                          case 20:
                            (0, _report__WEBPACK_IMPORTED_MODULE_2__.batchAddToCartHdReport)(reportItems, 0, cartId);
                            (0, _report__WEBPACK_IMPORTED_MODULE_2__.addToCartHdReportV2)({
                                items: reportItems,
                                page: DEFAULT_PAGE,
                                module: DEFAULT_PAGE,
                                dataId,
                                eventId
                            }, 0, cartId);

                          case 22:
                            _context.next = 26;
                            break;

                          case 24:
                            _context.prev = 24;
                            _context.t0 = _context["catch"](0);

                          case 26:
                          case "end":
                            return _context.stop();
                        }
                    }), _callee, null, [ [ 0, 24 ] ]);
                })));
                return function(_x, _x2) {
                    return _ref4.apply(this, arguments);
                };
            }()));
        };
        var ApiCart = {
            ApiCartAdd,
            ApiCartUpdate,
            ApiCartChange,
            ApiCartClear,
            ApiCartAddV2: _service__WEBPACK_IMPORTED_MODULE_3__.fetchAddToCartV2,
            initInterceptorAjaxAddToCart
        };
    },
    "./node_modules/@sl/cart/lib/api-cart/report.js": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
        "use strict";
        __webpack_require__.d(__webpack_exports__, {
            addToCartThirdReport: () => addToCartThirdReport,
            batchAddToCartHdReport: () => batchAddToCartHdReport,
            addToCartHdReportV2: () => addToCartHdReportV2
        });
        var _utils_currency__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/@sl/cart/lib/utils/currency/index.js");
        function unique(arr) {
            return Array.from(new Set(arr));
        }
        function addToCartThirdReport(items, eventId) {
            var _window, _window2, _items$, _window3, _window4;
            var GAItems = [];
            var GA4Items = [];
            var GARItems = [];
            var GARSkuIds = (null === (_window = window) || void 0 === _window ? void 0 : _window.SL_GetReportArg) && (null === (_window2 = window) || void 0 === _window2 ? void 0 : _window2.SL_GetReportArg("GAR", "sku_id"));
            items.forEach((function(item) {
                var id = item.itemNo || item.id;
                var variant = item.variant || "";
                GAItems.push({
                    id,
                    name: item.productName,
                    price: (0, _utils_currency__WEBPACK_IMPORTED_MODULE_0__.formatCurrency)(item.price),
                    quantity: item.quantity,
                    variant
                });
                GA4Items.push({
                    item_id: id,
                    item_name: item.productName,
                    price: (0, _utils_currency__WEBPACK_IMPORTED_MODULE_0__.formatCurrency)(item.price),
                    quantity: item.quantity,
                    item_variant: variant
                });
                GARItems.push({
                    id: GARSkuIds ? GARSkuIds("".concat(item.id)) : item.id,
                    google_business_vertical: "retail"
                });
            }));
            var total = (0, _utils_currency__WEBPACK_IMPORTED_MODULE_0__.formatCurrency)(items.reduce((function(a, p) {
                return a + p.price * p.quantity;
            }), 0));
            items.map((function(_ref) {
                var spuId = _ref.spuId;
                return spuId;
            })).join(",");
            items.map((function(_ref2) {
                var id = _ref2.id;
                return id;
            })).join(",");
            var contentName = (null === items || void 0 === items ? void 0 : null === (_items$ = items[0]) || void 0 === _items$ ? void 0 : _items$.productName) || "";
            items.reduce((function(a, p) {
                return a + p.quantity;
            }), 0);
            var SL_State = null === (_window3 = window) || void 0 === _window3 ? void 0 : _window3.SL_State;
            var SL_EventBus = null === (_window4 = window) || void 0 === _window4 ? void 0 : _window4.SL_EventBus;
            var currency = null === SL_State || void 0 === SL_State ? void 0 : SL_State.get("storeInfo.currency");
            var spuIds = (null === items || void 0 === items ? void 0 : items.map((function(v) {
                return v.spuId;
            }))) || [];
            null === SL_EventBus || void 0 === SL_EventBus ? void 0 : SL_EventBus.emit("global:thirdPartReport", {
                GA: [ [ "event", "add_to_cart", {
                    items: GAItems
                } ] ],
                GAAds: [ [ "event", "conversion", {
                    value: total,
                    currency
                }, "ADD-TO-CART" ] ],
                GAR: [ [ "event", "add_to_cart", {
                    value: total,
                    items: GARItems
                } ] ],
                GARemarketing: [ [ "event", "add_to_cart", {
                    ecomm_prodid: items.map((function(v) {
                        return GARSkuIds ? GARSkuIds(v.id) : v.id;
                    })),
                    ecomm_pagetype: "cart",
                    ecomm_totalvalue: total
                } ] ],
                GA4: [ [ "event", "add_to_cart", {
                    currency,
                    value: total,
                    items: GA4Items
                } ] ],
                FBPixel: [ [ "track", "AddToCart", {
                    content_ids: unique(spuIds),
                    content_name: contentName,
                    content_category: "",
                    content_type: "product_group",
                    currency,
                    value: total
                }, {
                    eventID: eventId
                } ] ]
            });
            items.forEach((function(item) {
                var _window5, _window5$Shopline$eve;
                var price = (0, _utils_currency__WEBPACK_IMPORTED_MODULE_0__.formatCurrency)(item.price);
                null === (_window5 = window) || void 0 === _window5 ? void 0 : null === (_window5$Shopline$eve = _window5.Shopline.event) || void 0 === _window5$Shopline$eve ? void 0 : _window5$Shopline$eve.emit("DataReport::AddToCart", {
                    data: {
                        content_spu_id: item.spuId,
                        content_sku_id: item.id,
                        content_category: "",
                        content_name: item.productName,
                        currency,
                        price,
                        value: price,
                        quantity: item.quantity
                    },
                    interior: "DataReport::AddToCart"
                });
            }));
        }
        function addToCartHdReport(option) {
            var _window6, _window6$HdSdk;
            var spuId = option.spuId, skuId = option.skuId, num = option.num, price = option.price, name = option.name, page = option.page, event_status = option.event_status, cartId = option.cartId, _option$url = option.url, url = void 0 === _option$url ? "" : _option$url;
            null === (_window6 = window) || void 0 === _window6 ? void 0 : null === (_window6$HdSdk = _window6.HdSdk) || void 0 === _window6$HdSdk ? void 0 : _window6$HdSdk.shopTracker.report("60006263", {
                page,
                event_name: "additem",
                event_category: "cart",
                product_type: "product",
                product_id: spuId,
                variantion_id: skuId,
                quantity: num,
                price: (0, _utils_currency__WEBPACK_IMPORTED_MODULE_0__.formatCurrency)(price),
                product_name: name,
                event_status,
                cart_id: cartId,
                url
            });
        }
        function batchAddToCartHdReport(items, event_status, cartId) {
            items.forEach((function(item) {
                var hdReportData = {
                    page: item.page,
                    spuId: item.spuId,
                    skuId: item.id,
                    num: item.quantity,
                    price: item.price,
                    name: item.productName,
                    event_status,
                    cartId: cartId || "",
                    url: (null === item || void 0 === item ? void 0 : item.url) || ""
                };
                addToCartHdReport(hdReportData);
            }));
        }
        function addToCartHdReportV2(option, event_status, cartId) {
            var _window7, _window7$SL_State, _HdSdk, _HdSdk$shopTracker;
            var _ref3 = option || {}, items = _ref3.items, page = _ref3.page, module = _ref3.module, appKey = _ref3.appKey, dataId = _ref3.dataId, eventId = _ref3.eventId;
            var currency = null === (_window7 = window) || void 0 === _window7 ? void 0 : null === (_window7$SL_State = _window7.SL_State) || void 0 === _window7$SL_State ? void 0 : _window7$SL_State.get("storeInfo.currency");
            null === (_HdSdk = window.HdSdk) || void 0 === _HdSdk ? void 0 : null === (_HdSdk$shopTracker = _HdSdk.shopTracker) || void 0 === _HdSdk$shopTracker ? void 0 : _HdSdk$shopTracker.collect({
                page,
                module,
                component: 101,
                addtocart_type: "addtocart",
                event_name: "AddToCart",
                currency,
                data_id: dataId,
                event_id: eventId,
                event_status,
                value: (0, _utils_currency__WEBPACK_IMPORTED_MODULE_0__.formatCurrency)(items.reduce((function(prev, data) {
                    return prev + (data.price || 0) * (data.quantity || 0);
                }), 0)),
                items: items.map((function(data) {
                    return {
                        sku_id: data.id,
                        spu_id: data.spuId,
                        variant: data.variant,
                        price: (0, _utils_currency__WEBPACK_IMPORTED_MODULE_0__.formatCurrency)(data.price),
                        quantity: "".concat(data.quantity)
                    };
                })),
                app_id: appKey,
                cart_id: cartId
            });
        }
    },
    "./node_modules/@sl/cart/lib/api-cart/service/api.js": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
        "use strict";
        __webpack_require__.d(__webpack_exports__, {
            default: () => __WEBPACK_DEFAULT_EXPORT__
        });
        const __WEBPACK_DEFAULT_EXPORT__ = {
            endpointCartAdd: "/leproxy/api/carts/cart/add",
            endpointCartUpdate: "/leproxy/api/carts/cart/update",
            endpointCartChange: "/leproxy/api/carts/cart",
            endpointCartDelete: "/leproxy/api/carts/cart/delete",
            endpointDataReportAdd: "/leproxy/api/carts/data-report/add",
            endpointCartAddV2: "/leproxy/api/carts/ajax-cart/add.js",
            endpointCartId: "/leproxy/api/carts/cart/cart-id"
        };
    },
    "./node_modules/@sl/cart/lib/api-cart/service/index.js": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
        "use strict";
        __webpack_require__.d(__webpack_exports__, {
            fetchAddToCart: () => fetchAddToCart,
            fetchUpdateCart: () => fetchUpdateCart,
            fetchChangeCart: () => fetchChangeCart,
            fetchChangeClear: () => fetchChangeClear,
            fetchDataReportAdd: () => fetchDataReportAdd,
            fetchAddToCartV2: () => fetchAddToCartV2,
            fetchCartId: () => fetchCartId
        });
        var _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js");
        var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/@babel/runtime/regenerator/index.js");
        var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default = __webpack_require__.n(_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__);
        var _utils_request__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/@sl/cart/lib/utils/request.js");
        var _api__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./node_modules/@sl/cart/lib/api-cart/service/api.js");
        var fetchAddToCart = function() {
            var _ref = (0, _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_3__["default"])(_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default().mark((function _callee(payload) {
                var items, dataReportReq;
                return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default().wrap((function(_context) {
                    while (1) switch (_context.prev = _context.next) {
                      case 0:
                        items = payload.items, dataReportReq = payload.dataReportReq;
                        return _context.abrupt("return", _utils_request__WEBPACK_IMPORTED_MODULE_1__["default"].post(_api__WEBPACK_IMPORTED_MODULE_2__["default"].endpointCartAdd, {
                            items,
                            dataReportReq
                        }));

                      case 2:
                      case "end":
                        return _context.stop();
                    }
                }), _callee);
            })));
            return function(_x) {
                return _ref.apply(this, arguments);
            };
        }();
        var fetchUpdateCart = function() {
            var _ref2 = (0, _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_3__["default"])(_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default().mark((function _callee2(payload) {
                var items;
                return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default().wrap((function(_context2) {
                    while (1) switch (_context2.prev = _context2.next) {
                      case 0:
                        items = payload.items;
                        return _context2.abrupt("return", _utils_request__WEBPACK_IMPORTED_MODULE_1__["default"].post(_api__WEBPACK_IMPORTED_MODULE_2__["default"].endpointCartUpdate, {
                            items
                        }));

                      case 2:
                      case "end":
                        return _context2.stop();
                    }
                }), _callee2);
            })));
            return function(_x2) {
                return _ref2.apply(this, arguments);
            };
        }();
        var fetchChangeCart = function() {
            var _ref3 = (0, _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_3__["default"])(_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default().mark((function _callee3(payload) {
                var item;
                return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default().wrap((function(_context3) {
                    while (1) switch (_context3.prev = _context3.next) {
                      case 0:
                        item = payload.item;
                        return _context3.abrupt("return", _utils_request__WEBPACK_IMPORTED_MODULE_1__["default"].put(_api__WEBPACK_IMPORTED_MODULE_2__["default"].endpointCartChange, item));

                      case 2:
                      case "end":
                        return _context3.stop();
                    }
                }), _callee3);
            })));
            return function(_x3) {
                return _ref3.apply(this, arguments);
            };
        }();
        var fetchChangeClear = function() {
            var _ref4 = (0, _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_3__["default"])(_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default().mark((function _callee4() {
                return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default().wrap((function(_context4) {
                    while (1) switch (_context4.prev = _context4.next) {
                      case 0:
                        return _context4.abrupt("return", _utils_request__WEBPACK_IMPORTED_MODULE_1__["default"]["delete"](_api__WEBPACK_IMPORTED_MODULE_2__["default"].endpointCartDelete));

                      case 1:
                      case "end":
                        return _context4.stop();
                    }
                }), _callee4);
            })));
            return function() {
                return _ref4.apply(this, arguments);
            };
        }();
        var fetchDataReportAdd = function() {
            var _ref5 = (0, _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_3__["default"])(_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default().mark((function _callee5(payload) {
                var ids, dataReportReq;
                return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default().wrap((function(_context5) {
                    while (1) switch (_context5.prev = _context5.next) {
                      case 0:
                        ids = payload.ids, dataReportReq = payload.dataReportReq;
                        return _context5.abrupt("return", _utils_request__WEBPACK_IMPORTED_MODULE_1__["default"].post(_api__WEBPACK_IMPORTED_MODULE_2__["default"].endpointDataReportAdd, {
                            ids,
                            dataReportReq
                        }));

                      case 2:
                      case "end":
                        return _context5.stop();
                    }
                }), _callee5);
            })));
            return function(_x4) {
                return _ref5.apply(this, arguments);
            };
        }();
        var fetchAddToCartV2 = function() {
            var _ref6 = (0, _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_3__["default"])(_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default().mark((function _callee6(payload) {
                var items;
                return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default().wrap((function(_context6) {
                    while (1) switch (_context6.prev = _context6.next) {
                      case 0:
                        items = payload.items;
                        return _context6.abrupt("return", _utils_request__WEBPACK_IMPORTED_MODULE_1__["default"].post(_api__WEBPACK_IMPORTED_MODULE_2__["default"].endpointCartAddV2, {
                            items
                        }));

                      case 2:
                      case "end":
                        return _context6.stop();
                    }
                }), _callee6);
            })));
            return function(_x5) {
                return _ref6.apply(this, arguments);
            };
        }();
        var fetchCartId = function() {
            var _ref7 = (0, _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_3__["default"])(_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default().mark((function _callee7() {
                return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default().wrap((function(_context7) {
                    while (1) switch (_context7.prev = _context7.next) {
                      case 0:
                        return _context7.abrupt("return", _utils_request__WEBPACK_IMPORTED_MODULE_1__["default"].get(_api__WEBPACK_IMPORTED_MODULE_2__["default"].endpointCartId));

                      case 1:
                      case "end":
                        return _context7.stop();
                    }
                }), _callee7);
            })));
            return function() {
                return _ref7.apply(this, arguments);
            };
        }();
    },
    "./node_modules/@sl/cart/lib/config/reductionCode/service.js": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
        "use strict";
        __webpack_require__.d(__webpack_exports__, {
            servicesList: () => servicesList
        });
        var servicesList = {
            SL_CART: {
                endpointPromotionCode: "/api/carts/cart/open/use/promotion-code",
                endpointPromotionCodeDel: "/api/carts/cart/open/unused/promotion-code"
            },
            ONLINE_CART: {
                endpointPromotionCode: "/leproxy/api/carts/cart/use/promotion-code",
                endpointPromotionCodeDel: "/leproxy/api/carts/cart/remove_promotion_code"
            }
        };
    },
    "./node_modules/@sl/cart/lib/utils/currency/currencyConvert.js": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
        "use strict";
        __webpack_require__.d(__webpack_exports__, {
            convertFormat: () => convertFormat
        });
        var _index__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/@sl/cart/lib/utils/currency/index.js");
        __webpack_require__("./node_modules/@sl/cart/lib/utils/store.js");
        var convertCalc = function(value) {
            var _rates$to, _rates$from;
            var from = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : _index__WEBPACK_IMPORTED_MODULE_0__.defaultCurrency;
            var to = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : _index__WEBPACK_IMPORTED_MODULE_0__.defaultCurrency;
            var ratesData = arguments.length > 3 ? arguments[3] : void 0;
            var rates = ratesData || _index__WEBPACK_IMPORTED_MODULE_0__.getCurrencyRates();
            if (from === to) return value;
            return value * (null !== (_rates$to = null === rates || void 0 === rates ? void 0 : rates[to]) && void 0 !== _rates$to ? _rates$to : 1) / (null !== (_rates$from = null === rates || void 0 === rates ? void 0 : rates[from]) && void 0 !== _rates$from ? _rates$from : 1);
        };
        var convertFormat = function(value, options) {
            var from = options.from, to = options.to, lang = options.lang, rates = options.currencyRates;
            var rateData = rates || _index__WEBPACK_IMPORTED_MODULE_0__.getCurrencyRates();
            var rst = convertCalc(value, from, to, rateData);
            return _index__WEBPACK_IMPORTED_MODULE_0__.format(rst, {
                code: to,
                lang
            });
        };
    },
    "./node_modules/@sl/cart/lib/utils/currency/hardCodeConfig.js": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
        "use strict";
        __webpack_require__.d(__webpack_exports__, {
            HARD_CODE_CONFIG: () => HARD_CODE_CONFIG,
            SYMBOL_HARD_CODE_CONFIG: () => SYMBOL_HARD_CODE_CONFIG,
            CURRENCY_DISPLAY_HARDCODE: () => CURRENCY_DISPLAY_HARDCODE
        });
        var HARD_CODE_CONFIG = [ {
            code: "TWD",
            digit: 0
        }, {
            code: "HUF",
            digit: 0
        }, {
            code: "RUB",
            digit: 0
        }, {
            code: "CVE",
            digit: 0
        }, {
            code: "AFN",
            digit: 2
        }, {
            code: "ALL",
            digit: 2
        }, {
            code: "IRR",
            digit: 2
        }, {
            code: "KPW",
            digit: 2
        }, {
            code: "LAK",
            digit: 2
        }, {
            code: "LBP",
            digit: 2
        }, {
            code: "MMK",
            digit: 2
        }, {
            code: "RSD",
            digit: 2
        }, {
            code: "SLL",
            digit: 2
        }, {
            code: "SOS",
            digit: 2
        }, {
            code: "SYP",
            digit: 2
        }, {
            code: "UYU",
            digit: 2
        }, {
            code: "YER",
            digit: 2
        }, {
            code: "KWD",
            digit: 2
        }, {
            code: "OMR",
            digit: 2
        }, {
            code: "BHD",
            digit: 2
        }, {
            code: "IDR",
            digit: 0
        } ];
        var SYMBOL_HARD_CODE_CONFIG = {
            AUD: {
                en: "zh-hans-cn"
            },
            TWD: {
                "zh-hant-tw": "zh-hant-hk"
            },
            MXN: {
                es: "en"
            },
            CLP: {
                es: "es-CL"
            }
        };
        var CURRENCY_DISPLAY_HARDCODE = {
            PHP: {
                currencyDisplay: "code"
            }
        };
    },
    "./node_modules/@sl/cart/lib/utils/currency/index.js": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
        "use strict";
        __webpack_require__.d(__webpack_exports__, {
            defaultCurrency: () => defaultCurrency,
            getCurrencyRates: () => getCurrencyRates,
            format: () => format,
            formatCurrency: () => formatCurrency,
            convertFormat: () => _currencyConvert__WEBPACK_IMPORTED_MODULE_2__.convertFormat
        });
        var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/@babel/runtime/helpers/esm/defineProperty.js");
        __webpack_require__("./node_modules/lodash/lodash.js");
        var _currencyConvert__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./node_modules/@sl/cart/lib/utils/currency/currencyConvert.js");
        var _hardCodeConfig__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("./node_modules/@sl/cart/lib/utils/currency/hardCodeConfig.js");
        function ownKeys(object, enumerableOnly) {
            var keys = Object.keys(object);
            if (Object.getOwnPropertySymbols) {
                var symbols = Object.getOwnPropertySymbols(object);
                enumerableOnly && (symbols = symbols.filter((function(sym) {
                    return Object.getOwnPropertyDescriptor(object, sym).enumerable;
                }))), keys.push.apply(keys, symbols);
            }
            return keys;
        }
        function _objectSpread(target) {
            for (var i = 1; i < arguments.length; i++) {
                var source = null != arguments[i] ? arguments[i] : {};
                i % 2 ? ownKeys(Object(source), !0).forEach((function(key) {
                    (0, _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__["default"])(target, key, source[key]);
                })) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach((function(key) {
                    Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
                }));
            }
            return target;
        }
        var storeCurrency;
        var storeLang;
        var currencyRates;
        var defaultCurrency = "CNY";
        var defaultCurrencyDigit = 2;
        var defaultLang = "zh-hans-cn";
        var digitsMap = new Map;
        var formatUtilMap = new Map;
        new Map;
        var hardCodeConfigs = _hardCodeConfig__WEBPACK_IMPORTED_MODULE_3__.HARD_CODE_CONFIG;
        var hardcodeDigit = function(code) {
            var _hardcoreConfig$digit, _hardcoreConfig$digit2;
            var hardcoreConfig = hardCodeConfigs.find((function(config) {
                return config.code === code;
            }));
            return {
                minimumFractionDigits: null !== (_hardcoreConfig$digit = null === hardcoreConfig || void 0 === hardcoreConfig ? void 0 : hardcoreConfig.digit) && void 0 !== _hardcoreConfig$digit ? _hardcoreConfig$digit : void 0,
                maximumFractionDigits: null !== (_hardcoreConfig$digit2 = null === hardcoreConfig || void 0 === hardcoreConfig ? void 0 : hardcoreConfig.digit) && void 0 !== _hardcoreConfig$digit2 ? _hardcoreConfig$digit2 : void 0
            };
        };
        var hardCodeCurrencyDisplay = function(code) {
            var _CURRENCY_DISPLAY_HAR;
            return null !== (_CURRENCY_DISPLAY_HAR = _hardCodeConfig__WEBPACK_IMPORTED_MODULE_3__.CURRENCY_DISPLAY_HARDCODE[code]) && void 0 !== _CURRENCY_DISPLAY_HAR ? _CURRENCY_DISPLAY_HAR : {};
        };
        var hardCodeSymbol = function(code, lang) {
            var _SYMBOL_HARD_CODE_CON, _SYMBOL_HARD_CODE_CON2;
            return null !== (_SYMBOL_HARD_CODE_CON = null === (_SYMBOL_HARD_CODE_CON2 = _hardCodeConfig__WEBPACK_IMPORTED_MODULE_3__.SYMBOL_HARD_CODE_CONFIG[code]) || void 0 === _SYMBOL_HARD_CODE_CON2 ? void 0 : _SYMBOL_HARD_CODE_CON2[lang]) && void 0 !== _SYMBOL_HARD_CODE_CON ? _SYMBOL_HARD_CODE_CON : lang;
        };
        var getCurrencyRates = function() {
            return currencyRates;
        };
        var formatGenerator = function(code, lang) {
            var realLang = hardCodeSymbol(code, lang);
            return new Intl.NumberFormat(realLang, _objectSpread(_objectSpread({
                style: "currency",
                currency: code
            }, hardCodeCurrencyDisplay(code)), hardcodeDigit(code)));
        };
        var cacheKeyGenerator = function(_ref) {
            var code = _ref.code, lang = _ref.lang;
            var countryCode = null === code || void 0 === code ? void 0 : code.toUpperCase();
            var language = null === lang || void 0 === lang ? void 0 : lang.toUpperCase();
            if (countryCode && language) return "".concat(countryCode, "-").concat(language);
            if (countryCode) return countryCode;
            if (language) return language;
            return "";
        };
        var format = function(value, options) {
            var code = (null === options || void 0 === options ? void 0 : options.code) || storeCurrency || defaultCurrency;
            var lang = (null === options || void 0 === options ? void 0 : options.lang) || storeLang || defaultLang;
            var digits = (null === options || void 0 === options ? void 0 : options.digits) || Math.pow(10, defaultCurrencyDigit);
            var f;
            if (formatUtilMap.get(cacheKeyGenerator({
                code,
                lang
            }))) f = formatUtilMap.get(cacheKeyGenerator({
                code,
                lang
            })); else {
                f = formatGenerator(code, lang);
                formatUtilMap.set(cacheKeyGenerator({
                    code,
                    lang
                }), f);
                digitsMap.set(code, f.resolvedOptions().maximumFractionDigits);
            }
            return f.format(value / digits);
        };
        var formatNumber = function(value) {
            var decimalDigits = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : defaultCurrencyDigit;
            var v = "number" !== typeof value ? Number(value) : value;
            return v / Math.pow(10, decimalDigits);
        };
        var formatCurrency = function(value) {
            return formatNumber(value, defaultCurrencyDigit);
        };
    },
    "./node_modules/@sl/cart/lib/utils/parsePathToArray.js": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
        "use strict";
        __webpack_require__.d(__webpack_exports__, {
            default: () => __WEBPACK_DEFAULT_EXPORT__
        });
        function parsePathToArray(path) {
            if ("string" !== typeof path) throw new TypeError("path must be string");
            return path.replace(/\]/, "").split(/[.[]/);
        }
        const __WEBPACK_DEFAULT_EXPORT__ = parsePathToArray;
    },
    "./node_modules/@sl/cart/lib/utils/reportData/utils.js": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
        "use strict";
        __webpack_require__.d(__webpack_exports__, {
            getEventID: () => getEventID,
            getAddtoCartReportParams: () => getAddtoCartReportParams
        });
        var uuid__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/uuid/dist/esm-browser/v4.js");
        var getEventID = function() {
            return "".concat(Date.now(), "_").concat((0, uuid__WEBPACK_IMPORTED_MODULE_0__["default"])().replace(/-/g, ""));
        };
        var getAddtoCartReportParams = function(payAmount, currency, eventID, dataId) {
            var params = {
                dataId,
                payAmount,
                currency,
                eventId: eventID || "addToCart".concat(getEventID()),
                eventTime: Date.now(),
                eventName: "AddToCart"
            };
            return params;
        };
    },
    "./node_modules/@sl/cart/lib/utils/request.js": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
        "use strict";
        __webpack_require__.d(__webpack_exports__, {
            default: () => __WEBPACK_DEFAULT_EXPORT__
        });
        var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/@babel/runtime/helpers/esm/defineProperty.js");
        var axios__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/@sl/cart/node_modules/axios/index.js");
        var axios__WEBPACK_IMPORTED_MODULE_1___default = __webpack_require__.n(axios__WEBPACK_IMPORTED_MODULE_1__);
        var query_string__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./node_modules/query-string/index.js");
        function ownKeys(object, enumerableOnly) {
            var keys = Object.keys(object);
            if (Object.getOwnPropertySymbols) {
                var symbols = Object.getOwnPropertySymbols(object);
                enumerableOnly && (symbols = symbols.filter((function(sym) {
                    return Object.getOwnPropertyDescriptor(object, sym).enumerable;
                }))), keys.push.apply(keys, symbols);
            }
            return keys;
        }
        function _objectSpread(target) {
            for (var i = 1; i < arguments.length; i++) {
                var source = null != arguments[i] ? arguments[i] : {};
                i % 2 ? ownKeys(Object(source), !0).forEach((function(key) {
                    (0, _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__["default"])(target, key, source[key]);
                })) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach((function(key) {
                    Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
                }));
            }
            return target;
        }
        var instance = axios__WEBPACK_IMPORTED_MODULE_1___default().create({
            baseURL: "/",
            timeout: 3e4,
            withCredentials: true,
            paramsSerializer: function(params) {
                return query_string__WEBPACK_IMPORTED_MODULE_2__.stringify(params);
            }
        });
        instance.interceptors.response.use((function(res) {
            var status = res.status, data = res.data, config = res.config;
            if ("/leproxy" === config.baseURL) {
                if (200 !== status || "0" !== data.rescode) return Promise.reject(_objectSpread({
                    message: data.resmsg
                }, data));
            } else if (200 !== status || !(data.success || "SUCCESS" === data.code)) return Promise.reject(data);
            return data;
        }), (function(error) {
            return Promise.reject(error);
        }));
        const __WEBPACK_DEFAULT_EXPORT__ = instance;
    },
    "./node_modules/@sl/cart/lib/utils/store.js": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
        "use strict";
        __webpack_require__.d(__webpack_exports__, {
            default: () => __WEBPACK_DEFAULT_EXPORT__
        });
        var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/@babel/runtime/helpers/esm/defineProperty.js");
        var _parsePathToArray__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./node_modules/@sl/cart/lib/utils/parsePathToArray.js");
        var eventemitter3__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/eventemitter3/index.js");
        var eventemitter3__WEBPACK_IMPORTED_MODULE_1___default = __webpack_require__.n(eventemitter3__WEBPACK_IMPORTED_MODULE_1__);
        function ownKeys(object, enumerableOnly) {
            var keys = Object.keys(object);
            if (Object.getOwnPropertySymbols) {
                var symbols = Object.getOwnPropertySymbols(object);
                enumerableOnly && (symbols = symbols.filter((function(sym) {
                    return Object.getOwnPropertyDescriptor(object, sym).enumerable;
                }))), keys.push.apply(keys, symbols);
            }
            return keys;
        }
        function _objectSpread(target) {
            for (var i = 1; i < arguments.length; i++) {
                var source = null != arguments[i] ? arguments[i] : {};
                i % 2 ? ownKeys(Object(source), !0).forEach((function(key) {
                    (0, _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__["default"])(target, key, source[key]);
                })) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach((function(key) {
                    Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
                }));
            }
            return target;
        }
        var SL_EventEmitter = eventemitter3__WEBPACK_IMPORTED_MODULE_1___default();
        var StoreEvent;
        (function(StoreEvent) {
            StoreEvent["ADD"] = "add";
            StoreEvent["SET"] = "set";
            StoreEvent["REMOVE"] = "remove";
        })(StoreEvent || (StoreEvent = {}));
        var SL_EE = SL_EventEmitter;
        var store = {};
        var emitter = new SL_EE;
        emitter.on(StoreEvent.ADD, (function(ctx) {
            store = _objectSpread(_objectSpread({}, store), ctx);
        }));
        emitter.on(StoreEvent.SET, (function(ctx) {
            store = ctx;
        }));
        emitter.on(StoreEvent.REMOVE, (function(storeName) {
            delete store[storeName];
        }));
        _objectSpread({}, store);
        var get = function(path) {
            if (!path) return store;
            var keys = (0, _parsePathToArray__WEBPACK_IMPORTED_MODULE_2__["default"])(path);
            var value = keys.reduce((function(prev, current) {
                if (!prev) return;
                return prev[current];
            }), store);
            return value || null;
        };
        var add = function(ctx) {
            return emitter.emit(StoreEvent.ADD, ctx);
        };
        var set = function(ctx) {
            return emitter.emit(StoreEvent.SET, ctx);
        };
        var remove = function(ctx) {
            return emitter.emit(StoreEvent.REMOVE, ctx);
        };
        const __WEBPACK_DEFAULT_EXPORT__ = {
            get,
            add,
            set,
            remove
        };
    },
    "./node_modules/@sl/cart/node_modules/axios/index.js": (module, __unused_webpack_exports, __webpack_require__) => {
        module.exports = __webpack_require__("./node_modules/@sl/cart/node_modules/axios/lib/axios.js");
    },
    "./node_modules/@sl/cart/node_modules/axios/lib/adapters/xhr.js": (module, __unused_webpack_exports, __webpack_require__) => {
        "use strict";
        var utils = __webpack_require__("./node_modules/@sl/cart/node_modules/axios/lib/utils.js");
        var settle = __webpack_require__("./node_modules/@sl/cart/node_modules/axios/lib/core/settle.js");
        var cookies = __webpack_require__("./node_modules/@sl/cart/node_modules/axios/lib/helpers/cookies.js");
        var buildURL = __webpack_require__("./node_modules/@sl/cart/node_modules/axios/lib/helpers/buildURL.js");
        var buildFullPath = __webpack_require__("./node_modules/@sl/cart/node_modules/axios/lib/core/buildFullPath.js");
        var parseHeaders = __webpack_require__("./node_modules/@sl/cart/node_modules/axios/lib/helpers/parseHeaders.js");
        var isURLSameOrigin = __webpack_require__("./node_modules/@sl/cart/node_modules/axios/lib/helpers/isURLSameOrigin.js");
        var createError = __webpack_require__("./node_modules/@sl/cart/node_modules/axios/lib/core/createError.js");
        var transitionalDefaults = __webpack_require__("./node_modules/@sl/cart/node_modules/axios/lib/defaults/transitional.js");
        var Cancel = __webpack_require__("./node_modules/@sl/cart/node_modules/axios/lib/cancel/Cancel.js");
        module.exports = function(config) {
            return new Promise((function(resolve, reject) {
                var requestData = config.data;
                var requestHeaders = config.headers;
                var responseType = config.responseType;
                var onCanceled;
                function done() {
                    if (config.cancelToken) config.cancelToken.unsubscribe(onCanceled);
                    if (config.signal) config.signal.removeEventListener("abort", onCanceled);
                }
                if (utils.isFormData(requestData)) delete requestHeaders["Content-Type"];
                var request = new XMLHttpRequest;
                if (config.auth) {
                    var username = config.auth.username || "";
                    var password = config.auth.password ? unescape(encodeURIComponent(config.auth.password)) : "";
                    requestHeaders.Authorization = "Basic " + btoa(username + ":" + password);
                }
                var fullPath = buildFullPath(config.baseURL, config.url);
                request.open(config.method.toUpperCase(), buildURL(fullPath, config.params, config.paramsSerializer), true);
                request.timeout = config.timeout;
                function onloadend() {
                    if (!request) return;
                    var responseHeaders = "getAllResponseHeaders" in request ? parseHeaders(request.getAllResponseHeaders()) : null;
                    var responseData = !responseType || "text" === responseType || "json" === responseType ? request.responseText : request.response;
                    var response = {
                        data: responseData,
                        status: request.status,
                        statusText: request.statusText,
                        headers: responseHeaders,
                        config,
                        request
                    };
                    settle((function(value) {
                        resolve(value);
                        done();
                    }), (function(err) {
                        reject(err);
                        done();
                    }), response);
                    request = null;
                }
                if ("onloadend" in request) request.onloadend = onloadend; else request.onreadystatechange = function() {
                    if (!request || 4 !== request.readyState) return;
                    if (0 === request.status && !(request.responseURL && 0 === request.responseURL.indexOf("file:"))) return;
                    setTimeout(onloadend);
                };
                request.onabort = function() {
                    if (!request) return;
                    reject(createError("Request aborted", config, "ECONNABORTED", request));
                    request = null;
                };
                request.onerror = function() {
                    reject(createError("Network Error", config, null, request));
                    request = null;
                };
                request.ontimeout = function() {
                    var timeoutErrorMessage = config.timeout ? "timeout of " + config.timeout + "ms exceeded" : "timeout exceeded";
                    var transitional = config.transitional || transitionalDefaults;
                    if (config.timeoutErrorMessage) timeoutErrorMessage = config.timeoutErrorMessage;
                    reject(createError(timeoutErrorMessage, config, transitional.clarifyTimeoutError ? "ETIMEDOUT" : "ECONNABORTED", request));
                    request = null;
                };
                if (utils.isStandardBrowserEnv()) {
                    var xsrfValue = (config.withCredentials || isURLSameOrigin(fullPath)) && config.xsrfCookieName ? cookies.read(config.xsrfCookieName) : void 0;
                    if (xsrfValue) requestHeaders[config.xsrfHeaderName] = xsrfValue;
                }
                if ("setRequestHeader" in request) utils.forEach(requestHeaders, (function(val, key) {
                    if ("undefined" === typeof requestData && "content-type" === key.toLowerCase()) delete requestHeaders[key]; else request.setRequestHeader(key, val);
                }));
                if (!utils.isUndefined(config.withCredentials)) request.withCredentials = !!config.withCredentials;
                if (responseType && "json" !== responseType) request.responseType = config.responseType;
                if ("function" === typeof config.onDownloadProgress) request.addEventListener("progress", config.onDownloadProgress);
                if ("function" === typeof config.onUploadProgress && request.upload) request.upload.addEventListener("progress", config.onUploadProgress);
                if (config.cancelToken || config.signal) {
                    onCanceled = function(cancel) {
                        if (!request) return;
                        reject(!cancel || cancel && cancel.type ? new Cancel("canceled") : cancel);
                        request.abort();
                        request = null;
                    };
                    config.cancelToken && config.cancelToken.subscribe(onCanceled);
                    if (config.signal) config.signal.aborted ? onCanceled() : config.signal.addEventListener("abort", onCanceled);
                }
                if (!requestData) requestData = null;
                request.send(requestData);
            }));
        };
    },
    "./node_modules/@sl/cart/node_modules/axios/lib/axios.js": (module, __unused_webpack_exports, __webpack_require__) => {
        "use strict";
        var utils = __webpack_require__("./node_modules/@sl/cart/node_modules/axios/lib/utils.js");
        var bind = __webpack_require__("./node_modules/@sl/cart/node_modules/axios/lib/helpers/bind.js");
        var Axios = __webpack_require__("./node_modules/@sl/cart/node_modules/axios/lib/core/Axios.js");
        var mergeConfig = __webpack_require__("./node_modules/@sl/cart/node_modules/axios/lib/core/mergeConfig.js");
        var defaults = __webpack_require__("./node_modules/@sl/cart/node_modules/axios/lib/defaults/index.js");
        function createInstance(defaultConfig) {
            var context = new Axios(defaultConfig);
            var instance = bind(Axios.prototype.request, context);
            utils.extend(instance, Axios.prototype, context);
            utils.extend(instance, context);
            instance.create = function(instanceConfig) {
                return createInstance(mergeConfig(defaultConfig, instanceConfig));
            };
            return instance;
        }
        var axios = createInstance(defaults);
        axios.Axios = Axios;
        axios.Cancel = __webpack_require__("./node_modules/@sl/cart/node_modules/axios/lib/cancel/Cancel.js");
        axios.CancelToken = __webpack_require__("./node_modules/@sl/cart/node_modules/axios/lib/cancel/CancelToken.js");
        axios.isCancel = __webpack_require__("./node_modules/@sl/cart/node_modules/axios/lib/cancel/isCancel.js");
        axios.VERSION = __webpack_require__("./node_modules/@sl/cart/node_modules/axios/lib/env/data.js").version;
        axios.all = function(promises) {
            return Promise.all(promises);
        };
        axios.spread = __webpack_require__("./node_modules/@sl/cart/node_modules/axios/lib/helpers/spread.js");
        axios.isAxiosError = __webpack_require__("./node_modules/@sl/cart/node_modules/axios/lib/helpers/isAxiosError.js");
        module.exports = axios;
        module.exports["default"] = axios;
    },
    "./node_modules/@sl/cart/node_modules/axios/lib/cancel/Cancel.js": module => {
        "use strict";
        function Cancel(message) {
            this.message = message;
        }
        Cancel.prototype.toString = function() {
            return "Cancel" + (this.message ? ": " + this.message : "");
        };
        Cancel.prototype.__CANCEL__ = true;
        module.exports = Cancel;
    },
    "./node_modules/@sl/cart/node_modules/axios/lib/cancel/CancelToken.js": (module, __unused_webpack_exports, __webpack_require__) => {
        "use strict";
        var Cancel = __webpack_require__("./node_modules/@sl/cart/node_modules/axios/lib/cancel/Cancel.js");
        function CancelToken(executor) {
            if ("function" !== typeof executor) throw new TypeError("executor must be a function.");
            var resolvePromise;
            this.promise = new Promise((function(resolve) {
                resolvePromise = resolve;
            }));
            var token = this;
            this.promise.then((function(cancel) {
                if (!token._listeners) return;
                var i;
                var l = token._listeners.length;
                for (i = 0; i < l; i++) token._listeners[i](cancel);
                token._listeners = null;
            }));
            this.promise.then = function(onfulfilled) {
                var _resolve;
                var promise = new Promise((function(resolve) {
                    token.subscribe(resolve);
                    _resolve = resolve;
                })).then(onfulfilled);
                promise.cancel = function() {
                    token.unsubscribe(_resolve);
                };
                return promise;
            };
            executor((function(message) {
                if (token.reason) return;
                token.reason = new Cancel(message);
                resolvePromise(token.reason);
            }));
        }
        CancelToken.prototype.throwIfRequested = function() {
            if (this.reason) throw this.reason;
        };
        CancelToken.prototype.subscribe = function(listener) {
            if (this.reason) {
                listener(this.reason);
                return;
            }
            if (this._listeners) this._listeners.push(listener); else this._listeners = [ listener ];
        };
        CancelToken.prototype.unsubscribe = function(listener) {
            if (!this._listeners) return;
            var index = this._listeners.indexOf(listener);
            if (-1 !== index) this._listeners.splice(index, 1);
        };
        CancelToken.source = function() {
            var cancel;
            var token = new CancelToken((function(c) {
                cancel = c;
            }));
            return {
                token,
                cancel
            };
        };
        module.exports = CancelToken;
    },
    "./node_modules/@sl/cart/node_modules/axios/lib/cancel/isCancel.js": module => {
        "use strict";
        module.exports = function(value) {
            return !!(value && value.__CANCEL__);
        };
    },
    "./node_modules/@sl/cart/node_modules/axios/lib/core/Axios.js": (module, __unused_webpack_exports, __webpack_require__) => {
        "use strict";
        var utils = __webpack_require__("./node_modules/@sl/cart/node_modules/axios/lib/utils.js");
        var buildURL = __webpack_require__("./node_modules/@sl/cart/node_modules/axios/lib/helpers/buildURL.js");
        var InterceptorManager = __webpack_require__("./node_modules/@sl/cart/node_modules/axios/lib/core/InterceptorManager.js");
        var dispatchRequest = __webpack_require__("./node_modules/@sl/cart/node_modules/axios/lib/core/dispatchRequest.js");
        var mergeConfig = __webpack_require__("./node_modules/@sl/cart/node_modules/axios/lib/core/mergeConfig.js");
        var validator = __webpack_require__("./node_modules/@sl/cart/node_modules/axios/lib/helpers/validator.js");
        var validators = validator.validators;
        function Axios(instanceConfig) {
            this.defaults = instanceConfig;
            this.interceptors = {
                request: new InterceptorManager,
                response: new InterceptorManager
            };
        }
        Axios.prototype.request = function(configOrUrl, config) {
            if ("string" === typeof configOrUrl) {
                config = config || {};
                config.url = configOrUrl;
            } else config = configOrUrl || {};
            config = mergeConfig(this.defaults, config);
            if (config.method) config.method = config.method.toLowerCase(); else if (this.defaults.method) config.method = this.defaults.method.toLowerCase(); else config.method = "get";
            var transitional = config.transitional;
            if (void 0 !== transitional) validator.assertOptions(transitional, {
                silentJSONParsing: validators.transitional(validators.boolean),
                forcedJSONParsing: validators.transitional(validators.boolean),
                clarifyTimeoutError: validators.transitional(validators.boolean)
            }, false);
            var requestInterceptorChain = [];
            var synchronousRequestInterceptors = true;
            this.interceptors.request.forEach((function(interceptor) {
                if ("function" === typeof interceptor.runWhen && false === interceptor.runWhen(config)) return;
                synchronousRequestInterceptors = synchronousRequestInterceptors && interceptor.synchronous;
                requestInterceptorChain.unshift(interceptor.fulfilled, interceptor.rejected);
            }));
            var responseInterceptorChain = [];
            this.interceptors.response.forEach((function(interceptor) {
                responseInterceptorChain.push(interceptor.fulfilled, interceptor.rejected);
            }));
            var promise;
            if (!synchronousRequestInterceptors) {
                var chain = [ dispatchRequest, void 0 ];
                Array.prototype.unshift.apply(chain, requestInterceptorChain);
                chain = chain.concat(responseInterceptorChain);
                promise = Promise.resolve(config);
                while (chain.length) promise = promise.then(chain.shift(), chain.shift());
                return promise;
            }
            var newConfig = config;
            while (requestInterceptorChain.length) {
                var onFulfilled = requestInterceptorChain.shift();
                var onRejected = requestInterceptorChain.shift();
                try {
                    newConfig = onFulfilled(newConfig);
                } catch (error) {
                    onRejected(error);
                    break;
                }
            }
            try {
                promise = dispatchRequest(newConfig);
            } catch (error) {
                return Promise.reject(error);
            }
            while (responseInterceptorChain.length) promise = promise.then(responseInterceptorChain.shift(), responseInterceptorChain.shift());
            return promise;
        };
        Axios.prototype.getUri = function(config) {
            config = mergeConfig(this.defaults, config);
            return buildURL(config.url, config.params, config.paramsSerializer).replace(/^\?/, "");
        };
        utils.forEach([ "delete", "get", "head", "options" ], (function(method) {
            Axios.prototype[method] = function(url, config) {
                return this.request(mergeConfig(config || {}, {
                    method,
                    url,
                    data: (config || {}).data
                }));
            };
        }));
        utils.forEach([ "post", "put", "patch" ], (function(method) {
            Axios.prototype[method] = function(url, data, config) {
                return this.request(mergeConfig(config || {}, {
                    method,
                    url,
                    data
                }));
            };
        }));
        module.exports = Axios;
    },
    "./node_modules/@sl/cart/node_modules/axios/lib/core/InterceptorManager.js": (module, __unused_webpack_exports, __webpack_require__) => {
        "use strict";
        var utils = __webpack_require__("./node_modules/@sl/cart/node_modules/axios/lib/utils.js");
        function InterceptorManager() {
            this.handlers = [];
        }
        InterceptorManager.prototype.use = function(fulfilled, rejected, options) {
            this.handlers.push({
                fulfilled,
                rejected,
                synchronous: options ? options.synchronous : false,
                runWhen: options ? options.runWhen : null
            });
            return this.handlers.length - 1;
        };
        InterceptorManager.prototype.eject = function(id) {
            if (this.handlers[id]) this.handlers[id] = null;
        };
        InterceptorManager.prototype.forEach = function(fn) {
            utils.forEach(this.handlers, (function(h) {
                if (null !== h) fn(h);
            }));
        };
        module.exports = InterceptorManager;
    },
    "./node_modules/@sl/cart/node_modules/axios/lib/core/buildFullPath.js": (module, __unused_webpack_exports, __webpack_require__) => {
        "use strict";
        var isAbsoluteURL = __webpack_require__("./node_modules/@sl/cart/node_modules/axios/lib/helpers/isAbsoluteURL.js");
        var combineURLs = __webpack_require__("./node_modules/@sl/cart/node_modules/axios/lib/helpers/combineURLs.js");
        module.exports = function(baseURL, requestedURL) {
            if (baseURL && !isAbsoluteURL(requestedURL)) return combineURLs(baseURL, requestedURL);
            return requestedURL;
        };
    },
    "./node_modules/@sl/cart/node_modules/axios/lib/core/createError.js": (module, __unused_webpack_exports, __webpack_require__) => {
        "use strict";
        var enhanceError = __webpack_require__("./node_modules/@sl/cart/node_modules/axios/lib/core/enhanceError.js");
        module.exports = function(message, config, code, request, response) {
            var error = new Error(message);
            return enhanceError(error, config, code, request, response);
        };
    },
    "./node_modules/@sl/cart/node_modules/axios/lib/core/dispatchRequest.js": (module, __unused_webpack_exports, __webpack_require__) => {
        "use strict";
        var utils = __webpack_require__("./node_modules/@sl/cart/node_modules/axios/lib/utils.js");
        var transformData = __webpack_require__("./node_modules/@sl/cart/node_modules/axios/lib/core/transformData.js");
        var isCancel = __webpack_require__("./node_modules/@sl/cart/node_modules/axios/lib/cancel/isCancel.js");
        var defaults = __webpack_require__("./node_modules/@sl/cart/node_modules/axios/lib/defaults/index.js");
        var Cancel = __webpack_require__("./node_modules/@sl/cart/node_modules/axios/lib/cancel/Cancel.js");
        function throwIfCancellationRequested(config) {
            if (config.cancelToken) config.cancelToken.throwIfRequested();
            if (config.signal && config.signal.aborted) throw new Cancel("canceled");
        }
        module.exports = function(config) {
            throwIfCancellationRequested(config);
            config.headers = config.headers || {};
            config.data = transformData.call(config, config.data, config.headers, config.transformRequest);
            config.headers = utils.merge(config.headers.common || {}, config.headers[config.method] || {}, config.headers);
            utils.forEach([ "delete", "get", "head", "post", "put", "patch", "common" ], (function(method) {
                delete config.headers[method];
            }));
            var adapter = config.adapter || defaults.adapter;
            return adapter(config).then((function(response) {
                throwIfCancellationRequested(config);
                response.data = transformData.call(config, response.data, response.headers, config.transformResponse);
                return response;
            }), (function(reason) {
                if (!isCancel(reason)) {
                    throwIfCancellationRequested(config);
                    if (reason && reason.response) reason.response.data = transformData.call(config, reason.response.data, reason.response.headers, config.transformResponse);
                }
                return Promise.reject(reason);
            }));
        };
    },
    "./node_modules/@sl/cart/node_modules/axios/lib/core/enhanceError.js": module => {
        "use strict";
        module.exports = function(error, config, code, request, response) {
            error.config = config;
            if (code) error.code = code;
            error.request = request;
            error.response = response;
            error.isAxiosError = true;
            error.toJSON = function() {
                return {
                    message: this.message,
                    name: this.name,
                    description: this.description,
                    number: this.number,
                    fileName: this.fileName,
                    lineNumber: this.lineNumber,
                    columnNumber: this.columnNumber,
                    stack: this.stack,
                    config: this.config,
                    code: this.code,
                    status: this.response && this.response.status ? this.response.status : null
                };
            };
            return error;
        };
    },
    "./node_modules/@sl/cart/node_modules/axios/lib/core/mergeConfig.js": (module, __unused_webpack_exports, __webpack_require__) => {
        "use strict";
        var utils = __webpack_require__("./node_modules/@sl/cart/node_modules/axios/lib/utils.js");
        module.exports = function(config1, config2) {
            config2 = config2 || {};
            var config = {};
            function getMergedValue(target, source) {
                if (utils.isPlainObject(target) && utils.isPlainObject(source)) return utils.merge(target, source); else if (utils.isPlainObject(source)) return utils.merge({}, source); else if (utils.isArray(source)) return source.slice();
                return source;
            }
            function mergeDeepProperties(prop) {
                if (!utils.isUndefined(config2[prop])) return getMergedValue(config1[prop], config2[prop]); else if (!utils.isUndefined(config1[prop])) return getMergedValue(void 0, config1[prop]);
            }
            function valueFromConfig2(prop) {
                if (!utils.isUndefined(config2[prop])) return getMergedValue(void 0, config2[prop]);
            }
            function defaultToConfig2(prop) {
                if (!utils.isUndefined(config2[prop])) return getMergedValue(void 0, config2[prop]); else if (!utils.isUndefined(config1[prop])) return getMergedValue(void 0, config1[prop]);
            }
            function mergeDirectKeys(prop) {
                if (prop in config2) return getMergedValue(config1[prop], config2[prop]); else if (prop in config1) return getMergedValue(void 0, config1[prop]);
            }
            var mergeMap = {
                url: valueFromConfig2,
                method: valueFromConfig2,
                data: valueFromConfig2,
                baseURL: defaultToConfig2,
                transformRequest: defaultToConfig2,
                transformResponse: defaultToConfig2,
                paramsSerializer: defaultToConfig2,
                timeout: defaultToConfig2,
                timeoutMessage: defaultToConfig2,
                withCredentials: defaultToConfig2,
                adapter: defaultToConfig2,
                responseType: defaultToConfig2,
                xsrfCookieName: defaultToConfig2,
                xsrfHeaderName: defaultToConfig2,
                onUploadProgress: defaultToConfig2,
                onDownloadProgress: defaultToConfig2,
                decompress: defaultToConfig2,
                maxContentLength: defaultToConfig2,
                maxBodyLength: defaultToConfig2,
                transport: defaultToConfig2,
                httpAgent: defaultToConfig2,
                httpsAgent: defaultToConfig2,
                cancelToken: defaultToConfig2,
                socketPath: defaultToConfig2,
                responseEncoding: defaultToConfig2,
                validateStatus: mergeDirectKeys
            };
            utils.forEach(Object.keys(config1).concat(Object.keys(config2)), (function(prop) {
                var merge = mergeMap[prop] || mergeDeepProperties;
                var configValue = merge(prop);
                utils.isUndefined(configValue) && merge !== mergeDirectKeys || (config[prop] = configValue);
            }));
            return config;
        };
    },
    "./node_modules/@sl/cart/node_modules/axios/lib/core/settle.js": (module, __unused_webpack_exports, __webpack_require__) => {
        "use strict";
        var createError = __webpack_require__("./node_modules/@sl/cart/node_modules/axios/lib/core/createError.js");
        module.exports = function(resolve, reject, response) {
            var validateStatus = response.config.validateStatus;
            if (!response.status || !validateStatus || validateStatus(response.status)) resolve(response); else reject(createError("Request failed with status code " + response.status, response.config, null, response.request, response));
        };
    },
    "./node_modules/@sl/cart/node_modules/axios/lib/core/transformData.js": (module, __unused_webpack_exports, __webpack_require__) => {
        "use strict";
        var utils = __webpack_require__("./node_modules/@sl/cart/node_modules/axios/lib/utils.js");
        var defaults = __webpack_require__("./node_modules/@sl/cart/node_modules/axios/lib/defaults/index.js");
        module.exports = function(data, headers, fns) {
            var context = this || defaults;
            utils.forEach(fns, (function(fn) {
                data = fn.call(context, data, headers);
            }));
            return data;
        };
    },
    "./node_modules/@sl/cart/node_modules/axios/lib/defaults/index.js": (module, __unused_webpack_exports, __webpack_require__) => {
        "use strict";
        var utils = __webpack_require__("./node_modules/@sl/cart/node_modules/axios/lib/utils.js");
        var normalizeHeaderName = __webpack_require__("./node_modules/@sl/cart/node_modules/axios/lib/helpers/normalizeHeaderName.js");
        var enhanceError = __webpack_require__("./node_modules/@sl/cart/node_modules/axios/lib/core/enhanceError.js");
        var transitionalDefaults = __webpack_require__("./node_modules/@sl/cart/node_modules/axios/lib/defaults/transitional.js");
        var DEFAULT_CONTENT_TYPE = {
            "Content-Type": "application/x-www-form-urlencoded"
        };
        function setContentTypeIfUnset(headers, value) {
            if (!utils.isUndefined(headers) && utils.isUndefined(headers["Content-Type"])) headers["Content-Type"] = value;
        }
        function getDefaultAdapter() {
            var adapter;
            if ("undefined" !== typeof XMLHttpRequest) adapter = __webpack_require__("./node_modules/@sl/cart/node_modules/axios/lib/adapters/xhr.js"); else if ("undefined" !== typeof process && "[object process]" === Object.prototype.toString.call(process)) adapter = __webpack_require__("./node_modules/@sl/cart/node_modules/axios/lib/adapters/xhr.js");
            return adapter;
        }
        function stringifySafely(rawValue, parser, encoder) {
            if (utils.isString(rawValue)) try {
                (parser || JSON.parse)(rawValue);
                return utils.trim(rawValue);
            } catch (e) {
                if ("SyntaxError" !== e.name) throw e;
            }
            return (encoder || JSON.stringify)(rawValue);
        }
        var defaults = {
            transitional: transitionalDefaults,
            adapter: getDefaultAdapter(),
            transformRequest: [ function(data, headers) {
                normalizeHeaderName(headers, "Accept");
                normalizeHeaderName(headers, "Content-Type");
                if (utils.isFormData(data) || utils.isArrayBuffer(data) || utils.isBuffer(data) || utils.isStream(data) || utils.isFile(data) || utils.isBlob(data)) return data;
                if (utils.isArrayBufferView(data)) return data.buffer;
                if (utils.isURLSearchParams(data)) {
                    setContentTypeIfUnset(headers, "application/x-www-form-urlencoded;charset=utf-8");
                    return data.toString();
                }
                if (utils.isObject(data) || headers && "application/json" === headers["Content-Type"]) {
                    setContentTypeIfUnset(headers, "application/json");
                    return stringifySafely(data);
                }
                return data;
            } ],
            transformResponse: [ function(data) {
                var transitional = this.transitional || defaults.transitional;
                var silentJSONParsing = transitional && transitional.silentJSONParsing;
                var forcedJSONParsing = transitional && transitional.forcedJSONParsing;
                var strictJSONParsing = !silentJSONParsing && "json" === this.responseType;
                if (strictJSONParsing || forcedJSONParsing && utils.isString(data) && data.length) try {
                    return JSON.parse(data);
                } catch (e) {
                    if (strictJSONParsing) {
                        if ("SyntaxError" === e.name) throw enhanceError(e, this, "E_JSON_PARSE");
                        throw e;
                    }
                }
                return data;
            } ],
            timeout: 0,
            xsrfCookieName: "XSRF-TOKEN",
            xsrfHeaderName: "X-XSRF-TOKEN",
            maxContentLength: -1,
            maxBodyLength: -1,
            validateStatus: function(status) {
                return status >= 200 && status < 300;
            },
            headers: {
                common: {
                    Accept: "application/json, text/plain, */*"
                }
            }
        };
        utils.forEach([ "delete", "get", "head" ], (function(method) {
            defaults.headers[method] = {};
        }));
        utils.forEach([ "post", "put", "patch" ], (function(method) {
            defaults.headers[method] = utils.merge(DEFAULT_CONTENT_TYPE);
        }));
        module.exports = defaults;
    },
    "./node_modules/@sl/cart/node_modules/axios/lib/defaults/transitional.js": module => {
        "use strict";
        module.exports = {
            silentJSONParsing: true,
            forcedJSONParsing: true,
            clarifyTimeoutError: false
        };
    },
    "./node_modules/@sl/cart/node_modules/axios/lib/env/data.js": module => {
        module.exports = {
            version: "0.26.1"
        };
    },
    "./node_modules/@sl/cart/node_modules/axios/lib/helpers/bind.js": module => {
        "use strict";
        module.exports = function(fn, thisArg) {
            return function() {
                var args = new Array(arguments.length);
                for (var i = 0; i < args.length; i++) args[i] = arguments[i];
                return fn.apply(thisArg, args);
            };
        };
    },
    "./node_modules/@sl/cart/node_modules/axios/lib/helpers/buildURL.js": (module, __unused_webpack_exports, __webpack_require__) => {
        "use strict";
        var utils = __webpack_require__("./node_modules/@sl/cart/node_modules/axios/lib/utils.js");
        function encode(val) {
            return encodeURIComponent(val).replace(/%3A/gi, ":").replace(/%24/g, "$").replace(/%2C/gi, ",").replace(/%20/g, "+").replace(/%5B/gi, "[").replace(/%5D/gi, "]");
        }
        module.exports = function(url, params, paramsSerializer) {
            if (!params) return url;
            var serializedParams;
            if (paramsSerializer) serializedParams = paramsSerializer(params); else if (utils.isURLSearchParams(params)) serializedParams = params.toString(); else {
                var parts = [];
                utils.forEach(params, (function(val, key) {
                    if (null === val || "undefined" === typeof val) return;
                    if (utils.isArray(val)) key += "[]"; else val = [ val ];
                    utils.forEach(val, (function(v) {
                        if (utils.isDate(v)) v = v.toISOString(); else if (utils.isObject(v)) v = JSON.stringify(v);
                        parts.push(encode(key) + "=" + encode(v));
                    }));
                }));
                serializedParams = parts.join("&");
            }
            if (serializedParams) {
                var hashmarkIndex = url.indexOf("#");
                if (-1 !== hashmarkIndex) url = url.slice(0, hashmarkIndex);
                url += (-1 === url.indexOf("?") ? "?" : "&") + serializedParams;
            }
            return url;
        };
    },
    "./node_modules/@sl/cart/node_modules/axios/lib/helpers/combineURLs.js": module => {
        "use strict";
        module.exports = function(baseURL, relativeURL) {
            return relativeURL ? baseURL.replace(/\/+$/, "") + "/" + relativeURL.replace(/^\/+/, "") : baseURL;
        };
    },
    "./node_modules/@sl/cart/node_modules/axios/lib/helpers/cookies.js": (module, __unused_webpack_exports, __webpack_require__) => {
        "use strict";
        var utils = __webpack_require__("./node_modules/@sl/cart/node_modules/axios/lib/utils.js");
        module.exports = utils.isStandardBrowserEnv() ? function() {
            return {
                write: function(name, value, expires, path, domain, secure) {
                    var cookie = [];
                    cookie.push(name + "=" + encodeURIComponent(value));
                    if (utils.isNumber(expires)) cookie.push("expires=" + new Date(expires).toGMTString());
                    if (utils.isString(path)) cookie.push("path=" + path);
                    if (utils.isString(domain)) cookie.push("domain=" + domain);
                    if (true === secure) cookie.push("secure");
                    document.cookie = cookie.join("; ");
                },
                read: function(name) {
                    var match = document.cookie.match(new RegExp("(^|;\\s*)(" + name + ")=([^;]*)"));
                    return match ? decodeURIComponent(match[3]) : null;
                },
                remove: function(name) {
                    this.write(name, "", Date.now() - 864e5);
                }
            };
        }() : function() {
            return {
                write: function() {},
                read: function() {
                    return null;
                },
                remove: function() {}
            };
        }();
    },
    "./node_modules/@sl/cart/node_modules/axios/lib/helpers/isAbsoluteURL.js": module => {
        "use strict";
        module.exports = function(url) {
            return /^([a-z][a-z\d+\-.]*:)?\/\//i.test(url);
        };
    },
    "./node_modules/@sl/cart/node_modules/axios/lib/helpers/isAxiosError.js": (module, __unused_webpack_exports, __webpack_require__) => {
        "use strict";
        var utils = __webpack_require__("./node_modules/@sl/cart/node_modules/axios/lib/utils.js");
        module.exports = function(payload) {
            return utils.isObject(payload) && true === payload.isAxiosError;
        };
    },
    "./node_modules/@sl/cart/node_modules/axios/lib/helpers/isURLSameOrigin.js": (module, __unused_webpack_exports, __webpack_require__) => {
        "use strict";
        var utils = __webpack_require__("./node_modules/@sl/cart/node_modules/axios/lib/utils.js");
        module.exports = utils.isStandardBrowserEnv() ? function() {
            var msie = /(msie|trident)/i.test(navigator.userAgent);
            var urlParsingNode = document.createElement("a");
            var originURL;
            function resolveURL(url) {
                var href = url;
                if (msie) {
                    urlParsingNode.setAttribute("href", href);
                    href = urlParsingNode.href;
                }
                urlParsingNode.setAttribute("href", href);
                return {
                    href: urlParsingNode.href,
                    protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, "") : "",
                    host: urlParsingNode.host,
                    search: urlParsingNode.search ? urlParsingNode.search.replace(/^\?/, "") : "",
                    hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, "") : "",
                    hostname: urlParsingNode.hostname,
                    port: urlParsingNode.port,
                    pathname: "/" === urlParsingNode.pathname.charAt(0) ? urlParsingNode.pathname : "/" + urlParsingNode.pathname
                };
            }
            originURL = resolveURL(window.location.href);
            return function(requestURL) {
                var parsed = utils.isString(requestURL) ? resolveURL(requestURL) : requestURL;
                return parsed.protocol === originURL.protocol && parsed.host === originURL.host;
            };
        }() : function() {
            return function() {
                return true;
            };
        }();
    },
    "./node_modules/@sl/cart/node_modules/axios/lib/helpers/normalizeHeaderName.js": (module, __unused_webpack_exports, __webpack_require__) => {
        "use strict";
        var utils = __webpack_require__("./node_modules/@sl/cart/node_modules/axios/lib/utils.js");
        module.exports = function(headers, normalizedName) {
            utils.forEach(headers, (function(value, name) {
                if (name !== normalizedName && name.toUpperCase() === normalizedName.toUpperCase()) {
                    headers[normalizedName] = value;
                    delete headers[name];
                }
            }));
        };
    },
    "./node_modules/@sl/cart/node_modules/axios/lib/helpers/parseHeaders.js": (module, __unused_webpack_exports, __webpack_require__) => {
        "use strict";
        var utils = __webpack_require__("./node_modules/@sl/cart/node_modules/axios/lib/utils.js");
        var ignoreDuplicateOf = [ "age", "authorization", "content-length", "content-type", "etag", "expires", "from", "host", "if-modified-since", "if-unmodified-since", "last-modified", "location", "max-forwards", "proxy-authorization", "referer", "retry-after", "user-agent" ];
        module.exports = function(headers) {
            var parsed = {};
            var key;
            var val;
            var i;
            if (!headers) return parsed;
            utils.forEach(headers.split("\n"), (function(line) {
                i = line.indexOf(":");
                key = utils.trim(line.substr(0, i)).toLowerCase();
                val = utils.trim(line.substr(i + 1));
                if (key) {
                    if (parsed[key] && ignoreDuplicateOf.indexOf(key) >= 0) return;
                    if ("set-cookie" === key) parsed[key] = (parsed[key] ? parsed[key] : []).concat([ val ]); else parsed[key] = parsed[key] ? parsed[key] + ", " + val : val;
                }
            }));
            return parsed;
        };
    },
    "./node_modules/@sl/cart/node_modules/axios/lib/helpers/spread.js": module => {
        "use strict";
        module.exports = function(callback) {
            return function(arr) {
                return callback.apply(null, arr);
            };
        };
    },
    "./node_modules/@sl/cart/node_modules/axios/lib/helpers/validator.js": (module, __unused_webpack_exports, __webpack_require__) => {
        "use strict";
        var VERSION = __webpack_require__("./node_modules/@sl/cart/node_modules/axios/lib/env/data.js").version;
        var validators = {};
        [ "object", "boolean", "number", "function", "string", "symbol" ].forEach((function(type, i) {
            validators[type] = function(thing) {
                return typeof thing === type || "a" + (i < 1 ? "n " : " ") + type;
            };
        }));
        var deprecatedWarnings = {};
        validators.transitional = function(validator, version, message) {
            function formatMessage(opt, desc) {
                return "[Axios v" + VERSION + "] Transitional option '" + opt + "'" + desc + (message ? ". " + message : "");
            }
            return function(value, opt, opts) {
                if (false === validator) throw new Error(formatMessage(opt, " has been removed" + (version ? " in " + version : "")));
                if (version && !deprecatedWarnings[opt]) {
                    deprecatedWarnings[opt] = true;
                    console.warn(formatMessage(opt, " has been deprecated since v" + version + " and will be removed in the near future"));
                }
                return validator ? validator(value, opt, opts) : true;
            };
        };
        function assertOptions(options, schema, allowUnknown) {
            if ("object" !== typeof options) throw new TypeError("options must be an object");
            var keys = Object.keys(options);
            var i = keys.length;
            while (i-- > 0) {
                var opt = keys[i];
                var validator = schema[opt];
                if (validator) {
                    var value = options[opt];
                    var result = void 0 === value || validator(value, opt, options);
                    if (true !== result) throw new TypeError("option " + opt + " must be " + result);
                    continue;
                }
                if (true !== allowUnknown) throw Error("Unknown option " + opt);
            }
        }
        module.exports = {
            assertOptions,
            validators
        };
    },
    "./node_modules/@sl/cart/node_modules/axios/lib/utils.js": (module, __unused_webpack_exports, __webpack_require__) => {
        "use strict";
        var bind = __webpack_require__("./node_modules/@sl/cart/node_modules/axios/lib/helpers/bind.js");
        var toString = Object.prototype.toString;
        function isArray(val) {
            return Array.isArray(val);
        }
        function isUndefined(val) {
            return "undefined" === typeof val;
        }
        function isBuffer(val) {
            return null !== val && !isUndefined(val) && null !== val.constructor && !isUndefined(val.constructor) && "function" === typeof val.constructor.isBuffer && val.constructor.isBuffer(val);
        }
        function isArrayBuffer(val) {
            return "[object ArrayBuffer]" === toString.call(val);
        }
        function isFormData(val) {
            return "[object FormData]" === toString.call(val);
        }
        function isArrayBufferView(val) {
            var result;
            if ("undefined" !== typeof ArrayBuffer && ArrayBuffer.isView) result = ArrayBuffer.isView(val); else result = val && val.buffer && isArrayBuffer(val.buffer);
            return result;
        }
        function isString(val) {
            return "string" === typeof val;
        }
        function isNumber(val) {
            return "number" === typeof val;
        }
        function isObject(val) {
            return null !== val && "object" === typeof val;
        }
        function isPlainObject(val) {
            if ("[object Object]" !== toString.call(val)) return false;
            var prototype = Object.getPrototypeOf(val);
            return null === prototype || prototype === Object.prototype;
        }
        function isDate(val) {
            return "[object Date]" === toString.call(val);
        }
        function isFile(val) {
            return "[object File]" === toString.call(val);
        }
        function isBlob(val) {
            return "[object Blob]" === toString.call(val);
        }
        function isFunction(val) {
            return "[object Function]" === toString.call(val);
        }
        function isStream(val) {
            return isObject(val) && isFunction(val.pipe);
        }
        function isURLSearchParams(val) {
            return "[object URLSearchParams]" === toString.call(val);
        }
        function trim(str) {
            return str.trim ? str.trim() : str.replace(/^\s+|\s+$/g, "");
        }
        function isStandardBrowserEnv() {
            if ("undefined" !== typeof navigator && ("ReactNative" === navigator.product || "NativeScript" === navigator.product || "NS" === navigator.product)) return false;
            return "undefined" !== typeof window && "undefined" !== typeof document;
        }
        function forEach(obj, fn) {
            if (null === obj || "undefined" === typeof obj) return;
            if ("object" !== typeof obj) obj = [ obj ];
            if (isArray(obj)) for (var i = 0, l = obj.length; i < l; i++) fn.call(null, obj[i], i, obj); else for (var key in obj) if (Object.prototype.hasOwnProperty.call(obj, key)) fn.call(null, obj[key], key, obj);
        }
        function merge() {
            var result = {};
            function assignValue(val, key) {
                if (isPlainObject(result[key]) && isPlainObject(val)) result[key] = merge(result[key], val); else if (isPlainObject(val)) result[key] = merge({}, val); else if (isArray(val)) result[key] = val.slice(); else result[key] = val;
            }
            for (var i = 0, l = arguments.length; i < l; i++) forEach(arguments[i], assignValue);
            return result;
        }
        function extend(a, b, thisArg) {
            forEach(b, (function(val, key) {
                if (thisArg && "function" === typeof val) a[key] = bind(val, thisArg); else a[key] = val;
            }));
            return a;
        }
        function stripBOM(content) {
            if (65279 === content.charCodeAt(0)) content = content.slice(1);
            return content;
        }
        module.exports = {
            isArray,
            isArrayBuffer,
            isBuffer,
            isFormData,
            isArrayBufferView,
            isString,
            isNumber,
            isObject,
            isPlainObject,
            isUndefined,
            isDate,
            isFile,
            isBlob,
            isFunction,
            isStream,
            isURLSearchParams,
            isStandardBrowserEnv,
            forEach,
            merge,
            extend,
            trim,
            stripBOM
        };
    },
    "./node_modules/@sl/logger/lib/index.es.js": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
        "use strict";
        __webpack_require__.d(__webpack_exports__, {
            LogStatus: () => o
        });
        var n, o, t, i = function() {
            return i = Object.assign || function(n) {
                for (var o, t = 1, i = arguments.length; t < i; t++) for (var r in o = arguments[t]) Object.prototype.hasOwnProperty.call(o, r) && (n[r] = o[r]);
                return n;
            }, i.apply(this, arguments);
        };
        !function(n) {
            n.P0 = "P0", n.P1 = "P1", n.P2 = "P2";
        }(n || (n = {})), function(n) {
            n.Start = "开始", n.Success = "成功", n.Failure = "失败";
        }(o || (o = {})), function(n) {
            n.Info = "info", n.Log = "log", n.Warn = "warn", n.Error = "error";
        }(t || (t = {}));
        var r = function n(o) {
            var r = this;
            this.options = {
                owner: "",
                action: "",
                transports: []
            }, this.withOwner = function(o) {
                return new n(i(i({}, r.options), {
                    owner: o
                }));
            }, this.pipeOwner = function(o) {
                var t = "";
                return t = r.options.owner ? "".concat(r.options.owner, ".").concat(o) : o, new n(i(i({}, r.options), {
                    owner: t
                }));
            }, this.withAction = function(o) {
                return new n(i(i({}, r.options), {
                    action: o
                }));
            }, this.pipeTransport = function() {
                for (var o = [], t = 0; t < arguments.length; t++) o[t] = arguments[t];
                var e = r.options.transports.concat(o);
                return new n(i(i({}, r.options), {
                    transports: e
                }));
            }, this.report = function(n, o, t) {
                !function(n, o) {
                    var t = n;
                    o.forEach((function(n) {
                        var o = n(t);
                        o && (t = o);
                    }));
                }(i(i({
                    level: n,
                    owner: r.options.owner,
                    action: r.options.action
                }, t), {
                    message: o
                }), r.options.transports);
            }, this.info = function(n, o) {
                r.report(t.Info, n, o);
            }, this.log = function(n, o) {
                r.report(t.Log, n, o);
            }, this.warn = function(n, o) {
                r.report(t.Warn, n, o);
            }, this.error = function(n, o) {
                r.report(t.Error, n, o);
            }, this.options = i(i({}, this.options), o);
        }, e = new r;
        Object.defineProperty(e, "options", {
            writable: !1,
            configurable: !1
        });
    },
    "./node_modules/axios/index.js": (module, __unused_webpack_exports, __webpack_require__) => {
        module.exports = __webpack_require__("./node_modules/axios/lib/axios.js");
    },
    "./node_modules/axios/lib/adapters/xhr.js": (module, __unused_webpack_exports, __webpack_require__) => {
        "use strict";
        var utils = __webpack_require__("./node_modules/axios/lib/utils.js");
        var settle = __webpack_require__("./node_modules/axios/lib/core/settle.js");
        var cookies = __webpack_require__("./node_modules/axios/lib/helpers/cookies.js");
        var buildURL = __webpack_require__("./node_modules/axios/lib/helpers/buildURL.js");
        var buildFullPath = __webpack_require__("./node_modules/axios/lib/core/buildFullPath.js");
        var parseHeaders = __webpack_require__("./node_modules/axios/lib/helpers/parseHeaders.js");
        var isURLSameOrigin = __webpack_require__("./node_modules/axios/lib/helpers/isURLSameOrigin.js");
        var createError = __webpack_require__("./node_modules/axios/lib/core/createError.js");
        module.exports = function(config) {
            return new Promise((function(resolve, reject) {
                var requestData = config.data;
                var requestHeaders = config.headers;
                var responseType = config.responseType;
                if (utils.isFormData(requestData)) delete requestHeaders["Content-Type"];
                var request = new XMLHttpRequest;
                if (config.auth) {
                    var username = config.auth.username || "";
                    var password = config.auth.password ? unescape(encodeURIComponent(config.auth.password)) : "";
                    requestHeaders.Authorization = "Basic " + btoa(username + ":" + password);
                }
                var fullPath = buildFullPath(config.baseURL, config.url);
                request.open(config.method.toUpperCase(), buildURL(fullPath, config.params, config.paramsSerializer), true);
                request.timeout = config.timeout;
                function onloadend() {
                    if (!request) return;
                    var responseHeaders = "getAllResponseHeaders" in request ? parseHeaders(request.getAllResponseHeaders()) : null;
                    var responseData = !responseType || "text" === responseType || "json" === responseType ? request.responseText : request.response;
                    var response = {
                        data: responseData,
                        status: request.status,
                        statusText: request.statusText,
                        headers: responseHeaders,
                        config,
                        request
                    };
                    settle(resolve, reject, response);
                    request = null;
                }
                if ("onloadend" in request) request.onloadend = onloadend; else request.onreadystatechange = function() {
                    if (!request || 4 !== request.readyState) return;
                    if (0 === request.status && !(request.responseURL && 0 === request.responseURL.indexOf("file:"))) return;
                    setTimeout(onloadend);
                };
                request.onabort = function() {
                    if (!request) return;
                    reject(createError("Request aborted", config, "ECONNABORTED", request));
                    request = null;
                };
                request.onerror = function() {
                    reject(createError("Network Error", config, null, request));
                    request = null;
                };
                request.ontimeout = function() {
                    var timeoutErrorMessage = "timeout of " + config.timeout + "ms exceeded";
                    if (config.timeoutErrorMessage) timeoutErrorMessage = config.timeoutErrorMessage;
                    reject(createError(timeoutErrorMessage, config, config.transitional && config.transitional.clarifyTimeoutError ? "ETIMEDOUT" : "ECONNABORTED", request));
                    request = null;
                };
                if (utils.isStandardBrowserEnv()) {
                    var xsrfValue = (config.withCredentials || isURLSameOrigin(fullPath)) && config.xsrfCookieName ? cookies.read(config.xsrfCookieName) : void 0;
                    if (xsrfValue) requestHeaders[config.xsrfHeaderName] = xsrfValue;
                }
                if ("setRequestHeader" in request) utils.forEach(requestHeaders, (function(val, key) {
                    if ("undefined" === typeof requestData && "content-type" === key.toLowerCase()) delete requestHeaders[key]; else request.setRequestHeader(key, val);
                }));
                if (!utils.isUndefined(config.withCredentials)) request.withCredentials = !!config.withCredentials;
                if (responseType && "json" !== responseType) request.responseType = config.responseType;
                if ("function" === typeof config.onDownloadProgress) request.addEventListener("progress", config.onDownloadProgress);
                if ("function" === typeof config.onUploadProgress && request.upload) request.upload.addEventListener("progress", config.onUploadProgress);
                if (config.cancelToken) config.cancelToken.promise.then((function(cancel) {
                    if (!request) return;
                    request.abort();
                    reject(cancel);
                    request = null;
                }));
                if (!requestData) requestData = null;
                request.send(requestData);
            }));
        };
    },
    "./node_modules/axios/lib/axios.js": (module, __unused_webpack_exports, __webpack_require__) => {
        "use strict";
        var utils = __webpack_require__("./node_modules/axios/lib/utils.js");
        var bind = __webpack_require__("./node_modules/axios/lib/helpers/bind.js");
        var Axios = __webpack_require__("./node_modules/axios/lib/core/Axios.js");
        var mergeConfig = __webpack_require__("./node_modules/axios/lib/core/mergeConfig.js");
        var defaults = __webpack_require__("./node_modules/axios/lib/defaults.js");
        function createInstance(defaultConfig) {
            var context = new Axios(defaultConfig);
            var instance = bind(Axios.prototype.request, context);
            utils.extend(instance, Axios.prototype, context);
            utils.extend(instance, context);
            return instance;
        }
        var axios = createInstance(defaults);
        axios.Axios = Axios;
        axios.create = function(instanceConfig) {
            return createInstance(mergeConfig(axios.defaults, instanceConfig));
        };
        axios.Cancel = __webpack_require__("./node_modules/axios/lib/cancel/Cancel.js");
        axios.CancelToken = __webpack_require__("./node_modules/axios/lib/cancel/CancelToken.js");
        axios.isCancel = __webpack_require__("./node_modules/axios/lib/cancel/isCancel.js");
        axios.all = function(promises) {
            return Promise.all(promises);
        };
        axios.spread = __webpack_require__("./node_modules/axios/lib/helpers/spread.js");
        axios.isAxiosError = __webpack_require__("./node_modules/axios/lib/helpers/isAxiosError.js");
        module.exports = axios;
        module.exports["default"] = axios;
    },
    "./node_modules/axios/lib/cancel/Cancel.js": module => {
        "use strict";
        function Cancel(message) {
            this.message = message;
        }
        Cancel.prototype.toString = function() {
            return "Cancel" + (this.message ? ": " + this.message : "");
        };
        Cancel.prototype.__CANCEL__ = true;
        module.exports = Cancel;
    },
    "./node_modules/axios/lib/cancel/CancelToken.js": (module, __unused_webpack_exports, __webpack_require__) => {
        "use strict";
        var Cancel = __webpack_require__("./node_modules/axios/lib/cancel/Cancel.js");
        function CancelToken(executor) {
            if ("function" !== typeof executor) throw new TypeError("executor must be a function.");
            var resolvePromise;
            this.promise = new Promise((function(resolve) {
                resolvePromise = resolve;
            }));
            var token = this;
            executor((function(message) {
                if (token.reason) return;
                token.reason = new Cancel(message);
                resolvePromise(token.reason);
            }));
        }
        CancelToken.prototype.throwIfRequested = function() {
            if (this.reason) throw this.reason;
        };
        CancelToken.source = function() {
            var cancel;
            var token = new CancelToken((function(c) {
                cancel = c;
            }));
            return {
                token,
                cancel
            };
        };
        module.exports = CancelToken;
    },
    "./node_modules/axios/lib/cancel/isCancel.js": module => {
        "use strict";
        module.exports = function(value) {
            return !!(value && value.__CANCEL__);
        };
    },
    "./node_modules/axios/lib/core/Axios.js": (module, __unused_webpack_exports, __webpack_require__) => {
        "use strict";
        var utils = __webpack_require__("./node_modules/axios/lib/utils.js");
        var buildURL = __webpack_require__("./node_modules/axios/lib/helpers/buildURL.js");
        var InterceptorManager = __webpack_require__("./node_modules/axios/lib/core/InterceptorManager.js");
        var dispatchRequest = __webpack_require__("./node_modules/axios/lib/core/dispatchRequest.js");
        var mergeConfig = __webpack_require__("./node_modules/axios/lib/core/mergeConfig.js");
        var validator = __webpack_require__("./node_modules/axios/lib/helpers/validator.js");
        var validators = validator.validators;
        function Axios(instanceConfig) {
            this.defaults = instanceConfig;
            this.interceptors = {
                request: new InterceptorManager,
                response: new InterceptorManager
            };
        }
        Axios.prototype.request = function(config) {
            if ("string" === typeof config) {
                config = arguments[1] || {};
                config.url = arguments[0];
            } else config = config || {};
            config = mergeConfig(this.defaults, config);
            if (config.method) config.method = config.method.toLowerCase(); else if (this.defaults.method) config.method = this.defaults.method.toLowerCase(); else config.method = "get";
            var transitional = config.transitional;
            if (void 0 !== transitional) validator.assertOptions(transitional, {
                silentJSONParsing: validators.transitional(validators.boolean, "1.0.0"),
                forcedJSONParsing: validators.transitional(validators.boolean, "1.0.0"),
                clarifyTimeoutError: validators.transitional(validators.boolean, "1.0.0")
            }, false);
            var requestInterceptorChain = [];
            var synchronousRequestInterceptors = true;
            this.interceptors.request.forEach((function(interceptor) {
                if ("function" === typeof interceptor.runWhen && false === interceptor.runWhen(config)) return;
                synchronousRequestInterceptors = synchronousRequestInterceptors && interceptor.synchronous;
                requestInterceptorChain.unshift(interceptor.fulfilled, interceptor.rejected);
            }));
            var responseInterceptorChain = [];
            this.interceptors.response.forEach((function(interceptor) {
                responseInterceptorChain.push(interceptor.fulfilled, interceptor.rejected);
            }));
            var promise;
            if (!synchronousRequestInterceptors) {
                var chain = [ dispatchRequest, void 0 ];
                Array.prototype.unshift.apply(chain, requestInterceptorChain);
                chain = chain.concat(responseInterceptorChain);
                promise = Promise.resolve(config);
                while (chain.length) promise = promise.then(chain.shift(), chain.shift());
                return promise;
            }
            var newConfig = config;
            while (requestInterceptorChain.length) {
                var onFulfilled = requestInterceptorChain.shift();
                var onRejected = requestInterceptorChain.shift();
                try {
                    newConfig = onFulfilled(newConfig);
                } catch (error) {
                    onRejected(error);
                    break;
                }
            }
            try {
                promise = dispatchRequest(newConfig);
            } catch (error) {
                return Promise.reject(error);
            }
            while (responseInterceptorChain.length) promise = promise.then(responseInterceptorChain.shift(), responseInterceptorChain.shift());
            return promise;
        };
        Axios.prototype.getUri = function(config) {
            config = mergeConfig(this.defaults, config);
            return buildURL(config.url, config.params, config.paramsSerializer).replace(/^\?/, "");
        };
        utils.forEach([ "delete", "get", "head", "options" ], (function(method) {
            Axios.prototype[method] = function(url, config) {
                return this.request(mergeConfig(config || {}, {
                    method,
                    url,
                    data: (config || {}).data
                }));
            };
        }));
        utils.forEach([ "post", "put", "patch" ], (function(method) {
            Axios.prototype[method] = function(url, data, config) {
                return this.request(mergeConfig(config || {}, {
                    method,
                    url,
                    data
                }));
            };
        }));
        module.exports = Axios;
    },
    "./node_modules/axios/lib/core/InterceptorManager.js": (module, __unused_webpack_exports, __webpack_require__) => {
        "use strict";
        var utils = __webpack_require__("./node_modules/axios/lib/utils.js");
        function InterceptorManager() {
            this.handlers = [];
        }
        InterceptorManager.prototype.use = function(fulfilled, rejected, options) {
            this.handlers.push({
                fulfilled,
                rejected,
                synchronous: options ? options.synchronous : false,
                runWhen: options ? options.runWhen : null
            });
            return this.handlers.length - 1;
        };
        InterceptorManager.prototype.eject = function(id) {
            if (this.handlers[id]) this.handlers[id] = null;
        };
        InterceptorManager.prototype.forEach = function(fn) {
            utils.forEach(this.handlers, (function(h) {
                if (null !== h) fn(h);
            }));
        };
        module.exports = InterceptorManager;
    },
    "./node_modules/axios/lib/core/buildFullPath.js": (module, __unused_webpack_exports, __webpack_require__) => {
        "use strict";
        var isAbsoluteURL = __webpack_require__("./node_modules/axios/lib/helpers/isAbsoluteURL.js");
        var combineURLs = __webpack_require__("./node_modules/axios/lib/helpers/combineURLs.js");
        module.exports = function(baseURL, requestedURL) {
            if (baseURL && !isAbsoluteURL(requestedURL)) return combineURLs(baseURL, requestedURL);
            return requestedURL;
        };
    },
    "./node_modules/axios/lib/core/createError.js": (module, __unused_webpack_exports, __webpack_require__) => {
        "use strict";
        var enhanceError = __webpack_require__("./node_modules/axios/lib/core/enhanceError.js");
        module.exports = function(message, config, code, request, response) {
            var error = new Error(message);
            return enhanceError(error, config, code, request, response);
        };
    },
    "./node_modules/axios/lib/core/dispatchRequest.js": (module, __unused_webpack_exports, __webpack_require__) => {
        "use strict";
        var utils = __webpack_require__("./node_modules/axios/lib/utils.js");
        var transformData = __webpack_require__("./node_modules/axios/lib/core/transformData.js");
        var isCancel = __webpack_require__("./node_modules/axios/lib/cancel/isCancel.js");
        var defaults = __webpack_require__("./node_modules/axios/lib/defaults.js");
        function throwIfCancellationRequested(config) {
            if (config.cancelToken) config.cancelToken.throwIfRequested();
        }
        module.exports = function(config) {
            throwIfCancellationRequested(config);
            config.headers = config.headers || {};
            config.data = transformData.call(config, config.data, config.headers, config.transformRequest);
            config.headers = utils.merge(config.headers.common || {}, config.headers[config.method] || {}, config.headers);
            utils.forEach([ "delete", "get", "head", "post", "put", "patch", "common" ], (function(method) {
                delete config.headers[method];
            }));
            var adapter = config.adapter || defaults.adapter;
            return adapter(config).then((function(response) {
                throwIfCancellationRequested(config);
                response.data = transformData.call(config, response.data, response.headers, config.transformResponse);
                return response;
            }), (function(reason) {
                if (!isCancel(reason)) {
                    throwIfCancellationRequested(config);
                    if (reason && reason.response) reason.response.data = transformData.call(config, reason.response.data, reason.response.headers, config.transformResponse);
                }
                return Promise.reject(reason);
            }));
        };
    },
    "./node_modules/axios/lib/core/enhanceError.js": module => {
        "use strict";
        module.exports = function(error, config, code, request, response) {
            error.config = config;
            if (code) error.code = code;
            error.request = request;
            error.response = response;
            error.isAxiosError = true;
            error.toJSON = function() {
                return {
                    message: this.message,
                    name: this.name,
                    description: this.description,
                    number: this.number,
                    fileName: this.fileName,
                    lineNumber: this.lineNumber,
                    columnNumber: this.columnNumber,
                    stack: this.stack,
                    config: this.config,
                    code: this.code
                };
            };
            return error;
        };
    },
    "./node_modules/axios/lib/core/mergeConfig.js": (module, __unused_webpack_exports, __webpack_require__) => {
        "use strict";
        var utils = __webpack_require__("./node_modules/axios/lib/utils.js");
        module.exports = function(config1, config2) {
            config2 = config2 || {};
            var config = {};
            var valueFromConfig2Keys = [ "url", "method", "data" ];
            var mergeDeepPropertiesKeys = [ "headers", "auth", "proxy", "params" ];
            var defaultToConfig2Keys = [ "baseURL", "transformRequest", "transformResponse", "paramsSerializer", "timeout", "timeoutMessage", "withCredentials", "adapter", "responseType", "xsrfCookieName", "xsrfHeaderName", "onUploadProgress", "onDownloadProgress", "decompress", "maxContentLength", "maxBodyLength", "maxRedirects", "transport", "httpAgent", "httpsAgent", "cancelToken", "socketPath", "responseEncoding" ];
            var directMergeKeys = [ "validateStatus" ];
            function getMergedValue(target, source) {
                if (utils.isPlainObject(target) && utils.isPlainObject(source)) return utils.merge(target, source); else if (utils.isPlainObject(source)) return utils.merge({}, source); else if (utils.isArray(source)) return source.slice();
                return source;
            }
            function mergeDeepProperties(prop) {
                if (!utils.isUndefined(config2[prop])) config[prop] = getMergedValue(config1[prop], config2[prop]); else if (!utils.isUndefined(config1[prop])) config[prop] = getMergedValue(void 0, config1[prop]);
            }
            utils.forEach(valueFromConfig2Keys, (function(prop) {
                if (!utils.isUndefined(config2[prop])) config[prop] = getMergedValue(void 0, config2[prop]);
            }));
            utils.forEach(mergeDeepPropertiesKeys, mergeDeepProperties);
            utils.forEach(defaultToConfig2Keys, (function(prop) {
                if (!utils.isUndefined(config2[prop])) config[prop] = getMergedValue(void 0, config2[prop]); else if (!utils.isUndefined(config1[prop])) config[prop] = getMergedValue(void 0, config1[prop]);
            }));
            utils.forEach(directMergeKeys, (function(prop) {
                if (prop in config2) config[prop] = getMergedValue(config1[prop], config2[prop]); else if (prop in config1) config[prop] = getMergedValue(void 0, config1[prop]);
            }));
            var axiosKeys = valueFromConfig2Keys.concat(mergeDeepPropertiesKeys).concat(defaultToConfig2Keys).concat(directMergeKeys);
            var otherKeys = Object.keys(config1).concat(Object.keys(config2)).filter((function(key) {
                return -1 === axiosKeys.indexOf(key);
            }));
            utils.forEach(otherKeys, mergeDeepProperties);
            return config;
        };
    },
    "./node_modules/axios/lib/core/settle.js": (module, __unused_webpack_exports, __webpack_require__) => {
        "use strict";
        var createError = __webpack_require__("./node_modules/axios/lib/core/createError.js");
        module.exports = function(resolve, reject, response) {
            var validateStatus = response.config.validateStatus;
            if (!response.status || !validateStatus || validateStatus(response.status)) resolve(response); else reject(createError("Request failed with status code " + response.status, response.config, null, response.request, response));
        };
    },
    "./node_modules/axios/lib/core/transformData.js": (module, __unused_webpack_exports, __webpack_require__) => {
        "use strict";
        var utils = __webpack_require__("./node_modules/axios/lib/utils.js");
        var defaults = __webpack_require__("./node_modules/axios/lib/defaults.js");
        module.exports = function(data, headers, fns) {
            var context = this || defaults;
            utils.forEach(fns, (function(fn) {
                data = fn.call(context, data, headers);
            }));
            return data;
        };
    },
    "./node_modules/axios/lib/defaults.js": (module, __unused_webpack_exports, __webpack_require__) => {
        "use strict";
        var utils = __webpack_require__("./node_modules/axios/lib/utils.js");
        var normalizeHeaderName = __webpack_require__("./node_modules/axios/lib/helpers/normalizeHeaderName.js");
        var enhanceError = __webpack_require__("./node_modules/axios/lib/core/enhanceError.js");
        var DEFAULT_CONTENT_TYPE = {
            "Content-Type": "application/x-www-form-urlencoded"
        };
        function setContentTypeIfUnset(headers, value) {
            if (!utils.isUndefined(headers) && utils.isUndefined(headers["Content-Type"])) headers["Content-Type"] = value;
        }
        function getDefaultAdapter() {
            var adapter;
            if ("undefined" !== typeof XMLHttpRequest) adapter = __webpack_require__("./node_modules/axios/lib/adapters/xhr.js"); else if ("undefined" !== typeof process && "[object process]" === Object.prototype.toString.call(process)) adapter = __webpack_require__("./node_modules/axios/lib/adapters/xhr.js");
            return adapter;
        }
        function stringifySafely(rawValue, parser, encoder) {
            if (utils.isString(rawValue)) try {
                (parser || JSON.parse)(rawValue);
                return utils.trim(rawValue);
            } catch (e) {
                if ("SyntaxError" !== e.name) throw e;
            }
            return (encoder || JSON.stringify)(rawValue);
        }
        var defaults = {
            transitional: {
                silentJSONParsing: true,
                forcedJSONParsing: true,
                clarifyTimeoutError: false
            },
            adapter: getDefaultAdapter(),
            transformRequest: [ function(data, headers) {
                normalizeHeaderName(headers, "Accept");
                normalizeHeaderName(headers, "Content-Type");
                if (utils.isFormData(data) || utils.isArrayBuffer(data) || utils.isBuffer(data) || utils.isStream(data) || utils.isFile(data) || utils.isBlob(data)) return data;
                if (utils.isArrayBufferView(data)) return data.buffer;
                if (utils.isURLSearchParams(data)) {
                    setContentTypeIfUnset(headers, "application/x-www-form-urlencoded;charset=utf-8");
                    return data.toString();
                }
                if (utils.isObject(data) || headers && "application/json" === headers["Content-Type"]) {
                    setContentTypeIfUnset(headers, "application/json");
                    return stringifySafely(data);
                }
                return data;
            } ],
            transformResponse: [ function(data) {
                var transitional = this.transitional;
                var silentJSONParsing = transitional && transitional.silentJSONParsing;
                var forcedJSONParsing = transitional && transitional.forcedJSONParsing;
                var strictJSONParsing = !silentJSONParsing && "json" === this.responseType;
                if (strictJSONParsing || forcedJSONParsing && utils.isString(data) && data.length) try {
                    return JSON.parse(data);
                } catch (e) {
                    if (strictJSONParsing) {
                        if ("SyntaxError" === e.name) throw enhanceError(e, this, "E_JSON_PARSE");
                        throw e;
                    }
                }
                return data;
            } ],
            timeout: 0,
            xsrfCookieName: "XSRF-TOKEN",
            xsrfHeaderName: "X-XSRF-TOKEN",
            maxContentLength: -1,
            maxBodyLength: -1,
            validateStatus: function(status) {
                return status >= 200 && status < 300;
            }
        };
        defaults.headers = {
            common: {
                Accept: "application/json, text/plain, */*"
            }
        };
        utils.forEach([ "delete", "get", "head" ], (function(method) {
            defaults.headers[method] = {};
        }));
        utils.forEach([ "post", "put", "patch" ], (function(method) {
            defaults.headers[method] = utils.merge(DEFAULT_CONTENT_TYPE);
        }));
        module.exports = defaults;
    },
    "./node_modules/axios/lib/helpers/bind.js": module => {
        "use strict";
        module.exports = function(fn, thisArg) {
            return function() {
                var args = new Array(arguments.length);
                for (var i = 0; i < args.length; i++) args[i] = arguments[i];
                return fn.apply(thisArg, args);
            };
        };
    },
    "./node_modules/axios/lib/helpers/buildURL.js": (module, __unused_webpack_exports, __webpack_require__) => {
        "use strict";
        var utils = __webpack_require__("./node_modules/axios/lib/utils.js");
        function encode(val) {
            return encodeURIComponent(val).replace(/%3A/gi, ":").replace(/%24/g, "$").replace(/%2C/gi, ",").replace(/%20/g, "+").replace(/%5B/gi, "[").replace(/%5D/gi, "]");
        }
        module.exports = function(url, params, paramsSerializer) {
            if (!params) return url;
            var serializedParams;
            if (paramsSerializer) serializedParams = paramsSerializer(params); else if (utils.isURLSearchParams(params)) serializedParams = params.toString(); else {
                var parts = [];
                utils.forEach(params, (function(val, key) {
                    if (null === val || "undefined" === typeof val) return;
                    if (utils.isArray(val)) key += "[]"; else val = [ val ];
                    utils.forEach(val, (function(v) {
                        if (utils.isDate(v)) v = v.toISOString(); else if (utils.isObject(v)) v = JSON.stringify(v);
                        parts.push(encode(key) + "=" + encode(v));
                    }));
                }));
                serializedParams = parts.join("&");
            }
            if (serializedParams) {
                var hashmarkIndex = url.indexOf("#");
                if (-1 !== hashmarkIndex) url = url.slice(0, hashmarkIndex);
                url += (-1 === url.indexOf("?") ? "?" : "&") + serializedParams;
            }
            return url;
        };
    },
    "./node_modules/axios/lib/helpers/combineURLs.js": module => {
        "use strict";
        module.exports = function(baseURL, relativeURL) {
            return relativeURL ? baseURL.replace(/\/+$/, "") + "/" + relativeURL.replace(/^\/+/, "") : baseURL;
        };
    },
    "./node_modules/axios/lib/helpers/cookies.js": (module, __unused_webpack_exports, __webpack_require__) => {
        "use strict";
        var utils = __webpack_require__("./node_modules/axios/lib/utils.js");
        module.exports = utils.isStandardBrowserEnv() ? function() {
            return {
                write: function(name, value, expires, path, domain, secure) {
                    var cookie = [];
                    cookie.push(name + "=" + encodeURIComponent(value));
                    if (utils.isNumber(expires)) cookie.push("expires=" + new Date(expires).toGMTString());
                    if (utils.isString(path)) cookie.push("path=" + path);
                    if (utils.isString(domain)) cookie.push("domain=" + domain);
                    if (true === secure) cookie.push("secure");
                    document.cookie = cookie.join("; ");
                },
                read: function(name) {
                    var match = document.cookie.match(new RegExp("(^|;\\s*)(" + name + ")=([^;]*)"));
                    return match ? decodeURIComponent(match[3]) : null;
                },
                remove: function(name) {
                    this.write(name, "", Date.now() - 864e5);
                }
            };
        }() : function() {
            return {
                write: function() {},
                read: function() {
                    return null;
                },
                remove: function() {}
            };
        }();
    },
    "./node_modules/axios/lib/helpers/isAbsoluteURL.js": module => {
        "use strict";
        module.exports = function(url) {
            return /^([a-z][a-z\d\+\-\.]*:)?\/\//i.test(url);
        };
    },
    "./node_modules/axios/lib/helpers/isAxiosError.js": module => {
        "use strict";
        module.exports = function(payload) {
            return "object" === typeof payload && true === payload.isAxiosError;
        };
    },
    "./node_modules/axios/lib/helpers/isURLSameOrigin.js": (module, __unused_webpack_exports, __webpack_require__) => {
        "use strict";
        var utils = __webpack_require__("./node_modules/axios/lib/utils.js");
        module.exports = utils.isStandardBrowserEnv() ? function() {
            var msie = /(msie|trident)/i.test(navigator.userAgent);
            var urlParsingNode = document.createElement("a");
            var originURL;
            function resolveURL(url) {
                var href = url;
                if (msie) {
                    urlParsingNode.setAttribute("href", href);
                    href = urlParsingNode.href;
                }
                urlParsingNode.setAttribute("href", href);
                return {
                    href: urlParsingNode.href,
                    protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, "") : "",
                    host: urlParsingNode.host,
                    search: urlParsingNode.search ? urlParsingNode.search.replace(/^\?/, "") : "",
                    hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, "") : "",
                    hostname: urlParsingNode.hostname,
                    port: urlParsingNode.port,
                    pathname: "/" === urlParsingNode.pathname.charAt(0) ? urlParsingNode.pathname : "/" + urlParsingNode.pathname
                };
            }
            originURL = resolveURL(window.location.href);
            return function(requestURL) {
                var parsed = utils.isString(requestURL) ? resolveURL(requestURL) : requestURL;
                return parsed.protocol === originURL.protocol && parsed.host === originURL.host;
            };
        }() : function() {
            return function() {
                return true;
            };
        }();
    },
    "./node_modules/axios/lib/helpers/normalizeHeaderName.js": (module, __unused_webpack_exports, __webpack_require__) => {
        "use strict";
        var utils = __webpack_require__("./node_modules/axios/lib/utils.js");
        module.exports = function(headers, normalizedName) {
            utils.forEach(headers, (function(value, name) {
                if (name !== normalizedName && name.toUpperCase() === normalizedName.toUpperCase()) {
                    headers[normalizedName] = value;
                    delete headers[name];
                }
            }));
        };
    },
    "./node_modules/axios/lib/helpers/parseHeaders.js": (module, __unused_webpack_exports, __webpack_require__) => {
        "use strict";
        var utils = __webpack_require__("./node_modules/axios/lib/utils.js");
        var ignoreDuplicateOf = [ "age", "authorization", "content-length", "content-type", "etag", "expires", "from", "host", "if-modified-since", "if-unmodified-since", "last-modified", "location", "max-forwards", "proxy-authorization", "referer", "retry-after", "user-agent" ];
        module.exports = function(headers) {
            var parsed = {};
            var key;
            var val;
            var i;
            if (!headers) return parsed;
            utils.forEach(headers.split("\n"), (function(line) {
                i = line.indexOf(":");
                key = utils.trim(line.substr(0, i)).toLowerCase();
                val = utils.trim(line.substr(i + 1));
                if (key) {
                    if (parsed[key] && ignoreDuplicateOf.indexOf(key) >= 0) return;
                    if ("set-cookie" === key) parsed[key] = (parsed[key] ? parsed[key] : []).concat([ val ]); else parsed[key] = parsed[key] ? parsed[key] + ", " + val : val;
                }
            }));
            return parsed;
        };
    },
    "./node_modules/axios/lib/helpers/spread.js": module => {
        "use strict";
        module.exports = function(callback) {
            return function(arr) {
                return callback.apply(null, arr);
            };
        };
    },
    "./node_modules/axios/lib/helpers/validator.js": (module, __unused_webpack_exports, __webpack_require__) => {
        "use strict";
        var pkg = __webpack_require__("./node_modules/axios/package.json");
        var validators = {};
        [ "object", "boolean", "number", "function", "string", "symbol" ].forEach((function(type, i) {
            validators[type] = function(thing) {
                return typeof thing === type || "a" + (i < 1 ? "n " : " ") + type;
            };
        }));
        var deprecatedWarnings = {};
        var currentVerArr = pkg.version.split(".");
        function isOlderVersion(version, thanVersion) {
            var pkgVersionArr = thanVersion ? thanVersion.split(".") : currentVerArr;
            var destVer = version.split(".");
            for (var i = 0; i < 3; i++) if (pkgVersionArr[i] > destVer[i]) return true; else if (pkgVersionArr[i] < destVer[i]) return false;
            return false;
        }
        validators.transitional = function(validator, version, message) {
            var isDeprecated = version && isOlderVersion(version);
            function formatMessage(opt, desc) {
                return "[Axios v" + pkg.version + "] Transitional option '" + opt + "'" + desc + (message ? ". " + message : "");
            }
            return function(value, opt, opts) {
                if (false === validator) throw new Error(formatMessage(opt, " has been removed in " + version));
                if (isDeprecated && !deprecatedWarnings[opt]) {
                    deprecatedWarnings[opt] = true;
                    console.warn(formatMessage(opt, " has been deprecated since v" + version + " and will be removed in the near future"));
                }
                return validator ? validator(value, opt, opts) : true;
            };
        };
        function assertOptions(options, schema, allowUnknown) {
            if ("object" !== typeof options) throw new TypeError("options must be an object");
            var keys = Object.keys(options);
            var i = keys.length;
            while (i-- > 0) {
                var opt = keys[i];
                var validator = schema[opt];
                if (validator) {
                    var value = options[opt];
                    var result = void 0 === value || validator(value, opt, options);
                    if (true !== result) throw new TypeError("option " + opt + " must be " + result);
                    continue;
                }
                if (true !== allowUnknown) throw Error("Unknown option " + opt);
            }
        }
        module.exports = {
            isOlderVersion,
            assertOptions,
            validators
        };
    },
    "./node_modules/axios/lib/utils.js": (module, __unused_webpack_exports, __webpack_require__) => {
        "use strict";
        var bind = __webpack_require__("./node_modules/axios/lib/helpers/bind.js");
        var toString = Object.prototype.toString;
        function isArray(val) {
            return "[object Array]" === toString.call(val);
        }
        function isUndefined(val) {
            return "undefined" === typeof val;
        }
        function isBuffer(val) {
            return null !== val && !isUndefined(val) && null !== val.constructor && !isUndefined(val.constructor) && "function" === typeof val.constructor.isBuffer && val.constructor.isBuffer(val);
        }
        function isArrayBuffer(val) {
            return "[object ArrayBuffer]" === toString.call(val);
        }
        function isFormData(val) {
            return "undefined" !== typeof FormData && val instanceof FormData;
        }
        function isArrayBufferView(val) {
            var result;
            if ("undefined" !== typeof ArrayBuffer && ArrayBuffer.isView) result = ArrayBuffer.isView(val); else result = val && val.buffer && val.buffer instanceof ArrayBuffer;
            return result;
        }
        function isString(val) {
            return "string" === typeof val;
        }
        function isNumber(val) {
            return "number" === typeof val;
        }
        function isObject(val) {
            return null !== val && "object" === typeof val;
        }
        function isPlainObject(val) {
            if ("[object Object]" !== toString.call(val)) return false;
            var prototype = Object.getPrototypeOf(val);
            return null === prototype || prototype === Object.prototype;
        }
        function isDate(val) {
            return "[object Date]" === toString.call(val);
        }
        function isFile(val) {
            return "[object File]" === toString.call(val);
        }
        function isBlob(val) {
            return "[object Blob]" === toString.call(val);
        }
        function isFunction(val) {
            return "[object Function]" === toString.call(val);
        }
        function isStream(val) {
            return isObject(val) && isFunction(val.pipe);
        }
        function isURLSearchParams(val) {
            return "undefined" !== typeof URLSearchParams && val instanceof URLSearchParams;
        }
        function trim(str) {
            return str.trim ? str.trim() : str.replace(/^\s+|\s+$/g, "");
        }
        function isStandardBrowserEnv() {
            if ("undefined" !== typeof navigator && ("ReactNative" === navigator.product || "NativeScript" === navigator.product || "NS" === navigator.product)) return false;
            return "undefined" !== typeof window && "undefined" !== typeof document;
        }
        function forEach(obj, fn) {
            if (null === obj || "undefined" === typeof obj) return;
            if ("object" !== typeof obj) obj = [ obj ];
            if (isArray(obj)) for (var i = 0, l = obj.length; i < l; i++) fn.call(null, obj[i], i, obj); else for (var key in obj) if (Object.prototype.hasOwnProperty.call(obj, key)) fn.call(null, obj[key], key, obj);
        }
        function merge() {
            var result = {};
            function assignValue(val, key) {
                if (isPlainObject(result[key]) && isPlainObject(val)) result[key] = merge(result[key], val); else if (isPlainObject(val)) result[key] = merge({}, val); else if (isArray(val)) result[key] = val.slice(); else result[key] = val;
            }
            for (var i = 0, l = arguments.length; i < l; i++) forEach(arguments[i], assignValue);
            return result;
        }
        function extend(a, b, thisArg) {
            forEach(b, (function(val, key) {
                if (thisArg && "function" === typeof val) a[key] = bind(val, thisArg); else a[key] = val;
            }));
            return a;
        }
        function stripBOM(content) {
            if (65279 === content.charCodeAt(0)) content = content.slice(1);
            return content;
        }
        module.exports = {
            isArray,
            isArrayBuffer,
            isBuffer,
            isFormData,
            isArrayBufferView,
            isString,
            isNumber,
            isObject,
            isPlainObject,
            isUndefined,
            isDate,
            isFile,
            isBlob,
            isFunction,
            isStream,
            isURLSearchParams,
            isStandardBrowserEnv,
            forEach,
            merge,
            extend,
            trim,
            stripBOM
        };
    },
    "./node_modules/decode-uri-component/index.js": module => {
        "use strict";
        var token = "%[a-f0-9]{2}";
        var singleMatcher = new RegExp(token, "gi");
        var multiMatcher = new RegExp("(" + token + ")+", "gi");
        function decodeComponents(components, split) {
            try {
                return decodeURIComponent(components.join(""));
            } catch (err) {}
            if (1 === components.length) return components;
            split = split || 1;
            var left = components.slice(0, split);
            var right = components.slice(split);
            return Array.prototype.concat.call([], decodeComponents(left), decodeComponents(right));
        }
        function decode(input) {
            try {
                return decodeURIComponent(input);
            } catch (err) {
                var tokens = input.match(singleMatcher);
                for (var i = 1; i < tokens.length; i++) {
                    input = decodeComponents(tokens, i).join("");
                    tokens = input.match(singleMatcher);
                }
                return input;
            }
        }
        function customDecodeURIComponent(input) {
            var replaceMap = {
                "%FE%FF": "��",
                "%FF%FE": "��"
            };
            var match = multiMatcher.exec(input);
            while (match) {
                try {
                    replaceMap[match[0]] = decodeURIComponent(match[0]);
                } catch (err) {
                    var result = decode(match[0]);
                    if (result !== match[0]) replaceMap[match[0]] = result;
                }
                match = multiMatcher.exec(input);
            }
            replaceMap["%C2"] = "�";
            var entries = Object.keys(replaceMap);
            for (var i = 0; i < entries.length; i++) {
                var key = entries[i];
                input = input.replace(new RegExp(key, "g"), replaceMap[key]);
            }
            return input;
        }
        module.exports = function(encodedURI) {
            if ("string" !== typeof encodedURI) throw new TypeError("Expected `encodedURI` to be of type `string`, got `" + typeof encodedURI + "`");
            try {
                encodedURI = encodedURI.replace(/\+/g, " ");
                return decodeURIComponent(encodedURI);
            } catch (err) {
                return customDecodeURIComponent(encodedURI);
            }
        };
    },
    "./node_modules/eventemitter3/index.js": module => {
        "use strict";
        var has = Object.prototype.hasOwnProperty, prefix = "~";
        function Events() {}
        if (Object.create) {
            Events.prototype = Object.create(null);
            if (!(new Events).__proto__) prefix = false;
        }
        function EE(fn, context, once) {
            this.fn = fn;
            this.context = context;
            this.once = once || false;
        }
        function addListener(emitter, event, fn, context, once) {
            if ("function" !== typeof fn) throw new TypeError("The listener must be a function");
            var listener = new EE(fn, context || emitter, once), evt = prefix ? prefix + event : event;
            if (!emitter._events[evt]) emitter._events[evt] = listener, emitter._eventsCount++; else if (!emitter._events[evt].fn) emitter._events[evt].push(listener); else emitter._events[evt] = [ emitter._events[evt], listener ];
            return emitter;
        }
        function clearEvent(emitter, evt) {
            if (0 === --emitter._eventsCount) emitter._events = new Events; else delete emitter._events[evt];
        }
        function EventEmitter() {
            this._events = new Events;
            this._eventsCount = 0;
        }
        EventEmitter.prototype.eventNames = function() {
            var events, name, names = [];
            if (0 === this._eventsCount) return names;
            for (name in events = this._events) if (has.call(events, name)) names.push(prefix ? name.slice(1) : name);
            if (Object.getOwnPropertySymbols) return names.concat(Object.getOwnPropertySymbols(events));
            return names;
        };
        EventEmitter.prototype.listeners = function(event) {
            var evt = prefix ? prefix + event : event, handlers = this._events[evt];
            if (!handlers) return [];
            if (handlers.fn) return [ handlers.fn ];
            for (var i = 0, l = handlers.length, ee = new Array(l); i < l; i++) ee[i] = handlers[i].fn;
            return ee;
        };
        EventEmitter.prototype.listenerCount = function(event) {
            var evt = prefix ? prefix + event : event, listeners = this._events[evt];
            if (!listeners) return 0;
            if (listeners.fn) return 1;
            return listeners.length;
        };
        EventEmitter.prototype.emit = function(event, a1, a2, a3, a4, a5) {
            var evt = prefix ? prefix + event : event;
            if (!this._events[evt]) return false;
            var args, i, listeners = this._events[evt], len = arguments.length;
            if (listeners.fn) {
                if (listeners.once) this.removeListener(event, listeners.fn, void 0, true);
                switch (len) {
                  case 1:
                    return listeners.fn.call(listeners.context), true;

                  case 2:
                    return listeners.fn.call(listeners.context, a1), true;

                  case 3:
                    return listeners.fn.call(listeners.context, a1, a2), true;

                  case 4:
                    return listeners.fn.call(listeners.context, a1, a2, a3), true;

                  case 5:
                    return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;

                  case 6:
                    return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;
                }
                for (i = 1, args = new Array(len - 1); i < len; i++) args[i - 1] = arguments[i];
                listeners.fn.apply(listeners.context, args);
            } else {
                var j, length = listeners.length;
                for (i = 0; i < length; i++) {
                    if (listeners[i].once) this.removeListener(event, listeners[i].fn, void 0, true);
                    switch (len) {
                      case 1:
                        listeners[i].fn.call(listeners[i].context);
                        break;

                      case 2:
                        listeners[i].fn.call(listeners[i].context, a1);
                        break;

                      case 3:
                        listeners[i].fn.call(listeners[i].context, a1, a2);
                        break;

                      case 4:
                        listeners[i].fn.call(listeners[i].context, a1, a2, a3);
                        break;

                      default:
                        if (!args) for (j = 1, args = new Array(len - 1); j < len; j++) args[j - 1] = arguments[j];
                        listeners[i].fn.apply(listeners[i].context, args);
                    }
                }
            }
            return true;
        };
        EventEmitter.prototype.on = function(event, fn, context) {
            return addListener(this, event, fn, context, false);
        };
        EventEmitter.prototype.once = function(event, fn, context) {
            return addListener(this, event, fn, context, true);
        };
        EventEmitter.prototype.removeListener = function(event, fn, context, once) {
            var evt = prefix ? prefix + event : event;
            if (!this._events[evt]) return this;
            if (!fn) {
                clearEvent(this, evt);
                return this;
            }
            var listeners = this._events[evt];
            if (listeners.fn) {
                if (listeners.fn === fn && (!once || listeners.once) && (!context || listeners.context === context)) clearEvent(this, evt);
            } else {
                for (var i = 0, events = [], length = listeners.length; i < length; i++) if (listeners[i].fn !== fn || once && !listeners[i].once || context && listeners[i].context !== context) events.push(listeners[i]);
                if (events.length) this._events[evt] = 1 === events.length ? events[0] : events; else clearEvent(this, evt);
            }
            return this;
        };
        EventEmitter.prototype.removeAllListeners = function(event) {
            var evt;
            if (event) {
                evt = prefix ? prefix + event : event;
                if (this._events[evt]) clearEvent(this, evt);
            } else {
                this._events = new Events;
                this._eventsCount = 0;
            }
            return this;
        };
        EventEmitter.prototype.off = EventEmitter.prototype.removeListener;
        EventEmitter.prototype.addListener = EventEmitter.prototype.on;
        EventEmitter.prefixed = prefix;
        EventEmitter.EventEmitter = EventEmitter;
        if (true) module.exports = EventEmitter;
    },
    "./node_modules/events/events.js": module => {
        "use strict";
        var R = "object" === typeof Reflect ? Reflect : null;
        var ReflectApply = R && "function" === typeof R.apply ? R.apply : function(target, receiver, args) {
            return Function.prototype.apply.call(target, receiver, args);
        };
        var ReflectOwnKeys;
        if (R && "function" === typeof R.ownKeys) ReflectOwnKeys = R.ownKeys; else if (Object.getOwnPropertySymbols) ReflectOwnKeys = function(target) {
            return Object.getOwnPropertyNames(target).concat(Object.getOwnPropertySymbols(target));
        }; else ReflectOwnKeys = function(target) {
            return Object.getOwnPropertyNames(target);
        };
        function ProcessEmitWarning(warning) {
            if (console && console.warn) console.warn(warning);
        }
        var NumberIsNaN = Number.isNaN || function(value) {
            return value !== value;
        };
        function EventEmitter() {
            EventEmitter.init.call(this);
        }
        module.exports = EventEmitter;
        module.exports.once = once;
        EventEmitter.EventEmitter = EventEmitter;
        EventEmitter.prototype._events = void 0;
        EventEmitter.prototype._eventsCount = 0;
        EventEmitter.prototype._maxListeners = void 0;
        var defaultMaxListeners = 10;
        function checkListener(listener) {
            if ("function" !== typeof listener) throw new TypeError('The "listener" argument must be of type Function. Received type ' + typeof listener);
        }
        Object.defineProperty(EventEmitter, "defaultMaxListeners", {
            enumerable: true,
            get: function() {
                return defaultMaxListeners;
            },
            set: function(arg) {
                if ("number" !== typeof arg || arg < 0 || NumberIsNaN(arg)) throw new RangeError('The value of "defaultMaxListeners" is out of range. It must be a non-negative number. Received ' + arg + ".");
                defaultMaxListeners = arg;
            }
        });
        EventEmitter.init = function() {
            if (void 0 === this._events || this._events === Object.getPrototypeOf(this)._events) {
                this._events = Object.create(null);
                this._eventsCount = 0;
            }
            this._maxListeners = this._maxListeners || void 0;
        };
        EventEmitter.prototype.setMaxListeners = function(n) {
            if ("number" !== typeof n || n < 0 || NumberIsNaN(n)) throw new RangeError('The value of "n" is out of range. It must be a non-negative number. Received ' + n + ".");
            this._maxListeners = n;
            return this;
        };
        function _getMaxListeners(that) {
            if (void 0 === that._maxListeners) return EventEmitter.defaultMaxListeners;
            return that._maxListeners;
        }
        EventEmitter.prototype.getMaxListeners = function() {
            return _getMaxListeners(this);
        };
        EventEmitter.prototype.emit = function(type) {
            var args = [];
            for (var i = 1; i < arguments.length; i++) args.push(arguments[i]);
            var doError = "error" === type;
            var events = this._events;
            if (void 0 !== events) doError = doError && void 0 === events.error; else if (!doError) return false;
            if (doError) {
                var er;
                if (args.length > 0) er = args[0];
                if (er instanceof Error) throw er;
                var err = new Error("Unhandled error." + (er ? " (" + er.message + ")" : ""));
                err.context = er;
                throw err;
            }
            var handler = events[type];
            if (void 0 === handler) return false;
            if ("function" === typeof handler) ReflectApply(handler, this, args); else {
                var len = handler.length;
                var listeners = arrayClone(handler, len);
                for (i = 0; i < len; ++i) ReflectApply(listeners[i], this, args);
            }
            return true;
        };
        function _addListener(target, type, listener, prepend) {
            var m;
            var events;
            var existing;
            checkListener(listener);
            events = target._events;
            if (void 0 === events) {
                events = target._events = Object.create(null);
                target._eventsCount = 0;
            } else {
                if (void 0 !== events.newListener) {
                    target.emit("newListener", type, listener.listener ? listener.listener : listener);
                    events = target._events;
                }
                existing = events[type];
            }
            if (void 0 === existing) {
                existing = events[type] = listener;
                ++target._eventsCount;
            } else {
                if ("function" === typeof existing) existing = events[type] = prepend ? [ listener, existing ] : [ existing, listener ]; else if (prepend) existing.unshift(listener); else existing.push(listener);
                m = _getMaxListeners(target);
                if (m > 0 && existing.length > m && !existing.warned) {
                    existing.warned = true;
                    var w = new Error("Possible EventEmitter memory leak detected. " + existing.length + " " + String(type) + " listeners " + "added. Use emitter.setMaxListeners() to " + "increase limit");
                    w.name = "MaxListenersExceededWarning";
                    w.emitter = target;
                    w.type = type;
                    w.count = existing.length;
                    ProcessEmitWarning(w);
                }
            }
            return target;
        }
        EventEmitter.prototype.addListener = function(type, listener) {
            return _addListener(this, type, listener, false);
        };
        EventEmitter.prototype.on = EventEmitter.prototype.addListener;
        EventEmitter.prototype.prependListener = function(type, listener) {
            return _addListener(this, type, listener, true);
        };
        function onceWrapper() {
            if (!this.fired) {
                this.target.removeListener(this.type, this.wrapFn);
                this.fired = true;
                if (0 === arguments.length) return this.listener.call(this.target);
                return this.listener.apply(this.target, arguments);
            }
        }
        function _onceWrap(target, type, listener) {
            var state = {
                fired: false,
                wrapFn: void 0,
                target,
                type,
                listener
            };
            var wrapped = onceWrapper.bind(state);
            wrapped.listener = listener;
            state.wrapFn = wrapped;
            return wrapped;
        }
        EventEmitter.prototype.once = function(type, listener) {
            checkListener(listener);
            this.on(type, _onceWrap(this, type, listener));
            return this;
        };
        EventEmitter.prototype.prependOnceListener = function(type, listener) {
            checkListener(listener);
            this.prependListener(type, _onceWrap(this, type, listener));
            return this;
        };
        EventEmitter.prototype.removeListener = function(type, listener) {
            var list, events, position, i, originalListener;
            checkListener(listener);
            events = this._events;
            if (void 0 === events) return this;
            list = events[type];
            if (void 0 === list) return this;
            if (list === listener || list.listener === listener) if (0 === --this._eventsCount) this._events = Object.create(null); else {
                delete events[type];
                if (events.removeListener) this.emit("removeListener", type, list.listener || listener);
            } else if ("function" !== typeof list) {
                position = -1;
                for (i = list.length - 1; i >= 0; i--) if (list[i] === listener || list[i].listener === listener) {
                    originalListener = list[i].listener;
                    position = i;
                    break;
                }
                if (position < 0) return this;
                if (0 === position) list.shift(); else spliceOne(list, position);
                if (1 === list.length) events[type] = list[0];
                if (void 0 !== events.removeListener) this.emit("removeListener", type, originalListener || listener);
            }
            return this;
        };
        EventEmitter.prototype.off = EventEmitter.prototype.removeListener;
        EventEmitter.prototype.removeAllListeners = function(type) {
            var listeners, events, i;
            events = this._events;
            if (void 0 === events) return this;
            if (void 0 === events.removeListener) {
                if (0 === arguments.length) {
                    this._events = Object.create(null);
                    this._eventsCount = 0;
                } else if (void 0 !== events[type]) if (0 === --this._eventsCount) this._events = Object.create(null); else delete events[type];
                return this;
            }
            if (0 === arguments.length) {
                var keys = Object.keys(events);
                var key;
                for (i = 0; i < keys.length; ++i) {
                    key = keys[i];
                    if ("removeListener" === key) continue;
                    this.removeAllListeners(key);
                }
                this.removeAllListeners("removeListener");
                this._events = Object.create(null);
                this._eventsCount = 0;
                return this;
            }
            listeners = events[type];
            if ("function" === typeof listeners) this.removeListener(type, listeners); else if (void 0 !== listeners) for (i = listeners.length - 1; i >= 0; i--) this.removeListener(type, listeners[i]);
            return this;
        };
        function _listeners(target, type, unwrap) {
            var events = target._events;
            if (void 0 === events) return [];
            var evlistener = events[type];
            if (void 0 === evlistener) return [];
            if ("function" === typeof evlistener) return unwrap ? [ evlistener.listener || evlistener ] : [ evlistener ];
            return unwrap ? unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);
        }
        EventEmitter.prototype.listeners = function(type) {
            return _listeners(this, type, true);
        };
        EventEmitter.prototype.rawListeners = function(type) {
            return _listeners(this, type, false);
        };
        EventEmitter.listenerCount = function(emitter, type) {
            if ("function" === typeof emitter.listenerCount) return emitter.listenerCount(type); else return listenerCount.call(emitter, type);
        };
        EventEmitter.prototype.listenerCount = listenerCount;
        function listenerCount(type) {
            var events = this._events;
            if (void 0 !== events) {
                var evlistener = events[type];
                if ("function" === typeof evlistener) return 1; else if (void 0 !== evlistener) return evlistener.length;
            }
            return 0;
        }
        EventEmitter.prototype.eventNames = function() {
            return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];
        };
        function arrayClone(arr, n) {
            var copy = new Array(n);
            for (var i = 0; i < n; ++i) copy[i] = arr[i];
            return copy;
        }
        function spliceOne(list, index) {
            for (;index + 1 < list.length; index++) list[index] = list[index + 1];
            list.pop();
        }
        function unwrapListeners(arr) {
            var ret = new Array(arr.length);
            for (var i = 0; i < ret.length; ++i) ret[i] = arr[i].listener || arr[i];
            return ret;
        }
        function once(emitter, name) {
            return new Promise((function(resolve, reject) {
                function errorListener(err) {
                    emitter.removeListener(name, resolver);
                    reject(err);
                }
                function resolver() {
                    if ("function" === typeof emitter.removeListener) emitter.removeListener("error", errorListener);
                    resolve([].slice.call(arguments));
                }
                eventTargetAgnosticAddListener(emitter, name, resolver, {
                    once: true
                });
                if ("error" !== name) addErrorHandlerIfEventEmitter(emitter, errorListener, {
                    once: true
                });
            }));
        }
        function addErrorHandlerIfEventEmitter(emitter, handler, flags) {
            if ("function" === typeof emitter.on) eventTargetAgnosticAddListener(emitter, "error", handler, flags);
        }
        function eventTargetAgnosticAddListener(emitter, name, listener, flags) {
            if ("function" === typeof emitter.on) if (flags.once) emitter.once(name, listener); else emitter.on(name, listener); else if ("function" === typeof emitter.addEventListener) emitter.addEventListener(name, (function wrapListener(arg) {
                if (flags.once) emitter.removeEventListener(name, wrapListener);
                listener(arg);
            })); else throw new TypeError('The "emitter" argument must be of type EventEmitter. Received type ' + typeof emitter);
        }
    },
    "./node_modules/filter-obj/index.js": module => {
        "use strict";
        module.exports = function(obj, predicate) {
            var ret = {};
            var keys = Object.keys(obj);
            var isArr = Array.isArray(predicate);
            for (var i = 0; i < keys.length; i++) {
                var key = keys[i];
                var val = obj[key];
                if (isArr ? -1 !== predicate.indexOf(key) : predicate(key, val, obj)) ret[key] = val;
            }
            return ret;
        };
    },
    "./node_modules/js-cookie/src/js.cookie.js": (module, exports, __webpack_require__) => {
        var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;
        (function(factory) {
            var registeredInModuleLoader;
            if (true) {
                !(__WEBPACK_AMD_DEFINE_FACTORY__ = factory, __WEBPACK_AMD_DEFINE_RESULT__ = "function" === typeof __WEBPACK_AMD_DEFINE_FACTORY__ ? __WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module) : __WEBPACK_AMD_DEFINE_FACTORY__, 
                void 0 !== __WEBPACK_AMD_DEFINE_RESULT__ && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
                registeredInModuleLoader = true;
            }
            if (true) {
                module.exports = factory();
                registeredInModuleLoader = true;
            }
            if (!registeredInModuleLoader) {
                var OldCookies = window.Cookies;
                var api = window.Cookies = factory();
                api.noConflict = function() {
                    window.Cookies = OldCookies;
                    return api;
                };
            }
        })((function() {
            function extend() {
                var i = 0;
                var result = {};
                for (;i < arguments.length; i++) {
                    var attributes = arguments[i];
                    for (var key in attributes) result[key] = attributes[key];
                }
                return result;
            }
            function decode(s) {
                return s.replace(/(%[0-9A-Z]{2})+/g, decodeURIComponent);
            }
            function init(converter) {
                function api() {}
                function set(key, value, attributes) {
                    if ("undefined" === typeof document) return;
                    attributes = extend({
                        path: "/"
                    }, api.defaults, attributes);
                    if ("number" === typeof attributes.expires) attributes.expires = new Date(1 * new Date + 864e5 * attributes.expires);
                    attributes.expires = attributes.expires ? attributes.expires.toUTCString() : "";
                    try {
                        var result = JSON.stringify(value);
                        if (/^[\{\[]/.test(result)) value = result;
                    } catch (e) {}
                    value = converter.write ? converter.write(value, key) : encodeURIComponent(String(value)).replace(/%(23|24|26|2B|3A|3C|3E|3D|2F|3F|40|5B|5D|5E|60|7B|7D|7C)/g, decodeURIComponent);
                    key = encodeURIComponent(String(key)).replace(/%(23|24|26|2B|5E|60|7C)/g, decodeURIComponent).replace(/[\(\)]/g, escape);
                    var stringifiedAttributes = "";
                    for (var attributeName in attributes) {
                        if (!attributes[attributeName]) continue;
                        stringifiedAttributes += "; " + attributeName;
                        if (true === attributes[attributeName]) continue;
                        stringifiedAttributes += "=" + attributes[attributeName].split(";")[0];
                    }
                    return document.cookie = key + "=" + value + stringifiedAttributes;
                }
                function get(key, json) {
                    if ("undefined" === typeof document) return;
                    var jar = {};
                    var cookies = document.cookie ? document.cookie.split("; ") : [];
                    var i = 0;
                    for (;i < cookies.length; i++) {
                        var parts = cookies[i].split("=");
                        var cookie = parts.slice(1).join("=");
                        if (!json && '"' === cookie.charAt(0)) cookie = cookie.slice(1, -1);
                        try {
                            var name = decode(parts[0]);
                            cookie = (converter.read || converter)(cookie, name) || decode(cookie);
                            if (json) try {
                                cookie = JSON.parse(cookie);
                            } catch (e) {}
                            jar[name] = cookie;
                            if (key === name) break;
                        } catch (e) {}
                    }
                    return key ? jar[key] : jar;
                }
                api.set = set;
                api.get = function(key) {
                    return get(key, false);
                };
                api.getJSON = function(key) {
                    return get(key, true);
                };
                api.remove = function(key, attributes) {
                    set(key, "", extend(attributes, {
                        expires: -1
                    }));
                };
                api.defaults = {};
                api.withConverter = init;
                return api;
            }
            return init((function() {}));
        }));
    },
    "./node_modules/lodash/_SetCache.js": (module, __unused_webpack_exports, __webpack_require__) => {
        var isArray = __webpack_require__("./node_modules/lodash/isArray.js");
        function castArray() {
            if (!arguments.length) return [];
            var value = arguments[0];
            return isArray(value) ? value : [ value ];
        }
        module.exports = castArray;
    },
    "./node_modules/lodash/_Stack.js": (module, __unused_webpack_exports, __webpack_require__) => {
        var listCacheClear = __webpack_require__("./node_modules/lodash/_listCacheClear.js"), listCacheDelete = __webpack_require__("./node_modules/lodash/_listCacheDelete.js"), listCacheGet = __webpack_require__("./node_modules/lodash/_listCacheGet.js"), listCacheHas = __webpack_require__("./node_modules/lodash/_listCacheHas.js"), listCacheSet = __webpack_require__("./node_modules/lodash/_listCacheSet.js");
        function ListCache(entries) {
            var index = -1, length = null == entries ? 0 : entries.length;
            this.clear();
            while (++index < length) {
                var entry = entries[index];
                this.set(entry[0], entry[1]);
            }
        }
        ListCache.prototype.clear = listCacheClear;
        ListCache.prototype["delete"] = listCacheDelete;
        ListCache.prototype.get = listCacheGet;
        ListCache.prototype.has = listCacheHas;
        ListCache.prototype.set = listCacheSet;
        module.exports = ListCache;
    },
    "./node_modules/lodash/_arrayReduce.js": module => {
        function arrayReduce(array, iteratee, accumulator, initAccum) {
            var index = -1, length = null == array ? 0 : array.length;
            if (initAccum && length) accumulator = array[++index];
            while (++index < length) accumulator = iteratee(accumulator, array[index], index, array);
            return accumulator;
        }
        module.exports = arrayReduce;
    },
    "./node_modules/lodash/_arraySome.js": module => {
        function arraySome(array, predicate) {
            var index = -1, length = null == array ? 0 : array.length;
            while (++index < length) if (predicate(array[index], index, array)) return true;
            return false;
        }
        module.exports = arraySome;
    },
    "./node_modules/lodash/_asciiWords.js": module => {
        var reAsciiWord = /[^\x00-\x2f\x3a-\x40\x5b-\x60\x7b-\x7f]+/g;
        function asciiWords(string) {
            return string.match(reAsciiWord) || [];
        }
        module.exports = asciiWords;
    },
    "./node_modules/lodash/_assocIndexOf.js": (module, __unused_webpack_exports, __webpack_require__) => {
        var eq = __webpack_require__("./node_modules/lodash/eq.js");
        function assocIndexOf(array, key) {
            var length = array.length;
            while (length--) if (eq(array[length][0], key)) return length;
            return -1;
        }
        module.exports = assocIndexOf;
    },
    "./node_modules/lodash/_baseAssignValue.js": (module, __unused_webpack_exports, __webpack_require__) => {
        var defineProperty = __webpack_require__("./node_modules/lodash/_defineProperty.js");
        function baseAssignValue(object, key, value) {
            if ("__proto__" == key && defineProperty) defineProperty(object, key, {
                configurable: true,
                enumerable: true,
                value,
                writable: true
            }); else object[key] = value;
        }
        module.exports = baseAssignValue;
    },
    "./node_modules/lodash/_baseFor.js": (module, __unused_webpack_exports, __webpack_require__) => {
        var createBaseFor = __webpack_require__("./node_modules/lodash/_createBaseFor.js");
        var baseFor = createBaseFor();
        module.exports = baseFor;
    },
    "./node_modules/lodash/_baseForOwn.js": (module, __unused_webpack_exports, __webpack_require__) => {
        var baseFor = __webpack_require__("./node_modules/lodash/_baseFor.js"), keys = __webpack_require__("./node_modules/lodash/keys.js");
        function baseForOwn(object, iteratee) {
            return object && baseFor(object, iteratee, keys);
        }
        module.exports = baseForOwn;
    },
    "./node_modules/lodash/_baseGet.js": (module, __unused_webpack_exports, __webpack_require__) => {
        var castPath = __webpack_require__("./node_modules/lodash/_castPath.js"), toKey = __webpack_require__("./node_modules/lodash/_toKey.js");
        function baseGet(object, path) {
            path = castPath(path, object);
            var index = 0, length = path.length;
            while (null != object && index < length) object = object[toKey(path[index++])];
            return index && index == length ? object : void 0;
        }
        module.exports = baseGet;
    },
    "./node_modules/lodash/_baseGetTag.js": module => {
        var objectProto = Object.prototype;
        var nativeObjectToString = objectProto.toString;
        function objectToString(value) {
            return nativeObjectToString.call(value);
        }
        module.exports = objectToString;
    },
    "./node_modules/lodash/_baseHasIn.js": module => {
        function baseHasIn(object, key) {
            return null != object && key in Object(object);
        }
        module.exports = baseHasIn;
    },
    "./node_modules/lodash/_baseIndexOf.js": module => {
        function strictIndexOf(array, value, fromIndex) {
            var index = fromIndex - 1, length = array.length;
            while (++index < length) if (array[index] === value) return index;
            return -1;
        }
        module.exports = strictIndexOf;
    },
    "./node_modules/lodash/_baseIsEqual.js": (module, __unused_webpack_exports, __webpack_require__) => {
        var baseIsEqualDeep = __webpack_require__("./node_modules/lodash/_baseIsEqualDeep.js"), isObjectLike = __webpack_require__("./node_modules/lodash/isObjectLike.js");
        function baseIsEqual(value, other, bitmask, customizer, stack) {
            if (value === other) return true;
            if (null == value || null == other || !isObjectLike(value) && !isObjectLike(other)) return value !== value && other !== other;
            return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);
        }
        module.exports = baseIsEqual;
    },
    "./node_modules/lodash/_baseIsEqualDeep.js": (module, __unused_webpack_exports, __webpack_require__) => {
        var Stack = __webpack_require__("./node_modules/lodash/_Stack.js"), equalArrays = __webpack_require__("./node_modules/lodash/_equalArrays.js"), equalByTag = __webpack_require__("./node_modules/lodash/_equalByTag.js"), equalObjects = __webpack_require__("./node_modules/lodash/_equalObjects.js"), getTag = __webpack_require__("./node_modules/lodash/_getTag.js"), isArray = __webpack_require__("./node_modules/lodash/isArray.js"), isBuffer = __webpack_require__("./node_modules/lodash/isBuffer.js"), isTypedArray = __webpack_require__("./node_modules/lodash/isTypedArray.js");
        var COMPARE_PARTIAL_FLAG = 1;
        var argsTag = "[object Arguments]", arrayTag = "[object Array]", objectTag = "[object Object]";
        var objectProto = Object.prototype;
        var hasOwnProperty = objectProto.hasOwnProperty;
        function baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {
            var objIsArr = isArray(object), othIsArr = isArray(other), objTag = objIsArr ? arrayTag : getTag(object), othTag = othIsArr ? arrayTag : getTag(other);
            objTag = objTag == argsTag ? objectTag : objTag;
            othTag = othTag == argsTag ? objectTag : othTag;
            var objIsObj = objTag == objectTag, othIsObj = othTag == objectTag, isSameTag = objTag == othTag;
            if (isSameTag && isBuffer(object)) {
                if (!isBuffer(other)) return false;
                objIsArr = true;
                objIsObj = false;
            }
            if (isSameTag && !objIsObj) {
                stack || (stack = new Stack);
                return objIsArr || isTypedArray(object) ? equalArrays(object, other, bitmask, customizer, equalFunc, stack) : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);
            }
            if (!(bitmask & COMPARE_PARTIAL_FLAG)) {
                var objIsWrapped = objIsObj && hasOwnProperty.call(object, "__wrapped__"), othIsWrapped = othIsObj && hasOwnProperty.call(other, "__wrapped__");
                if (objIsWrapped || othIsWrapped) {
                    var objUnwrapped = objIsWrapped ? object.value() : object, othUnwrapped = othIsWrapped ? other.value() : other;
                    stack || (stack = new Stack);
                    return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);
                }
            }
            if (!isSameTag) return false;
            stack || (stack = new Stack);
            return equalObjects(object, other, bitmask, customizer, equalFunc, stack);
        }
        module.exports = baseIsEqualDeep;
    },
    "./node_modules/lodash/_baseIsMatch.js": (module, __unused_webpack_exports, __webpack_require__) => {
        var Stack = __webpack_require__("./node_modules/lodash/_Stack.js"), baseIsEqual = __webpack_require__("./node_modules/lodash/_baseIsEqual.js");
        var COMPARE_PARTIAL_FLAG = 1, COMPARE_UNORDERED_FLAG = 2;
        function baseIsMatch(object, source, matchData, customizer) {
            var index = matchData.length, length = index, noCustomizer = !customizer;
            if (null == object) return !length;
            object = Object(object);
            while (index--) {
                var data = matchData[index];
                if (noCustomizer && data[2] ? data[1] !== object[data[0]] : !(data[0] in object)) return false;
            }
            while (++index < length) {
                data = matchData[index];
                var key = data[0], objValue = object[key], srcValue = data[1];
                if (noCustomizer && data[2]) {
                    if (void 0 === objValue && !(key in object)) return false;
                } else {
                    var stack = new Stack;
                    if (customizer) var result = customizer(objValue, srcValue, key, object, source, stack);
                    if (!(void 0 === result ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack) : result)) return false;
                }
            }
            return true;
        }
        module.exports = baseIsMatch;
    },
    "./node_modules/lodash/_baseIteratee.js": (module, __unused_webpack_exports, __webpack_require__) => {
        var baseMatches = __webpack_require__("./node_modules/lodash/_baseMatches.js"), baseMatchesProperty = __webpack_require__("./node_modules/lodash/_baseMatchesProperty.js"), identity = __webpack_require__("./node_modules/lodash/identity.js"), isArray = __webpack_require__("./node_modules/lodash/isArray.js"), property = __webpack_require__("./node_modules/lodash/property.js");
        function baseIteratee(value) {
            if ("function" == typeof value) return value;
            if (null == value) return identity;
            if ("object" == typeof value) return isArray(value) ? baseMatchesProperty(value[0], value[1]) : baseMatches(value);
            return property(value);
        }
        module.exports = baseIteratee;
    },
    "./node_modules/lodash/_baseMatches.js": (module, __unused_webpack_exports, __webpack_require__) => {
        var baseIsMatch = __webpack_require__("./node_modules/lodash/_baseIsMatch.js"), getMatchData = __webpack_require__("./node_modules/lodash/_getMatchData.js"), matchesStrictComparable = __webpack_require__("./node_modules/lodash/_matchesStrictComparable.js");
        function baseMatches(source) {
            var matchData = getMatchData(source);
            if (1 == matchData.length && matchData[0][2]) return matchesStrictComparable(matchData[0][0], matchData[0][1]);
            return function(object) {
                return object === source || baseIsMatch(object, source, matchData);
            };
        }
        module.exports = baseMatches;
    },
    "./node_modules/lodash/_baseMatchesProperty.js": (module, __unused_webpack_exports, __webpack_require__) => {
        var baseIsEqual = __webpack_require__("./node_modules/lodash/_baseIsEqual.js"), get = __webpack_require__("./node_modules/lodash/get.js"), hasIn = __webpack_require__("./node_modules/lodash/hasIn.js"), isKey = __webpack_require__("./node_modules/lodash/_isKey.js"), isStrictComparable = __webpack_require__("./node_modules/lodash/_isStrictComparable.js"), matchesStrictComparable = __webpack_require__("./node_modules/lodash/_matchesStrictComparable.js"), toKey = __webpack_require__("./node_modules/lodash/_toKey.js");
        var COMPARE_PARTIAL_FLAG = 1, COMPARE_UNORDERED_FLAG = 2;
        function baseMatchesProperty(path, srcValue) {
            if (isKey(path) && isStrictComparable(srcValue)) return matchesStrictComparable(toKey(path), srcValue);
            return function(object) {
                var objValue = get(object, path);
                return void 0 === objValue && objValue === srcValue ? hasIn(object, path) : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);
            };
        }
        module.exports = baseMatchesProperty;
    },
    "./node_modules/lodash/_baseProperty.js": module => {
        function baseProperty(key) {
            return function(object) {
                return null == object ? void 0 : object[key];
            };
        }
        module.exports = baseProperty;
    },
    "./node_modules/lodash/_basePropertyDeep.js": (module, __unused_webpack_exports, __webpack_require__) => {
        var baseGet = __webpack_require__("./node_modules/lodash/_baseGet.js");
        function basePropertyDeep(path) {
            return function(object) {
                return baseGet(object, path);
            };
        }
        module.exports = basePropertyDeep;
    },
    "./node_modules/lodash/_basePropertyOf.js": module => {
        function basePropertyOf(object) {
            return function(key) {
                return null == object ? void 0 : object[key];
            };
        }
        module.exports = basePropertyOf;
    },
    "./node_modules/lodash/_baseToString.js": module => {
        function identity(value) {
            return value;
        }
        module.exports = identity;
    },
    "./node_modules/lodash/_cacheHas.js": (module, __unused_webpack_exports, __webpack_require__) => {
        var baseIndexOf = __webpack_require__("./node_modules/lodash/_baseIndexOf.js");
        function arrayIncludes(array, value) {
            var length = null == array ? 0 : array.length;
            return !!length && baseIndexOf(array, value, 0) > -1;
        }
        module.exports = arrayIncludes;
    },
    "./node_modules/lodash/_castPath.js": (module, __unused_webpack_exports, __webpack_require__) => {
        var isArray = __webpack_require__("./node_modules/lodash/isArray.js"), isKey = __webpack_require__("./node_modules/lodash/_isKey.js"), stringToPath = __webpack_require__("./node_modules/lodash/_stringToPath.js"), toString = __webpack_require__("./node_modules/lodash/toString.js");
        function castPath(value, object) {
            if (isArray(value)) return value;
            return isKey(value, object) ? [ value ] : stringToPath(toString(value));
        }
        module.exports = castPath;
    },
    "./node_modules/lodash/_createBaseFor.js": module => {
        function createBaseFor(fromRight) {
            return function(object, iteratee, keysFunc) {
                var index = -1, iterable = Object(object), props = keysFunc(object), length = props.length;
                while (length--) {
                    var key = props[fromRight ? length : ++index];
                    if (false === iteratee(iterable[key], key, iterable)) break;
                }
                return object;
            };
        }
        module.exports = createBaseFor;
    },
    "./node_modules/lodash/_createCompounder.js": (module, __unused_webpack_exports, __webpack_require__) => {
        var arrayReduce = __webpack_require__("./node_modules/lodash/_arrayReduce.js"), deburr = __webpack_require__("./node_modules/lodash/deburr.js"), words = __webpack_require__("./node_modules/lodash/words.js");
        var rsApos = "['’]";
        var reApos = RegExp(rsApos, "g");
        function createCompounder(callback) {
            return function(string) {
                return arrayReduce(words(deburr(string).replace(reApos, "")), callback, "");
            };
        }
        module.exports = createCompounder;
    },
    "./node_modules/lodash/_defineProperty.js": (module, __unused_webpack_exports, __webpack_require__) => {
        var getNative = __webpack_require__("./node_modules/lodash/_getNative.js");
        var defineProperty = function() {
            try {
                var func = getNative(Object, "defineProperty");
                func({}, "", {});
                return func;
            } catch (e) {}
        }();
        module.exports = defineProperty;
    },
    "./node_modules/lodash/_equalArrays.js": (module, __unused_webpack_exports, __webpack_require__) => {
        var SetCache = __webpack_require__("./node_modules/lodash/_SetCache.js"), arraySome = __webpack_require__("./node_modules/lodash/_arraySome.js"), cacheHas = __webpack_require__("./node_modules/lodash/_cacheHas.js");
        var COMPARE_PARTIAL_FLAG = 1, COMPARE_UNORDERED_FLAG = 2;
        function equalArrays(array, other, bitmask, customizer, equalFunc, stack) {
            var isPartial = bitmask & COMPARE_PARTIAL_FLAG, arrLength = array.length, othLength = other.length;
            if (arrLength != othLength && !(isPartial && othLength > arrLength)) return false;
            var arrStacked = stack.get(array);
            var othStacked = stack.get(other);
            if (arrStacked && othStacked) return arrStacked == other && othStacked == array;
            var index = -1, result = true, seen = bitmask & COMPARE_UNORDERED_FLAG ? new SetCache : void 0;
            stack.set(array, other);
            stack.set(other, array);
            while (++index < arrLength) {
                var arrValue = array[index], othValue = other[index];
                if (customizer) var compared = isPartial ? customizer(othValue, arrValue, index, other, array, stack) : customizer(arrValue, othValue, index, array, other, stack);
                if (void 0 !== compared) {
                    if (compared) continue;
                    result = false;
                    break;
                }
                if (seen) {
                    if (!arraySome(other, (function(othValue, othIndex) {
                        if (!cacheHas(seen, othIndex) && (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) return seen.push(othIndex);
                    }))) {
                        result = false;
                        break;
                    }
                } else if (!(arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {
                    result = false;
                    break;
                }
            }
            stack["delete"](array);
            stack["delete"](other);
            return result;
        }
        module.exports = equalArrays;
    },
    "./node_modules/lodash/_equalByTag.js": module => {
        function eq(value, other) {
            return value === other || value !== value && other !== other;
        }
        module.exports = eq;
    },
    "./node_modules/lodash/_equalObjects.js": (module, __unused_webpack_exports, __webpack_require__) => {
        var getAllKeys = __webpack_require__("./node_modules/lodash/_getAllKeys.js");
        var COMPARE_PARTIAL_FLAG = 1;
        var objectProto = Object.prototype;
        var hasOwnProperty = objectProto.hasOwnProperty;
        function equalObjects(object, other, bitmask, customizer, equalFunc, stack) {
            var isPartial = bitmask & COMPARE_PARTIAL_FLAG, objProps = getAllKeys(object), objLength = objProps.length, othProps = getAllKeys(other), othLength = othProps.length;
            if (objLength != othLength && !isPartial) return false;
            var index = objLength;
            while (index--) {
                var key = objProps[index];
                if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) return false;
            }
            var objStacked = stack.get(object);
            var othStacked = stack.get(other);
            if (objStacked && othStacked) return objStacked == other && othStacked == object;
            var result = true;
            stack.set(object, other);
            stack.set(other, object);
            var skipCtor = isPartial;
            while (++index < objLength) {
                key = objProps[index];
                var objValue = object[key], othValue = other[key];
                if (customizer) var compared = isPartial ? customizer(othValue, objValue, key, other, object, stack) : customizer(objValue, othValue, key, object, other, stack);
                if (!(void 0 === compared ? objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack) : compared)) {
                    result = false;
                    break;
                }
                skipCtor || (skipCtor = "constructor" == key);
            }
            if (result && !skipCtor) {
                var objCtor = object.constructor, othCtor = other.constructor;
                if (objCtor != othCtor && "constructor" in object && "constructor" in other && !("function" == typeof objCtor && objCtor instanceof objCtor && "function" == typeof othCtor && othCtor instanceof othCtor)) result = false;
            }
            stack["delete"](object);
            stack["delete"](other);
            return result;
        }
        module.exports = equalObjects;
    },
    "./node_modules/lodash/_escapeHtmlChar.js": (module, __unused_webpack_exports, __webpack_require__) => {
        var basePropertyOf = __webpack_require__("./node_modules/lodash/_basePropertyOf.js");
        var htmlEscapes = {
            "&": "&amp;",
            "<": "&lt;",
            ">": "&gt;",
            '"': "&quot;",
            "'": "&#39;"
        };
        var escapeHtmlChar = basePropertyOf(htmlEscapes);
        module.exports = escapeHtmlChar;
    },
    "./node_modules/lodash/_freeGlobal.js": (module, __unused_webpack_exports, __webpack_require__) => {
        var freeGlobal = "object" == typeof __webpack_require__.g && __webpack_require__.g && __webpack_require__.g.Object === Object && __webpack_require__.g;
        module.exports = freeGlobal;
    },
    "./node_modules/lodash/_getAllKeys.js": (module, __unused_webpack_exports, __webpack_require__) => {
        var overArg = __webpack_require__("./node_modules/lodash/_overArg.js");
        var nativeKeys = overArg(Object.keys, Object);
        module.exports = nativeKeys;
    },
    "./node_modules/lodash/_getMatchData.js": (module, __unused_webpack_exports, __webpack_require__) => {
        var isStrictComparable = __webpack_require__("./node_modules/lodash/_isStrictComparable.js"), keys = __webpack_require__("./node_modules/lodash/keys.js");
        function getMatchData(object) {
            var result = keys(object), length = result.length;
            while (length--) {
                var key = result[length], value = object[key];
                result[length] = [ key, value, isStrictComparable(value) ];
            }
            return result;
        }
        module.exports = getMatchData;
    },
    "./node_modules/lodash/_getNative.js": module => {
        function getValue(object, key) {
            return null == object ? void 0 : object[key];
        }
        module.exports = getValue;
    },
    "./node_modules/lodash/_getPrototype.js": (module, __unused_webpack_exports, __webpack_require__) => {
        var overArg = __webpack_require__("./node_modules/lodash/_overArg.js");
        var getPrototype = overArg(Object.getPrototypeOf, Object);
        module.exports = getPrototype;
    },
    "./node_modules/lodash/_getTag.js": module => {
        var objectProto = Object.prototype;
        var nativeObjectToString = objectProto.toString;
        function objectToString(value) {
            return nativeObjectToString.call(value);
        }
        module.exports = objectToString;
    },
    "./node_modules/lodash/_hasPath.js": (module, __unused_webpack_exports, __webpack_require__) => {
        var castPath = __webpack_require__("./node_modules/lodash/_castPath.js"), isArguments = __webpack_require__("./node_modules/lodash/isArguments.js"), isArray = __webpack_require__("./node_modules/lodash/isArray.js"), isIndex = __webpack_require__("./node_modules/lodash/_isIndex.js"), isLength = __webpack_require__("./node_modules/lodash/isLength.js"), toKey = __webpack_require__("./node_modules/lodash/_toKey.js");
        function hasPath(object, path, hasFunc) {
            path = castPath(path, object);
            var index = -1, length = path.length, result = false;
            while (++index < length) {
                var key = toKey(path[index]);
                if (!(result = null != object && hasFunc(object, key))) break;
                object = object[key];
            }
            if (result || ++index != length) return result;
            length = null == object ? 0 : object.length;
            return !!length && isLength(length) && isIndex(key, length) && (isArray(object) || isArguments(object));
        }
        module.exports = hasPath;
    },
    "./node_modules/lodash/_hasUnicodeWord.js": module => {
        var reHasUnicodeWord = /[a-z][A-Z]|[A-Z]{2}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;
        function hasUnicodeWord(string) {
            return reHasUnicodeWord.test(string);
        }
        module.exports = hasUnicodeWord;
    },
    "./node_modules/lodash/_isIndex.js": module => {
        var MAX_SAFE_INTEGER = 9007199254740991;
        var reIsUint = /^(?:0|[1-9]\d*)$/;
        function isIndex(value, length) {
            var type = typeof value;
            length = null == length ? MAX_SAFE_INTEGER : length;
            return !!length && ("number" == type || "symbol" != type && reIsUint.test(value)) && value > -1 && value % 1 == 0 && value < length;
        }
        module.exports = isIndex;
    },
    "./node_modules/lodash/_isKey.js": (module, __unused_webpack_exports, __webpack_require__) => {
        var isArray = __webpack_require__("./node_modules/lodash/isArray.js"), isSymbol = __webpack_require__("./node_modules/lodash/isSymbol.js");
        var reIsDeepProp = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/, reIsPlainProp = /^\w*$/;
        function isKey(value, object) {
            if (isArray(value)) return false;
            var type = typeof value;
            if ("number" == type || "symbol" == type || "boolean" == type || null == value || isSymbol(value)) return true;
            return reIsPlainProp.test(value) || !reIsDeepProp.test(value) || null != object && value in Object(object);
        }
        module.exports = isKey;
    },
    "./node_modules/lodash/_isStrictComparable.js": (module, __unused_webpack_exports, __webpack_require__) => {
        var isObject = __webpack_require__("./node_modules/lodash/isObject.js");
        function isStrictComparable(value) {
            return value === value && !isObject(value);
        }
        module.exports = isStrictComparable;
    },
    "./node_modules/lodash/_listCacheClear.js": module => {
        function listCacheClear() {
            this.__data__ = [];
            this.size = 0;
        }
        module.exports = listCacheClear;
    },
    "./node_modules/lodash/_listCacheDelete.js": (module, __unused_webpack_exports, __webpack_require__) => {
        var assocIndexOf = __webpack_require__("./node_modules/lodash/_assocIndexOf.js");
        var arrayProto = Array.prototype;
        var splice = arrayProto.splice;
        function listCacheDelete(key) {
            var data = this.__data__, index = assocIndexOf(data, key);
            if (index < 0) return false;
            var lastIndex = data.length - 1;
            if (index == lastIndex) data.pop(); else splice.call(data, index, 1);
            --this.size;
            return true;
        }
        module.exports = listCacheDelete;
    },
    "./node_modules/lodash/_listCacheGet.js": (module, __unused_webpack_exports, __webpack_require__) => {
        var assocIndexOf = __webpack_require__("./node_modules/lodash/_assocIndexOf.js");
        function listCacheGet(key) {
            var data = this.__data__, index = assocIndexOf(data, key);
            return index < 0 ? void 0 : data[index][1];
        }
        module.exports = listCacheGet;
    },
    "./node_modules/lodash/_listCacheHas.js": (module, __unused_webpack_exports, __webpack_require__) => {
        var assocIndexOf = __webpack_require__("./node_modules/lodash/_assocIndexOf.js");
        function listCacheHas(key) {
            return assocIndexOf(this.__data__, key) > -1;
        }
        module.exports = listCacheHas;
    },
    "./node_modules/lodash/_listCacheSet.js": (module, __unused_webpack_exports, __webpack_require__) => {
        var assocIndexOf = __webpack_require__("./node_modules/lodash/_assocIndexOf.js");
        function listCacheSet(key, value) {
            var data = this.__data__, index = assocIndexOf(data, key);
            if (index < 0) {
                ++this.size;
                data.push([ key, value ]);
            } else data[index][1] = value;
            return this;
        }
        module.exports = listCacheSet;
    },
    "./node_modules/lodash/_matchesStrictComparable.js": module => {
        function matchesStrictComparable(key, srcValue) {
            return function(object) {
                if (null == object) return false;
                return object[key] === srcValue && (void 0 !== srcValue || key in Object(object));
            };
        }
        module.exports = matchesStrictComparable;
    },
    "./node_modules/lodash/_memoizeCapped.js": module => {
        function identity(value) {
            return value;
        }
        module.exports = identity;
    },
    "./node_modules/lodash/_overArg.js": module => {
        function overArg(func, transform) {
            return function(arg) {
                return func(transform(arg));
            };
        }
        module.exports = overArg;
    },
    "./node_modules/lodash/_root.js": (module, __unused_webpack_exports, __webpack_require__) => {
        var freeGlobal = __webpack_require__("./node_modules/lodash/_freeGlobal.js");
        var freeSelf = "object" == typeof self && self && self.Object === Object && self;
        var root = freeGlobal || freeSelf || Function("return this")();
        module.exports = root;
    },
    "./node_modules/lodash/_stringToPath.js": (module, __unused_webpack_exports, __webpack_require__) => {
        var memoizeCapped = __webpack_require__("./node_modules/lodash/_memoizeCapped.js");
        var rePropName = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g;
        var reEscapeChar = /\\(\\)?/g;
        var stringToPath = memoizeCapped((function(string) {
            var result = [];
            if (46 === string.charCodeAt(0)) result.push("");
            string.replace(rePropName, (function(match, number, quote, subString) {
                result.push(quote ? subString.replace(reEscapeChar, "$1") : number || match);
            }));
            return result;
        }));
        module.exports = stringToPath;
    },
    "./node_modules/lodash/_toKey.js": module => {
        function identity(value) {
            return value;
        }
        module.exports = identity;
    },
    "./node_modules/lodash/_unicodeWords.js": module => {
        var rsAstralRange = "\\ud800-\\udfff", rsComboMarksRange = "\\u0300-\\u036f", reComboHalfMarksRange = "\\ufe20-\\ufe2f", rsComboSymbolsRange = "\\u20d0-\\u20ff", rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange, rsDingbatRange = "\\u2700-\\u27bf", rsLowerRange = "a-z\\xdf-\\xf6\\xf8-\\xff", rsMathOpRange = "\\xac\\xb1\\xd7\\xf7", rsNonCharRange = "\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf", rsPunctuationRange = "\\u2000-\\u206f", rsSpaceRange = " \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000", rsUpperRange = "A-Z\\xc0-\\xd6\\xd8-\\xde", rsVarRange = "\\ufe0e\\ufe0f", rsBreakRange = rsMathOpRange + rsNonCharRange + rsPunctuationRange + rsSpaceRange;
        var rsApos = "['’]", rsBreak = "[" + rsBreakRange + "]", rsCombo = "[" + rsComboRange + "]", rsDigits = "\\d+", rsDingbat = "[" + rsDingbatRange + "]", rsLower = "[" + rsLowerRange + "]", rsMisc = "[^" + rsAstralRange + rsBreakRange + rsDigits + rsDingbatRange + rsLowerRange + rsUpperRange + "]", rsFitz = "\\ud83c[\\udffb-\\udfff]", rsModifier = "(?:" + rsCombo + "|" + rsFitz + ")", rsNonAstral = "[^" + rsAstralRange + "]", rsRegional = "(?:\\ud83c[\\udde6-\\uddff]){2}", rsSurrPair = "[\\ud800-\\udbff][\\udc00-\\udfff]", rsUpper = "[" + rsUpperRange + "]", rsZWJ = "\\u200d";
        var rsMiscLower = "(?:" + rsLower + "|" + rsMisc + ")", rsMiscUpper = "(?:" + rsUpper + "|" + rsMisc + ")", rsOptContrLower = "(?:" + rsApos + "(?:d|ll|m|re|s|t|ve))?", rsOptContrUpper = "(?:" + rsApos + "(?:D|LL|M|RE|S|T|VE))?", reOptMod = rsModifier + "?", rsOptVar = "[" + rsVarRange + "]?", rsOptJoin = "(?:" + rsZWJ + "(?:" + [ rsNonAstral, rsRegional, rsSurrPair ].join("|") + ")" + rsOptVar + reOptMod + ")*", rsOrdLower = "\\d*(?:1st|2nd|3rd|(?![123])\\dth)(?=\\b|[A-Z_])", rsOrdUpper = "\\d*(?:1ST|2ND|3RD|(?![123])\\dTH)(?=\\b|[a-z_])", rsSeq = rsOptVar + reOptMod + rsOptJoin, rsEmoji = "(?:" + [ rsDingbat, rsRegional, rsSurrPair ].join("|") + ")" + rsSeq;
        var reUnicodeWord = RegExp([ rsUpper + "?" + rsLower + "+" + rsOptContrLower + "(?=" + [ rsBreak, rsUpper, "$" ].join("|") + ")", rsMiscUpper + "+" + rsOptContrUpper + "(?=" + [ rsBreak, rsUpper + rsMiscLower, "$" ].join("|") + ")", rsUpper + "?" + rsMiscLower + "+" + rsOptContrLower, rsUpper + "+" + rsOptContrUpper, rsOrdUpper, rsOrdLower, rsDigits, rsEmoji ].join("|"), "g");
        function unicodeWords(string) {
            return string.match(reUnicodeWord) || [];
        }
        module.exports = unicodeWords;
    },
    "./node_modules/lodash/debounce.js": (module, __unused_webpack_exports, __webpack_require__) => {
        var isObject = __webpack_require__("./node_modules/lodash/isObject.js"), now = __webpack_require__("./node_modules/lodash/now.js"), toNumber = __webpack_require__("./node_modules/lodash/toNumber.js");
        var FUNC_ERROR_TEXT = "Expected a function";
        var nativeMax = Math.max, nativeMin = Math.min;
        function debounce(func, wait, options) {
            var lastArgs, lastThis, maxWait, result, timerId, lastCallTime, lastInvokeTime = 0, leading = false, maxing = false, trailing = true;
            if ("function" != typeof func) throw new TypeError(FUNC_ERROR_TEXT);
            wait = toNumber(wait) || 0;
            if (isObject(options)) {
                leading = !!options.leading;
                maxing = "maxWait" in options;
                maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;
                trailing = "trailing" in options ? !!options.trailing : trailing;
            }
            function invokeFunc(time) {
                var args = lastArgs, thisArg = lastThis;
                lastArgs = lastThis = void 0;
                lastInvokeTime = time;
                result = func.apply(thisArg, args);
                return result;
            }
            function leadingEdge(time) {
                lastInvokeTime = time;
                timerId = setTimeout(timerExpired, wait);
                return leading ? invokeFunc(time) : result;
            }
            function remainingWait(time) {
                var timeSinceLastCall = time - lastCallTime, timeSinceLastInvoke = time - lastInvokeTime, timeWaiting = wait - timeSinceLastCall;
                return maxing ? nativeMin(timeWaiting, maxWait - timeSinceLastInvoke) : timeWaiting;
            }
            function shouldInvoke(time) {
                var timeSinceLastCall = time - lastCallTime, timeSinceLastInvoke = time - lastInvokeTime;
                return void 0 === lastCallTime || timeSinceLastCall >= wait || timeSinceLastCall < 0 || maxing && timeSinceLastInvoke >= maxWait;
            }
            function timerExpired() {
                var time = now();
                if (shouldInvoke(time)) return trailingEdge(time);
                timerId = setTimeout(timerExpired, remainingWait(time));
            }
            function trailingEdge(time) {
                timerId = void 0;
                if (trailing && lastArgs) return invokeFunc(time);
                lastArgs = lastThis = void 0;
                return result;
            }
            function cancel() {
                if (void 0 !== timerId) clearTimeout(timerId);
                lastInvokeTime = 0;
                lastArgs = lastCallTime = lastThis = timerId = void 0;
            }
            function flush() {
                return void 0 === timerId ? result : trailingEdge(now());
            }
            function debounced() {
                var time = now(), isInvoking = shouldInvoke(time);
                lastArgs = arguments;
                lastThis = this;
                lastCallTime = time;
                if (isInvoking) {
                    if (void 0 === timerId) return leadingEdge(lastCallTime);
                    if (maxing) {
                        clearTimeout(timerId);
                        timerId = setTimeout(timerExpired, wait);
                        return invokeFunc(lastCallTime);
                    }
                }
                if (void 0 === timerId) timerId = setTimeout(timerExpired, wait);
                return result;
            }
            debounced.cancel = cancel;
            debounced.flush = flush;
            return debounced;
        }
        module.exports = debounce;
    },
    "./node_modules/lodash/deburr.js": (module, __unused_webpack_exports, __webpack_require__) => {
        var baseToString = __webpack_require__("./node_modules/lodash/_baseToString.js");
        function toString(value) {
            return null == value ? "" : baseToString(value);
        }
        module.exports = toString;
    },
    "./node_modules/lodash/eq.js": module => {
        function eq(value, other) {
            return value === other || value !== value && other !== other;
        }
        module.exports = eq;
    },
    "./node_modules/lodash/escape.js": (module, __unused_webpack_exports, __webpack_require__) => {
        var escapeHtmlChar = __webpack_require__("./node_modules/lodash/_escapeHtmlChar.js"), toString = __webpack_require__("./node_modules/lodash/toString.js");
        var reUnescapedHtml = /[&<>"']/g, reHasUnescapedHtml = RegExp(reUnescapedHtml.source);
        function escape(string) {
            string = toString(string);
            return string && reHasUnescapedHtml.test(string) ? string.replace(reUnescapedHtml, escapeHtmlChar) : string;
        }
        module.exports = escape;
    },
    "./node_modules/lodash/get.js": (module, __unused_webpack_exports, __webpack_require__) => {
        var baseGet = __webpack_require__("./node_modules/lodash/_baseGet.js");
        function get(object, path, defaultValue) {
            var result = null == object ? void 0 : baseGet(object, path);
            return void 0 === result ? defaultValue : result;
        }
        module.exports = get;
    },
    "./node_modules/lodash/hasIn.js": (module, __unused_webpack_exports, __webpack_require__) => {
        var baseHasIn = __webpack_require__("./node_modules/lodash/_baseHasIn.js"), hasPath = __webpack_require__("./node_modules/lodash/_hasPath.js");
        function hasIn(object, path) {
            return null != object && hasPath(object, path, baseHasIn);
        }
        module.exports = hasIn;
    },
    "./node_modules/lodash/identity.js": module => {
        function identity(value) {
            return value;
        }
        module.exports = identity;
    },
    "./node_modules/lodash/isArguments.js": module => {
        function stubFalse() {
            return false;
        }
        module.exports = stubFalse;
    },
    "./node_modules/lodash/isArray.js": module => {
        var isArray = Array.isArray;
        module.exports = isArray;
    },
    "./node_modules/lodash/isBuffer.js": module => {
        function stubFalse() {
            return false;
        }
        module.exports = stubFalse;
    },
    "./node_modules/lodash/isLength.js": module => {
        var MAX_SAFE_INTEGER = 9007199254740991;
        function isLength(value) {
            return "number" == typeof value && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;
        }
        module.exports = isLength;
    },
    "./node_modules/lodash/isObject.js": module => {
        function isObject(value) {
            var type = typeof value;
            return null != value && ("object" == type || "function" == type);
        }
        module.exports = isObject;
    },
    "./node_modules/lodash/isObjectLike.js": module => {
        function isObjectLike(value) {
            return null != value && "object" == typeof value;
        }
        module.exports = isObjectLike;
    },
    "./node_modules/lodash/isPlainObject.js": (module, __unused_webpack_exports, __webpack_require__) => {
        var baseGetTag = __webpack_require__("./node_modules/lodash/_baseGetTag.js"), getPrototype = __webpack_require__("./node_modules/lodash/_getPrototype.js"), isObjectLike = __webpack_require__("./node_modules/lodash/isObjectLike.js");
        var objectTag = "[object Object]";
        var funcProto = Function.prototype, objectProto = Object.prototype;
        var funcToString = funcProto.toString;
        var hasOwnProperty = objectProto.hasOwnProperty;
        var objectCtorString = funcToString.call(Object);
        function isPlainObject(value) {
            if (!isObjectLike(value) || baseGetTag(value) != objectTag) return false;
            var proto = getPrototype(value);
            if (null === proto) return true;
            var Ctor = hasOwnProperty.call(proto, "constructor") && proto.constructor;
            return "function" == typeof Ctor && Ctor instanceof Ctor && funcToString.call(Ctor) == objectCtorString;
        }
        module.exports = isPlainObject;
    },
    "./node_modules/lodash/isString.js": (module, __unused_webpack_exports, __webpack_require__) => {
        var baseGetTag = __webpack_require__("./node_modules/lodash/_baseGetTag.js"), isArray = __webpack_require__("./node_modules/lodash/isArray.js"), isObjectLike = __webpack_require__("./node_modules/lodash/isObjectLike.js");
        var stringTag = "[object String]";
        function isString(value) {
            return "string" == typeof value || !isArray(value) && isObjectLike(value) && baseGetTag(value) == stringTag;
        }
        module.exports = isString;
    },
    "./node_modules/lodash/isSymbol.js": module => {
        function stubFalse() {
            return false;
        }
        module.exports = stubFalse;
    },
    "./node_modules/lodash/isTypedArray.js": module => {
        function stubFalse() {
            return false;
        }
        module.exports = stubFalse;
    },
    "./node_modules/lodash/keys.js": (module, __unused_webpack_exports, __webpack_require__) => {
        var overArg = __webpack_require__("./node_modules/lodash/_overArg.js");
        var nativeKeys = overArg(Object.keys, Object);
        module.exports = nativeKeys;
    },
    "./node_modules/lodash/lodash.js": function(module, exports, __webpack_require__) {
        module = __webpack_require__.nmd(module);
        var __WEBPACK_AMD_DEFINE_RESULT__;
        (function() {
            var undefined;
            var VERSION = "4.17.21";
            var LARGE_ARRAY_SIZE = 200;
            var CORE_ERROR_TEXT = "Unsupported core-js use. Try https://npms.io/search?q=ponyfill.", FUNC_ERROR_TEXT = "Expected a function", INVALID_TEMPL_VAR_ERROR_TEXT = "Invalid `variable` option passed into `_.template`";
            var HASH_UNDEFINED = "__lodash_hash_undefined__";
            var MAX_MEMOIZE_SIZE = 500;
            var PLACEHOLDER = "__lodash_placeholder__";
            var CLONE_DEEP_FLAG = 1, CLONE_FLAT_FLAG = 2, CLONE_SYMBOLS_FLAG = 4;
            var COMPARE_PARTIAL_FLAG = 1, COMPARE_UNORDERED_FLAG = 2;
            var WRAP_BIND_FLAG = 1, WRAP_BIND_KEY_FLAG = 2, WRAP_CURRY_BOUND_FLAG = 4, WRAP_CURRY_FLAG = 8, WRAP_CURRY_RIGHT_FLAG = 16, WRAP_PARTIAL_FLAG = 32, WRAP_PARTIAL_RIGHT_FLAG = 64, WRAP_ARY_FLAG = 128, WRAP_REARG_FLAG = 256, WRAP_FLIP_FLAG = 512;
            var DEFAULT_TRUNC_LENGTH = 30, DEFAULT_TRUNC_OMISSION = "...";
            var HOT_COUNT = 800, HOT_SPAN = 16;
            var LAZY_FILTER_FLAG = 1, LAZY_MAP_FLAG = 2, LAZY_WHILE_FLAG = 3;
            var INFINITY = 1 / 0, MAX_SAFE_INTEGER = 9007199254740991, MAX_INTEGER = 17976931348623157e292, NAN = 0 / 0;
            var MAX_ARRAY_LENGTH = 4294967295, MAX_ARRAY_INDEX = MAX_ARRAY_LENGTH - 1, HALF_MAX_ARRAY_LENGTH = MAX_ARRAY_LENGTH >>> 1;
            var wrapFlags = [ [ "ary", WRAP_ARY_FLAG ], [ "bind", WRAP_BIND_FLAG ], [ "bindKey", WRAP_BIND_KEY_FLAG ], [ "curry", WRAP_CURRY_FLAG ], [ "curryRight", WRAP_CURRY_RIGHT_FLAG ], [ "flip", WRAP_FLIP_FLAG ], [ "partial", WRAP_PARTIAL_FLAG ], [ "partialRight", WRAP_PARTIAL_RIGHT_FLAG ], [ "rearg", WRAP_REARG_FLAG ] ];
            var argsTag = "[object Arguments]", arrayTag = "[object Array]", asyncTag = "[object AsyncFunction]", boolTag = "[object Boolean]", dateTag = "[object Date]", domExcTag = "[object DOMException]", errorTag = "[object Error]", funcTag = "[object Function]", genTag = "[object GeneratorFunction]", mapTag = "[object Map]", numberTag = "[object Number]", nullTag = "[object Null]", objectTag = "[object Object]", promiseTag = "[object Promise]", proxyTag = "[object Proxy]", regexpTag = "[object RegExp]", setTag = "[object Set]", stringTag = "[object String]", symbolTag = "[object Symbol]", undefinedTag = "[object Undefined]", weakMapTag = "[object WeakMap]", weakSetTag = "[object WeakSet]";
            var arrayBufferTag = "[object ArrayBuffer]", dataViewTag = "[object DataView]", float32Tag = "[object Float32Array]", float64Tag = "[object Float64Array]", int8Tag = "[object Int8Array]", int16Tag = "[object Int16Array]", int32Tag = "[object Int32Array]", uint8Tag = "[object Uint8Array]", uint8ClampedTag = "[object Uint8ClampedArray]", uint16Tag = "[object Uint16Array]", uint32Tag = "[object Uint32Array]";
            var reEmptyStringLeading = /\b__p \+= '';/g, reEmptyStringMiddle = /\b(__p \+=) '' \+/g, reEmptyStringTrailing = /(__e\(.*?\)|\b__t\)) \+\n'';/g;
            var reEscapedHtml = /&(?:amp|lt|gt|quot|#39);/g, reUnescapedHtml = /[&<>"']/g, reHasEscapedHtml = RegExp(reEscapedHtml.source), reHasUnescapedHtml = RegExp(reUnescapedHtml.source);
            var reEscape = /<%-([\s\S]+?)%>/g, reEvaluate = /<%([\s\S]+?)%>/g, reInterpolate = /<%=([\s\S]+?)%>/g;
            var reIsDeepProp = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/, reIsPlainProp = /^\w*$/, rePropName = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g;
            var reRegExpChar = /[\\^$.*+?()[\]{}|]/g, reHasRegExpChar = RegExp(reRegExpChar.source);
            var reTrimStart = /^\s+/;
            var reWhitespace = /\s/;
            var reWrapComment = /\{(?:\n\/\* \[wrapped with .+\] \*\/)?\n?/, reWrapDetails = /\{\n\/\* \[wrapped with (.+)\] \*/, reSplitDetails = /,? & /;
            var reAsciiWord = /[^\x00-\x2f\x3a-\x40\x5b-\x60\x7b-\x7f]+/g;
            var reForbiddenIdentifierChars = /[()=,{}\[\]\/\s]/;
            var reEscapeChar = /\\(\\)?/g;
            var reEsTemplate = /\$\{([^\\}]*(?:\\.[^\\}]*)*)\}/g;
            var reFlags = /\w*$/;
            var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;
            var reIsBinary = /^0b[01]+$/i;
            var reIsHostCtor = /^\[object .+?Constructor\]$/;
            var reIsOctal = /^0o[0-7]+$/i;
            var reIsUint = /^(?:0|[1-9]\d*)$/;
            var reLatin = /[\xc0-\xd6\xd8-\xf6\xf8-\xff\u0100-\u017f]/g;
            var reNoMatch = /($^)/;
            var reUnescapedString = /['\n\r\u2028\u2029\\]/g;
            var rsAstralRange = "\\ud800-\\udfff", rsComboMarksRange = "\\u0300-\\u036f", reComboHalfMarksRange = "\\ufe20-\\ufe2f", rsComboSymbolsRange = "\\u20d0-\\u20ff", rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange, rsDingbatRange = "\\u2700-\\u27bf", rsLowerRange = "a-z\\xdf-\\xf6\\xf8-\\xff", rsMathOpRange = "\\xac\\xb1\\xd7\\xf7", rsNonCharRange = "\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf", rsPunctuationRange = "\\u2000-\\u206f", rsSpaceRange = " \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000", rsUpperRange = "A-Z\\xc0-\\xd6\\xd8-\\xde", rsVarRange = "\\ufe0e\\ufe0f", rsBreakRange = rsMathOpRange + rsNonCharRange + rsPunctuationRange + rsSpaceRange;
            var rsApos = "['’]", rsAstral = "[" + rsAstralRange + "]", rsBreak = "[" + rsBreakRange + "]", rsCombo = "[" + rsComboRange + "]", rsDigits = "\\d+", rsDingbat = "[" + rsDingbatRange + "]", rsLower = "[" + rsLowerRange + "]", rsMisc = "[^" + rsAstralRange + rsBreakRange + rsDigits + rsDingbatRange + rsLowerRange + rsUpperRange + "]", rsFitz = "\\ud83c[\\udffb-\\udfff]", rsModifier = "(?:" + rsCombo + "|" + rsFitz + ")", rsNonAstral = "[^" + rsAstralRange + "]", rsRegional = "(?:\\ud83c[\\udde6-\\uddff]){2}", rsSurrPair = "[\\ud800-\\udbff][\\udc00-\\udfff]", rsUpper = "[" + rsUpperRange + "]", rsZWJ = "\\u200d";
            var rsMiscLower = "(?:" + rsLower + "|" + rsMisc + ")", rsMiscUpper = "(?:" + rsUpper + "|" + rsMisc + ")", rsOptContrLower = "(?:" + rsApos + "(?:d|ll|m|re|s|t|ve))?", rsOptContrUpper = "(?:" + rsApos + "(?:D|LL|M|RE|S|T|VE))?", reOptMod = rsModifier + "?", rsOptVar = "[" + rsVarRange + "]?", rsOptJoin = "(?:" + rsZWJ + "(?:" + [ rsNonAstral, rsRegional, rsSurrPair ].join("|") + ")" + rsOptVar + reOptMod + ")*", rsOrdLower = "\\d*(?:1st|2nd|3rd|(?![123])\\dth)(?=\\b|[A-Z_])", rsOrdUpper = "\\d*(?:1ST|2ND|3RD|(?![123])\\dTH)(?=\\b|[a-z_])", rsSeq = rsOptVar + reOptMod + rsOptJoin, rsEmoji = "(?:" + [ rsDingbat, rsRegional, rsSurrPair ].join("|") + ")" + rsSeq, rsSymbol = "(?:" + [ rsNonAstral + rsCombo + "?", rsCombo, rsRegional, rsSurrPair, rsAstral ].join("|") + ")";
            var reApos = RegExp(rsApos, "g");
            var reComboMark = RegExp(rsCombo, "g");
            var reUnicode = RegExp(rsFitz + "(?=" + rsFitz + ")|" + rsSymbol + rsSeq, "g");
            var reUnicodeWord = RegExp([ rsUpper + "?" + rsLower + "+" + rsOptContrLower + "(?=" + [ rsBreak, rsUpper, "$" ].join("|") + ")", rsMiscUpper + "+" + rsOptContrUpper + "(?=" + [ rsBreak, rsUpper + rsMiscLower, "$" ].join("|") + ")", rsUpper + "?" + rsMiscLower + "+" + rsOptContrLower, rsUpper + "+" + rsOptContrUpper, rsOrdUpper, rsOrdLower, rsDigits, rsEmoji ].join("|"), "g");
            var reHasUnicode = RegExp("[" + rsZWJ + rsAstralRange + rsComboRange + rsVarRange + "]");
            var reHasUnicodeWord = /[a-z][A-Z]|[A-Z]{2}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;
            var contextProps = [ "Array", "Buffer", "DataView", "Date", "Error", "Float32Array", "Float64Array", "Function", "Int8Array", "Int16Array", "Int32Array", "Map", "Math", "Object", "Promise", "RegExp", "Set", "String", "Symbol", "TypeError", "Uint8Array", "Uint8ClampedArray", "Uint16Array", "Uint32Array", "WeakMap", "_", "clearTimeout", "isFinite", "parseInt", "setTimeout" ];
            var templateCounter = -1;
            var typedArrayTags = {};
            typedArrayTags[float32Tag] = typedArrayTags[float64Tag] = typedArrayTags[int8Tag] = typedArrayTags[int16Tag] = typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] = typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] = typedArrayTags[uint32Tag] = true;
            typedArrayTags[argsTag] = typedArrayTags[arrayTag] = typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] = typedArrayTags[dataViewTag] = typedArrayTags[dateTag] = typedArrayTags[errorTag] = typedArrayTags[funcTag] = typedArrayTags[mapTag] = typedArrayTags[numberTag] = typedArrayTags[objectTag] = typedArrayTags[regexpTag] = typedArrayTags[setTag] = typedArrayTags[stringTag] = typedArrayTags[weakMapTag] = false;
            var cloneableTags = {};
            cloneableTags[argsTag] = cloneableTags[arrayTag] = cloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] = cloneableTags[boolTag] = cloneableTags[dateTag] = cloneableTags[float32Tag] = cloneableTags[float64Tag] = cloneableTags[int8Tag] = cloneableTags[int16Tag] = cloneableTags[int32Tag] = cloneableTags[mapTag] = cloneableTags[numberTag] = cloneableTags[objectTag] = cloneableTags[regexpTag] = cloneableTags[setTag] = cloneableTags[stringTag] = cloneableTags[symbolTag] = cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] = cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;
            cloneableTags[errorTag] = cloneableTags[funcTag] = cloneableTags[weakMapTag] = false;
            var deburredLetters = {
                À: "A",
                Á: "A",
                Â: "A",
                Ã: "A",
                Ä: "A",
                Å: "A",
                à: "a",
                á: "a",
                â: "a",
                ã: "a",
                ä: "a",
                å: "a",
                Ç: "C",
                ç: "c",
                Ð: "D",
                ð: "d",
                È: "E",
                É: "E",
                Ê: "E",
                Ë: "E",
                è: "e",
                é: "e",
                ê: "e",
                ë: "e",
                Ì: "I",
                Í: "I",
                Î: "I",
                Ï: "I",
                ì: "i",
                í: "i",
                î: "i",
                ï: "i",
                Ñ: "N",
                ñ: "n",
                Ò: "O",
                Ó: "O",
                Ô: "O",
                Õ: "O",
                Ö: "O",
                Ø: "O",
                ò: "o",
                ó: "o",
                ô: "o",
                õ: "o",
                ö: "o",
                ø: "o",
                Ù: "U",
                Ú: "U",
                Û: "U",
                Ü: "U",
                ù: "u",
                ú: "u",
                û: "u",
                ü: "u",
                Ý: "Y",
                ý: "y",
                ÿ: "y",
                Æ: "Ae",
                æ: "ae",
                Þ: "Th",
                þ: "th",
                ß: "ss",
                Ā: "A",
                Ă: "A",
                Ą: "A",
                ā: "a",
                ă: "a",
                ą: "a",
                Ć: "C",
                Ĉ: "C",
                Ċ: "C",
                Č: "C",
                ć: "c",
                ĉ: "c",
                ċ: "c",
                č: "c",
                Ď: "D",
                Đ: "D",
                ď: "d",
                đ: "d",
                Ē: "E",
                Ĕ: "E",
                Ė: "E",
                Ę: "E",
                Ě: "E",
                ē: "e",
                ĕ: "e",
                ė: "e",
                ę: "e",
                ě: "e",
                Ĝ: "G",
                Ğ: "G",
                Ġ: "G",
                Ģ: "G",
                ĝ: "g",
                ğ: "g",
                ġ: "g",
                ģ: "g",
                Ĥ: "H",
                Ħ: "H",
                ĥ: "h",
                ħ: "h",
                Ĩ: "I",
                Ī: "I",
                Ĭ: "I",
                Į: "I",
                İ: "I",
                ĩ: "i",
                ī: "i",
                ĭ: "i",
                į: "i",
                ı: "i",
                Ĵ: "J",
                ĵ: "j",
                Ķ: "K",
                ķ: "k",
                ĸ: "k",
                Ĺ: "L",
                Ļ: "L",
                Ľ: "L",
                Ŀ: "L",
                Ł: "L",
                ĺ: "l",
                ļ: "l",
                ľ: "l",
                ŀ: "l",
                ł: "l",
                Ń: "N",
                Ņ: "N",
                Ň: "N",
                Ŋ: "N",
                ń: "n",
                ņ: "n",
                ň: "n",
                ŋ: "n",
                Ō: "O",
                Ŏ: "O",
                Ő: "O",
                ō: "o",
                ŏ: "o",
                ő: "o",
                Ŕ: "R",
                Ŗ: "R",
                Ř: "R",
                ŕ: "r",
                ŗ: "r",
                ř: "r",
                Ś: "S",
                Ŝ: "S",
                Ş: "S",
                Š: "S",
                ś: "s",
                ŝ: "s",
                ş: "s",
                š: "s",
                Ţ: "T",
                Ť: "T",
                Ŧ: "T",
                ţ: "t",
                ť: "t",
                ŧ: "t",
                Ũ: "U",
                Ū: "U",
                Ŭ: "U",
                Ů: "U",
                Ű: "U",
                Ų: "U",
                ũ: "u",
                ū: "u",
                ŭ: "u",
                ů: "u",
                ű: "u",
                ų: "u",
                Ŵ: "W",
                ŵ: "w",
                Ŷ: "Y",
                ŷ: "y",
                Ÿ: "Y",
                Ź: "Z",
                Ż: "Z",
                Ž: "Z",
                ź: "z",
                ż: "z",
                ž: "z",
                Ĳ: "IJ",
                ĳ: "ij",
                Œ: "Oe",
                œ: "oe",
                ŉ: "'n",
                ſ: "s"
            };
            var htmlEscapes = {
                "&": "&amp;",
                "<": "&lt;",
                ">": "&gt;",
                '"': "&quot;",
                "'": "&#39;"
            };
            var htmlUnescapes = {
                "&amp;": "&",
                "&lt;": "<",
                "&gt;": ">",
                "&quot;": '"',
                "&#39;": "'"
            };
            var stringEscapes = {
                "\\": "\\",
                "'": "'",
                "\n": "n",
                "\r": "r",
                "\u2028": "u2028",
                "\u2029": "u2029"
            };
            var freeParseFloat = parseFloat, freeParseInt = parseInt;
            var freeGlobal = "object" == typeof __webpack_require__.g && __webpack_require__.g && __webpack_require__.g.Object === Object && __webpack_require__.g;
            var freeSelf = "object" == typeof self && self && self.Object === Object && self;
            var root = freeGlobal || freeSelf || Function("return this")();
            var freeExports = true && exports && !exports.nodeType && exports;
            var freeModule = freeExports && "object" == "object" && module && !module.nodeType && module;
            var moduleExports = freeModule && freeModule.exports === freeExports;
            var freeProcess = moduleExports && freeGlobal.process;
            var nodeUtil = function() {
                try {
                    var types = freeModule && freeModule.require && freeModule.require("util").types;
                    if (types) return types;
                    return freeProcess && freeProcess.binding && freeProcess.binding("util");
                } catch (e) {}
            }();
            var nodeIsArrayBuffer = nodeUtil && nodeUtil.isArrayBuffer, nodeIsDate = nodeUtil && nodeUtil.isDate, nodeIsMap = nodeUtil && nodeUtil.isMap, nodeIsRegExp = nodeUtil && nodeUtil.isRegExp, nodeIsSet = nodeUtil && nodeUtil.isSet, nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;
            function apply(func, thisArg, args) {
                switch (args.length) {
                  case 0:
                    return func.call(thisArg);

                  case 1:
                    return func.call(thisArg, args[0]);

                  case 2:
                    return func.call(thisArg, args[0], args[1]);

                  case 3:
                    return func.call(thisArg, args[0], args[1], args[2]);
                }
                return func.apply(thisArg, args);
            }
            function arrayAggregator(array, setter, iteratee, accumulator) {
                var index = -1, length = null == array ? 0 : array.length;
                while (++index < length) {
                    var value = array[index];
                    setter(accumulator, value, iteratee(value), array);
                }
                return accumulator;
            }
            function arrayEach(array, iteratee) {
                var index = -1, length = null == array ? 0 : array.length;
                while (++index < length) if (false === iteratee(array[index], index, array)) break;
                return array;
            }
            function arrayEachRight(array, iteratee) {
                var length = null == array ? 0 : array.length;
                while (length--) if (false === iteratee(array[length], length, array)) break;
                return array;
            }
            function arrayEvery(array, predicate) {
                var index = -1, length = null == array ? 0 : array.length;
                while (++index < length) if (!predicate(array[index], index, array)) return false;
                return true;
            }
            function arrayFilter(array, predicate) {
                var index = -1, length = null == array ? 0 : array.length, resIndex = 0, result = [];
                while (++index < length) {
                    var value = array[index];
                    if (predicate(value, index, array)) result[resIndex++] = value;
                }
                return result;
            }
            function arrayIncludes(array, value) {
                var length = null == array ? 0 : array.length;
                return !!length && baseIndexOf(array, value, 0) > -1;
            }
            function arrayIncludesWith(array, value, comparator) {
                var index = -1, length = null == array ? 0 : array.length;
                while (++index < length) if (comparator(value, array[index])) return true;
                return false;
            }
            function arrayMap(array, iteratee) {
                var index = -1, length = null == array ? 0 : array.length, result = Array(length);
                while (++index < length) result[index] = iteratee(array[index], index, array);
                return result;
            }
            function arrayPush(array, values) {
                var index = -1, length = values.length, offset = array.length;
                while (++index < length) array[offset + index] = values[index];
                return array;
            }
            function arrayReduce(array, iteratee, accumulator, initAccum) {
                var index = -1, length = null == array ? 0 : array.length;
                if (initAccum && length) accumulator = array[++index];
                while (++index < length) accumulator = iteratee(accumulator, array[index], index, array);
                return accumulator;
            }
            function arrayReduceRight(array, iteratee, accumulator, initAccum) {
                var length = null == array ? 0 : array.length;
                if (initAccum && length) accumulator = array[--length];
                while (length--) accumulator = iteratee(accumulator, array[length], length, array);
                return accumulator;
            }
            function arraySome(array, predicate) {
                var index = -1, length = null == array ? 0 : array.length;
                while (++index < length) if (predicate(array[index], index, array)) return true;
                return false;
            }
            var asciiSize = baseProperty("length");
            function asciiToArray(string) {
                return string.split("");
            }
            function asciiWords(string) {
                return string.match(reAsciiWord) || [];
            }
            function baseFindKey(collection, predicate, eachFunc) {
                var result;
                eachFunc(collection, (function(value, key, collection) {
                    if (predicate(value, key, collection)) {
                        result = key;
                        return false;
                    }
                }));
                return result;
            }
            function baseFindIndex(array, predicate, fromIndex, fromRight) {
                var length = array.length, index = fromIndex + (fromRight ? 1 : -1);
                while (fromRight ? index-- : ++index < length) if (predicate(array[index], index, array)) return index;
                return -1;
            }
            function baseIndexOf(array, value, fromIndex) {
                return value === value ? strictIndexOf(array, value, fromIndex) : baseFindIndex(array, baseIsNaN, fromIndex);
            }
            function baseIndexOfWith(array, value, fromIndex, comparator) {
                var index = fromIndex - 1, length = array.length;
                while (++index < length) if (comparator(array[index], value)) return index;
                return -1;
            }
            function baseIsNaN(value) {
                return value !== value;
            }
            function baseMean(array, iteratee) {
                var length = null == array ? 0 : array.length;
                return length ? baseSum(array, iteratee) / length : NAN;
            }
            function baseProperty(key) {
                return function(object) {
                    return null == object ? undefined : object[key];
                };
            }
            function basePropertyOf(object) {
                return function(key) {
                    return null == object ? undefined : object[key];
                };
            }
            function baseReduce(collection, iteratee, accumulator, initAccum, eachFunc) {
                eachFunc(collection, (function(value, index, collection) {
                    accumulator = initAccum ? (initAccum = false, value) : iteratee(accumulator, value, index, collection);
                }));
                return accumulator;
            }
            function baseSortBy(array, comparer) {
                var length = array.length;
                array.sort(comparer);
                while (length--) array[length] = array[length].value;
                return array;
            }
            function baseSum(array, iteratee) {
                var result, index = -1, length = array.length;
                while (++index < length) {
                    var current = iteratee(array[index]);
                    if (current !== undefined) result = result === undefined ? current : result + current;
                }
                return result;
            }
            function baseTimes(n, iteratee) {
                var index = -1, result = Array(n);
                while (++index < n) result[index] = iteratee(index);
                return result;
            }
            function baseToPairs(object, props) {
                return arrayMap(props, (function(key) {
                    return [ key, object[key] ];
                }));
            }
            function baseTrim(string) {
                return string ? string.slice(0, trimmedEndIndex(string) + 1).replace(reTrimStart, "") : string;
            }
            function baseUnary(func) {
                return function(value) {
                    return func(value);
                };
            }
            function baseValues(object, props) {
                return arrayMap(props, (function(key) {
                    return object[key];
                }));
            }
            function cacheHas(cache, key) {
                return cache.has(key);
            }
            function charsStartIndex(strSymbols, chrSymbols) {
                var index = -1, length = strSymbols.length;
                while (++index < length && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) ;
                return index;
            }
            function charsEndIndex(strSymbols, chrSymbols) {
                var index = strSymbols.length;
                while (index-- && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) ;
                return index;
            }
            function countHolders(array, placeholder) {
                var length = array.length, result = 0;
                while (length--) if (array[length] === placeholder) ++result;
                return result;
            }
            var deburrLetter = basePropertyOf(deburredLetters);
            var escapeHtmlChar = basePropertyOf(htmlEscapes);
            function escapeStringChar(chr) {
                return "\\" + stringEscapes[chr];
            }
            function getValue(object, key) {
                return null == object ? undefined : object[key];
            }
            function hasUnicode(string) {
                return reHasUnicode.test(string);
            }
            function hasUnicodeWord(string) {
                return reHasUnicodeWord.test(string);
            }
            function iteratorToArray(iterator) {
                var data, result = [];
                while (!(data = iterator.next()).done) result.push(data.value);
                return result;
            }
            function mapToArray(map) {
                var index = -1, result = Array(map.size);
                map.forEach((function(value, key) {
                    result[++index] = [ key, value ];
                }));
                return result;
            }
            function overArg(func, transform) {
                return function(arg) {
                    return func(transform(arg));
                };
            }
            function replaceHolders(array, placeholder) {
                var index = -1, length = array.length, resIndex = 0, result = [];
                while (++index < length) {
                    var value = array[index];
                    if (value === placeholder || value === PLACEHOLDER) {
                        array[index] = PLACEHOLDER;
                        result[resIndex++] = index;
                    }
                }
                return result;
            }
            function setToArray(set) {
                var index = -1, result = Array(set.size);
                set.forEach((function(value) {
                    result[++index] = value;
                }));
                return result;
            }
            function setToPairs(set) {
                var index = -1, result = Array(set.size);
                set.forEach((function(value) {
                    result[++index] = [ value, value ];
                }));
                return result;
            }
            function strictIndexOf(array, value, fromIndex) {
                var index = fromIndex - 1, length = array.length;
                while (++index < length) if (array[index] === value) return index;
                return -1;
            }
            function strictLastIndexOf(array, value, fromIndex) {
                var index = fromIndex + 1;
                while (index--) if (array[index] === value) return index;
                return index;
            }
            function stringSize(string) {
                return hasUnicode(string) ? unicodeSize(string) : asciiSize(string);
            }
            function stringToArray(string) {
                return hasUnicode(string) ? unicodeToArray(string) : asciiToArray(string);
            }
            function trimmedEndIndex(string) {
                var index = string.length;
                while (index-- && reWhitespace.test(string.charAt(index))) ;
                return index;
            }
            var unescapeHtmlChar = basePropertyOf(htmlUnescapes);
            function unicodeSize(string) {
                var result = reUnicode.lastIndex = 0;
                while (reUnicode.test(string)) ++result;
                return result;
            }
            function unicodeToArray(string) {
                return string.match(reUnicode) || [];
            }
            function unicodeWords(string) {
                return string.match(reUnicodeWord) || [];
            }
            var runInContext = function runInContext(context) {
                context = null == context ? root : _.defaults(root.Object(), context, _.pick(root, contextProps));
                var Array = context.Array, Date = context.Date, Error = context.Error, Function = context.Function, Math = context.Math, Object = context.Object, RegExp = context.RegExp, String = context.String, TypeError = context.TypeError;
                var arrayProto = Array.prototype, funcProto = Function.prototype, objectProto = Object.prototype;
                var coreJsData = context["__core-js_shared__"];
                var funcToString = funcProto.toString;
                var hasOwnProperty = objectProto.hasOwnProperty;
                var idCounter = 0;
                var maskSrcKey = function() {
                    var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || "");
                    return uid ? "Symbol(src)_1." + uid : "";
                }();
                var nativeObjectToString = objectProto.toString;
                var objectCtorString = funcToString.call(Object);
                var oldDash = root._;
                var reIsNative = RegExp("^" + funcToString.call(hasOwnProperty).replace(reRegExpChar, "\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, "$1.*?") + "$");
                var Buffer = moduleExports ? context.Buffer : undefined, Symbol = context.Symbol, Uint8Array = context.Uint8Array, allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined, getPrototype = overArg(Object.getPrototypeOf, Object), objectCreate = Object.create, propertyIsEnumerable = objectProto.propertyIsEnumerable, splice = arrayProto.splice, spreadableSymbol = Symbol ? Symbol.isConcatSpreadable : undefined, symIterator = Symbol ? Symbol.iterator : undefined, symToStringTag = Symbol ? Symbol.toStringTag : undefined;
                var defineProperty = function() {
                    try {
                        var func = getNative(Object, "defineProperty");
                        func({}, "", {});
                        return func;
                    } catch (e) {}
                }();
                var ctxClearTimeout = context.clearTimeout !== root.clearTimeout && context.clearTimeout, ctxNow = Date && Date.now !== root.Date.now && Date.now, ctxSetTimeout = context.setTimeout !== root.setTimeout && context.setTimeout;
                var nativeCeil = Math.ceil, nativeFloor = Math.floor, nativeGetSymbols = Object.getOwnPropertySymbols, nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined, nativeIsFinite = context.isFinite, nativeJoin = arrayProto.join, nativeKeys = overArg(Object.keys, Object), nativeMax = Math.max, nativeMin = Math.min, nativeNow = Date.now, nativeParseInt = context.parseInt, nativeRandom = Math.random, nativeReverse = arrayProto.reverse;
                var DataView = getNative(context, "DataView"), Map = getNative(context, "Map"), Promise = getNative(context, "Promise"), Set = getNative(context, "Set"), WeakMap = getNative(context, "WeakMap"), nativeCreate = getNative(Object, "create");
                var metaMap = WeakMap && new WeakMap;
                var realNames = {};
                var dataViewCtorString = toSource(DataView), mapCtorString = toSource(Map), promiseCtorString = toSource(Promise), setCtorString = toSource(Set), weakMapCtorString = toSource(WeakMap);
                var symbolProto = Symbol ? Symbol.prototype : undefined, symbolValueOf = symbolProto ? symbolProto.valueOf : undefined, symbolToString = symbolProto ? symbolProto.toString : undefined;
                function lodash(value) {
                    if (isObjectLike(value) && !isArray(value) && !(value instanceof LazyWrapper)) {
                        if (value instanceof LodashWrapper) return value;
                        if (hasOwnProperty.call(value, "__wrapped__")) return wrapperClone(value);
                    }
                    return new LodashWrapper(value);
                }
                var baseCreate = function() {
                    function object() {}
                    return function(proto) {
                        if (!isObject(proto)) return {};
                        if (objectCreate) return objectCreate(proto);
                        object.prototype = proto;
                        var result = new object;
                        object.prototype = undefined;
                        return result;
                    };
                }();
                function baseLodash() {}
                function LodashWrapper(value, chainAll) {
                    this.__wrapped__ = value;
                    this.__actions__ = [];
                    this.__chain__ = !!chainAll;
                    this.__index__ = 0;
                    this.__values__ = undefined;
                }
                lodash.templateSettings = {
                    escape: reEscape,
                    evaluate: reEvaluate,
                    interpolate: reInterpolate,
                    variable: "",
                    imports: {
                        _: lodash
                    }
                };
                lodash.prototype = baseLodash.prototype;
                lodash.prototype.constructor = lodash;
                LodashWrapper.prototype = baseCreate(baseLodash.prototype);
                LodashWrapper.prototype.constructor = LodashWrapper;
                function LazyWrapper(value) {
                    this.__wrapped__ = value;
                    this.__actions__ = [];
                    this.__dir__ = 1;
                    this.__filtered__ = false;
                    this.__iteratees__ = [];
                    this.__takeCount__ = MAX_ARRAY_LENGTH;
                    this.__views__ = [];
                }
                function lazyClone() {
                    var result = new LazyWrapper(this.__wrapped__);
                    result.__actions__ = copyArray(this.__actions__);
                    result.__dir__ = this.__dir__;
                    result.__filtered__ = this.__filtered__;
                    result.__iteratees__ = copyArray(this.__iteratees__);
                    result.__takeCount__ = this.__takeCount__;
                    result.__views__ = copyArray(this.__views__);
                    return result;
                }
                function lazyReverse() {
                    if (this.__filtered__) {
                        var result = new LazyWrapper(this);
                        result.__dir__ = -1;
                        result.__filtered__ = true;
                    } else {
                        result = this.clone();
                        result.__dir__ *= -1;
                    }
                    return result;
                }
                function lazyValue() {
                    var array = this.__wrapped__.value(), dir = this.__dir__, isArr = isArray(array), isRight = dir < 0, arrLength = isArr ? array.length : 0, view = getView(0, arrLength, this.__views__), start = view.start, end = view.end, length = end - start, index = isRight ? end : start - 1, iteratees = this.__iteratees__, iterLength = iteratees.length, resIndex = 0, takeCount = nativeMin(length, this.__takeCount__);
                    if (!isArr || !isRight && arrLength == length && takeCount == length) return baseWrapperValue(array, this.__actions__);
                    var result = [];
                    outer: while (length-- && resIndex < takeCount) {
                        index += dir;
                        var iterIndex = -1, value = array[index];
                        while (++iterIndex < iterLength) {
                            var data = iteratees[iterIndex], iteratee = data.iteratee, type = data.type, computed = iteratee(value);
                            if (type == LAZY_MAP_FLAG) value = computed; else if (!computed) if (type == LAZY_FILTER_FLAG) continue outer; else break outer;
                        }
                        result[resIndex++] = value;
                    }
                    return result;
                }
                LazyWrapper.prototype = baseCreate(baseLodash.prototype);
                LazyWrapper.prototype.constructor = LazyWrapper;
                function Hash(entries) {
                    var index = -1, length = null == entries ? 0 : entries.length;
                    this.clear();
                    while (++index < length) {
                        var entry = entries[index];
                        this.set(entry[0], entry[1]);
                    }
                }
                function hashClear() {
                    this.__data__ = nativeCreate ? nativeCreate(null) : {};
                    this.size = 0;
                }
                function hashDelete(key) {
                    var result = this.has(key) && delete this.__data__[key];
                    this.size -= result ? 1 : 0;
                    return result;
                }
                function hashGet(key) {
                    var data = this.__data__;
                    if (nativeCreate) {
                        var result = data[key];
                        return result === HASH_UNDEFINED ? undefined : result;
                    }
                    return hasOwnProperty.call(data, key) ? data[key] : undefined;
                }
                function hashHas(key) {
                    var data = this.__data__;
                    return nativeCreate ? data[key] !== undefined : hasOwnProperty.call(data, key);
                }
                function hashSet(key, value) {
                    var data = this.__data__;
                    this.size += this.has(key) ? 0 : 1;
                    data[key] = nativeCreate && value === undefined ? HASH_UNDEFINED : value;
                    return this;
                }
                Hash.prototype.clear = hashClear;
                Hash.prototype["delete"] = hashDelete;
                Hash.prototype.get = hashGet;
                Hash.prototype.has = hashHas;
                Hash.prototype.set = hashSet;
                function ListCache(entries) {
                    var index = -1, length = null == entries ? 0 : entries.length;
                    this.clear();
                    while (++index < length) {
                        var entry = entries[index];
                        this.set(entry[0], entry[1]);
                    }
                }
                function listCacheClear() {
                    this.__data__ = [];
                    this.size = 0;
                }
                function listCacheDelete(key) {
                    var data = this.__data__, index = assocIndexOf(data, key);
                    if (index < 0) return false;
                    var lastIndex = data.length - 1;
                    if (index == lastIndex) data.pop(); else splice.call(data, index, 1);
                    --this.size;
                    return true;
                }
                function listCacheGet(key) {
                    var data = this.__data__, index = assocIndexOf(data, key);
                    return index < 0 ? undefined : data[index][1];
                }
                function listCacheHas(key) {
                    return assocIndexOf(this.__data__, key) > -1;
                }
                function listCacheSet(key, value) {
                    var data = this.__data__, index = assocIndexOf(data, key);
                    if (index < 0) {
                        ++this.size;
                        data.push([ key, value ]);
                    } else data[index][1] = value;
                    return this;
                }
                ListCache.prototype.clear = listCacheClear;
                ListCache.prototype["delete"] = listCacheDelete;
                ListCache.prototype.get = listCacheGet;
                ListCache.prototype.has = listCacheHas;
                ListCache.prototype.set = listCacheSet;
                function MapCache(entries) {
                    var index = -1, length = null == entries ? 0 : entries.length;
                    this.clear();
                    while (++index < length) {
                        var entry = entries[index];
                        this.set(entry[0], entry[1]);
                    }
                }
                function mapCacheClear() {
                    this.size = 0;
                    this.__data__ = {
                        hash: new Hash,
                        map: new (Map || ListCache),
                        string: new Hash
                    };
                }
                function mapCacheDelete(key) {
                    var result = getMapData(this, key)["delete"](key);
                    this.size -= result ? 1 : 0;
                    return result;
                }
                function mapCacheGet(key) {
                    return getMapData(this, key).get(key);
                }
                function mapCacheHas(key) {
                    return getMapData(this, key).has(key);
                }
                function mapCacheSet(key, value) {
                    var data = getMapData(this, key), size = data.size;
                    data.set(key, value);
                    this.size += data.size == size ? 0 : 1;
                    return this;
                }
                MapCache.prototype.clear = mapCacheClear;
                MapCache.prototype["delete"] = mapCacheDelete;
                MapCache.prototype.get = mapCacheGet;
                MapCache.prototype.has = mapCacheHas;
                MapCache.prototype.set = mapCacheSet;
                function SetCache(values) {
                    var index = -1, length = null == values ? 0 : values.length;
                    this.__data__ = new MapCache;
                    while (++index < length) this.add(values[index]);
                }
                function setCacheAdd(value) {
                    this.__data__.set(value, HASH_UNDEFINED);
                    return this;
                }
                function setCacheHas(value) {
                    return this.__data__.has(value);
                }
                SetCache.prototype.add = SetCache.prototype.push = setCacheAdd;
                SetCache.prototype.has = setCacheHas;
                function Stack(entries) {
                    var data = this.__data__ = new ListCache(entries);
                    this.size = data.size;
                }
                function stackClear() {
                    this.__data__ = new ListCache;
                    this.size = 0;
                }
                function stackDelete(key) {
                    var data = this.__data__, result = data["delete"](key);
                    this.size = data.size;
                    return result;
                }
                function stackGet(key) {
                    return this.__data__.get(key);
                }
                function stackHas(key) {
                    return this.__data__.has(key);
                }
                function stackSet(key, value) {
                    var data = this.__data__;
                    if (data instanceof ListCache) {
                        var pairs = data.__data__;
                        if (!Map || pairs.length < LARGE_ARRAY_SIZE - 1) {
                            pairs.push([ key, value ]);
                            this.size = ++data.size;
                            return this;
                        }
                        data = this.__data__ = new MapCache(pairs);
                    }
                    data.set(key, value);
                    this.size = data.size;
                    return this;
                }
                Stack.prototype.clear = stackClear;
                Stack.prototype["delete"] = stackDelete;
                Stack.prototype.get = stackGet;
                Stack.prototype.has = stackHas;
                Stack.prototype.set = stackSet;
                function arrayLikeKeys(value, inherited) {
                    var isArr = isArray(value), isArg = !isArr && isArguments(value), isBuff = !isArr && !isArg && isBuffer(value), isType = !isArr && !isArg && !isBuff && isTypedArray(value), skipIndexes = isArr || isArg || isBuff || isType, result = skipIndexes ? baseTimes(value.length, String) : [], length = result.length;
                    for (var key in value) if ((inherited || hasOwnProperty.call(value, key)) && !(skipIndexes && ("length" == key || isBuff && ("offset" == key || "parent" == key) || isType && ("buffer" == key || "byteLength" == key || "byteOffset" == key) || isIndex(key, length)))) result.push(key);
                    return result;
                }
                function arraySample(array) {
                    var length = array.length;
                    return length ? array[baseRandom(0, length - 1)] : undefined;
                }
                function arraySampleSize(array, n) {
                    return shuffleSelf(copyArray(array), baseClamp(n, 0, array.length));
                }
                function arrayShuffle(array) {
                    return shuffleSelf(copyArray(array));
                }
                function assignMergeValue(object, key, value) {
                    if (value !== undefined && !eq(object[key], value) || value === undefined && !(key in object)) baseAssignValue(object, key, value);
                }
                function assignValue(object, key, value) {
                    var objValue = object[key];
                    if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) || value === undefined && !(key in object)) baseAssignValue(object, key, value);
                }
                function assocIndexOf(array, key) {
                    var length = array.length;
                    while (length--) if (eq(array[length][0], key)) return length;
                    return -1;
                }
                function baseAggregator(collection, setter, iteratee, accumulator) {
                    baseEach(collection, (function(value, key, collection) {
                        setter(accumulator, value, iteratee(value), collection);
                    }));
                    return accumulator;
                }
                function baseAssign(object, source) {
                    return object && copyObject(source, keys(source), object);
                }
                function baseAssignIn(object, source) {
                    return object && copyObject(source, keysIn(source), object);
                }
                function baseAssignValue(object, key, value) {
                    if ("__proto__" == key && defineProperty) defineProperty(object, key, {
                        configurable: true,
                        enumerable: true,
                        value,
                        writable: true
                    }); else object[key] = value;
                }
                function baseAt(object, paths) {
                    var index = -1, length = paths.length, result = Array(length), skip = null == object;
                    while (++index < length) result[index] = skip ? undefined : get(object, paths[index]);
                    return result;
                }
                function baseClamp(number, lower, upper) {
                    if (number === number) {
                        if (upper !== undefined) number = number <= upper ? number : upper;
                        if (lower !== undefined) number = number >= lower ? number : lower;
                    }
                    return number;
                }
                function baseClone(value, bitmask, customizer, key, object, stack) {
                    var result, isDeep = bitmask & CLONE_DEEP_FLAG, isFlat = bitmask & CLONE_FLAT_FLAG, isFull = bitmask & CLONE_SYMBOLS_FLAG;
                    if (customizer) result = object ? customizer(value, key, object, stack) : customizer(value);
                    if (result !== undefined) return result;
                    if (!isObject(value)) return value;
                    var isArr = isArray(value);
                    if (isArr) {
                        result = initCloneArray(value);
                        if (!isDeep) return copyArray(value, result);
                    } else {
                        var tag = getTag(value), isFunc = tag == funcTag || tag == genTag;
                        if (isBuffer(value)) return cloneBuffer(value, isDeep);
                        if (tag == objectTag || tag == argsTag || isFunc && !object) {
                            result = isFlat || isFunc ? {} : initCloneObject(value);
                            if (!isDeep) return isFlat ? copySymbolsIn(value, baseAssignIn(result, value)) : copySymbols(value, baseAssign(result, value));
                        } else {
                            if (!cloneableTags[tag]) return object ? value : {};
                            result = initCloneByTag(value, tag, isDeep);
                        }
                    }
                    stack || (stack = new Stack);
                    var stacked = stack.get(value);
                    if (stacked) return stacked;
                    stack.set(value, result);
                    if (isSet(value)) value.forEach((function(subValue) {
                        result.add(baseClone(subValue, bitmask, customizer, subValue, value, stack));
                    })); else if (isMap(value)) value.forEach((function(subValue, key) {
                        result.set(key, baseClone(subValue, bitmask, customizer, key, value, stack));
                    }));
                    var keysFunc = isFull ? isFlat ? getAllKeysIn : getAllKeys : isFlat ? keysIn : keys;
                    var props = isArr ? undefined : keysFunc(value);
                    arrayEach(props || value, (function(subValue, key) {
                        if (props) {
                            key = subValue;
                            subValue = value[key];
                        }
                        assignValue(result, key, baseClone(subValue, bitmask, customizer, key, value, stack));
                    }));
                    return result;
                }
                function baseConforms(source) {
                    var props = keys(source);
                    return function(object) {
                        return baseConformsTo(object, source, props);
                    };
                }
                function baseConformsTo(object, source, props) {
                    var length = props.length;
                    if (null == object) return !length;
                    object = Object(object);
                    while (length--) {
                        var key = props[length], predicate = source[key], value = object[key];
                        if (value === undefined && !(key in object) || !predicate(value)) return false;
                    }
                    return true;
                }
                function baseDelay(func, wait, args) {
                    if ("function" != typeof func) throw new TypeError(FUNC_ERROR_TEXT);
                    return setTimeout((function() {
                        func.apply(undefined, args);
                    }), wait);
                }
                function baseDifference(array, values, iteratee, comparator) {
                    var index = -1, includes = arrayIncludes, isCommon = true, length = array.length, result = [], valuesLength = values.length;
                    if (!length) return result;
                    if (iteratee) values = arrayMap(values, baseUnary(iteratee));
                    if (comparator) {
                        includes = arrayIncludesWith;
                        isCommon = false;
                    } else if (values.length >= LARGE_ARRAY_SIZE) {
                        includes = cacheHas;
                        isCommon = false;
                        values = new SetCache(values);
                    }
                    outer: while (++index < length) {
                        var value = array[index], computed = null == iteratee ? value : iteratee(value);
                        value = comparator || 0 !== value ? value : 0;
                        if (isCommon && computed === computed) {
                            var valuesIndex = valuesLength;
                            while (valuesIndex--) if (values[valuesIndex] === computed) continue outer;
                            result.push(value);
                        } else if (!includes(values, computed, comparator)) result.push(value);
                    }
                    return result;
                }
                var baseEach = createBaseEach(baseForOwn);
                var baseEachRight = createBaseEach(baseForOwnRight, true);
                function baseEvery(collection, predicate) {
                    var result = true;
                    baseEach(collection, (function(value, index, collection) {
                        result = !!predicate(value, index, collection);
                        return result;
                    }));
                    return result;
                }
                function baseExtremum(array, iteratee, comparator) {
                    var index = -1, length = array.length;
                    while (++index < length) {
                        var value = array[index], current = iteratee(value);
                        if (null != current && (computed === undefined ? current === current && !isSymbol(current) : comparator(current, computed))) var computed = current, result = value;
                    }
                    return result;
                }
                function baseFill(array, value, start, end) {
                    var length = array.length;
                    start = toInteger(start);
                    if (start < 0) start = -start > length ? 0 : length + start;
                    end = end === undefined || end > length ? length : toInteger(end);
                    if (end < 0) end += length;
                    end = start > end ? 0 : toLength(end);
                    while (start < end) array[start++] = value;
                    return array;
                }
                function baseFilter(collection, predicate) {
                    var result = [];
                    baseEach(collection, (function(value, index, collection) {
                        if (predicate(value, index, collection)) result.push(value);
                    }));
                    return result;
                }
                function baseFlatten(array, depth, predicate, isStrict, result) {
                    var index = -1, length = array.length;
                    predicate || (predicate = isFlattenable);
                    result || (result = []);
                    while (++index < length) {
                        var value = array[index];
                        if (depth > 0 && predicate(value)) if (depth > 1) baseFlatten(value, depth - 1, predicate, isStrict, result); else arrayPush(result, value); else if (!isStrict) result[result.length] = value;
                    }
                    return result;
                }
                var baseFor = createBaseFor();
                var baseForRight = createBaseFor(true);
                function baseForOwn(object, iteratee) {
                    return object && baseFor(object, iteratee, keys);
                }
                function baseForOwnRight(object, iteratee) {
                    return object && baseForRight(object, iteratee, keys);
                }
                function baseFunctions(object, props) {
                    return arrayFilter(props, (function(key) {
                        return isFunction(object[key]);
                    }));
                }
                function baseGet(object, path) {
                    path = castPath(path, object);
                    var index = 0, length = path.length;
                    while (null != object && index < length) object = object[toKey(path[index++])];
                    return index && index == length ? object : undefined;
                }
                function baseGetAllKeys(object, keysFunc, symbolsFunc) {
                    var result = keysFunc(object);
                    return isArray(object) ? result : arrayPush(result, symbolsFunc(object));
                }
                function baseGetTag(value) {
                    if (null == value) return value === undefined ? undefinedTag : nullTag;
                    return symToStringTag && symToStringTag in Object(value) ? getRawTag(value) : objectToString(value);
                }
                function baseGt(value, other) {
                    return value > other;
                }
                function baseHas(object, key) {
                    return null != object && hasOwnProperty.call(object, key);
                }
                function baseHasIn(object, key) {
                    return null != object && key in Object(object);
                }
                function baseInRange(number, start, end) {
                    return number >= nativeMin(start, end) && number < nativeMax(start, end);
                }
                function baseIntersection(arrays, iteratee, comparator) {
                    var includes = comparator ? arrayIncludesWith : arrayIncludes, length = arrays[0].length, othLength = arrays.length, othIndex = othLength, caches = Array(othLength), maxLength = 1 / 0, result = [];
                    while (othIndex--) {
                        var array = arrays[othIndex];
                        if (othIndex && iteratee) array = arrayMap(array, baseUnary(iteratee));
                        maxLength = nativeMin(array.length, maxLength);
                        caches[othIndex] = !comparator && (iteratee || length >= 120 && array.length >= 120) ? new SetCache(othIndex && array) : undefined;
                    }
                    array = arrays[0];
                    var index = -1, seen = caches[0];
                    outer: while (++index < length && result.length < maxLength) {
                        var value = array[index], computed = iteratee ? iteratee(value) : value;
                        value = comparator || 0 !== value ? value : 0;
                        if (!(seen ? cacheHas(seen, computed) : includes(result, computed, comparator))) {
                            othIndex = othLength;
                            while (--othIndex) {
                                var cache = caches[othIndex];
                                if (!(cache ? cacheHas(cache, computed) : includes(arrays[othIndex], computed, comparator))) continue outer;
                            }
                            if (seen) seen.push(computed);
                            result.push(value);
                        }
                    }
                    return result;
                }
                function baseInverter(object, setter, iteratee, accumulator) {
                    baseForOwn(object, (function(value, key, object) {
                        setter(accumulator, iteratee(value), key, object);
                    }));
                    return accumulator;
                }
                function baseInvoke(object, path, args) {
                    path = castPath(path, object);
                    object = parent(object, path);
                    var func = null == object ? object : object[toKey(last(path))];
                    return null == func ? undefined : apply(func, object, args);
                }
                function baseIsArguments(value) {
                    return isObjectLike(value) && baseGetTag(value) == argsTag;
                }
                function baseIsArrayBuffer(value) {
                    return isObjectLike(value) && baseGetTag(value) == arrayBufferTag;
                }
                function baseIsDate(value) {
                    return isObjectLike(value) && baseGetTag(value) == dateTag;
                }
                function baseIsEqual(value, other, bitmask, customizer, stack) {
                    if (value === other) return true;
                    if (null == value || null == other || !isObjectLike(value) && !isObjectLike(other)) return value !== value && other !== other;
                    return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);
                }
                function baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {
                    var objIsArr = isArray(object), othIsArr = isArray(other), objTag = objIsArr ? arrayTag : getTag(object), othTag = othIsArr ? arrayTag : getTag(other);
                    objTag = objTag == argsTag ? objectTag : objTag;
                    othTag = othTag == argsTag ? objectTag : othTag;
                    var objIsObj = objTag == objectTag, othIsObj = othTag == objectTag, isSameTag = objTag == othTag;
                    if (isSameTag && isBuffer(object)) {
                        if (!isBuffer(other)) return false;
                        objIsArr = true;
                        objIsObj = false;
                    }
                    if (isSameTag && !objIsObj) {
                        stack || (stack = new Stack);
                        return objIsArr || isTypedArray(object) ? equalArrays(object, other, bitmask, customizer, equalFunc, stack) : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);
                    }
                    if (!(bitmask & COMPARE_PARTIAL_FLAG)) {
                        var objIsWrapped = objIsObj && hasOwnProperty.call(object, "__wrapped__"), othIsWrapped = othIsObj && hasOwnProperty.call(other, "__wrapped__");
                        if (objIsWrapped || othIsWrapped) {
                            var objUnwrapped = objIsWrapped ? object.value() : object, othUnwrapped = othIsWrapped ? other.value() : other;
                            stack || (stack = new Stack);
                            return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);
                        }
                    }
                    if (!isSameTag) return false;
                    stack || (stack = new Stack);
                    return equalObjects(object, other, bitmask, customizer, equalFunc, stack);
                }
                function baseIsMap(value) {
                    return isObjectLike(value) && getTag(value) == mapTag;
                }
                function baseIsMatch(object, source, matchData, customizer) {
                    var index = matchData.length, length = index, noCustomizer = !customizer;
                    if (null == object) return !length;
                    object = Object(object);
                    while (index--) {
                        var data = matchData[index];
                        if (noCustomizer && data[2] ? data[1] !== object[data[0]] : !(data[0] in object)) return false;
                    }
                    while (++index < length) {
                        data = matchData[index];
                        var key = data[0], objValue = object[key], srcValue = data[1];
                        if (noCustomizer && data[2]) {
                            if (objValue === undefined && !(key in object)) return false;
                        } else {
                            var stack = new Stack;
                            if (customizer) var result = customizer(objValue, srcValue, key, object, source, stack);
                            if (!(result === undefined ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack) : result)) return false;
                        }
                    }
                    return true;
                }
                function baseIsNative(value) {
                    if (!isObject(value) || isMasked(value)) return false;
                    var pattern = isFunction(value) ? reIsNative : reIsHostCtor;
                    return pattern.test(toSource(value));
                }
                function baseIsRegExp(value) {
                    return isObjectLike(value) && baseGetTag(value) == regexpTag;
                }
                function baseIsSet(value) {
                    return isObjectLike(value) && getTag(value) == setTag;
                }
                function baseIsTypedArray(value) {
                    return isObjectLike(value) && isLength(value.length) && !!typedArrayTags[baseGetTag(value)];
                }
                function baseIteratee(value) {
                    if ("function" == typeof value) return value;
                    if (null == value) return identity;
                    if ("object" == typeof value) return isArray(value) ? baseMatchesProperty(value[0], value[1]) : baseMatches(value);
                    return property(value);
                }
                function baseKeys(object) {
                    if (!isPrototype(object)) return nativeKeys(object);
                    var result = [];
                    for (var key in Object(object)) if (hasOwnProperty.call(object, key) && "constructor" != key) result.push(key);
                    return result;
                }
                function baseKeysIn(object) {
                    if (!isObject(object)) return nativeKeysIn(object);
                    var isProto = isPrototype(object), result = [];
                    for (var key in object) if (!("constructor" == key && (isProto || !hasOwnProperty.call(object, key)))) result.push(key);
                    return result;
                }
                function baseLt(value, other) {
                    return value < other;
                }
                function baseMap(collection, iteratee) {
                    var index = -1, result = isArrayLike(collection) ? Array(collection.length) : [];
                    baseEach(collection, (function(value, key, collection) {
                        result[++index] = iteratee(value, key, collection);
                    }));
                    return result;
                }
                function baseMatches(source) {
                    var matchData = getMatchData(source);
                    if (1 == matchData.length && matchData[0][2]) return matchesStrictComparable(matchData[0][0], matchData[0][1]);
                    return function(object) {
                        return object === source || baseIsMatch(object, source, matchData);
                    };
                }
                function baseMatchesProperty(path, srcValue) {
                    if (isKey(path) && isStrictComparable(srcValue)) return matchesStrictComparable(toKey(path), srcValue);
                    return function(object) {
                        var objValue = get(object, path);
                        return objValue === undefined && objValue === srcValue ? hasIn(object, path) : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);
                    };
                }
                function baseMerge(object, source, srcIndex, customizer, stack) {
                    if (object === source) return;
                    baseFor(source, (function(srcValue, key) {
                        stack || (stack = new Stack);
                        if (isObject(srcValue)) baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack); else {
                            var newValue = customizer ? customizer(safeGet(object, key), srcValue, key + "", object, source, stack) : undefined;
                            if (newValue === undefined) newValue = srcValue;
                            assignMergeValue(object, key, newValue);
                        }
                    }), keysIn);
                }
                function baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {
                    var objValue = safeGet(object, key), srcValue = safeGet(source, key), stacked = stack.get(srcValue);
                    if (stacked) {
                        assignMergeValue(object, key, stacked);
                        return;
                    }
                    var newValue = customizer ? customizer(objValue, srcValue, key + "", object, source, stack) : undefined;
                    var isCommon = newValue === undefined;
                    if (isCommon) {
                        var isArr = isArray(srcValue), isBuff = !isArr && isBuffer(srcValue), isTyped = !isArr && !isBuff && isTypedArray(srcValue);
                        newValue = srcValue;
                        if (isArr || isBuff || isTyped) if (isArray(objValue)) newValue = objValue; else if (isArrayLikeObject(objValue)) newValue = copyArray(objValue); else if (isBuff) {
                            isCommon = false;
                            newValue = cloneBuffer(srcValue, true);
                        } else if (isTyped) {
                            isCommon = false;
                            newValue = cloneTypedArray(srcValue, true);
                        } else newValue = []; else if (isPlainObject(srcValue) || isArguments(srcValue)) {
                            newValue = objValue;
                            if (isArguments(objValue)) newValue = toPlainObject(objValue); else if (!isObject(objValue) || isFunction(objValue)) newValue = initCloneObject(srcValue);
                        } else isCommon = false;
                    }
                    if (isCommon) {
                        stack.set(srcValue, newValue);
                        mergeFunc(newValue, srcValue, srcIndex, customizer, stack);
                        stack["delete"](srcValue);
                    }
                    assignMergeValue(object, key, newValue);
                }
                function baseNth(array, n) {
                    var length = array.length;
                    if (!length) return;
                    n += n < 0 ? length : 0;
                    return isIndex(n, length) ? array[n] : undefined;
                }
                function baseOrderBy(collection, iteratees, orders) {
                    if (iteratees.length) iteratees = arrayMap(iteratees, (function(iteratee) {
                        if (isArray(iteratee)) return function(value) {
                            return baseGet(value, 1 === iteratee.length ? iteratee[0] : iteratee);
                        };
                        return iteratee;
                    })); else iteratees = [ identity ];
                    var index = -1;
                    iteratees = arrayMap(iteratees, baseUnary(getIteratee()));
                    var result = baseMap(collection, (function(value, key, collection) {
                        var criteria = arrayMap(iteratees, (function(iteratee) {
                            return iteratee(value);
                        }));
                        return {
                            criteria,
                            index: ++index,
                            value
                        };
                    }));
                    return baseSortBy(result, (function(object, other) {
                        return compareMultiple(object, other, orders);
                    }));
                }
                function basePick(object, paths) {
                    return basePickBy(object, paths, (function(value, path) {
                        return hasIn(object, path);
                    }));
                }
                function basePickBy(object, paths, predicate) {
                    var index = -1, length = paths.length, result = {};
                    while (++index < length) {
                        var path = paths[index], value = baseGet(object, path);
                        if (predicate(value, path)) baseSet(result, castPath(path, object), value);
                    }
                    return result;
                }
                function basePropertyDeep(path) {
                    return function(object) {
                        return baseGet(object, path);
                    };
                }
                function basePullAll(array, values, iteratee, comparator) {
                    var indexOf = comparator ? baseIndexOfWith : baseIndexOf, index = -1, length = values.length, seen = array;
                    if (array === values) values = copyArray(values);
                    if (iteratee) seen = arrayMap(array, baseUnary(iteratee));
                    while (++index < length) {
                        var fromIndex = 0, value = values[index], computed = iteratee ? iteratee(value) : value;
                        while ((fromIndex = indexOf(seen, computed, fromIndex, comparator)) > -1) {
                            if (seen !== array) splice.call(seen, fromIndex, 1);
                            splice.call(array, fromIndex, 1);
                        }
                    }
                    return array;
                }
                function basePullAt(array, indexes) {
                    var length = array ? indexes.length : 0, lastIndex = length - 1;
                    while (length--) {
                        var index = indexes[length];
                        if (length == lastIndex || index !== previous) {
                            var previous = index;
                            if (isIndex(index)) splice.call(array, index, 1); else baseUnset(array, index);
                        }
                    }
                    return array;
                }
                function baseRandom(lower, upper) {
                    return lower + nativeFloor(nativeRandom() * (upper - lower + 1));
                }
                function baseRange(start, end, step, fromRight) {
                    var index = -1, length = nativeMax(nativeCeil((end - start) / (step || 1)), 0), result = Array(length);
                    while (length--) {
                        result[fromRight ? length : ++index] = start;
                        start += step;
                    }
                    return result;
                }
                function baseRepeat(string, n) {
                    var result = "";
                    if (!string || n < 1 || n > MAX_SAFE_INTEGER) return result;
                    do {
                        if (n % 2) result += string;
                        n = nativeFloor(n / 2);
                        if (n) string += string;
                    } while (n);
                    return result;
                }
                function baseRest(func, start) {
                    return setToString(overRest(func, start, identity), func + "");
                }
                function baseSample(collection) {
                    return arraySample(values(collection));
                }
                function baseSampleSize(collection, n) {
                    var array = values(collection);
                    return shuffleSelf(array, baseClamp(n, 0, array.length));
                }
                function baseSet(object, path, value, customizer) {
                    if (!isObject(object)) return object;
                    path = castPath(path, object);
                    var index = -1, length = path.length, lastIndex = length - 1, nested = object;
                    while (null != nested && ++index < length) {
                        var key = toKey(path[index]), newValue = value;
                        if ("__proto__" === key || "constructor" === key || "prototype" === key) return object;
                        if (index != lastIndex) {
                            var objValue = nested[key];
                            newValue = customizer ? customizer(objValue, key, nested) : undefined;
                            if (newValue === undefined) newValue = isObject(objValue) ? objValue : isIndex(path[index + 1]) ? [] : {};
                        }
                        assignValue(nested, key, newValue);
                        nested = nested[key];
                    }
                    return object;
                }
                var baseSetData = !metaMap ? identity : function(func, data) {
                    metaMap.set(func, data);
                    return func;
                };
                var baseSetToString = !defineProperty ? identity : function(func, string) {
                    return defineProperty(func, "toString", {
                        configurable: true,
                        enumerable: false,
                        value: constant(string),
                        writable: true
                    });
                };
                function baseShuffle(collection) {
                    return shuffleSelf(values(collection));
                }
                function baseSlice(array, start, end) {
                    var index = -1, length = array.length;
                    if (start < 0) start = -start > length ? 0 : length + start;
                    end = end > length ? length : end;
                    if (end < 0) end += length;
                    length = start > end ? 0 : end - start >>> 0;
                    start >>>= 0;
                    var result = Array(length);
                    while (++index < length) result[index] = array[index + start];
                    return result;
                }
                function baseSome(collection, predicate) {
                    var result;
                    baseEach(collection, (function(value, index, collection) {
                        result = predicate(value, index, collection);
                        return !result;
                    }));
                    return !!result;
                }
                function baseSortedIndex(array, value, retHighest) {
                    var low = 0, high = null == array ? low : array.length;
                    if ("number" == typeof value && value === value && high <= HALF_MAX_ARRAY_LENGTH) {
                        while (low < high) {
                            var mid = low + high >>> 1, computed = array[mid];
                            if (null !== computed && !isSymbol(computed) && (retHighest ? computed <= value : computed < value)) low = mid + 1; else high = mid;
                        }
                        return high;
                    }
                    return baseSortedIndexBy(array, value, identity, retHighest);
                }
                function baseSortedIndexBy(array, value, iteratee, retHighest) {
                    var low = 0, high = null == array ? 0 : array.length;
                    if (0 === high) return 0;
                    value = iteratee(value);
                    var valIsNaN = value !== value, valIsNull = null === value, valIsSymbol = isSymbol(value), valIsUndefined = value === undefined;
                    while (low < high) {
                        var mid = nativeFloor((low + high) / 2), computed = iteratee(array[mid]), othIsDefined = computed !== undefined, othIsNull = null === computed, othIsReflexive = computed === computed, othIsSymbol = isSymbol(computed);
                        if (valIsNaN) var setLow = retHighest || othIsReflexive; else if (valIsUndefined) setLow = othIsReflexive && (retHighest || othIsDefined); else if (valIsNull) setLow = othIsReflexive && othIsDefined && (retHighest || !othIsNull); else if (valIsSymbol) setLow = othIsReflexive && othIsDefined && !othIsNull && (retHighest || !othIsSymbol); else if (othIsNull || othIsSymbol) setLow = false; else setLow = retHighest ? computed <= value : computed < value;
                        if (setLow) low = mid + 1; else high = mid;
                    }
                    return nativeMin(high, MAX_ARRAY_INDEX);
                }
                function baseSortedUniq(array, iteratee) {
                    var index = -1, length = array.length, resIndex = 0, result = [];
                    while (++index < length) {
                        var value = array[index], computed = iteratee ? iteratee(value) : value;
                        if (!index || !eq(computed, seen)) {
                            var seen = computed;
                            result[resIndex++] = 0 === value ? 0 : value;
                        }
                    }
                    return result;
                }
                function baseToNumber(value) {
                    if ("number" == typeof value) return value;
                    if (isSymbol(value)) return NAN;
                    return +value;
                }
                function baseToString(value) {
                    if ("string" == typeof value) return value;
                    if (isArray(value)) return arrayMap(value, baseToString) + "";
                    if (isSymbol(value)) return symbolToString ? symbolToString.call(value) : "";
                    var result = value + "";
                    return "0" == result && 1 / value == -INFINITY ? "-0" : result;
                }
                function baseUniq(array, iteratee, comparator) {
                    var index = -1, includes = arrayIncludes, length = array.length, isCommon = true, result = [], seen = result;
                    if (comparator) {
                        isCommon = false;
                        includes = arrayIncludesWith;
                    } else if (length >= LARGE_ARRAY_SIZE) {
                        var set = iteratee ? null : createSet(array);
                        if (set) return setToArray(set);
                        isCommon = false;
                        includes = cacheHas;
                        seen = new SetCache;
                    } else seen = iteratee ? [] : result;
                    outer: while (++index < length) {
                        var value = array[index], computed = iteratee ? iteratee(value) : value;
                        value = comparator || 0 !== value ? value : 0;
                        if (isCommon && computed === computed) {
                            var seenIndex = seen.length;
                            while (seenIndex--) if (seen[seenIndex] === computed) continue outer;
                            if (iteratee) seen.push(computed);
                            result.push(value);
                        } else if (!includes(seen, computed, comparator)) {
                            if (seen !== result) seen.push(computed);
                            result.push(value);
                        }
                    }
                    return result;
                }
                function baseUnset(object, path) {
                    path = castPath(path, object);
                    object = parent(object, path);
                    return null == object || delete object[toKey(last(path))];
                }
                function baseUpdate(object, path, updater, customizer) {
                    return baseSet(object, path, updater(baseGet(object, path)), customizer);
                }
                function baseWhile(array, predicate, isDrop, fromRight) {
                    var length = array.length, index = fromRight ? length : -1;
                    while ((fromRight ? index-- : ++index < length) && predicate(array[index], index, array)) ;
                    return isDrop ? baseSlice(array, fromRight ? 0 : index, fromRight ? index + 1 : length) : baseSlice(array, fromRight ? index + 1 : 0, fromRight ? length : index);
                }
                function baseWrapperValue(value, actions) {
                    var result = value;
                    if (result instanceof LazyWrapper) result = result.value();
                    return arrayReduce(actions, (function(result, action) {
                        return action.func.apply(action.thisArg, arrayPush([ result ], action.args));
                    }), result);
                }
                function baseXor(arrays, iteratee, comparator) {
                    var length = arrays.length;
                    if (length < 2) return length ? baseUniq(arrays[0]) : [];
                    var index = -1, result = Array(length);
                    while (++index < length) {
                        var array = arrays[index], othIndex = -1;
                        while (++othIndex < length) if (othIndex != index) result[index] = baseDifference(result[index] || array, arrays[othIndex], iteratee, comparator);
                    }
                    return baseUniq(baseFlatten(result, 1), iteratee, comparator);
                }
                function baseZipObject(props, values, assignFunc) {
                    var index = -1, length = props.length, valsLength = values.length, result = {};
                    while (++index < length) {
                        var value = index < valsLength ? values[index] : undefined;
                        assignFunc(result, props[index], value);
                    }
                    return result;
                }
                function castArrayLikeObject(value) {
                    return isArrayLikeObject(value) ? value : [];
                }
                function castFunction(value) {
                    return "function" == typeof value ? value : identity;
                }
                function castPath(value, object) {
                    if (isArray(value)) return value;
                    return isKey(value, object) ? [ value ] : stringToPath(toString(value));
                }
                var castRest = baseRest;
                function castSlice(array, start, end) {
                    var length = array.length;
                    end = end === undefined ? length : end;
                    return !start && end >= length ? array : baseSlice(array, start, end);
                }
                var clearTimeout = ctxClearTimeout || function(id) {
                    return root.clearTimeout(id);
                };
                function cloneBuffer(buffer, isDeep) {
                    if (isDeep) return buffer.slice();
                    var length = buffer.length, result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);
                    buffer.copy(result);
                    return result;
                }
                function cloneArrayBuffer(arrayBuffer) {
                    var result = new arrayBuffer.constructor(arrayBuffer.byteLength);
                    new Uint8Array(result).set(new Uint8Array(arrayBuffer));
                    return result;
                }
                function cloneDataView(dataView, isDeep) {
                    var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;
                    return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);
                }
                function cloneRegExp(regexp) {
                    var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));
                    result.lastIndex = regexp.lastIndex;
                    return result;
                }
                function cloneSymbol(symbol) {
                    return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};
                }
                function cloneTypedArray(typedArray, isDeep) {
                    var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;
                    return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);
                }
                function compareAscending(value, other) {
                    if (value !== other) {
                        var valIsDefined = value !== undefined, valIsNull = null === value, valIsReflexive = value === value, valIsSymbol = isSymbol(value);
                        var othIsDefined = other !== undefined, othIsNull = null === other, othIsReflexive = other === other, othIsSymbol = isSymbol(other);
                        if (!othIsNull && !othIsSymbol && !valIsSymbol && value > other || valIsSymbol && othIsDefined && othIsReflexive && !othIsNull && !othIsSymbol || valIsNull && othIsDefined && othIsReflexive || !valIsDefined && othIsReflexive || !valIsReflexive) return 1;
                        if (!valIsNull && !valIsSymbol && !othIsSymbol && value < other || othIsSymbol && valIsDefined && valIsReflexive && !valIsNull && !valIsSymbol || othIsNull && valIsDefined && valIsReflexive || !othIsDefined && valIsReflexive || !othIsReflexive) return -1;
                    }
                    return 0;
                }
                function compareMultiple(object, other, orders) {
                    var index = -1, objCriteria = object.criteria, othCriteria = other.criteria, length = objCriteria.length, ordersLength = orders.length;
                    while (++index < length) {
                        var result = compareAscending(objCriteria[index], othCriteria[index]);
                        if (result) {
                            if (index >= ordersLength) return result;
                            var order = orders[index];
                            return result * ("desc" == order ? -1 : 1);
                        }
                    }
                    return object.index - other.index;
                }
                function composeArgs(args, partials, holders, isCurried) {
                    var argsIndex = -1, argsLength = args.length, holdersLength = holders.length, leftIndex = -1, leftLength = partials.length, rangeLength = nativeMax(argsLength - holdersLength, 0), result = Array(leftLength + rangeLength), isUncurried = !isCurried;
                    while (++leftIndex < leftLength) result[leftIndex] = partials[leftIndex];
                    while (++argsIndex < holdersLength) if (isUncurried || argsIndex < argsLength) result[holders[argsIndex]] = args[argsIndex];
                    while (rangeLength--) result[leftIndex++] = args[argsIndex++];
                    return result;
                }
                function composeArgsRight(args, partials, holders, isCurried) {
                    var argsIndex = -1, argsLength = args.length, holdersIndex = -1, holdersLength = holders.length, rightIndex = -1, rightLength = partials.length, rangeLength = nativeMax(argsLength - holdersLength, 0), result = Array(rangeLength + rightLength), isUncurried = !isCurried;
                    while (++argsIndex < rangeLength) result[argsIndex] = args[argsIndex];
                    var offset = argsIndex;
                    while (++rightIndex < rightLength) result[offset + rightIndex] = partials[rightIndex];
                    while (++holdersIndex < holdersLength) if (isUncurried || argsIndex < argsLength) result[offset + holders[holdersIndex]] = args[argsIndex++];
                    return result;
                }
                function copyArray(source, array) {
                    var index = -1, length = source.length;
                    array || (array = Array(length));
                    while (++index < length) array[index] = source[index];
                    return array;
                }
                function copyObject(source, props, object, customizer) {
                    var isNew = !object;
                    object || (object = {});
                    var index = -1, length = props.length;
                    while (++index < length) {
                        var key = props[index];
                        var newValue = customizer ? customizer(object[key], source[key], key, object, source) : undefined;
                        if (newValue === undefined) newValue = source[key];
                        if (isNew) baseAssignValue(object, key, newValue); else assignValue(object, key, newValue);
                    }
                    return object;
                }
                function copySymbols(source, object) {
                    return copyObject(source, getSymbols(source), object);
                }
                function copySymbolsIn(source, object) {
                    return copyObject(source, getSymbolsIn(source), object);
                }
                function createAggregator(setter, initializer) {
                    return function(collection, iteratee) {
                        var func = isArray(collection) ? arrayAggregator : baseAggregator, accumulator = initializer ? initializer() : {};
                        return func(collection, setter, getIteratee(iteratee, 2), accumulator);
                    };
                }
                function createAssigner(assigner) {
                    return baseRest((function(object, sources) {
                        var index = -1, length = sources.length, customizer = length > 1 ? sources[length - 1] : undefined, guard = length > 2 ? sources[2] : undefined;
                        customizer = assigner.length > 3 && "function" == typeof customizer ? (length--, 
                        customizer) : undefined;
                        if (guard && isIterateeCall(sources[0], sources[1], guard)) {
                            customizer = length < 3 ? undefined : customizer;
                            length = 1;
                        }
                        object = Object(object);
                        while (++index < length) {
                            var source = sources[index];
                            if (source) assigner(object, source, index, customizer);
                        }
                        return object;
                    }));
                }
                function createBaseEach(eachFunc, fromRight) {
                    return function(collection, iteratee) {
                        if (null == collection) return collection;
                        if (!isArrayLike(collection)) return eachFunc(collection, iteratee);
                        var length = collection.length, index = fromRight ? length : -1, iterable = Object(collection);
                        while (fromRight ? index-- : ++index < length) if (false === iteratee(iterable[index], index, iterable)) break;
                        return collection;
                    };
                }
                function createBaseFor(fromRight) {
                    return function(object, iteratee, keysFunc) {
                        var index = -1, iterable = Object(object), props = keysFunc(object), length = props.length;
                        while (length--) {
                            var key = props[fromRight ? length : ++index];
                            if (false === iteratee(iterable[key], key, iterable)) break;
                        }
                        return object;
                    };
                }
                function createBind(func, bitmask, thisArg) {
                    var isBind = bitmask & WRAP_BIND_FLAG, Ctor = createCtor(func);
                    function wrapper() {
                        var fn = this && this !== root && this instanceof wrapper ? Ctor : func;
                        return fn.apply(isBind ? thisArg : this, arguments);
                    }
                    return wrapper;
                }
                function createCaseFirst(methodName) {
                    return function(string) {
                        string = toString(string);
                        var strSymbols = hasUnicode(string) ? stringToArray(string) : undefined;
                        var chr = strSymbols ? strSymbols[0] : string.charAt(0);
                        var trailing = strSymbols ? castSlice(strSymbols, 1).join("") : string.slice(1);
                        return chr[methodName]() + trailing;
                    };
                }
                function createCompounder(callback) {
                    return function(string) {
                        return arrayReduce(words(deburr(string).replace(reApos, "")), callback, "");
                    };
                }
                function createCtor(Ctor) {
                    return function() {
                        var args = arguments;
                        switch (args.length) {
                          case 0:
                            return new Ctor;

                          case 1:
                            return new Ctor(args[0]);

                          case 2:
                            return new Ctor(args[0], args[1]);

                          case 3:
                            return new Ctor(args[0], args[1], args[2]);

                          case 4:
                            return new Ctor(args[0], args[1], args[2], args[3]);

                          case 5:
                            return new Ctor(args[0], args[1], args[2], args[3], args[4]);

                          case 6:
                            return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5]);

                          case 7:
                            return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5], args[6]);
                        }
                        var thisBinding = baseCreate(Ctor.prototype), result = Ctor.apply(thisBinding, args);
                        return isObject(result) ? result : thisBinding;
                    };
                }
                function createCurry(func, bitmask, arity) {
                    var Ctor = createCtor(func);
                    function wrapper() {
                        var length = arguments.length, args = Array(length), index = length, placeholder = getHolder(wrapper);
                        while (index--) args[index] = arguments[index];
                        var holders = length < 3 && args[0] !== placeholder && args[length - 1] !== placeholder ? [] : replaceHolders(args, placeholder);
                        length -= holders.length;
                        if (length < arity) return createRecurry(func, bitmask, createHybrid, wrapper.placeholder, undefined, args, holders, undefined, undefined, arity - length);
                        var fn = this && this !== root && this instanceof wrapper ? Ctor : func;
                        return apply(fn, this, args);
                    }
                    return wrapper;
                }
                function createFind(findIndexFunc) {
                    return function(collection, predicate, fromIndex) {
                        var iterable = Object(collection);
                        if (!isArrayLike(collection)) {
                            var iteratee = getIteratee(predicate, 3);
                            collection = keys(collection);
                            predicate = function(key) {
                                return iteratee(iterable[key], key, iterable);
                            };
                        }
                        var index = findIndexFunc(collection, predicate, fromIndex);
                        return index > -1 ? iterable[iteratee ? collection[index] : index] : undefined;
                    };
                }
                function createFlow(fromRight) {
                    return flatRest((function(funcs) {
                        var length = funcs.length, index = length, prereq = LodashWrapper.prototype.thru;
                        if (fromRight) funcs.reverse();
                        while (index--) {
                            var func = funcs[index];
                            if ("function" != typeof func) throw new TypeError(FUNC_ERROR_TEXT);
                            if (prereq && !wrapper && "wrapper" == getFuncName(func)) var wrapper = new LodashWrapper([], true);
                        }
                        index = wrapper ? index : length;
                        while (++index < length) {
                            func = funcs[index];
                            var funcName = getFuncName(func), data = "wrapper" == funcName ? getData(func) : undefined;
                            if (data && isLaziable(data[0]) && data[1] == (WRAP_ARY_FLAG | WRAP_CURRY_FLAG | WRAP_PARTIAL_FLAG | WRAP_REARG_FLAG) && !data[4].length && 1 == data[9]) wrapper = wrapper[getFuncName(data[0])].apply(wrapper, data[3]); else wrapper = 1 == func.length && isLaziable(func) ? wrapper[funcName]() : wrapper.thru(func);
                        }
                        return function() {
                            var args = arguments, value = args[0];
                            if (wrapper && 1 == args.length && isArray(value)) return wrapper.plant(value).value();
                            var index = 0, result = length ? funcs[index].apply(this, args) : value;
                            while (++index < length) result = funcs[index].call(this, result);
                            return result;
                        };
                    }));
                }
                function createHybrid(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity) {
                    var isAry = bitmask & WRAP_ARY_FLAG, isBind = bitmask & WRAP_BIND_FLAG, isBindKey = bitmask & WRAP_BIND_KEY_FLAG, isCurried = bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG), isFlip = bitmask & WRAP_FLIP_FLAG, Ctor = isBindKey ? undefined : createCtor(func);
                    function wrapper() {
                        var length = arguments.length, args = Array(length), index = length;
                        while (index--) args[index] = arguments[index];
                        if (isCurried) var placeholder = getHolder(wrapper), holdersCount = countHolders(args, placeholder);
                        if (partials) args = composeArgs(args, partials, holders, isCurried);
                        if (partialsRight) args = composeArgsRight(args, partialsRight, holdersRight, isCurried);
                        length -= holdersCount;
                        if (isCurried && length < arity) {
                            var newHolders = replaceHolders(args, placeholder);
                            return createRecurry(func, bitmask, createHybrid, wrapper.placeholder, thisArg, args, newHolders, argPos, ary, arity - length);
                        }
                        var thisBinding = isBind ? thisArg : this, fn = isBindKey ? thisBinding[func] : func;
                        length = args.length;
                        if (argPos) args = reorder(args, argPos); else if (isFlip && length > 1) args.reverse();
                        if (isAry && ary < length) args.length = ary;
                        if (this && this !== root && this instanceof wrapper) fn = Ctor || createCtor(fn);
                        return fn.apply(thisBinding, args);
                    }
                    return wrapper;
                }
                function createInverter(setter, toIteratee) {
                    return function(object, iteratee) {
                        return baseInverter(object, setter, toIteratee(iteratee), {});
                    };
                }
                function createMathOperation(operator, defaultValue) {
                    return function(value, other) {
                        var result;
                        if (value === undefined && other === undefined) return defaultValue;
                        if (value !== undefined) result = value;
                        if (other !== undefined) {
                            if (result === undefined) return other;
                            if ("string" == typeof value || "string" == typeof other) {
                                value = baseToString(value);
                                other = baseToString(other);
                            } else {
                                value = baseToNumber(value);
                                other = baseToNumber(other);
                            }
                            result = operator(value, other);
                        }
                        return result;
                    };
                }
                function createOver(arrayFunc) {
                    return flatRest((function(iteratees) {
                        iteratees = arrayMap(iteratees, baseUnary(getIteratee()));
                        return baseRest((function(args) {
                            var thisArg = this;
                            return arrayFunc(iteratees, (function(iteratee) {
                                return apply(iteratee, thisArg, args);
                            }));
                        }));
                    }));
                }
                function createPadding(length, chars) {
                    chars = chars === undefined ? " " : baseToString(chars);
                    var charsLength = chars.length;
                    if (charsLength < 2) return charsLength ? baseRepeat(chars, length) : chars;
                    var result = baseRepeat(chars, nativeCeil(length / stringSize(chars)));
                    return hasUnicode(chars) ? castSlice(stringToArray(result), 0, length).join("") : result.slice(0, length);
                }
                function createPartial(func, bitmask, thisArg, partials) {
                    var isBind = bitmask & WRAP_BIND_FLAG, Ctor = createCtor(func);
                    function wrapper() {
                        var argsIndex = -1, argsLength = arguments.length, leftIndex = -1, leftLength = partials.length, args = Array(leftLength + argsLength), fn = this && this !== root && this instanceof wrapper ? Ctor : func;
                        while (++leftIndex < leftLength) args[leftIndex] = partials[leftIndex];
                        while (argsLength--) args[leftIndex++] = arguments[++argsIndex];
                        return apply(fn, isBind ? thisArg : this, args);
                    }
                    return wrapper;
                }
                function createRange(fromRight) {
                    return function(start, end, step) {
                        if (step && "number" != typeof step && isIterateeCall(start, end, step)) end = step = undefined;
                        start = toFinite(start);
                        if (end === undefined) {
                            end = start;
                            start = 0;
                        } else end = toFinite(end);
                        step = step === undefined ? start < end ? 1 : -1 : toFinite(step);
                        return baseRange(start, end, step, fromRight);
                    };
                }
                function createRelationalOperation(operator) {
                    return function(value, other) {
                        if (!("string" == typeof value && "string" == typeof other)) {
                            value = toNumber(value);
                            other = toNumber(other);
                        }
                        return operator(value, other);
                    };
                }
                function createRecurry(func, bitmask, wrapFunc, placeholder, thisArg, partials, holders, argPos, ary, arity) {
                    var isCurry = bitmask & WRAP_CURRY_FLAG, newHolders = isCurry ? holders : undefined, newHoldersRight = isCurry ? undefined : holders, newPartials = isCurry ? partials : undefined, newPartialsRight = isCurry ? undefined : partials;
                    bitmask |= isCurry ? WRAP_PARTIAL_FLAG : WRAP_PARTIAL_RIGHT_FLAG;
                    bitmask &= ~(isCurry ? WRAP_PARTIAL_RIGHT_FLAG : WRAP_PARTIAL_FLAG);
                    if (!(bitmask & WRAP_CURRY_BOUND_FLAG)) bitmask &= ~(WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG);
                    var newData = [ func, bitmask, thisArg, newPartials, newHolders, newPartialsRight, newHoldersRight, argPos, ary, arity ];
                    var result = wrapFunc.apply(undefined, newData);
                    if (isLaziable(func)) setData(result, newData);
                    result.placeholder = placeholder;
                    return setWrapToString(result, func, bitmask);
                }
                function createRound(methodName) {
                    var func = Math[methodName];
                    return function(number, precision) {
                        number = toNumber(number);
                        precision = null == precision ? 0 : nativeMin(toInteger(precision), 292);
                        if (precision && nativeIsFinite(number)) {
                            var pair = (toString(number) + "e").split("e"), value = func(pair[0] + "e" + (+pair[1] + precision));
                            pair = (toString(value) + "e").split("e");
                            return +(pair[0] + "e" + (+pair[1] - precision));
                        }
                        return func(number);
                    };
                }
                var createSet = !(Set && 1 / setToArray(new Set([ , -0 ]))[1] == INFINITY) ? noop : function(values) {
                    return new Set(values);
                };
                function createToPairs(keysFunc) {
                    return function(object) {
                        var tag = getTag(object);
                        if (tag == mapTag) return mapToArray(object);
                        if (tag == setTag) return setToPairs(object);
                        return baseToPairs(object, keysFunc(object));
                    };
                }
                function createWrap(func, bitmask, thisArg, partials, holders, argPos, ary, arity) {
                    var isBindKey = bitmask & WRAP_BIND_KEY_FLAG;
                    if (!isBindKey && "function" != typeof func) throw new TypeError(FUNC_ERROR_TEXT);
                    var length = partials ? partials.length : 0;
                    if (!length) {
                        bitmask &= ~(WRAP_PARTIAL_FLAG | WRAP_PARTIAL_RIGHT_FLAG);
                        partials = holders = undefined;
                    }
                    ary = ary === undefined ? ary : nativeMax(toInteger(ary), 0);
                    arity = arity === undefined ? arity : toInteger(arity);
                    length -= holders ? holders.length : 0;
                    if (bitmask & WRAP_PARTIAL_RIGHT_FLAG) {
                        var partialsRight = partials, holdersRight = holders;
                        partials = holders = undefined;
                    }
                    var data = isBindKey ? undefined : getData(func);
                    var newData = [ func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity ];
                    if (data) mergeData(newData, data);
                    func = newData[0];
                    bitmask = newData[1];
                    thisArg = newData[2];
                    partials = newData[3];
                    holders = newData[4];
                    arity = newData[9] = newData[9] === undefined ? isBindKey ? 0 : func.length : nativeMax(newData[9] - length, 0);
                    if (!arity && bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG)) bitmask &= ~(WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG);
                    if (!bitmask || bitmask == WRAP_BIND_FLAG) var result = createBind(func, bitmask, thisArg); else if (bitmask == WRAP_CURRY_FLAG || bitmask == WRAP_CURRY_RIGHT_FLAG) result = createCurry(func, bitmask, arity); else if ((bitmask == WRAP_PARTIAL_FLAG || bitmask == (WRAP_BIND_FLAG | WRAP_PARTIAL_FLAG)) && !holders.length) result = createPartial(func, bitmask, thisArg, partials); else result = createHybrid.apply(undefined, newData);
                    var setter = data ? baseSetData : setData;
                    return setWrapToString(setter(result, newData), func, bitmask);
                }
                function customDefaultsAssignIn(objValue, srcValue, key, object) {
                    if (objValue === undefined || eq(objValue, objectProto[key]) && !hasOwnProperty.call(object, key)) return srcValue;
                    return objValue;
                }
                function customDefaultsMerge(objValue, srcValue, key, object, source, stack) {
                    if (isObject(objValue) && isObject(srcValue)) {
                        stack.set(srcValue, objValue);
                        baseMerge(objValue, srcValue, undefined, customDefaultsMerge, stack);
                        stack["delete"](srcValue);
                    }
                    return objValue;
                }
                function customOmitClone(value) {
                    return isPlainObject(value) ? undefined : value;
                }
                function equalArrays(array, other, bitmask, customizer, equalFunc, stack) {
                    var isPartial = bitmask & COMPARE_PARTIAL_FLAG, arrLength = array.length, othLength = other.length;
                    if (arrLength != othLength && !(isPartial && othLength > arrLength)) return false;
                    var arrStacked = stack.get(array);
                    var othStacked = stack.get(other);
                    if (arrStacked && othStacked) return arrStacked == other && othStacked == array;
                    var index = -1, result = true, seen = bitmask & COMPARE_UNORDERED_FLAG ? new SetCache : undefined;
                    stack.set(array, other);
                    stack.set(other, array);
                    while (++index < arrLength) {
                        var arrValue = array[index], othValue = other[index];
                        if (customizer) var compared = isPartial ? customizer(othValue, arrValue, index, other, array, stack) : customizer(arrValue, othValue, index, array, other, stack);
                        if (compared !== undefined) {
                            if (compared) continue;
                            result = false;
                            break;
                        }
                        if (seen) {
                            if (!arraySome(other, (function(othValue, othIndex) {
                                if (!cacheHas(seen, othIndex) && (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) return seen.push(othIndex);
                            }))) {
                                result = false;
                                break;
                            }
                        } else if (!(arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {
                            result = false;
                            break;
                        }
                    }
                    stack["delete"](array);
                    stack["delete"](other);
                    return result;
                }
                function equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {
                    switch (tag) {
                      case dataViewTag:
                        if (object.byteLength != other.byteLength || object.byteOffset != other.byteOffset) return false;
                        object = object.buffer;
                        other = other.buffer;

                      case arrayBufferTag:
                        if (object.byteLength != other.byteLength || !equalFunc(new Uint8Array(object), new Uint8Array(other))) return false;
                        return true;

                      case boolTag:
                      case dateTag:
                      case numberTag:
                        return eq(+object, +other);

                      case errorTag:
                        return object.name == other.name && object.message == other.message;

                      case regexpTag:
                      case stringTag:
                        return object == other + "";

                      case mapTag:
                        var convert = mapToArray;

                      case setTag:
                        var isPartial = bitmask & COMPARE_PARTIAL_FLAG;
                        convert || (convert = setToArray);
                        if (object.size != other.size && !isPartial) return false;
                        var stacked = stack.get(object);
                        if (stacked) return stacked == other;
                        bitmask |= COMPARE_UNORDERED_FLAG;
                        stack.set(object, other);
                        var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);
                        stack["delete"](object);
                        return result;

                      case symbolTag:
                        if (symbolValueOf) return symbolValueOf.call(object) == symbolValueOf.call(other);
                    }
                    return false;
                }
                function equalObjects(object, other, bitmask, customizer, equalFunc, stack) {
                    var isPartial = bitmask & COMPARE_PARTIAL_FLAG, objProps = getAllKeys(object), objLength = objProps.length, othProps = getAllKeys(other), othLength = othProps.length;
                    if (objLength != othLength && !isPartial) return false;
                    var index = objLength;
                    while (index--) {
                        var key = objProps[index];
                        if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) return false;
                    }
                    var objStacked = stack.get(object);
                    var othStacked = stack.get(other);
                    if (objStacked && othStacked) return objStacked == other && othStacked == object;
                    var result = true;
                    stack.set(object, other);
                    stack.set(other, object);
                    var skipCtor = isPartial;
                    while (++index < objLength) {
                        key = objProps[index];
                        var objValue = object[key], othValue = other[key];
                        if (customizer) var compared = isPartial ? customizer(othValue, objValue, key, other, object, stack) : customizer(objValue, othValue, key, object, other, stack);
                        if (!(compared === undefined ? objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack) : compared)) {
                            result = false;
                            break;
                        }
                        skipCtor || (skipCtor = "constructor" == key);
                    }
                    if (result && !skipCtor) {
                        var objCtor = object.constructor, othCtor = other.constructor;
                        if (objCtor != othCtor && "constructor" in object && "constructor" in other && !("function" == typeof objCtor && objCtor instanceof objCtor && "function" == typeof othCtor && othCtor instanceof othCtor)) result = false;
                    }
                    stack["delete"](object);
                    stack["delete"](other);
                    return result;
                }
                function flatRest(func) {
                    return setToString(overRest(func, undefined, flatten), func + "");
                }
                function getAllKeys(object) {
                    return baseGetAllKeys(object, keys, getSymbols);
                }
                function getAllKeysIn(object) {
                    return baseGetAllKeys(object, keysIn, getSymbolsIn);
                }
                var getData = !metaMap ? noop : function(func) {
                    return metaMap.get(func);
                };
                function getFuncName(func) {
                    var result = func.name + "", array = realNames[result], length = hasOwnProperty.call(realNames, result) ? array.length : 0;
                    while (length--) {
                        var data = array[length], otherFunc = data.func;
                        if (null == otherFunc || otherFunc == func) return data.name;
                    }
                    return result;
                }
                function getHolder(func) {
                    var object = hasOwnProperty.call(lodash, "placeholder") ? lodash : func;
                    return object.placeholder;
                }
                function getIteratee() {
                    var result = lodash.iteratee || iteratee;
                    result = result === iteratee ? baseIteratee : result;
                    return arguments.length ? result(arguments[0], arguments[1]) : result;
                }
                function getMapData(map, key) {
                    var data = map.__data__;
                    return isKeyable(key) ? data["string" == typeof key ? "string" : "hash"] : data.map;
                }
                function getMatchData(object) {
                    var result = keys(object), length = result.length;
                    while (length--) {
                        var key = result[length], value = object[key];
                        result[length] = [ key, value, isStrictComparable(value) ];
                    }
                    return result;
                }
                function getNative(object, key) {
                    var value = getValue(object, key);
                    return baseIsNative(value) ? value : undefined;
                }
                function getRawTag(value) {
                    var isOwn = hasOwnProperty.call(value, symToStringTag), tag = value[symToStringTag];
                    try {
                        value[symToStringTag] = undefined;
                        var unmasked = true;
                    } catch (e) {}
                    var result = nativeObjectToString.call(value);
                    if (unmasked) if (isOwn) value[symToStringTag] = tag; else delete value[symToStringTag];
                    return result;
                }
                var getSymbols = !nativeGetSymbols ? stubArray : function(object) {
                    if (null == object) return [];
                    object = Object(object);
                    return arrayFilter(nativeGetSymbols(object), (function(symbol) {
                        return propertyIsEnumerable.call(object, symbol);
                    }));
                };
                var getSymbolsIn = !nativeGetSymbols ? stubArray : function(object) {
                    var result = [];
                    while (object) {
                        arrayPush(result, getSymbols(object));
                        object = getPrototype(object);
                    }
                    return result;
                };
                var getTag = baseGetTag;
                if (DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag || Map && getTag(new Map) != mapTag || Promise && getTag(Promise.resolve()) != promiseTag || Set && getTag(new Set) != setTag || WeakMap && getTag(new WeakMap) != weakMapTag) getTag = function(value) {
                    var result = baseGetTag(value), Ctor = result == objectTag ? value.constructor : undefined, ctorString = Ctor ? toSource(Ctor) : "";
                    if (ctorString) switch (ctorString) {
                      case dataViewCtorString:
                        return dataViewTag;

                      case mapCtorString:
                        return mapTag;

                      case promiseCtorString:
                        return promiseTag;

                      case setCtorString:
                        return setTag;

                      case weakMapCtorString:
                        return weakMapTag;
                    }
                    return result;
                };
                function getView(start, end, transforms) {
                    var index = -1, length = transforms.length;
                    while (++index < length) {
                        var data = transforms[index], size = data.size;
                        switch (data.type) {
                          case "drop":
                            start += size;
                            break;

                          case "dropRight":
                            end -= size;
                            break;

                          case "take":
                            end = nativeMin(end, start + size);
                            break;

                          case "takeRight":
                            start = nativeMax(start, end - size);
                        }
                    }
                    return {
                        start,
                        end
                    };
                }
                function getWrapDetails(source) {
                    var match = source.match(reWrapDetails);
                    return match ? match[1].split(reSplitDetails) : [];
                }
                function hasPath(object, path, hasFunc) {
                    path = castPath(path, object);
                    var index = -1, length = path.length, result = false;
                    while (++index < length) {
                        var key = toKey(path[index]);
                        if (!(result = null != object && hasFunc(object, key))) break;
                        object = object[key];
                    }
                    if (result || ++index != length) return result;
                    length = null == object ? 0 : object.length;
                    return !!length && isLength(length) && isIndex(key, length) && (isArray(object) || isArguments(object));
                }
                function initCloneArray(array) {
                    var length = array.length, result = new array.constructor(length);
                    if (length && "string" == typeof array[0] && hasOwnProperty.call(array, "index")) {
                        result.index = array.index;
                        result.input = array.input;
                    }
                    return result;
                }
                function initCloneObject(object) {
                    return "function" == typeof object.constructor && !isPrototype(object) ? baseCreate(getPrototype(object)) : {};
                }
                function initCloneByTag(object, tag, isDeep) {
                    var Ctor = object.constructor;
                    switch (tag) {
                      case arrayBufferTag:
                        return cloneArrayBuffer(object);

                      case boolTag:
                      case dateTag:
                        return new Ctor(+object);

                      case dataViewTag:
                        return cloneDataView(object, isDeep);

                      case float32Tag:
                      case float64Tag:
                      case int8Tag:
                      case int16Tag:
                      case int32Tag:
                      case uint8Tag:
                      case uint8ClampedTag:
                      case uint16Tag:
                      case uint32Tag:
                        return cloneTypedArray(object, isDeep);

                      case mapTag:
                      case setTag:
                        return new Ctor;

                      case numberTag:
                      case stringTag:
                        return new Ctor(object);

                      case regexpTag:
                        return cloneRegExp(object);

                      case symbolTag:
                        return cloneSymbol(object);
                    }
                }
                function insertWrapDetails(source, details) {
                    var length = details.length;
                    if (!length) return source;
                    var lastIndex = length - 1;
                    details[lastIndex] = (length > 1 ? "& " : "") + details[lastIndex];
                    details = details.join(length > 2 ? ", " : " ");
                    return source.replace(reWrapComment, "{\n/* [wrapped with " + details + "] */\n");
                }
                function isFlattenable(value) {
                    return isArray(value) || isArguments(value) || !!(spreadableSymbol && value && value[spreadableSymbol]);
                }
                function isIndex(value, length) {
                    var type = typeof value;
                    length = null == length ? MAX_SAFE_INTEGER : length;
                    return !!length && ("number" == type || "symbol" != type && reIsUint.test(value)) && value > -1 && value % 1 == 0 && value < length;
                }
                function isIterateeCall(value, index, object) {
                    if (!isObject(object)) return false;
                    var type = typeof index;
                    if ("number" == type ? isArrayLike(object) && isIndex(index, object.length) : "string" == type && index in object) return eq(object[index], value);
                    return false;
                }
                function isKey(value, object) {
                    if (isArray(value)) return false;
                    var type = typeof value;
                    if ("number" == type || "symbol" == type || "boolean" == type || null == value || isSymbol(value)) return true;
                    return reIsPlainProp.test(value) || !reIsDeepProp.test(value) || null != object && value in Object(object);
                }
                function isKeyable(value) {
                    var type = typeof value;
                    return "string" == type || "number" == type || "symbol" == type || "boolean" == type ? "__proto__" !== value : null === value;
                }
                function isLaziable(func) {
                    var funcName = getFuncName(func), other = lodash[funcName];
                    if ("function" != typeof other || !(funcName in LazyWrapper.prototype)) return false;
                    if (func === other) return true;
                    var data = getData(other);
                    return !!data && func === data[0];
                }
                function isMasked(func) {
                    return !!maskSrcKey && maskSrcKey in func;
                }
                var isMaskable = coreJsData ? isFunction : stubFalse;
                function isPrototype(value) {
                    var Ctor = value && value.constructor, proto = "function" == typeof Ctor && Ctor.prototype || objectProto;
                    return value === proto;
                }
                function isStrictComparable(value) {
                    return value === value && !isObject(value);
                }
                function matchesStrictComparable(key, srcValue) {
                    return function(object) {
                        if (null == object) return false;
                        return object[key] === srcValue && (srcValue !== undefined || key in Object(object));
                    };
                }
                function memoizeCapped(func) {
                    var result = memoize(func, (function(key) {
                        if (cache.size === MAX_MEMOIZE_SIZE) cache.clear();
                        return key;
                    }));
                    var cache = result.cache;
                    return result;
                }
                function mergeData(data, source) {
                    var bitmask = data[1], srcBitmask = source[1], newBitmask = bitmask | srcBitmask, isCommon = newBitmask < (WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG | WRAP_ARY_FLAG);
                    var isCombo = srcBitmask == WRAP_ARY_FLAG && bitmask == WRAP_CURRY_FLAG || srcBitmask == WRAP_ARY_FLAG && bitmask == WRAP_REARG_FLAG && data[7].length <= source[8] || srcBitmask == (WRAP_ARY_FLAG | WRAP_REARG_FLAG) && source[7].length <= source[8] && bitmask == WRAP_CURRY_FLAG;
                    if (!(isCommon || isCombo)) return data;
                    if (srcBitmask & WRAP_BIND_FLAG) {
                        data[2] = source[2];
                        newBitmask |= bitmask & WRAP_BIND_FLAG ? 0 : WRAP_CURRY_BOUND_FLAG;
                    }
                    var value = source[3];
                    if (value) {
                        var partials = data[3];
                        data[3] = partials ? composeArgs(partials, value, source[4]) : value;
                        data[4] = partials ? replaceHolders(data[3], PLACEHOLDER) : source[4];
                    }
                    value = source[5];
                    if (value) {
                        partials = data[5];
                        data[5] = partials ? composeArgsRight(partials, value, source[6]) : value;
                        data[6] = partials ? replaceHolders(data[5], PLACEHOLDER) : source[6];
                    }
                    value = source[7];
                    if (value) data[7] = value;
                    if (srcBitmask & WRAP_ARY_FLAG) data[8] = null == data[8] ? source[8] : nativeMin(data[8], source[8]);
                    if (null == data[9]) data[9] = source[9];
                    data[0] = source[0];
                    data[1] = newBitmask;
                    return data;
                }
                function nativeKeysIn(object) {
                    var result = [];
                    if (null != object) for (var key in Object(object)) result.push(key);
                    return result;
                }
                function objectToString(value) {
                    return nativeObjectToString.call(value);
                }
                function overRest(func, start, transform) {
                    start = nativeMax(start === undefined ? func.length - 1 : start, 0);
                    return function() {
                        var args = arguments, index = -1, length = nativeMax(args.length - start, 0), array = Array(length);
                        while (++index < length) array[index] = args[start + index];
                        index = -1;
                        var otherArgs = Array(start + 1);
                        while (++index < start) otherArgs[index] = args[index];
                        otherArgs[start] = transform(array);
                        return apply(func, this, otherArgs);
                    };
                }
                function parent(object, path) {
                    return path.length < 2 ? object : baseGet(object, baseSlice(path, 0, -1));
                }
                function reorder(array, indexes) {
                    var arrLength = array.length, length = nativeMin(indexes.length, arrLength), oldArray = copyArray(array);
                    while (length--) {
                        var index = indexes[length];
                        array[length] = isIndex(index, arrLength) ? oldArray[index] : undefined;
                    }
                    return array;
                }
                function safeGet(object, key) {
                    if ("constructor" === key && "function" === typeof object[key]) return;
                    if ("__proto__" == key) return;
                    return object[key];
                }
                var setData = shortOut(baseSetData);
                var setTimeout = ctxSetTimeout || function(func, wait) {
                    return root.setTimeout(func, wait);
                };
                var setToString = shortOut(baseSetToString);
                function setWrapToString(wrapper, reference, bitmask) {
                    var source = reference + "";
                    return setToString(wrapper, insertWrapDetails(source, updateWrapDetails(getWrapDetails(source), bitmask)));
                }
                function shortOut(func) {
                    var count = 0, lastCalled = 0;
                    return function() {
                        var stamp = nativeNow(), remaining = HOT_SPAN - (stamp - lastCalled);
                        lastCalled = stamp;
                        if (remaining > 0) {
                            if (++count >= HOT_COUNT) return arguments[0];
                        } else count = 0;
                        return func.apply(undefined, arguments);
                    };
                }
                function shuffleSelf(array, size) {
                    var index = -1, length = array.length, lastIndex = length - 1;
                    size = size === undefined ? length : size;
                    while (++index < size) {
                        var rand = baseRandom(index, lastIndex), value = array[rand];
                        array[rand] = array[index];
                        array[index] = value;
                    }
                    array.length = size;
                    return array;
                }
                var stringToPath = memoizeCapped((function(string) {
                    var result = [];
                    if (46 === string.charCodeAt(0)) result.push("");
                    string.replace(rePropName, (function(match, number, quote, subString) {
                        result.push(quote ? subString.replace(reEscapeChar, "$1") : number || match);
                    }));
                    return result;
                }));
                function toKey(value) {
                    if ("string" == typeof value || isSymbol(value)) return value;
                    var result = value + "";
                    return "0" == result && 1 / value == -INFINITY ? "-0" : result;
                }
                function toSource(func) {
                    if (null != func) {
                        try {
                            return funcToString.call(func);
                        } catch (e) {}
                        try {
                            return func + "";
                        } catch (e) {}
                    }
                    return "";
                }
                function updateWrapDetails(details, bitmask) {
                    arrayEach(wrapFlags, (function(pair) {
                        var value = "_." + pair[0];
                        if (bitmask & pair[1] && !arrayIncludes(details, value)) details.push(value);
                    }));
                    return details.sort();
                }
                function wrapperClone(wrapper) {
                    if (wrapper instanceof LazyWrapper) return wrapper.clone();
                    var result = new LodashWrapper(wrapper.__wrapped__, wrapper.__chain__);
                    result.__actions__ = copyArray(wrapper.__actions__);
                    result.__index__ = wrapper.__index__;
                    result.__values__ = wrapper.__values__;
                    return result;
                }
                function chunk(array, size, guard) {
                    if (guard ? isIterateeCall(array, size, guard) : size === undefined) size = 1; else size = nativeMax(toInteger(size), 0);
                    var length = null == array ? 0 : array.length;
                    if (!length || size < 1) return [];
                    var index = 0, resIndex = 0, result = Array(nativeCeil(length / size));
                    while (index < length) result[resIndex++] = baseSlice(array, index, index += size);
                    return result;
                }
                function compact(array) {
                    var index = -1, length = null == array ? 0 : array.length, resIndex = 0, result = [];
                    while (++index < length) {
                        var value = array[index];
                        if (value) result[resIndex++] = value;
                    }
                    return result;
                }
                function concat() {
                    var length = arguments.length;
                    if (!length) return [];
                    var args = Array(length - 1), array = arguments[0], index = length;
                    while (index--) args[index - 1] = arguments[index];
                    return arrayPush(isArray(array) ? copyArray(array) : [ array ], baseFlatten(args, 1));
                }
                var difference = baseRest((function(array, values) {
                    return isArrayLikeObject(array) ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true)) : [];
                }));
                var differenceBy = baseRest((function(array, values) {
                    var iteratee = last(values);
                    if (isArrayLikeObject(iteratee)) iteratee = undefined;
                    return isArrayLikeObject(array) ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), getIteratee(iteratee, 2)) : [];
                }));
                var differenceWith = baseRest((function(array, values) {
                    var comparator = last(values);
                    if (isArrayLikeObject(comparator)) comparator = undefined;
                    return isArrayLikeObject(array) ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), undefined, comparator) : [];
                }));
                function drop(array, n, guard) {
                    var length = null == array ? 0 : array.length;
                    if (!length) return [];
                    n = guard || n === undefined ? 1 : toInteger(n);
                    return baseSlice(array, n < 0 ? 0 : n, length);
                }
                function dropRight(array, n, guard) {
                    var length = null == array ? 0 : array.length;
                    if (!length) return [];
                    n = guard || n === undefined ? 1 : toInteger(n);
                    n = length - n;
                    return baseSlice(array, 0, n < 0 ? 0 : n);
                }
                function dropRightWhile(array, predicate) {
                    return array && array.length ? baseWhile(array, getIteratee(predicate, 3), true, true) : [];
                }
                function dropWhile(array, predicate) {
                    return array && array.length ? baseWhile(array, getIteratee(predicate, 3), true) : [];
                }
                function fill(array, value, start, end) {
                    var length = null == array ? 0 : array.length;
                    if (!length) return [];
                    if (start && "number" != typeof start && isIterateeCall(array, value, start)) {
                        start = 0;
                        end = length;
                    }
                    return baseFill(array, value, start, end);
                }
                function findIndex(array, predicate, fromIndex) {
                    var length = null == array ? 0 : array.length;
                    if (!length) return -1;
                    var index = null == fromIndex ? 0 : toInteger(fromIndex);
                    if (index < 0) index = nativeMax(length + index, 0);
                    return baseFindIndex(array, getIteratee(predicate, 3), index);
                }
                function findLastIndex(array, predicate, fromIndex) {
                    var length = null == array ? 0 : array.length;
                    if (!length) return -1;
                    var index = length - 1;
                    if (fromIndex !== undefined) {
                        index = toInteger(fromIndex);
                        index = fromIndex < 0 ? nativeMax(length + index, 0) : nativeMin(index, length - 1);
                    }
                    return baseFindIndex(array, getIteratee(predicate, 3), index, true);
                }
                function flatten(array) {
                    var length = null == array ? 0 : array.length;
                    return length ? baseFlatten(array, 1) : [];
                }
                function flattenDeep(array) {
                    var length = null == array ? 0 : array.length;
                    return length ? baseFlatten(array, INFINITY) : [];
                }
                function flattenDepth(array, depth) {
                    var length = null == array ? 0 : array.length;
                    if (!length) return [];
                    depth = depth === undefined ? 1 : toInteger(depth);
                    return baseFlatten(array, depth);
                }
                function fromPairs(pairs) {
                    var index = -1, length = null == pairs ? 0 : pairs.length, result = {};
                    while (++index < length) {
                        var pair = pairs[index];
                        result[pair[0]] = pair[1];
                    }
                    return result;
                }
                function head(array) {
                    return array && array.length ? array[0] : undefined;
                }
                function indexOf(array, value, fromIndex) {
                    var length = null == array ? 0 : array.length;
                    if (!length) return -1;
                    var index = null == fromIndex ? 0 : toInteger(fromIndex);
                    if (index < 0) index = nativeMax(length + index, 0);
                    return baseIndexOf(array, value, index);
                }
                function initial(array) {
                    var length = null == array ? 0 : array.length;
                    return length ? baseSlice(array, 0, -1) : [];
                }
                var intersection = baseRest((function(arrays) {
                    var mapped = arrayMap(arrays, castArrayLikeObject);
                    return mapped.length && mapped[0] === arrays[0] ? baseIntersection(mapped) : [];
                }));
                var intersectionBy = baseRest((function(arrays) {
                    var iteratee = last(arrays), mapped = arrayMap(arrays, castArrayLikeObject);
                    if (iteratee === last(mapped)) iteratee = undefined; else mapped.pop();
                    return mapped.length && mapped[0] === arrays[0] ? baseIntersection(mapped, getIteratee(iteratee, 2)) : [];
                }));
                var intersectionWith = baseRest((function(arrays) {
                    var comparator = last(arrays), mapped = arrayMap(arrays, castArrayLikeObject);
                    comparator = "function" == typeof comparator ? comparator : undefined;
                    if (comparator) mapped.pop();
                    return mapped.length && mapped[0] === arrays[0] ? baseIntersection(mapped, undefined, comparator) : [];
                }));
                function join(array, separator) {
                    return null == array ? "" : nativeJoin.call(array, separator);
                }
                function last(array) {
                    var length = null == array ? 0 : array.length;
                    return length ? array[length - 1] : undefined;
                }
                function lastIndexOf(array, value, fromIndex) {
                    var length = null == array ? 0 : array.length;
                    if (!length) return -1;
                    var index = length;
                    if (fromIndex !== undefined) {
                        index = toInteger(fromIndex);
                        index = index < 0 ? nativeMax(length + index, 0) : nativeMin(index, length - 1);
                    }
                    return value === value ? strictLastIndexOf(array, value, index) : baseFindIndex(array, baseIsNaN, index, true);
                }
                function nth(array, n) {
                    return array && array.length ? baseNth(array, toInteger(n)) : undefined;
                }
                var pull = baseRest(pullAll);
                function pullAll(array, values) {
                    return array && array.length && values && values.length ? basePullAll(array, values) : array;
                }
                function pullAllBy(array, values, iteratee) {
                    return array && array.length && values && values.length ? basePullAll(array, values, getIteratee(iteratee, 2)) : array;
                }
                function pullAllWith(array, values, comparator) {
                    return array && array.length && values && values.length ? basePullAll(array, values, undefined, comparator) : array;
                }
                var pullAt = flatRest((function(array, indexes) {
                    var length = null == array ? 0 : array.length, result = baseAt(array, indexes);
                    basePullAt(array, arrayMap(indexes, (function(index) {
                        return isIndex(index, length) ? +index : index;
                    })).sort(compareAscending));
                    return result;
                }));
                function remove(array, predicate) {
                    var result = [];
                    if (!(array && array.length)) return result;
                    var index = -1, indexes = [], length = array.length;
                    predicate = getIteratee(predicate, 3);
                    while (++index < length) {
                        var value = array[index];
                        if (predicate(value, index, array)) {
                            result.push(value);
                            indexes.push(index);
                        }
                    }
                    basePullAt(array, indexes);
                    return result;
                }
                function reverse(array) {
                    return null == array ? array : nativeReverse.call(array);
                }
                function slice(array, start, end) {
                    var length = null == array ? 0 : array.length;
                    if (!length) return [];
                    if (end && "number" != typeof end && isIterateeCall(array, start, end)) {
                        start = 0;
                        end = length;
                    } else {
                        start = null == start ? 0 : toInteger(start);
                        end = end === undefined ? length : toInteger(end);
                    }
                    return baseSlice(array, start, end);
                }
                function sortedIndex(array, value) {
                    return baseSortedIndex(array, value);
                }
                function sortedIndexBy(array, value, iteratee) {
                    return baseSortedIndexBy(array, value, getIteratee(iteratee, 2));
                }
                function sortedIndexOf(array, value) {
                    var length = null == array ? 0 : array.length;
                    if (length) {
                        var index = baseSortedIndex(array, value);
                        if (index < length && eq(array[index], value)) return index;
                    }
                    return -1;
                }
                function sortedLastIndex(array, value) {
                    return baseSortedIndex(array, value, true);
                }
                function sortedLastIndexBy(array, value, iteratee) {
                    return baseSortedIndexBy(array, value, getIteratee(iteratee, 2), true);
                }
                function sortedLastIndexOf(array, value) {
                    var length = null == array ? 0 : array.length;
                    if (length) {
                        var index = baseSortedIndex(array, value, true) - 1;
                        if (eq(array[index], value)) return index;
                    }
                    return -1;
                }
                function sortedUniq(array) {
                    return array && array.length ? baseSortedUniq(array) : [];
                }
                function sortedUniqBy(array, iteratee) {
                    return array && array.length ? baseSortedUniq(array, getIteratee(iteratee, 2)) : [];
                }
                function tail(array) {
                    var length = null == array ? 0 : array.length;
                    return length ? baseSlice(array, 1, length) : [];
                }
                function take(array, n, guard) {
                    if (!(array && array.length)) return [];
                    n = guard || n === undefined ? 1 : toInteger(n);
                    return baseSlice(array, 0, n < 0 ? 0 : n);
                }
                function takeRight(array, n, guard) {
                    var length = null == array ? 0 : array.length;
                    if (!length) return [];
                    n = guard || n === undefined ? 1 : toInteger(n);
                    n = length - n;
                    return baseSlice(array, n < 0 ? 0 : n, length);
                }
                function takeRightWhile(array, predicate) {
                    return array && array.length ? baseWhile(array, getIteratee(predicate, 3), false, true) : [];
                }
                function takeWhile(array, predicate) {
                    return array && array.length ? baseWhile(array, getIteratee(predicate, 3)) : [];
                }
                var union = baseRest((function(arrays) {
                    return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true));
                }));
                var unionBy = baseRest((function(arrays) {
                    var iteratee = last(arrays);
                    if (isArrayLikeObject(iteratee)) iteratee = undefined;
                    return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), getIteratee(iteratee, 2));
                }));
                var unionWith = baseRest((function(arrays) {
                    var comparator = last(arrays);
                    comparator = "function" == typeof comparator ? comparator : undefined;
                    return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), undefined, comparator);
                }));
                function uniq(array) {
                    return array && array.length ? baseUniq(array) : [];
                }
                function uniqBy(array, iteratee) {
                    return array && array.length ? baseUniq(array, getIteratee(iteratee, 2)) : [];
                }
                function uniqWith(array, comparator) {
                    comparator = "function" == typeof comparator ? comparator : undefined;
                    return array && array.length ? baseUniq(array, undefined, comparator) : [];
                }
                function unzip(array) {
                    if (!(array && array.length)) return [];
                    var length = 0;
                    array = arrayFilter(array, (function(group) {
                        if (isArrayLikeObject(group)) {
                            length = nativeMax(group.length, length);
                            return true;
                        }
                    }));
                    return baseTimes(length, (function(index) {
                        return arrayMap(array, baseProperty(index));
                    }));
                }
                function unzipWith(array, iteratee) {
                    if (!(array && array.length)) return [];
                    var result = unzip(array);
                    if (null == iteratee) return result;
                    return arrayMap(result, (function(group) {
                        return apply(iteratee, undefined, group);
                    }));
                }
                var without = baseRest((function(array, values) {
                    return isArrayLikeObject(array) ? baseDifference(array, values) : [];
                }));
                var xor = baseRest((function(arrays) {
                    return baseXor(arrayFilter(arrays, isArrayLikeObject));
                }));
                var xorBy = baseRest((function(arrays) {
                    var iteratee = last(arrays);
                    if (isArrayLikeObject(iteratee)) iteratee = undefined;
                    return baseXor(arrayFilter(arrays, isArrayLikeObject), getIteratee(iteratee, 2));
                }));
                var xorWith = baseRest((function(arrays) {
                    var comparator = last(arrays);
                    comparator = "function" == typeof comparator ? comparator : undefined;
                    return baseXor(arrayFilter(arrays, isArrayLikeObject), undefined, comparator);
                }));
                var zip = baseRest(unzip);
                function zipObject(props, values) {
                    return baseZipObject(props || [], values || [], assignValue);
                }
                function zipObjectDeep(props, values) {
                    return baseZipObject(props || [], values || [], baseSet);
                }
                var zipWith = baseRest((function(arrays) {
                    var length = arrays.length, iteratee = length > 1 ? arrays[length - 1] : undefined;
                    iteratee = "function" == typeof iteratee ? (arrays.pop(), iteratee) : undefined;
                    return unzipWith(arrays, iteratee);
                }));
                function chain(value) {
                    var result = lodash(value);
                    result.__chain__ = true;
                    return result;
                }
                function tap(value, interceptor) {
                    interceptor(value);
                    return value;
                }
                function thru(value, interceptor) {
                    return interceptor(value);
                }
                var wrapperAt = flatRest((function(paths) {
                    var length = paths.length, start = length ? paths[0] : 0, value = this.__wrapped__, interceptor = function(object) {
                        return baseAt(object, paths);
                    };
                    if (length > 1 || this.__actions__.length || !(value instanceof LazyWrapper) || !isIndex(start)) return this.thru(interceptor);
                    value = value.slice(start, +start + (length ? 1 : 0));
                    value.__actions__.push({
                        func: thru,
                        args: [ interceptor ],
                        thisArg: undefined
                    });
                    return new LodashWrapper(value, this.__chain__).thru((function(array) {
                        if (length && !array.length) array.push(undefined);
                        return array;
                    }));
                }));
                function wrapperChain() {
                    return chain(this);
                }
                function wrapperCommit() {
                    return new LodashWrapper(this.value(), this.__chain__);
                }
                function wrapperNext() {
                    if (this.__values__ === undefined) this.__values__ = toArray(this.value());
                    var done = this.__index__ >= this.__values__.length, value = done ? undefined : this.__values__[this.__index__++];
                    return {
                        done,
                        value
                    };
                }
                function wrapperToIterator() {
                    return this;
                }
                function wrapperPlant(value) {
                    var result, parent = this;
                    while (parent instanceof baseLodash) {
                        var clone = wrapperClone(parent);
                        clone.__index__ = 0;
                        clone.__values__ = undefined;
                        if (result) previous.__wrapped__ = clone; else result = clone;
                        var previous = clone;
                        parent = parent.__wrapped__;
                    }
                    previous.__wrapped__ = value;
                    return result;
                }
                function wrapperReverse() {
                    var value = this.__wrapped__;
                    if (value instanceof LazyWrapper) {
                        var wrapped = value;
                        if (this.__actions__.length) wrapped = new LazyWrapper(this);
                        wrapped = wrapped.reverse();
                        wrapped.__actions__.push({
                            func: thru,
                            args: [ reverse ],
                            thisArg: undefined
                        });
                        return new LodashWrapper(wrapped, this.__chain__);
                    }
                    return this.thru(reverse);
                }
                function wrapperValue() {
                    return baseWrapperValue(this.__wrapped__, this.__actions__);
                }
                var countBy = createAggregator((function(result, value, key) {
                    if (hasOwnProperty.call(result, key)) ++result[key]; else baseAssignValue(result, key, 1);
                }));
                function every(collection, predicate, guard) {
                    var func = isArray(collection) ? arrayEvery : baseEvery;
                    if (guard && isIterateeCall(collection, predicate, guard)) predicate = undefined;
                    return func(collection, getIteratee(predicate, 3));
                }
                function filter(collection, predicate) {
                    var func = isArray(collection) ? arrayFilter : baseFilter;
                    return func(collection, getIteratee(predicate, 3));
                }
                var find = createFind(findIndex);
                var findLast = createFind(findLastIndex);
                function flatMap(collection, iteratee) {
                    return baseFlatten(map(collection, iteratee), 1);
                }
                function flatMapDeep(collection, iteratee) {
                    return baseFlatten(map(collection, iteratee), INFINITY);
                }
                function flatMapDepth(collection, iteratee, depth) {
                    depth = depth === undefined ? 1 : toInteger(depth);
                    return baseFlatten(map(collection, iteratee), depth);
                }
                function forEach(collection, iteratee) {
                    var func = isArray(collection) ? arrayEach : baseEach;
                    return func(collection, getIteratee(iteratee, 3));
                }
                function forEachRight(collection, iteratee) {
                    var func = isArray(collection) ? arrayEachRight : baseEachRight;
                    return func(collection, getIteratee(iteratee, 3));
                }
                var groupBy = createAggregator((function(result, value, key) {
                    if (hasOwnProperty.call(result, key)) result[key].push(value); else baseAssignValue(result, key, [ value ]);
                }));
                function includes(collection, value, fromIndex, guard) {
                    collection = isArrayLike(collection) ? collection : values(collection);
                    fromIndex = fromIndex && !guard ? toInteger(fromIndex) : 0;
                    var length = collection.length;
                    if (fromIndex < 0) fromIndex = nativeMax(length + fromIndex, 0);
                    return isString(collection) ? fromIndex <= length && collection.indexOf(value, fromIndex) > -1 : !!length && baseIndexOf(collection, value, fromIndex) > -1;
                }
                var invokeMap = baseRest((function(collection, path, args) {
                    var index = -1, isFunc = "function" == typeof path, result = isArrayLike(collection) ? Array(collection.length) : [];
                    baseEach(collection, (function(value) {
                        result[++index] = isFunc ? apply(path, value, args) : baseInvoke(value, path, args);
                    }));
                    return result;
                }));
                var keyBy = createAggregator((function(result, value, key) {
                    baseAssignValue(result, key, value);
                }));
                function map(collection, iteratee) {
                    var func = isArray(collection) ? arrayMap : baseMap;
                    return func(collection, getIteratee(iteratee, 3));
                }
                function orderBy(collection, iteratees, orders, guard) {
                    if (null == collection) return [];
                    if (!isArray(iteratees)) iteratees = null == iteratees ? [] : [ iteratees ];
                    orders = guard ? undefined : orders;
                    if (!isArray(orders)) orders = null == orders ? [] : [ orders ];
                    return baseOrderBy(collection, iteratees, orders);
                }
                var partition = createAggregator((function(result, value, key) {
                    result[key ? 0 : 1].push(value);
                }), (function() {
                    return [ [], [] ];
                }));
                function reduce(collection, iteratee, accumulator) {
                    var func = isArray(collection) ? arrayReduce : baseReduce, initAccum = arguments.length < 3;
                    return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEach);
                }
                function reduceRight(collection, iteratee, accumulator) {
                    var func = isArray(collection) ? arrayReduceRight : baseReduce, initAccum = arguments.length < 3;
                    return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEachRight);
                }
                function reject(collection, predicate) {
                    var func = isArray(collection) ? arrayFilter : baseFilter;
                    return func(collection, negate(getIteratee(predicate, 3)));
                }
                function sample(collection) {
                    var func = isArray(collection) ? arraySample : baseSample;
                    return func(collection);
                }
                function sampleSize(collection, n, guard) {
                    if (guard ? isIterateeCall(collection, n, guard) : n === undefined) n = 1; else n = toInteger(n);
                    var func = isArray(collection) ? arraySampleSize : baseSampleSize;
                    return func(collection, n);
                }
                function shuffle(collection) {
                    var func = isArray(collection) ? arrayShuffle : baseShuffle;
                    return func(collection);
                }
                function size(collection) {
                    if (null == collection) return 0;
                    if (isArrayLike(collection)) return isString(collection) ? stringSize(collection) : collection.length;
                    var tag = getTag(collection);
                    if (tag == mapTag || tag == setTag) return collection.size;
                    return baseKeys(collection).length;
                }
                function some(collection, predicate, guard) {
                    var func = isArray(collection) ? arraySome : baseSome;
                    if (guard && isIterateeCall(collection, predicate, guard)) predicate = undefined;
                    return func(collection, getIteratee(predicate, 3));
                }
                var sortBy = baseRest((function(collection, iteratees) {
                    if (null == collection) return [];
                    var length = iteratees.length;
                    if (length > 1 && isIterateeCall(collection, iteratees[0], iteratees[1])) iteratees = []; else if (length > 2 && isIterateeCall(iteratees[0], iteratees[1], iteratees[2])) iteratees = [ iteratees[0] ];
                    return baseOrderBy(collection, baseFlatten(iteratees, 1), []);
                }));
                var now = ctxNow || function() {
                    return root.Date.now();
                };
                function after(n, func) {
                    if ("function" != typeof func) throw new TypeError(FUNC_ERROR_TEXT);
                    n = toInteger(n);
                    return function() {
                        if (--n < 1) return func.apply(this, arguments);
                    };
                }
                function ary(func, n, guard) {
                    n = guard ? undefined : n;
                    n = func && null == n ? func.length : n;
                    return createWrap(func, WRAP_ARY_FLAG, undefined, undefined, undefined, undefined, n);
                }
                function before(n, func) {
                    var result;
                    if ("function" != typeof func) throw new TypeError(FUNC_ERROR_TEXT);
                    n = toInteger(n);
                    return function() {
                        if (--n > 0) result = func.apply(this, arguments);
                        if (n <= 1) func = undefined;
                        return result;
                    };
                }
                var bind = baseRest((function(func, thisArg, partials) {
                    var bitmask = WRAP_BIND_FLAG;
                    if (partials.length) {
                        var holders = replaceHolders(partials, getHolder(bind));
                        bitmask |= WRAP_PARTIAL_FLAG;
                    }
                    return createWrap(func, bitmask, thisArg, partials, holders);
                }));
                var bindKey = baseRest((function(object, key, partials) {
                    var bitmask = WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG;
                    if (partials.length) {
                        var holders = replaceHolders(partials, getHolder(bindKey));
                        bitmask |= WRAP_PARTIAL_FLAG;
                    }
                    return createWrap(key, bitmask, object, partials, holders);
                }));
                function curry(func, arity, guard) {
                    arity = guard ? undefined : arity;
                    var result = createWrap(func, WRAP_CURRY_FLAG, undefined, undefined, undefined, undefined, undefined, arity);
                    result.placeholder = curry.placeholder;
                    return result;
                }
                function curryRight(func, arity, guard) {
                    arity = guard ? undefined : arity;
                    var result = createWrap(func, WRAP_CURRY_RIGHT_FLAG, undefined, undefined, undefined, undefined, undefined, arity);
                    result.placeholder = curryRight.placeholder;
                    return result;
                }
                function debounce(func, wait, options) {
                    var lastArgs, lastThis, maxWait, result, timerId, lastCallTime, lastInvokeTime = 0, leading = false, maxing = false, trailing = true;
                    if ("function" != typeof func) throw new TypeError(FUNC_ERROR_TEXT);
                    wait = toNumber(wait) || 0;
                    if (isObject(options)) {
                        leading = !!options.leading;
                        maxing = "maxWait" in options;
                        maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;
                        trailing = "trailing" in options ? !!options.trailing : trailing;
                    }
                    function invokeFunc(time) {
                        var args = lastArgs, thisArg = lastThis;
                        lastArgs = lastThis = undefined;
                        lastInvokeTime = time;
                        result = func.apply(thisArg, args);
                        return result;
                    }
                    function leadingEdge(time) {
                        lastInvokeTime = time;
                        timerId = setTimeout(timerExpired, wait);
                        return leading ? invokeFunc(time) : result;
                    }
                    function remainingWait(time) {
                        var timeSinceLastCall = time - lastCallTime, timeSinceLastInvoke = time - lastInvokeTime, timeWaiting = wait - timeSinceLastCall;
                        return maxing ? nativeMin(timeWaiting, maxWait - timeSinceLastInvoke) : timeWaiting;
                    }
                    function shouldInvoke(time) {
                        var timeSinceLastCall = time - lastCallTime, timeSinceLastInvoke = time - lastInvokeTime;
                        return lastCallTime === undefined || timeSinceLastCall >= wait || timeSinceLastCall < 0 || maxing && timeSinceLastInvoke >= maxWait;
                    }
                    function timerExpired() {
                        var time = now();
                        if (shouldInvoke(time)) return trailingEdge(time);
                        timerId = setTimeout(timerExpired, remainingWait(time));
                    }
                    function trailingEdge(time) {
                        timerId = undefined;
                        if (trailing && lastArgs) return invokeFunc(time);
                        lastArgs = lastThis = undefined;
                        return result;
                    }
                    function cancel() {
                        if (timerId !== undefined) clearTimeout(timerId);
                        lastInvokeTime = 0;
                        lastArgs = lastCallTime = lastThis = timerId = undefined;
                    }
                    function flush() {
                        return timerId === undefined ? result : trailingEdge(now());
                    }
                    function debounced() {
                        var time = now(), isInvoking = shouldInvoke(time);
                        lastArgs = arguments;
                        lastThis = this;
                        lastCallTime = time;
                        if (isInvoking) {
                            if (timerId === undefined) return leadingEdge(lastCallTime);
                            if (maxing) {
                                clearTimeout(timerId);
                                timerId = setTimeout(timerExpired, wait);
                                return invokeFunc(lastCallTime);
                            }
                        }
                        if (timerId === undefined) timerId = setTimeout(timerExpired, wait);
                        return result;
                    }
                    debounced.cancel = cancel;
                    debounced.flush = flush;
                    return debounced;
                }
                var defer = baseRest((function(func, args) {
                    return baseDelay(func, 1, args);
                }));
                var delay = baseRest((function(func, wait, args) {
                    return baseDelay(func, toNumber(wait) || 0, args);
                }));
                function flip(func) {
                    return createWrap(func, WRAP_FLIP_FLAG);
                }
                function memoize(func, resolver) {
                    if ("function" != typeof func || null != resolver && "function" != typeof resolver) throw new TypeError(FUNC_ERROR_TEXT);
                    var memoized = function() {
                        var args = arguments, key = resolver ? resolver.apply(this, args) : args[0], cache = memoized.cache;
                        if (cache.has(key)) return cache.get(key);
                        var result = func.apply(this, args);
                        memoized.cache = cache.set(key, result) || cache;
                        return result;
                    };
                    memoized.cache = new (memoize.Cache || MapCache);
                    return memoized;
                }
                memoize.Cache = MapCache;
                function negate(predicate) {
                    if ("function" != typeof predicate) throw new TypeError(FUNC_ERROR_TEXT);
                    return function() {
                        var args = arguments;
                        switch (args.length) {
                          case 0:
                            return !predicate.call(this);

                          case 1:
                            return !predicate.call(this, args[0]);

                          case 2:
                            return !predicate.call(this, args[0], args[1]);

                          case 3:
                            return !predicate.call(this, args[0], args[1], args[2]);
                        }
                        return !predicate.apply(this, args);
                    };
                }
                function once(func) {
                    return before(2, func);
                }
                var overArgs = castRest((function(func, transforms) {
                    transforms = 1 == transforms.length && isArray(transforms[0]) ? arrayMap(transforms[0], baseUnary(getIteratee())) : arrayMap(baseFlatten(transforms, 1), baseUnary(getIteratee()));
                    var funcsLength = transforms.length;
                    return baseRest((function(args) {
                        var index = -1, length = nativeMin(args.length, funcsLength);
                        while (++index < length) args[index] = transforms[index].call(this, args[index]);
                        return apply(func, this, args);
                    }));
                }));
                var partial = baseRest((function(func, partials) {
                    var holders = replaceHolders(partials, getHolder(partial));
                    return createWrap(func, WRAP_PARTIAL_FLAG, undefined, partials, holders);
                }));
                var partialRight = baseRest((function(func, partials) {
                    var holders = replaceHolders(partials, getHolder(partialRight));
                    return createWrap(func, WRAP_PARTIAL_RIGHT_FLAG, undefined, partials, holders);
                }));
                var rearg = flatRest((function(func, indexes) {
                    return createWrap(func, WRAP_REARG_FLAG, undefined, undefined, undefined, indexes);
                }));
                function rest(func, start) {
                    if ("function" != typeof func) throw new TypeError(FUNC_ERROR_TEXT);
                    start = start === undefined ? start : toInteger(start);
                    return baseRest(func, start);
                }
                function spread(func, start) {
                    if ("function" != typeof func) throw new TypeError(FUNC_ERROR_TEXT);
                    start = null == start ? 0 : nativeMax(toInteger(start), 0);
                    return baseRest((function(args) {
                        var array = args[start], otherArgs = castSlice(args, 0, start);
                        if (array) arrayPush(otherArgs, array);
                        return apply(func, this, otherArgs);
                    }));
                }
                function throttle(func, wait, options) {
                    var leading = true, trailing = true;
                    if ("function" != typeof func) throw new TypeError(FUNC_ERROR_TEXT);
                    if (isObject(options)) {
                        leading = "leading" in options ? !!options.leading : leading;
                        trailing = "trailing" in options ? !!options.trailing : trailing;
                    }
                    return debounce(func, wait, {
                        leading,
                        maxWait: wait,
                        trailing
                    });
                }
                function unary(func) {
                    return ary(func, 1);
                }
                function wrap(value, wrapper) {
                    return partial(castFunction(wrapper), value);
                }
                function castArray() {
                    if (!arguments.length) return [];
                    var value = arguments[0];
                    return isArray(value) ? value : [ value ];
                }
                function clone(value) {
                    return baseClone(value, CLONE_SYMBOLS_FLAG);
                }
                function cloneWith(value, customizer) {
                    customizer = "function" == typeof customizer ? customizer : undefined;
                    return baseClone(value, CLONE_SYMBOLS_FLAG, customizer);
                }
                function cloneDeep(value) {
                    return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG);
                }
                function cloneDeepWith(value, customizer) {
                    customizer = "function" == typeof customizer ? customizer : undefined;
                    return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG, customizer);
                }
                function conformsTo(object, source) {
                    return null == source || baseConformsTo(object, source, keys(source));
                }
                function eq(value, other) {
                    return value === other || value !== value && other !== other;
                }
                var gt = createRelationalOperation(baseGt);
                var gte = createRelationalOperation((function(value, other) {
                    return value >= other;
                }));
                var isArguments = baseIsArguments(function() {
                    return arguments;
                }()) ? baseIsArguments : function(value) {
                    return isObjectLike(value) && hasOwnProperty.call(value, "callee") && !propertyIsEnumerable.call(value, "callee");
                };
                var isArray = Array.isArray;
                var isArrayBuffer = nodeIsArrayBuffer ? baseUnary(nodeIsArrayBuffer) : baseIsArrayBuffer;
                function isArrayLike(value) {
                    return null != value && isLength(value.length) && !isFunction(value);
                }
                function isArrayLikeObject(value) {
                    return isObjectLike(value) && isArrayLike(value);
                }
                function isBoolean(value) {
                    return true === value || false === value || isObjectLike(value) && baseGetTag(value) == boolTag;
                }
                var isBuffer = nativeIsBuffer || stubFalse;
                var isDate = nodeIsDate ? baseUnary(nodeIsDate) : baseIsDate;
                function isElement(value) {
                    return isObjectLike(value) && 1 === value.nodeType && !isPlainObject(value);
                }
                function isEmpty(value) {
                    if (null == value) return true;
                    if (isArrayLike(value) && (isArray(value) || "string" == typeof value || "function" == typeof value.splice || isBuffer(value) || isTypedArray(value) || isArguments(value))) return !value.length;
                    var tag = getTag(value);
                    if (tag == mapTag || tag == setTag) return !value.size;
                    if (isPrototype(value)) return !baseKeys(value).length;
                    for (var key in value) if (hasOwnProperty.call(value, key)) return false;
                    return true;
                }
                function isEqual(value, other) {
                    return baseIsEqual(value, other);
                }
                function isEqualWith(value, other, customizer) {
                    customizer = "function" == typeof customizer ? customizer : undefined;
                    var result = customizer ? customizer(value, other) : undefined;
                    return result === undefined ? baseIsEqual(value, other, undefined, customizer) : !!result;
                }
                function isError(value) {
                    if (!isObjectLike(value)) return false;
                    var tag = baseGetTag(value);
                    return tag == errorTag || tag == domExcTag || "string" == typeof value.message && "string" == typeof value.name && !isPlainObject(value);
                }
                function isFinite(value) {
                    return "number" == typeof value && nativeIsFinite(value);
                }
                function isFunction(value) {
                    if (!isObject(value)) return false;
                    var tag = baseGetTag(value);
                    return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;
                }
                function isInteger(value) {
                    return "number" == typeof value && value == toInteger(value);
                }
                function isLength(value) {
                    return "number" == typeof value && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;
                }
                function isObject(value) {
                    var type = typeof value;
                    return null != value && ("object" == type || "function" == type);
                }
                function isObjectLike(value) {
                    return null != value && "object" == typeof value;
                }
                var isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;
                function isMatch(object, source) {
                    return object === source || baseIsMatch(object, source, getMatchData(source));
                }
                function isMatchWith(object, source, customizer) {
                    customizer = "function" == typeof customizer ? customizer : undefined;
                    return baseIsMatch(object, source, getMatchData(source), customizer);
                }
                function isNaN(value) {
                    return isNumber(value) && value != +value;
                }
                function isNative(value) {
                    if (isMaskable(value)) throw new Error(CORE_ERROR_TEXT);
                    return baseIsNative(value);
                }
                function isNull(value) {
                    return null === value;
                }
                function isNil(value) {
                    return null == value;
                }
                function isNumber(value) {
                    return "number" == typeof value || isObjectLike(value) && baseGetTag(value) == numberTag;
                }
                function isPlainObject(value) {
                    if (!isObjectLike(value) || baseGetTag(value) != objectTag) return false;
                    var proto = getPrototype(value);
                    if (null === proto) return true;
                    var Ctor = hasOwnProperty.call(proto, "constructor") && proto.constructor;
                    return "function" == typeof Ctor && Ctor instanceof Ctor && funcToString.call(Ctor) == objectCtorString;
                }
                var isRegExp = nodeIsRegExp ? baseUnary(nodeIsRegExp) : baseIsRegExp;
                function isSafeInteger(value) {
                    return isInteger(value) && value >= -MAX_SAFE_INTEGER && value <= MAX_SAFE_INTEGER;
                }
                var isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;
                function isString(value) {
                    return "string" == typeof value || !isArray(value) && isObjectLike(value) && baseGetTag(value) == stringTag;
                }
                function isSymbol(value) {
                    return "symbol" == typeof value || isObjectLike(value) && baseGetTag(value) == symbolTag;
                }
                var isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;
                function isUndefined(value) {
                    return value === undefined;
                }
                function isWeakMap(value) {
                    return isObjectLike(value) && getTag(value) == weakMapTag;
                }
                function isWeakSet(value) {
                    return isObjectLike(value) && baseGetTag(value) == weakSetTag;
                }
                var lt = createRelationalOperation(baseLt);
                var lte = createRelationalOperation((function(value, other) {
                    return value <= other;
                }));
                function toArray(value) {
                    if (!value) return [];
                    if (isArrayLike(value)) return isString(value) ? stringToArray(value) : copyArray(value);
                    if (symIterator && value[symIterator]) return iteratorToArray(value[symIterator]());
                    var tag = getTag(value), func = tag == mapTag ? mapToArray : tag == setTag ? setToArray : values;
                    return func(value);
                }
                function toFinite(value) {
                    if (!value) return 0 === value ? value : 0;
                    value = toNumber(value);
                    if (value === INFINITY || value === -INFINITY) {
                        var sign = value < 0 ? -1 : 1;
                        return sign * MAX_INTEGER;
                    }
                    return value === value ? value : 0;
                }
                function toInteger(value) {
                    var result = toFinite(value), remainder = result % 1;
                    return result === result ? remainder ? result - remainder : result : 0;
                }
                function toLength(value) {
                    return value ? baseClamp(toInteger(value), 0, MAX_ARRAY_LENGTH) : 0;
                }
                function toNumber(value) {
                    if ("number" == typeof value) return value;
                    if (isSymbol(value)) return NAN;
                    if (isObject(value)) {
                        var other = "function" == typeof value.valueOf ? value.valueOf() : value;
                        value = isObject(other) ? other + "" : other;
                    }
                    if ("string" != typeof value) return 0 === value ? value : +value;
                    value = baseTrim(value);
                    var isBinary = reIsBinary.test(value);
                    return isBinary || reIsOctal.test(value) ? freeParseInt(value.slice(2), isBinary ? 2 : 8) : reIsBadHex.test(value) ? NAN : +value;
                }
                function toPlainObject(value) {
                    return copyObject(value, keysIn(value));
                }
                function toSafeInteger(value) {
                    return value ? baseClamp(toInteger(value), -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER) : 0 === value ? value : 0;
                }
                function toString(value) {
                    return null == value ? "" : baseToString(value);
                }
                var assign = createAssigner((function(object, source) {
                    if (isPrototype(source) || isArrayLike(source)) {
                        copyObject(source, keys(source), object);
                        return;
                    }
                    for (var key in source) if (hasOwnProperty.call(source, key)) assignValue(object, key, source[key]);
                }));
                var assignIn = createAssigner((function(object, source) {
                    copyObject(source, keysIn(source), object);
                }));
                var assignInWith = createAssigner((function(object, source, srcIndex, customizer) {
                    copyObject(source, keysIn(source), object, customizer);
                }));
                var assignWith = createAssigner((function(object, source, srcIndex, customizer) {
                    copyObject(source, keys(source), object, customizer);
                }));
                var at = flatRest(baseAt);
                function create(prototype, properties) {
                    var result = baseCreate(prototype);
                    return null == properties ? result : baseAssign(result, properties);
                }
                var defaults = baseRest((function(object, sources) {
                    object = Object(object);
                    var index = -1;
                    var length = sources.length;
                    var guard = length > 2 ? sources[2] : undefined;
                    if (guard && isIterateeCall(sources[0], sources[1], guard)) length = 1;
                    while (++index < length) {
                        var source = sources[index];
                        var props = keysIn(source);
                        var propsIndex = -1;
                        var propsLength = props.length;
                        while (++propsIndex < propsLength) {
                            var key = props[propsIndex];
                            var value = object[key];
                            if (value === undefined || eq(value, objectProto[key]) && !hasOwnProperty.call(object, key)) object[key] = source[key];
                        }
                    }
                    return object;
                }));
                var defaultsDeep = baseRest((function(args) {
                    args.push(undefined, customDefaultsMerge);
                    return apply(mergeWith, undefined, args);
                }));
                function findKey(object, predicate) {
                    return baseFindKey(object, getIteratee(predicate, 3), baseForOwn);
                }
                function findLastKey(object, predicate) {
                    return baseFindKey(object, getIteratee(predicate, 3), baseForOwnRight);
                }
                function forIn(object, iteratee) {
                    return null == object ? object : baseFor(object, getIteratee(iteratee, 3), keysIn);
                }
                function forInRight(object, iteratee) {
                    return null == object ? object : baseForRight(object, getIteratee(iteratee, 3), keysIn);
                }
                function forOwn(object, iteratee) {
                    return object && baseForOwn(object, getIteratee(iteratee, 3));
                }
                function forOwnRight(object, iteratee) {
                    return object && baseForOwnRight(object, getIteratee(iteratee, 3));
                }
                function functions(object) {
                    return null == object ? [] : baseFunctions(object, keys(object));
                }
                function functionsIn(object) {
                    return null == object ? [] : baseFunctions(object, keysIn(object));
                }
                function get(object, path, defaultValue) {
                    var result = null == object ? undefined : baseGet(object, path);
                    return result === undefined ? defaultValue : result;
                }
                function has(object, path) {
                    return null != object && hasPath(object, path, baseHas);
                }
                function hasIn(object, path) {
                    return null != object && hasPath(object, path, baseHasIn);
                }
                var invert = createInverter((function(result, value, key) {
                    if (null != value && "function" != typeof value.toString) value = nativeObjectToString.call(value);
                    result[value] = key;
                }), constant(identity));
                var invertBy = createInverter((function(result, value, key) {
                    if (null != value && "function" != typeof value.toString) value = nativeObjectToString.call(value);
                    if (hasOwnProperty.call(result, value)) result[value].push(key); else result[value] = [ key ];
                }), getIteratee);
                var invoke = baseRest(baseInvoke);
                function keys(object) {
                    return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);
                }
                function keysIn(object) {
                    return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);
                }
                function mapKeys(object, iteratee) {
                    var result = {};
                    iteratee = getIteratee(iteratee, 3);
                    baseForOwn(object, (function(value, key, object) {
                        baseAssignValue(result, iteratee(value, key, object), value);
                    }));
                    return result;
                }
                function mapValues(object, iteratee) {
                    var result = {};
                    iteratee = getIteratee(iteratee, 3);
                    baseForOwn(object, (function(value, key, object) {
                        baseAssignValue(result, key, iteratee(value, key, object));
                    }));
                    return result;
                }
                var merge = createAssigner((function(object, source, srcIndex) {
                    baseMerge(object, source, srcIndex);
                }));
                var mergeWith = createAssigner((function(object, source, srcIndex, customizer) {
                    baseMerge(object, source, srcIndex, customizer);
                }));
                var omit = flatRest((function(object, paths) {
                    var result = {};
                    if (null == object) return result;
                    var isDeep = false;
                    paths = arrayMap(paths, (function(path) {
                        path = castPath(path, object);
                        isDeep || (isDeep = path.length > 1);
                        return path;
                    }));
                    copyObject(object, getAllKeysIn(object), result);
                    if (isDeep) result = baseClone(result, CLONE_DEEP_FLAG | CLONE_FLAT_FLAG | CLONE_SYMBOLS_FLAG, customOmitClone);
                    var length = paths.length;
                    while (length--) baseUnset(result, paths[length]);
                    return result;
                }));
                function omitBy(object, predicate) {
                    return pickBy(object, negate(getIteratee(predicate)));
                }
                var pick = flatRest((function(object, paths) {
                    return null == object ? {} : basePick(object, paths);
                }));
                function pickBy(object, predicate) {
                    if (null == object) return {};
                    var props = arrayMap(getAllKeysIn(object), (function(prop) {
                        return [ prop ];
                    }));
                    predicate = getIteratee(predicate);
                    return basePickBy(object, props, (function(value, path) {
                        return predicate(value, path[0]);
                    }));
                }
                function result(object, path, defaultValue) {
                    path = castPath(path, object);
                    var index = -1, length = path.length;
                    if (!length) {
                        length = 1;
                        object = undefined;
                    }
                    while (++index < length) {
                        var value = null == object ? undefined : object[toKey(path[index])];
                        if (value === undefined) {
                            index = length;
                            value = defaultValue;
                        }
                        object = isFunction(value) ? value.call(object) : value;
                    }
                    return object;
                }
                function set(object, path, value) {
                    return null == object ? object : baseSet(object, path, value);
                }
                function setWith(object, path, value, customizer) {
                    customizer = "function" == typeof customizer ? customizer : undefined;
                    return null == object ? object : baseSet(object, path, value, customizer);
                }
                var toPairs = createToPairs(keys);
                var toPairsIn = createToPairs(keysIn);
                function transform(object, iteratee, accumulator) {
                    var isArr = isArray(object), isArrLike = isArr || isBuffer(object) || isTypedArray(object);
                    iteratee = getIteratee(iteratee, 4);
                    if (null == accumulator) {
                        var Ctor = object && object.constructor;
                        if (isArrLike) accumulator = isArr ? new Ctor : []; else if (isObject(object)) accumulator = isFunction(Ctor) ? baseCreate(getPrototype(object)) : {}; else accumulator = {};
                    }
                    (isArrLike ? arrayEach : baseForOwn)(object, (function(value, index, object) {
                        return iteratee(accumulator, value, index, object);
                    }));
                    return accumulator;
                }
                function unset(object, path) {
                    return null == object ? true : baseUnset(object, path);
                }
                function update(object, path, updater) {
                    return null == object ? object : baseUpdate(object, path, castFunction(updater));
                }
                function updateWith(object, path, updater, customizer) {
                    customizer = "function" == typeof customizer ? customizer : undefined;
                    return null == object ? object : baseUpdate(object, path, castFunction(updater), customizer);
                }
                function values(object) {
                    return null == object ? [] : baseValues(object, keys(object));
                }
                function valuesIn(object) {
                    return null == object ? [] : baseValues(object, keysIn(object));
                }
                function clamp(number, lower, upper) {
                    if (upper === undefined) {
                        upper = lower;
                        lower = undefined;
                    }
                    if (upper !== undefined) {
                        upper = toNumber(upper);
                        upper = upper === upper ? upper : 0;
                    }
                    if (lower !== undefined) {
                        lower = toNumber(lower);
                        lower = lower === lower ? lower : 0;
                    }
                    return baseClamp(toNumber(number), lower, upper);
                }
                function inRange(number, start, end) {
                    start = toFinite(start);
                    if (end === undefined) {
                        end = start;
                        start = 0;
                    } else end = toFinite(end);
                    number = toNumber(number);
                    return baseInRange(number, start, end);
                }
                function random(lower, upper, floating) {
                    if (floating && "boolean" != typeof floating && isIterateeCall(lower, upper, floating)) upper = floating = undefined;
                    if (floating === undefined) if ("boolean" == typeof upper) {
                        floating = upper;
                        upper = undefined;
                    } else if ("boolean" == typeof lower) {
                        floating = lower;
                        lower = undefined;
                    }
                    if (lower === undefined && upper === undefined) {
                        lower = 0;
                        upper = 1;
                    } else {
                        lower = toFinite(lower);
                        if (upper === undefined) {
                            upper = lower;
                            lower = 0;
                        } else upper = toFinite(upper);
                    }
                    if (lower > upper) {
                        var temp = lower;
                        lower = upper;
                        upper = temp;
                    }
                    if (floating || lower % 1 || upper % 1) {
                        var rand = nativeRandom();
                        return nativeMin(lower + rand * (upper - lower + freeParseFloat("1e-" + ((rand + "").length - 1))), upper);
                    }
                    return baseRandom(lower, upper);
                }
                var camelCase = createCompounder((function(result, word, index) {
                    word = word.toLowerCase();
                    return result + (index ? capitalize(word) : word);
                }));
                function capitalize(string) {
                    return upperFirst(toString(string).toLowerCase());
                }
                function deburr(string) {
                    string = toString(string);
                    return string && string.replace(reLatin, deburrLetter).replace(reComboMark, "");
                }
                function endsWith(string, target, position) {
                    string = toString(string);
                    target = baseToString(target);
                    var length = string.length;
                    position = position === undefined ? length : baseClamp(toInteger(position), 0, length);
                    var end = position;
                    position -= target.length;
                    return position >= 0 && string.slice(position, end) == target;
                }
                function escape(string) {
                    string = toString(string);
                    return string && reHasUnescapedHtml.test(string) ? string.replace(reUnescapedHtml, escapeHtmlChar) : string;
                }
                function escapeRegExp(string) {
                    string = toString(string);
                    return string && reHasRegExpChar.test(string) ? string.replace(reRegExpChar, "\\$&") : string;
                }
                var kebabCase = createCompounder((function(result, word, index) {
                    return result + (index ? "-" : "") + word.toLowerCase();
                }));
                var lowerCase = createCompounder((function(result, word, index) {
                    return result + (index ? " " : "") + word.toLowerCase();
                }));
                var lowerFirst = createCaseFirst("toLowerCase");
                function pad(string, length, chars) {
                    string = toString(string);
                    length = toInteger(length);
                    var strLength = length ? stringSize(string) : 0;
                    if (!length || strLength >= length) return string;
                    var mid = (length - strLength) / 2;
                    return createPadding(nativeFloor(mid), chars) + string + createPadding(nativeCeil(mid), chars);
                }
                function padEnd(string, length, chars) {
                    string = toString(string);
                    length = toInteger(length);
                    var strLength = length ? stringSize(string) : 0;
                    return length && strLength < length ? string + createPadding(length - strLength, chars) : string;
                }
                function padStart(string, length, chars) {
                    string = toString(string);
                    length = toInteger(length);
                    var strLength = length ? stringSize(string) : 0;
                    return length && strLength < length ? createPadding(length - strLength, chars) + string : string;
                }
                function parseInt(string, radix, guard) {
                    if (guard || null == radix) radix = 0; else if (radix) radix = +radix;
                    return nativeParseInt(toString(string).replace(reTrimStart, ""), radix || 0);
                }
                function repeat(string, n, guard) {
                    if (guard ? isIterateeCall(string, n, guard) : n === undefined) n = 1; else n = toInteger(n);
                    return baseRepeat(toString(string), n);
                }
                function replace() {
                    var args = arguments, string = toString(args[0]);
                    return args.length < 3 ? string : string.replace(args[1], args[2]);
                }
                var snakeCase = createCompounder((function(result, word, index) {
                    return result + (index ? "_" : "") + word.toLowerCase();
                }));
                function split(string, separator, limit) {
                    if (limit && "number" != typeof limit && isIterateeCall(string, separator, limit)) separator = limit = undefined;
                    limit = limit === undefined ? MAX_ARRAY_LENGTH : limit >>> 0;
                    if (!limit) return [];
                    string = toString(string);
                    if (string && ("string" == typeof separator || null != separator && !isRegExp(separator))) {
                        separator = baseToString(separator);
                        if (!separator && hasUnicode(string)) return castSlice(stringToArray(string), 0, limit);
                    }
                    return string.split(separator, limit);
                }
                var startCase = createCompounder((function(result, word, index) {
                    return result + (index ? " " : "") + upperFirst(word);
                }));
                function startsWith(string, target, position) {
                    string = toString(string);
                    position = null == position ? 0 : baseClamp(toInteger(position), 0, string.length);
                    target = baseToString(target);
                    return string.slice(position, position + target.length) == target;
                }
                function template(string, options, guard) {
                    var settings = lodash.templateSettings;
                    if (guard && isIterateeCall(string, options, guard)) options = undefined;
                    string = toString(string);
                    options = assignInWith({}, options, settings, customDefaultsAssignIn);
                    var imports = assignInWith({}, options.imports, settings.imports, customDefaultsAssignIn), importsKeys = keys(imports), importsValues = baseValues(imports, importsKeys);
                    var isEscaping, isEvaluating, index = 0, interpolate = options.interpolate || reNoMatch, source = "__p += '";
                    var reDelimiters = RegExp((options.escape || reNoMatch).source + "|" + interpolate.source + "|" + (interpolate === reInterpolate ? reEsTemplate : reNoMatch).source + "|" + (options.evaluate || reNoMatch).source + "|$", "g");
                    var sourceURL = "//# sourceURL=" + (hasOwnProperty.call(options, "sourceURL") ? (options.sourceURL + "").replace(/\s/g, " ") : "lodash.templateSources[" + ++templateCounter + "]") + "\n";
                    string.replace(reDelimiters, (function(match, escapeValue, interpolateValue, esTemplateValue, evaluateValue, offset) {
                        interpolateValue || (interpolateValue = esTemplateValue);
                        source += string.slice(index, offset).replace(reUnescapedString, escapeStringChar);
                        if (escapeValue) {
                            isEscaping = true;
                            source += "' +\n__e(" + escapeValue + ") +\n'";
                        }
                        if (evaluateValue) {
                            isEvaluating = true;
                            source += "';\n" + evaluateValue + ";\n__p += '";
                        }
                        if (interpolateValue) source += "' +\n((__t = (" + interpolateValue + ")) == null ? '' : __t) +\n'";
                        index = offset + match.length;
                        return match;
                    }));
                    source += "';\n";
                    var variable = hasOwnProperty.call(options, "variable") && options.variable;
                    if (!variable) source = "with (obj) {\n" + source + "\n}\n"; else if (reForbiddenIdentifierChars.test(variable)) throw new Error(INVALID_TEMPL_VAR_ERROR_TEXT);
                    source = (isEvaluating ? source.replace(reEmptyStringLeading, "") : source).replace(reEmptyStringMiddle, "$1").replace(reEmptyStringTrailing, "$1;");
                    source = "function(" + (variable || "obj") + ") {\n" + (variable ? "" : "obj || (obj = {});\n") + "var __t, __p = ''" + (isEscaping ? ", __e = _.escape" : "") + (isEvaluating ? ", __j = Array.prototype.join;\n" + "function print() { __p += __j.call(arguments, '') }\n" : ";\n") + source + "return __p\n}";
                    var result = attempt((function() {
                        return Function(importsKeys, sourceURL + "return " + source).apply(undefined, importsValues);
                    }));
                    result.source = source;
                    if (isError(result)) throw result;
                    return result;
                }
                function toLower(value) {
                    return toString(value).toLowerCase();
                }
                function toUpper(value) {
                    return toString(value).toUpperCase();
                }
                function trim(string, chars, guard) {
                    string = toString(string);
                    if (string && (guard || chars === undefined)) return baseTrim(string);
                    if (!string || !(chars = baseToString(chars))) return string;
                    var strSymbols = stringToArray(string), chrSymbols = stringToArray(chars), start = charsStartIndex(strSymbols, chrSymbols), end = charsEndIndex(strSymbols, chrSymbols) + 1;
                    return castSlice(strSymbols, start, end).join("");
                }
                function trimEnd(string, chars, guard) {
                    string = toString(string);
                    if (string && (guard || chars === undefined)) return string.slice(0, trimmedEndIndex(string) + 1);
                    if (!string || !(chars = baseToString(chars))) return string;
                    var strSymbols = stringToArray(string), end = charsEndIndex(strSymbols, stringToArray(chars)) + 1;
                    return castSlice(strSymbols, 0, end).join("");
                }
                function trimStart(string, chars, guard) {
                    string = toString(string);
                    if (string && (guard || chars === undefined)) return string.replace(reTrimStart, "");
                    if (!string || !(chars = baseToString(chars))) return string;
                    var strSymbols = stringToArray(string), start = charsStartIndex(strSymbols, stringToArray(chars));
                    return castSlice(strSymbols, start).join("");
                }
                function truncate(string, options) {
                    var length = DEFAULT_TRUNC_LENGTH, omission = DEFAULT_TRUNC_OMISSION;
                    if (isObject(options)) {
                        var separator = "separator" in options ? options.separator : separator;
                        length = "length" in options ? toInteger(options.length) : length;
                        omission = "omission" in options ? baseToString(options.omission) : omission;
                    }
                    string = toString(string);
                    var strLength = string.length;
                    if (hasUnicode(string)) {
                        var strSymbols = stringToArray(string);
                        strLength = strSymbols.length;
                    }
                    if (length >= strLength) return string;
                    var end = length - stringSize(omission);
                    if (end < 1) return omission;
                    var result = strSymbols ? castSlice(strSymbols, 0, end).join("") : string.slice(0, end);
                    if (separator === undefined) return result + omission;
                    if (strSymbols) end += result.length - end;
                    if (isRegExp(separator)) {
                        if (string.slice(end).search(separator)) {
                            var match, substring = result;
                            if (!separator.global) separator = RegExp(separator.source, toString(reFlags.exec(separator)) + "g");
                            separator.lastIndex = 0;
                            while (match = separator.exec(substring)) var newEnd = match.index;
                            result = result.slice(0, newEnd === undefined ? end : newEnd);
                        }
                    } else if (string.indexOf(baseToString(separator), end) != end) {
                        var index = result.lastIndexOf(separator);
                        if (index > -1) result = result.slice(0, index);
                    }
                    return result + omission;
                }
                function unescape(string) {
                    string = toString(string);
                    return string && reHasEscapedHtml.test(string) ? string.replace(reEscapedHtml, unescapeHtmlChar) : string;
                }
                var upperCase = createCompounder((function(result, word, index) {
                    return result + (index ? " " : "") + word.toUpperCase();
                }));
                var upperFirst = createCaseFirst("toUpperCase");
                function words(string, pattern, guard) {
                    string = toString(string);
                    pattern = guard ? undefined : pattern;
                    if (pattern === undefined) return hasUnicodeWord(string) ? unicodeWords(string) : asciiWords(string);
                    return string.match(pattern) || [];
                }
                var attempt = baseRest((function(func, args) {
                    try {
                        return apply(func, undefined, args);
                    } catch (e) {
                        return isError(e) ? e : new Error(e);
                    }
                }));
                var bindAll = flatRest((function(object, methodNames) {
                    arrayEach(methodNames, (function(key) {
                        key = toKey(key);
                        baseAssignValue(object, key, bind(object[key], object));
                    }));
                    return object;
                }));
                function cond(pairs) {
                    var length = null == pairs ? 0 : pairs.length, toIteratee = getIteratee();
                    pairs = !length ? [] : arrayMap(pairs, (function(pair) {
                        if ("function" != typeof pair[1]) throw new TypeError(FUNC_ERROR_TEXT);
                        return [ toIteratee(pair[0]), pair[1] ];
                    }));
                    return baseRest((function(args) {
                        var index = -1;
                        while (++index < length) {
                            var pair = pairs[index];
                            if (apply(pair[0], this, args)) return apply(pair[1], this, args);
                        }
                    }));
                }
                function conforms(source) {
                    return baseConforms(baseClone(source, CLONE_DEEP_FLAG));
                }
                function constant(value) {
                    return function() {
                        return value;
                    };
                }
                function defaultTo(value, defaultValue) {
                    return null == value || value !== value ? defaultValue : value;
                }
                var flow = createFlow();
                var flowRight = createFlow(true);
                function identity(value) {
                    return value;
                }
                function iteratee(func) {
                    return baseIteratee("function" == typeof func ? func : baseClone(func, CLONE_DEEP_FLAG));
                }
                function matches(source) {
                    return baseMatches(baseClone(source, CLONE_DEEP_FLAG));
                }
                function matchesProperty(path, srcValue) {
                    return baseMatchesProperty(path, baseClone(srcValue, CLONE_DEEP_FLAG));
                }
                var method = baseRest((function(path, args) {
                    return function(object) {
                        return baseInvoke(object, path, args);
                    };
                }));
                var methodOf = baseRest((function(object, args) {
                    return function(path) {
                        return baseInvoke(object, path, args);
                    };
                }));
                function mixin(object, source, options) {
                    var props = keys(source), methodNames = baseFunctions(source, props);
                    if (null == options && !(isObject(source) && (methodNames.length || !props.length))) {
                        options = source;
                        source = object;
                        object = this;
                        methodNames = baseFunctions(source, keys(source));
                    }
                    var chain = !(isObject(options) && "chain" in options) || !!options.chain, isFunc = isFunction(object);
                    arrayEach(methodNames, (function(methodName) {
                        var func = source[methodName];
                        object[methodName] = func;
                        if (isFunc) object.prototype[methodName] = function() {
                            var chainAll = this.__chain__;
                            if (chain || chainAll) {
                                var result = object(this.__wrapped__), actions = result.__actions__ = copyArray(this.__actions__);
                                actions.push({
                                    func,
                                    args: arguments,
                                    thisArg: object
                                });
                                result.__chain__ = chainAll;
                                return result;
                            }
                            return func.apply(object, arrayPush([ this.value() ], arguments));
                        };
                    }));
                    return object;
                }
                function noConflict() {
                    if (root._ === this) root._ = oldDash;
                    return this;
                }
                function noop() {}
                function nthArg(n) {
                    n = toInteger(n);
                    return baseRest((function(args) {
                        return baseNth(args, n);
                    }));
                }
                var over = createOver(arrayMap);
                var overEvery = createOver(arrayEvery);
                var overSome = createOver(arraySome);
                function property(path) {
                    return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);
                }
                function propertyOf(object) {
                    return function(path) {
                        return null == object ? undefined : baseGet(object, path);
                    };
                }
                var range = createRange();
                var rangeRight = createRange(true);
                function stubArray() {
                    return [];
                }
                function stubFalse() {
                    return false;
                }
                function stubObject() {
                    return {};
                }
                function stubString() {
                    return "";
                }
                function stubTrue() {
                    return true;
                }
                function times(n, iteratee) {
                    n = toInteger(n);
                    if (n < 1 || n > MAX_SAFE_INTEGER) return [];
                    var index = MAX_ARRAY_LENGTH, length = nativeMin(n, MAX_ARRAY_LENGTH);
                    iteratee = getIteratee(iteratee);
                    n -= MAX_ARRAY_LENGTH;
                    var result = baseTimes(length, iteratee);
                    while (++index < n) iteratee(index);
                    return result;
                }
                function toPath(value) {
                    if (isArray(value)) return arrayMap(value, toKey);
                    return isSymbol(value) ? [ value ] : copyArray(stringToPath(toString(value)));
                }
                function uniqueId(prefix) {
                    var id = ++idCounter;
                    return toString(prefix) + id;
                }
                var add = createMathOperation((function(augend, addend) {
                    return augend + addend;
                }), 0);
                var ceil = createRound("ceil");
                var divide = createMathOperation((function(dividend, divisor) {
                    return dividend / divisor;
                }), 1);
                var floor = createRound("floor");
                function max(array) {
                    return array && array.length ? baseExtremum(array, identity, baseGt) : undefined;
                }
                function maxBy(array, iteratee) {
                    return array && array.length ? baseExtremum(array, getIteratee(iteratee, 2), baseGt) : undefined;
                }
                function mean(array) {
                    return baseMean(array, identity);
                }
                function meanBy(array, iteratee) {
                    return baseMean(array, getIteratee(iteratee, 2));
                }
                function min(array) {
                    return array && array.length ? baseExtremum(array, identity, baseLt) : undefined;
                }
                function minBy(array, iteratee) {
                    return array && array.length ? baseExtremum(array, getIteratee(iteratee, 2), baseLt) : undefined;
                }
                var multiply = createMathOperation((function(multiplier, multiplicand) {
                    return multiplier * multiplicand;
                }), 1);
                var round = createRound("round");
                var subtract = createMathOperation((function(minuend, subtrahend) {
                    return minuend - subtrahend;
                }), 0);
                function sum(array) {
                    return array && array.length ? baseSum(array, identity) : 0;
                }
                function sumBy(array, iteratee) {
                    return array && array.length ? baseSum(array, getIteratee(iteratee, 2)) : 0;
                }
                lodash.after = after;
                lodash.ary = ary;
                lodash.assign = assign;
                lodash.assignIn = assignIn;
                lodash.assignInWith = assignInWith;
                lodash.assignWith = assignWith;
                lodash.at = at;
                lodash.before = before;
                lodash.bind = bind;
                lodash.bindAll = bindAll;
                lodash.bindKey = bindKey;
                lodash.castArray = castArray;
                lodash.chain = chain;
                lodash.chunk = chunk;
                lodash.compact = compact;
                lodash.concat = concat;
                lodash.cond = cond;
                lodash.conforms = conforms;
                lodash.constant = constant;
                lodash.countBy = countBy;
                lodash.create = create;
                lodash.curry = curry;
                lodash.curryRight = curryRight;
                lodash.debounce = debounce;
                lodash.defaults = defaults;
                lodash.defaultsDeep = defaultsDeep;
                lodash.defer = defer;
                lodash.delay = delay;
                lodash.difference = difference;
                lodash.differenceBy = differenceBy;
                lodash.differenceWith = differenceWith;
                lodash.drop = drop;
                lodash.dropRight = dropRight;
                lodash.dropRightWhile = dropRightWhile;
                lodash.dropWhile = dropWhile;
                lodash.fill = fill;
                lodash.filter = filter;
                lodash.flatMap = flatMap;
                lodash.flatMapDeep = flatMapDeep;
                lodash.flatMapDepth = flatMapDepth;
                lodash.flatten = flatten;
                lodash.flattenDeep = flattenDeep;
                lodash.flattenDepth = flattenDepth;
                lodash.flip = flip;
                lodash.flow = flow;
                lodash.flowRight = flowRight;
                lodash.fromPairs = fromPairs;
                lodash.functions = functions;
                lodash.functionsIn = functionsIn;
                lodash.groupBy = groupBy;
                lodash.initial = initial;
                lodash.intersection = intersection;
                lodash.intersectionBy = intersectionBy;
                lodash.intersectionWith = intersectionWith;
                lodash.invert = invert;
                lodash.invertBy = invertBy;
                lodash.invokeMap = invokeMap;
                lodash.iteratee = iteratee;
                lodash.keyBy = keyBy;
                lodash.keys = keys;
                lodash.keysIn = keysIn;
                lodash.map = map;
                lodash.mapKeys = mapKeys;
                lodash.mapValues = mapValues;
                lodash.matches = matches;
                lodash.matchesProperty = matchesProperty;
                lodash.memoize = memoize;
                lodash.merge = merge;
                lodash.mergeWith = mergeWith;
                lodash.method = method;
                lodash.methodOf = methodOf;
                lodash.mixin = mixin;
                lodash.negate = negate;
                lodash.nthArg = nthArg;
                lodash.omit = omit;
                lodash.omitBy = omitBy;
                lodash.once = once;
                lodash.orderBy = orderBy;
                lodash.over = over;
                lodash.overArgs = overArgs;
                lodash.overEvery = overEvery;
                lodash.overSome = overSome;
                lodash.partial = partial;
                lodash.partialRight = partialRight;
                lodash.partition = partition;
                lodash.pick = pick;
                lodash.pickBy = pickBy;
                lodash.property = property;
                lodash.propertyOf = propertyOf;
                lodash.pull = pull;
                lodash.pullAll = pullAll;
                lodash.pullAllBy = pullAllBy;
                lodash.pullAllWith = pullAllWith;
                lodash.pullAt = pullAt;
                lodash.range = range;
                lodash.rangeRight = rangeRight;
                lodash.rearg = rearg;
                lodash.reject = reject;
                lodash.remove = remove;
                lodash.rest = rest;
                lodash.reverse = reverse;
                lodash.sampleSize = sampleSize;
                lodash.set = set;
                lodash.setWith = setWith;
                lodash.shuffle = shuffle;
                lodash.slice = slice;
                lodash.sortBy = sortBy;
                lodash.sortedUniq = sortedUniq;
                lodash.sortedUniqBy = sortedUniqBy;
                lodash.split = split;
                lodash.spread = spread;
                lodash.tail = tail;
                lodash.take = take;
                lodash.takeRight = takeRight;
                lodash.takeRightWhile = takeRightWhile;
                lodash.takeWhile = takeWhile;
                lodash.tap = tap;
                lodash.throttle = throttle;
                lodash.thru = thru;
                lodash.toArray = toArray;
                lodash.toPairs = toPairs;
                lodash.toPairsIn = toPairsIn;
                lodash.toPath = toPath;
                lodash.toPlainObject = toPlainObject;
                lodash.transform = transform;
                lodash.unary = unary;
                lodash.union = union;
                lodash.unionBy = unionBy;
                lodash.unionWith = unionWith;
                lodash.uniq = uniq;
                lodash.uniqBy = uniqBy;
                lodash.uniqWith = uniqWith;
                lodash.unset = unset;
                lodash.unzip = unzip;
                lodash.unzipWith = unzipWith;
                lodash.update = update;
                lodash.updateWith = updateWith;
                lodash.values = values;
                lodash.valuesIn = valuesIn;
                lodash.without = without;
                lodash.words = words;
                lodash.wrap = wrap;
                lodash.xor = xor;
                lodash.xorBy = xorBy;
                lodash.xorWith = xorWith;
                lodash.zip = zip;
                lodash.zipObject = zipObject;
                lodash.zipObjectDeep = zipObjectDeep;
                lodash.zipWith = zipWith;
                lodash.entries = toPairs;
                lodash.entriesIn = toPairsIn;
                lodash.extend = assignIn;
                lodash.extendWith = assignInWith;
                mixin(lodash, lodash);
                lodash.add = add;
                lodash.attempt = attempt;
                lodash.camelCase = camelCase;
                lodash.capitalize = capitalize;
                lodash.ceil = ceil;
                lodash.clamp = clamp;
                lodash.clone = clone;
                lodash.cloneDeep = cloneDeep;
                lodash.cloneDeepWith = cloneDeepWith;
                lodash.cloneWith = cloneWith;
                lodash.conformsTo = conformsTo;
                lodash.deburr = deburr;
                lodash.defaultTo = defaultTo;
                lodash.divide = divide;
                lodash.endsWith = endsWith;
                lodash.eq = eq;
                lodash.escape = escape;
                lodash.escapeRegExp = escapeRegExp;
                lodash.every = every;
                lodash.find = find;
                lodash.findIndex = findIndex;
                lodash.findKey = findKey;
                lodash.findLast = findLast;
                lodash.findLastIndex = findLastIndex;
                lodash.findLastKey = findLastKey;
                lodash.floor = floor;
                lodash.forEach = forEach;
                lodash.forEachRight = forEachRight;
                lodash.forIn = forIn;
                lodash.forInRight = forInRight;
                lodash.forOwn = forOwn;
                lodash.forOwnRight = forOwnRight;
                lodash.get = get;
                lodash.gt = gt;
                lodash.gte = gte;
                lodash.has = has;
                lodash.hasIn = hasIn;
                lodash.head = head;
                lodash.identity = identity;
                lodash.includes = includes;
                lodash.indexOf = indexOf;
                lodash.inRange = inRange;
                lodash.invoke = invoke;
                lodash.isArguments = isArguments;
                lodash.isArray = isArray;
                lodash.isArrayBuffer = isArrayBuffer;
                lodash.isArrayLike = isArrayLike;
                lodash.isArrayLikeObject = isArrayLikeObject;
                lodash.isBoolean = isBoolean;
                lodash.isBuffer = isBuffer;
                lodash.isDate = isDate;
                lodash.isElement = isElement;
                lodash.isEmpty = isEmpty;
                lodash.isEqual = isEqual;
                lodash.isEqualWith = isEqualWith;
                lodash.isError = isError;
                lodash.isFinite = isFinite;
                lodash.isFunction = isFunction;
                lodash.isInteger = isInteger;
                lodash.isLength = isLength;
                lodash.isMap = isMap;
                lodash.isMatch = isMatch;
                lodash.isMatchWith = isMatchWith;
                lodash.isNaN = isNaN;
                lodash.isNative = isNative;
                lodash.isNil = isNil;
                lodash.isNull = isNull;
                lodash.isNumber = isNumber;
                lodash.isObject = isObject;
                lodash.isObjectLike = isObjectLike;
                lodash.isPlainObject = isPlainObject;
                lodash.isRegExp = isRegExp;
                lodash.isSafeInteger = isSafeInteger;
                lodash.isSet = isSet;
                lodash.isString = isString;
                lodash.isSymbol = isSymbol;
                lodash.isTypedArray = isTypedArray;
                lodash.isUndefined = isUndefined;
                lodash.isWeakMap = isWeakMap;
                lodash.isWeakSet = isWeakSet;
                lodash.join = join;
                lodash.kebabCase = kebabCase;
                lodash.last = last;
                lodash.lastIndexOf = lastIndexOf;
                lodash.lowerCase = lowerCase;
                lodash.lowerFirst = lowerFirst;
                lodash.lt = lt;
                lodash.lte = lte;
                lodash.max = max;
                lodash.maxBy = maxBy;
                lodash.mean = mean;
                lodash.meanBy = meanBy;
                lodash.min = min;
                lodash.minBy = minBy;
                lodash.stubArray = stubArray;
                lodash.stubFalse = stubFalse;
                lodash.stubObject = stubObject;
                lodash.stubString = stubString;
                lodash.stubTrue = stubTrue;
                lodash.multiply = multiply;
                lodash.nth = nth;
                lodash.noConflict = noConflict;
                lodash.noop = noop;
                lodash.now = now;
                lodash.pad = pad;
                lodash.padEnd = padEnd;
                lodash.padStart = padStart;
                lodash.parseInt = parseInt;
                lodash.random = random;
                lodash.reduce = reduce;
                lodash.reduceRight = reduceRight;
                lodash.repeat = repeat;
                lodash.replace = replace;
                lodash.result = result;
                lodash.round = round;
                lodash.runInContext = runInContext;
                lodash.sample = sample;
                lodash.size = size;
                lodash.snakeCase = snakeCase;
                lodash.some = some;
                lodash.sortedIndex = sortedIndex;
                lodash.sortedIndexBy = sortedIndexBy;
                lodash.sortedIndexOf = sortedIndexOf;
                lodash.sortedLastIndex = sortedLastIndex;
                lodash.sortedLastIndexBy = sortedLastIndexBy;
                lodash.sortedLastIndexOf = sortedLastIndexOf;
                lodash.startCase = startCase;
                lodash.startsWith = startsWith;
                lodash.subtract = subtract;
                lodash.sum = sum;
                lodash.sumBy = sumBy;
                lodash.template = template;
                lodash.times = times;
                lodash.toFinite = toFinite;
                lodash.toInteger = toInteger;
                lodash.toLength = toLength;
                lodash.toLower = toLower;
                lodash.toNumber = toNumber;
                lodash.toSafeInteger = toSafeInteger;
                lodash.toString = toString;
                lodash.toUpper = toUpper;
                lodash.trim = trim;
                lodash.trimEnd = trimEnd;
                lodash.trimStart = trimStart;
                lodash.truncate = truncate;
                lodash.unescape = unescape;
                lodash.uniqueId = uniqueId;
                lodash.upperCase = upperCase;
                lodash.upperFirst = upperFirst;
                lodash.each = forEach;
                lodash.eachRight = forEachRight;
                lodash.first = head;
                mixin(lodash, function() {
                    var source = {};
                    baseForOwn(lodash, (function(func, methodName) {
                        if (!hasOwnProperty.call(lodash.prototype, methodName)) source[methodName] = func;
                    }));
                    return source;
                }(), {
                    chain: false
                });
                lodash.VERSION = VERSION;
                arrayEach([ "bind", "bindKey", "curry", "curryRight", "partial", "partialRight" ], (function(methodName) {
                    lodash[methodName].placeholder = lodash;
                }));
                arrayEach([ "drop", "take" ], (function(methodName, index) {
                    LazyWrapper.prototype[methodName] = function(n) {
                        n = n === undefined ? 1 : nativeMax(toInteger(n), 0);
                        var result = this.__filtered__ && !index ? new LazyWrapper(this) : this.clone();
                        if (result.__filtered__) result.__takeCount__ = nativeMin(n, result.__takeCount__); else result.__views__.push({
                            size: nativeMin(n, MAX_ARRAY_LENGTH),
                            type: methodName + (result.__dir__ < 0 ? "Right" : "")
                        });
                        return result;
                    };
                    LazyWrapper.prototype[methodName + "Right"] = function(n) {
                        return this.reverse()[methodName](n).reverse();
                    };
                }));
                arrayEach([ "filter", "map", "takeWhile" ], (function(methodName, index) {
                    var type = index + 1, isFilter = type == LAZY_FILTER_FLAG || type == LAZY_WHILE_FLAG;
                    LazyWrapper.prototype[methodName] = function(iteratee) {
                        var result = this.clone();
                        result.__iteratees__.push({
                            iteratee: getIteratee(iteratee, 3),
                            type
                        });
                        result.__filtered__ = result.__filtered__ || isFilter;
                        return result;
                    };
                }));
                arrayEach([ "head", "last" ], (function(methodName, index) {
                    var takeName = "take" + (index ? "Right" : "");
                    LazyWrapper.prototype[methodName] = function() {
                        return this[takeName](1).value()[0];
                    };
                }));
                arrayEach([ "initial", "tail" ], (function(methodName, index) {
                    var dropName = "drop" + (index ? "" : "Right");
                    LazyWrapper.prototype[methodName] = function() {
                        return this.__filtered__ ? new LazyWrapper(this) : this[dropName](1);
                    };
                }));
                LazyWrapper.prototype.compact = function() {
                    return this.filter(identity);
                };
                LazyWrapper.prototype.find = function(predicate) {
                    return this.filter(predicate).head();
                };
                LazyWrapper.prototype.findLast = function(predicate) {
                    return this.reverse().find(predicate);
                };
                LazyWrapper.prototype.invokeMap = baseRest((function(path, args) {
                    if ("function" == typeof path) return new LazyWrapper(this);
                    return this.map((function(value) {
                        return baseInvoke(value, path, args);
                    }));
                }));
                LazyWrapper.prototype.reject = function(predicate) {
                    return this.filter(negate(getIteratee(predicate)));
                };
                LazyWrapper.prototype.slice = function(start, end) {
                    start = toInteger(start);
                    var result = this;
                    if (result.__filtered__ && (start > 0 || end < 0)) return new LazyWrapper(result);
                    if (start < 0) result = result.takeRight(-start); else if (start) result = result.drop(start);
                    if (end !== undefined) {
                        end = toInteger(end);
                        result = end < 0 ? result.dropRight(-end) : result.take(end - start);
                    }
                    return result;
                };
                LazyWrapper.prototype.takeRightWhile = function(predicate) {
                    return this.reverse().takeWhile(predicate).reverse();
                };
                LazyWrapper.prototype.toArray = function() {
                    return this.take(MAX_ARRAY_LENGTH);
                };
                baseForOwn(LazyWrapper.prototype, (function(func, methodName) {
                    var checkIteratee = /^(?:filter|find|map|reject)|While$/.test(methodName), isTaker = /^(?:head|last)$/.test(methodName), lodashFunc = lodash[isTaker ? "take" + ("last" == methodName ? "Right" : "") : methodName], retUnwrapped = isTaker || /^find/.test(methodName);
                    if (!lodashFunc) return;
                    lodash.prototype[methodName] = function() {
                        var value = this.__wrapped__, args = isTaker ? [ 1 ] : arguments, isLazy = value instanceof LazyWrapper, iteratee = args[0], useLazy = isLazy || isArray(value);
                        var interceptor = function(value) {
                            var result = lodashFunc.apply(lodash, arrayPush([ value ], args));
                            return isTaker && chainAll ? result[0] : result;
                        };
                        if (useLazy && checkIteratee && "function" == typeof iteratee && 1 != iteratee.length) isLazy = useLazy = false;
                        var chainAll = this.__chain__, isHybrid = !!this.__actions__.length, isUnwrapped = retUnwrapped && !chainAll, onlyLazy = isLazy && !isHybrid;
                        if (!retUnwrapped && useLazy) {
                            value = onlyLazy ? value : new LazyWrapper(this);
                            var result = func.apply(value, args);
                            result.__actions__.push({
                                func: thru,
                                args: [ interceptor ],
                                thisArg: undefined
                            });
                            return new LodashWrapper(result, chainAll);
                        }
                        if (isUnwrapped && onlyLazy) return func.apply(this, args);
                        result = this.thru(interceptor);
                        return isUnwrapped ? isTaker ? result.value()[0] : result.value() : result;
                    };
                }));
                arrayEach([ "pop", "push", "shift", "sort", "splice", "unshift" ], (function(methodName) {
                    var func = arrayProto[methodName], chainName = /^(?:push|sort|unshift)$/.test(methodName) ? "tap" : "thru", retUnwrapped = /^(?:pop|shift)$/.test(methodName);
                    lodash.prototype[methodName] = function() {
                        var args = arguments;
                        if (retUnwrapped && !this.__chain__) {
                            var value = this.value();
                            return func.apply(isArray(value) ? value : [], args);
                        }
                        return this[chainName]((function(value) {
                            return func.apply(isArray(value) ? value : [], args);
                        }));
                    };
                }));
                baseForOwn(LazyWrapper.prototype, (function(func, methodName) {
                    var lodashFunc = lodash[methodName];
                    if (lodashFunc) {
                        var key = lodashFunc.name + "";
                        if (!hasOwnProperty.call(realNames, key)) realNames[key] = [];
                        realNames[key].push({
                            name: methodName,
                            func: lodashFunc
                        });
                    }
                }));
                realNames[createHybrid(undefined, WRAP_BIND_KEY_FLAG).name] = [ {
                    name: "wrapper",
                    func: undefined
                } ];
                LazyWrapper.prototype.clone = lazyClone;
                LazyWrapper.prototype.reverse = lazyReverse;
                LazyWrapper.prototype.value = lazyValue;
                lodash.prototype.at = wrapperAt;
                lodash.prototype.chain = wrapperChain;
                lodash.prototype.commit = wrapperCommit;
                lodash.prototype.next = wrapperNext;
                lodash.prototype.plant = wrapperPlant;
                lodash.prototype.reverse = wrapperReverse;
                lodash.prototype.toJSON = lodash.prototype.valueOf = lodash.prototype.value = wrapperValue;
                lodash.prototype.first = lodash.prototype.head;
                if (symIterator) lodash.prototype[symIterator] = wrapperToIterator;
                return lodash;
            };
            var _ = runInContext();
            if (true) {
                root._ = _;
                !(__WEBPACK_AMD_DEFINE_RESULT__ = function() {
                    return _;
                }.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
            }
        }).call(this);
    },
    "./node_modules/lodash/mapKeys.js": (module, __unused_webpack_exports, __webpack_require__) => {
        var baseAssignValue = __webpack_require__("./node_modules/lodash/_baseAssignValue.js"), baseForOwn = __webpack_require__("./node_modules/lodash/_baseForOwn.js"), baseIteratee = __webpack_require__("./node_modules/lodash/_baseIteratee.js");
        function mapKeys(object, iteratee) {
            var result = {};
            iteratee = baseIteratee(iteratee, 3);
            baseForOwn(object, (function(value, key, object) {
                baseAssignValue(result, iteratee(value, key, object), value);
            }));
            return result;
        }
        module.exports = mapKeys;
    },
    "./node_modules/lodash/now.js": (module, __unused_webpack_exports, __webpack_require__) => {
        var root = __webpack_require__("./node_modules/lodash/_root.js");
        var now = function() {
            return root.Date.now();
        };
        module.exports = now;
    },
    "./node_modules/lodash/property.js": (module, __unused_webpack_exports, __webpack_require__) => {
        var baseProperty = __webpack_require__("./node_modules/lodash/_baseProperty.js"), basePropertyDeep = __webpack_require__("./node_modules/lodash/_basePropertyDeep.js"), isKey = __webpack_require__("./node_modules/lodash/_isKey.js"), toKey = __webpack_require__("./node_modules/lodash/_toKey.js");
        function property(path) {
            return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);
        }
        module.exports = property;
    },
    "./node_modules/lodash/snakeCase.js": (module, __unused_webpack_exports, __webpack_require__) => {
        var createCompounder = __webpack_require__("./node_modules/lodash/_createCompounder.js");
        var snakeCase = createCompounder((function(result, word, index) {
            return result + (index ? "_" : "") + word.toLowerCase();
        }));
        module.exports = snakeCase;
    },
    "./node_modules/lodash/throttle.js": (module, __unused_webpack_exports, __webpack_require__) => {
        var debounce = __webpack_require__("./node_modules/lodash/debounce.js"), isObject = __webpack_require__("./node_modules/lodash/isObject.js");
        var FUNC_ERROR_TEXT = "Expected a function";
        function throttle(func, wait, options) {
            var leading = true, trailing = true;
            if ("function" != typeof func) throw new TypeError(FUNC_ERROR_TEXT);
            if (isObject(options)) {
                leading = "leading" in options ? !!options.leading : leading;
                trailing = "trailing" in options ? !!options.trailing : trailing;
            }
            return debounce(func, wait, {
                leading,
                maxWait: wait,
                trailing
            });
        }
        module.exports = throttle;
    },
    "./node_modules/lodash/toNumber.js": module => {
        function identity(value) {
            return value;
        }
        module.exports = identity;
    },
    "./node_modules/lodash/toString.js": module => {
        function identity(value) {
            return value;
        }
        module.exports = identity;
    },
    "./node_modules/lodash/words.js": (module, __unused_webpack_exports, __webpack_require__) => {
        var asciiWords = __webpack_require__("./node_modules/lodash/_asciiWords.js"), hasUnicodeWord = __webpack_require__("./node_modules/lodash/_hasUnicodeWord.js"), toString = __webpack_require__("./node_modules/lodash/toString.js"), unicodeWords = __webpack_require__("./node_modules/lodash/_unicodeWords.js");
        function words(string, pattern, guard) {
            string = toString(string);
            pattern = guard ? void 0 : pattern;
            if (void 0 === pattern) return hasUnicodeWord(string) ? unicodeWords(string) : asciiWords(string);
            return string.match(pattern) || [];
        }
        module.exports = words;
    },
    "./node_modules/query-string/index.js": (__unused_webpack_module, exports, __webpack_require__) => {
        "use strict";
        const strictUriEncode = __webpack_require__("./node_modules/strict-uri-encode/index.js");
        const decodeComponent = __webpack_require__("./node_modules/decode-uri-component/index.js");
        const splitOnFirst = __webpack_require__("./node_modules/split-on-first/index.js");
        const filterObject = __webpack_require__("./node_modules/filter-obj/index.js");
        const isNullOrUndefined = value => null === value || void 0 === value;
        const encodeFragmentIdentifier = Symbol("encodeFragmentIdentifier");
        function encoderForArrayFormat(options) {
            switch (options.arrayFormat) {
              case "index":
                return key => (result, value) => {
                    const index = result.length;
                    if (void 0 === value || options.skipNull && null === value || options.skipEmptyString && "" === value) return result;
                    if (null === value) return [ ...result, [ encode(key, options), "[", index, "]" ].join("") ];
                    return [ ...result, [ encode(key, options), "[", encode(index, options), "]=", encode(value, options) ].join("") ];
                };

              case "bracket":
                return key => (result, value) => {
                    if (void 0 === value || options.skipNull && null === value || options.skipEmptyString && "" === value) return result;
                    if (null === value) return [ ...result, [ encode(key, options), "[]" ].join("") ];
                    return [ ...result, [ encode(key, options), "[]=", encode(value, options) ].join("") ];
                };

              case "colon-list-separator":
                return key => (result, value) => {
                    if (void 0 === value || options.skipNull && null === value || options.skipEmptyString && "" === value) return result;
                    if (null === value) return [ ...result, [ encode(key, options), ":list=" ].join("") ];
                    return [ ...result, [ encode(key, options), ":list=", encode(value, options) ].join("") ];
                };

              case "comma":
              case "separator":
              case "bracket-separator":
                {
                    const keyValueSep = "bracket-separator" === options.arrayFormat ? "[]=" : "=";
                    return key => (result, value) => {
                        if (void 0 === value || options.skipNull && null === value || options.skipEmptyString && "" === value) return result;
                        value = null === value ? "" : value;
                        if (0 === result.length) return [ [ encode(key, options), keyValueSep, encode(value, options) ].join("") ];
                        return [ [ result, encode(value, options) ].join(options.arrayFormatSeparator) ];
                    };
                }

              default:
                return key => (result, value) => {
                    if (void 0 === value || options.skipNull && null === value || options.skipEmptyString && "" === value) return result;
                    if (null === value) return [ ...result, encode(key, options) ];
                    return [ ...result, [ encode(key, options), "=", encode(value, options) ].join("") ];
                };
            }
        }
        function parserForArrayFormat(options) {
            let result;
            switch (options.arrayFormat) {
              case "index":
                return (key, value, accumulator) => {
                    result = /\[(\d*)\]$/.exec(key);
                    key = key.replace(/\[\d*\]$/, "");
                    if (!result) {
                        accumulator[key] = value;
                        return;
                    }
                    if (void 0 === accumulator[key]) accumulator[key] = {};
                    accumulator[key][result[1]] = value;
                };

              case "bracket":
                return (key, value, accumulator) => {
                    result = /(\[\])$/.exec(key);
                    key = key.replace(/\[\]$/, "");
                    if (!result) {
                        accumulator[key] = value;
                        return;
                    }
                    if (void 0 === accumulator[key]) {
                        accumulator[key] = [ value ];
                        return;
                    }
                    accumulator[key] = [].concat(accumulator[key], value);
                };

              case "colon-list-separator":
                return (key, value, accumulator) => {
                    result = /(:list)$/.exec(key);
                    key = key.replace(/:list$/, "");
                    if (!result) {
                        accumulator[key] = value;
                        return;
                    }
                    if (void 0 === accumulator[key]) {
                        accumulator[key] = [ value ];
                        return;
                    }
                    accumulator[key] = [].concat(accumulator[key], value);
                };

              case "comma":
              case "separator":
                return (key, value, accumulator) => {
                    const isArray = "string" === typeof value && value.includes(options.arrayFormatSeparator);
                    const isEncodedArray = "string" === typeof value && !isArray && decode(value, options).includes(options.arrayFormatSeparator);
                    value = isEncodedArray ? decode(value, options) : value;
                    const newValue = isArray || isEncodedArray ? value.split(options.arrayFormatSeparator).map((item => decode(item, options))) : null === value ? value : decode(value, options);
                    accumulator[key] = newValue;
                };

              case "bracket-separator":
                return (key, value, accumulator) => {
                    const isArray = /(\[\])$/.test(key);
                    key = key.replace(/\[\]$/, "");
                    if (!isArray) {
                        accumulator[key] = value ? decode(value, options) : value;
                        return;
                    }
                    const arrayValue = null === value ? [] : value.split(options.arrayFormatSeparator).map((item => decode(item, options)));
                    if (void 0 === accumulator[key]) {
                        accumulator[key] = arrayValue;
                        return;
                    }
                    accumulator[key] = [].concat(accumulator[key], arrayValue);
                };

              default:
                return (key, value, accumulator) => {
                    if (void 0 === accumulator[key]) {
                        accumulator[key] = value;
                        return;
                    }
                    accumulator[key] = [].concat(accumulator[key], value);
                };
            }
        }
        function validateArrayFormatSeparator(value) {
            if ("string" !== typeof value || 1 !== value.length) throw new TypeError("arrayFormatSeparator must be single character string");
        }
        function encode(value, options) {
            if (options.encode) return options.strict ? strictUriEncode(value) : encodeURIComponent(value);
            return value;
        }
        function decode(value, options) {
            if (options.decode) return decodeComponent(value);
            return value;
        }
        function keysSorter(input) {
            if (Array.isArray(input)) return input.sort();
            if ("object" === typeof input) return keysSorter(Object.keys(input)).sort(((a, b) => Number(a) - Number(b))).map((key => input[key]));
            return input;
        }
        function removeHash(input) {
            const hashStart = input.indexOf("#");
            if (-1 !== hashStart) input = input.slice(0, hashStart);
            return input;
        }
        function getHash(url) {
            let hash = "";
            const hashStart = url.indexOf("#");
            if (-1 !== hashStart) hash = url.slice(hashStart);
            return hash;
        }
        function extract(input) {
            input = removeHash(input);
            const queryStart = input.indexOf("?");
            if (-1 === queryStart) return "";
            return input.slice(queryStart + 1);
        }
        function parseValue(value, options) {
            if (options.parseNumbers && !Number.isNaN(Number(value)) && "string" === typeof value && "" !== value.trim()) value = Number(value); else if (options.parseBooleans && null !== value && ("true" === value.toLowerCase() || "false" === value.toLowerCase())) value = "true" === value.toLowerCase();
            return value;
        }
        function parse(query, options) {
            options = Object.assign({
                decode: true,
                sort: true,
                arrayFormat: "none",
                arrayFormatSeparator: ",",
                parseNumbers: false,
                parseBooleans: false
            }, options);
            validateArrayFormatSeparator(options.arrayFormatSeparator);
            const formatter = parserForArrayFormat(options);
            const ret = Object.create(null);
            if ("string" !== typeof query) return ret;
            query = query.trim().replace(/^[?#&]/, "");
            if (!query) return ret;
            for (const param of query.split("&")) {
                if ("" === param) continue;
                let [key, value] = splitOnFirst(options.decode ? param.replace(/\+/g, " ") : param, "=");
                value = void 0 === value ? null : [ "comma", "separator", "bracket-separator" ].includes(options.arrayFormat) ? value : decode(value, options);
                formatter(decode(key, options), value, ret);
            }
            for (const key of Object.keys(ret)) {
                const value = ret[key];
                if ("object" === typeof value && null !== value) for (const k of Object.keys(value)) value[k] = parseValue(value[k], options); else ret[key] = parseValue(value, options);
            }
            if (false === options.sort) return ret;
            return (true === options.sort ? Object.keys(ret).sort() : Object.keys(ret).sort(options.sort)).reduce(((result, key) => {
                const value = ret[key];
                if (Boolean(value) && "object" === typeof value && !Array.isArray(value)) result[key] = keysSorter(value); else result[key] = value;
                return result;
            }), Object.create(null));
        }
        exports.extract = extract;
        exports.parse = parse;
        exports.stringify = (object, options) => {
            if (!object) return "";
            options = Object.assign({
                encode: true,
                strict: true,
                arrayFormat: "none",
                arrayFormatSeparator: ","
            }, options);
            validateArrayFormatSeparator(options.arrayFormatSeparator);
            const shouldFilter = key => options.skipNull && isNullOrUndefined(object[key]) || options.skipEmptyString && "" === object[key];
            const formatter = encoderForArrayFormat(options);
            const objectCopy = {};
            for (const key of Object.keys(object)) if (!shouldFilter(key)) objectCopy[key] = object[key];
            const keys = Object.keys(objectCopy);
            if (false !== options.sort) keys.sort(options.sort);
            return keys.map((key => {
                const value = object[key];
                if (void 0 === value) return "";
                if (null === value) return encode(key, options);
                if (Array.isArray(value)) {
                    if (0 === value.length && "bracket-separator" === options.arrayFormat) return encode(key, options) + "[]";
                    return value.reduce(formatter(key), []).join("&");
                }
                return encode(key, options) + "=" + encode(value, options);
            })).filter((x => x.length > 0)).join("&");
        };
        exports.parseUrl = (url, options) => {
            options = Object.assign({
                decode: true
            }, options);
            const [url_, hash] = splitOnFirst(url, "#");
            return Object.assign({
                url: url_.split("?")[0] || "",
                query: parse(extract(url), options)
            }, options && options.parseFragmentIdentifier && hash ? {
                fragmentIdentifier: decode(hash, options)
            } : {});
        };
        exports.stringifyUrl = (object, options) => {
            options = Object.assign({
                encode: true,
                strict: true,
                [encodeFragmentIdentifier]: true
            }, options);
            const url = removeHash(object.url).split("?")[0] || "";
            const queryFromUrl = exports.extract(object.url);
            const parsedQueryFromUrl = exports.parse(queryFromUrl, {
                sort: false
            });
            const query = Object.assign(parsedQueryFromUrl, object.query);
            let queryString = exports.stringify(query, options);
            if (queryString) queryString = `?${queryString}`;
            let hash = getHash(object.url);
            if (object.fragmentIdentifier) hash = `#${options[encodeFragmentIdentifier] ? encode(object.fragmentIdentifier, options) : object.fragmentIdentifier}`;
            return `${url}${queryString}${hash}`;
        };
        exports.pick = (input, filter, options) => {
            options = Object.assign({
                parseFragmentIdentifier: true,
                [encodeFragmentIdentifier]: false
            }, options);
            const {url, query, fragmentIdentifier} = exports.parseUrl(input, options);
            return exports.stringifyUrl({
                url,
                query: filterObject(query, filter),
                fragmentIdentifier
            }, options);
        };
        exports.exclude = (input, filter, options) => {
            const exclusionFilter = Array.isArray(filter) ? key => !filter.includes(key) : (key, value) => !filter(key, value);
            return exports.pick(input, exclusionFilter, options);
        };
    },
    "./node_modules/querystring/decode.js": module => {
        "use strict";
        function hasOwnProperty(obj, prop) {
            return Object.prototype.hasOwnProperty.call(obj, prop);
        }
        module.exports = function(qs, sep, eq, options) {
            sep = sep || "&";
            eq = eq || "=";
            var obj = {};
            if ("string" !== typeof qs || 0 === qs.length) return obj;
            var regexp = /\+/g;
            qs = qs.split(sep);
            var maxKeys = 1e3;
            if (options && "number" === typeof options.maxKeys) maxKeys = options.maxKeys;
            var len = qs.length;
            if (maxKeys > 0 && len > maxKeys) len = maxKeys;
            for (var i = 0; i < len; ++i) {
                var kstr, vstr, k, v, x = qs[i].replace(regexp, "%20"), idx = x.indexOf(eq);
                if (idx >= 0) {
                    kstr = x.substr(0, idx);
                    vstr = x.substr(idx + 1);
                } else {
                    kstr = x;
                    vstr = "";
                }
                k = decodeURIComponent(kstr);
                v = decodeURIComponent(vstr);
                if (!hasOwnProperty(obj, k)) obj[k] = v; else if (Array.isArray(obj[k])) obj[k].push(v); else obj[k] = [ obj[k], v ];
            }
            return obj;
        };
    },
    "./node_modules/querystring/encode.js": module => {
        "use strict";
        var stringifyPrimitive = function(v) {
            switch (typeof v) {
              case "string":
                return v;

              case "boolean":
                return v ? "true" : "false";

              case "number":
                return isFinite(v) ? v : "";

              default:
                return "";
            }
        };
        module.exports = function(obj, sep, eq, name) {
            sep = sep || "&";
            eq = eq || "=";
            if (null === obj) obj = void 0;
            if ("object" === typeof obj) return Object.keys(obj).map((function(k) {
                var ks = encodeURIComponent(stringifyPrimitive(k)) + eq;
                if (Array.isArray(obj[k])) return obj[k].map((function(v) {
                    return ks + encodeURIComponent(stringifyPrimitive(v));
                })).join(sep); else return ks + encodeURIComponent(stringifyPrimitive(obj[k]));
            })).join(sep);
            if (!name) return "";
            return encodeURIComponent(stringifyPrimitive(name)) + eq + encodeURIComponent(stringifyPrimitive(obj));
        };
    },
    "./node_modules/querystring/index.js": (__unused_webpack_module, exports, __webpack_require__) => {
        "use strict";
        exports.decode = exports.parse = __webpack_require__("./node_modules/querystring/decode.js");
        exports.encode = exports.stringify = __webpack_require__("./node_modules/querystring/encode.js");
    },
    "./node_modules/regenerator-runtime/runtime.js": module => {
        var runtime = function(exports) {
            "use strict";
            var Op = Object.prototype;
            var hasOwn = Op.hasOwnProperty;
            var undefined;
            var $Symbol = "function" === typeof Symbol ? Symbol : {};
            var iteratorSymbol = $Symbol.iterator || "@@iterator";
            var asyncIteratorSymbol = $Symbol.asyncIterator || "@@asyncIterator";
            var toStringTagSymbol = $Symbol.toStringTag || "@@toStringTag";
            function define(obj, key, value) {
                Object.defineProperty(obj, key, {
                    value,
                    enumerable: true,
                    configurable: true,
                    writable: true
                });
                return obj[key];
            }
            try {
                define({}, "");
            } catch (err) {
                define = function(obj, key, value) {
                    return obj[key] = value;
                };
            }
            function wrap(innerFn, outerFn, self, tryLocsList) {
                var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;
                var generator = Object.create(protoGenerator.prototype);
                var context = new Context(tryLocsList || []);
                generator._invoke = makeInvokeMethod(innerFn, self, context);
                return generator;
            }
            exports.wrap = wrap;
            function tryCatch(fn, obj, arg) {
                try {
                    return {
                        type: "normal",
                        arg: fn.call(obj, arg)
                    };
                } catch (err) {
                    return {
                        type: "throw",
                        arg: err
                    };
                }
            }
            var GenStateSuspendedStart = "suspendedStart";
            var GenStateSuspendedYield = "suspendedYield";
            var GenStateExecuting = "executing";
            var GenStateCompleted = "completed";
            var ContinueSentinel = {};
            function Generator() {}
            function GeneratorFunction() {}
            function GeneratorFunctionPrototype() {}
            var IteratorPrototype = {};
            define(IteratorPrototype, iteratorSymbol, (function() {
                return this;
            }));
            var getProto = Object.getPrototypeOf;
            var NativeIteratorPrototype = getProto && getProto(getProto(values([])));
            if (NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) IteratorPrototype = NativeIteratorPrototype;
            var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype);
            GeneratorFunction.prototype = GeneratorFunctionPrototype;
            define(Gp, "constructor", GeneratorFunctionPrototype);
            define(GeneratorFunctionPrototype, "constructor", GeneratorFunction);
            GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, "GeneratorFunction");
            function defineIteratorMethods(prototype) {
                [ "next", "throw", "return" ].forEach((function(method) {
                    define(prototype, method, (function(arg) {
                        return this._invoke(method, arg);
                    }));
                }));
            }
            exports.isGeneratorFunction = function(genFun) {
                var ctor = "function" === typeof genFun && genFun.constructor;
                return ctor ? ctor === GeneratorFunction || "GeneratorFunction" === (ctor.displayName || ctor.name) : false;
            };
            exports.mark = function(genFun) {
                if (Object.setPrototypeOf) Object.setPrototypeOf(genFun, GeneratorFunctionPrototype); else {
                    genFun.__proto__ = GeneratorFunctionPrototype;
                    define(genFun, toStringTagSymbol, "GeneratorFunction");
                }
                genFun.prototype = Object.create(Gp);
                return genFun;
            };
            exports.awrap = function(arg) {
                return {
                    __await: arg
                };
            };
            function AsyncIterator(generator, PromiseImpl) {
                function invoke(method, arg, resolve, reject) {
                    var record = tryCatch(generator[method], generator, arg);
                    if ("throw" === record.type) reject(record.arg); else {
                        var result = record.arg;
                        var value = result.value;
                        if (value && "object" === typeof value && hasOwn.call(value, "__await")) return PromiseImpl.resolve(value.__await).then((function(value) {
                            invoke("next", value, resolve, reject);
                        }), (function(err) {
                            invoke("throw", err, resolve, reject);
                        }));
                        return PromiseImpl.resolve(value).then((function(unwrapped) {
                            result.value = unwrapped;
                            resolve(result);
                        }), (function(error) {
                            return invoke("throw", error, resolve, reject);
                        }));
                    }
                }
                var previousPromise;
                function enqueue(method, arg) {
                    function callInvokeWithMethodAndArg() {
                        return new PromiseImpl((function(resolve, reject) {
                            invoke(method, arg, resolve, reject);
                        }));
                    }
                    return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();
                }
                this._invoke = enqueue;
            }
            defineIteratorMethods(AsyncIterator.prototype);
            define(AsyncIterator.prototype, asyncIteratorSymbol, (function() {
                return this;
            }));
            exports.AsyncIterator = AsyncIterator;
            exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {
                if (void 0 === PromiseImpl) PromiseImpl = Promise;
                var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl);
                return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then((function(result) {
                    return result.done ? result.value : iter.next();
                }));
            };
            function makeInvokeMethod(innerFn, self, context) {
                var state = GenStateSuspendedStart;
                return function(method, arg) {
                    if (state === GenStateExecuting) throw new Error("Generator is already running");
                    if (state === GenStateCompleted) {
                        if ("throw" === method) throw arg;
                        return doneResult();
                    }
                    context.method = method;
                    context.arg = arg;
                    while (true) {
                        var delegate = context.delegate;
                        if (delegate) {
                            var delegateResult = maybeInvokeDelegate(delegate, context);
                            if (delegateResult) {
                                if (delegateResult === ContinueSentinel) continue;
                                return delegateResult;
                            }
                        }
                        if ("next" === context.method) context.sent = context._sent = context.arg; else if ("throw" === context.method) {
                            if (state === GenStateSuspendedStart) {
                                state = GenStateCompleted;
                                throw context.arg;
                            }
                            context.dispatchException(context.arg);
                        } else if ("return" === context.method) context.abrupt("return", context.arg);
                        state = GenStateExecuting;
                        var record = tryCatch(innerFn, self, context);
                        if ("normal" === record.type) {
                            state = context.done ? GenStateCompleted : GenStateSuspendedYield;
                            if (record.arg === ContinueSentinel) continue;
                            return {
                                value: record.arg,
                                done: context.done
                            };
                        } else if ("throw" === record.type) {
                            state = GenStateCompleted;
                            context.method = "throw";
                            context.arg = record.arg;
                        }
                    }
                };
            }
            function maybeInvokeDelegate(delegate, context) {
                var method = delegate.iterator[context.method];
                if (method === undefined) {
                    context.delegate = null;
                    if ("throw" === context.method) {
                        if (delegate.iterator["return"]) {
                            context.method = "return";
                            context.arg = undefined;
                            maybeInvokeDelegate(delegate, context);
                            if ("throw" === context.method) return ContinueSentinel;
                        }
                        context.method = "throw";
                        context.arg = new TypeError("The iterator does not provide a 'throw' method");
                    }
                    return ContinueSentinel;
                }
                var record = tryCatch(method, delegate.iterator, context.arg);
                if ("throw" === record.type) {
                    context.method = "throw";
                    context.arg = record.arg;
                    context.delegate = null;
                    return ContinueSentinel;
                }
                var info = record.arg;
                if (!info) {
                    context.method = "throw";
                    context.arg = new TypeError("iterator result is not an object");
                    context.delegate = null;
                    return ContinueSentinel;
                }
                if (info.done) {
                    context[delegate.resultName] = info.value;
                    context.next = delegate.nextLoc;
                    if ("return" !== context.method) {
                        context.method = "next";
                        context.arg = undefined;
                    }
                } else return info;
                context.delegate = null;
                return ContinueSentinel;
            }
            defineIteratorMethods(Gp);
            define(Gp, toStringTagSymbol, "Generator");
            define(Gp, iteratorSymbol, (function() {
                return this;
            }));
            define(Gp, "toString", (function() {
                return "[object Generator]";
            }));
            function pushTryEntry(locs) {
                var entry = {
                    tryLoc: locs[0]
                };
                if (1 in locs) entry.catchLoc = locs[1];
                if (2 in locs) {
                    entry.finallyLoc = locs[2];
                    entry.afterLoc = locs[3];
                }
                this.tryEntries.push(entry);
            }
            function resetTryEntry(entry) {
                var record = entry.completion || {};
                record.type = "normal";
                delete record.arg;
                entry.completion = record;
            }
            function Context(tryLocsList) {
                this.tryEntries = [ {
                    tryLoc: "root"
                } ];
                tryLocsList.forEach(pushTryEntry, this);
                this.reset(true);
            }
            exports.keys = function(object) {
                var keys = [];
                for (var key in object) keys.push(key);
                keys.reverse();
                return function next() {
                    while (keys.length) {
                        var key = keys.pop();
                        if (key in object) {
                            next.value = key;
                            next.done = false;
                            return next;
                        }
                    }
                    next.done = true;
                    return next;
                };
            };
            function values(iterable) {
                if (iterable) {
                    var iteratorMethod = iterable[iteratorSymbol];
                    if (iteratorMethod) return iteratorMethod.call(iterable);
                    if ("function" === typeof iterable.next) return iterable;
                    if (!isNaN(iterable.length)) {
                        var i = -1, next = function next() {
                            while (++i < iterable.length) if (hasOwn.call(iterable, i)) {
                                next.value = iterable[i];
                                next.done = false;
                                return next;
                            }
                            next.value = undefined;
                            next.done = true;
                            return next;
                        };
                        return next.next = next;
                    }
                }
                return {
                    next: doneResult
                };
            }
            exports.values = values;
            function doneResult() {
                return {
                    value: undefined,
                    done: true
                };
            }
            Context.prototype = {
                constructor: Context,
                reset: function(skipTempReset) {
                    this.prev = 0;
                    this.next = 0;
                    this.sent = this._sent = undefined;
                    this.done = false;
                    this.delegate = null;
                    this.method = "next";
                    this.arg = undefined;
                    this.tryEntries.forEach(resetTryEntry);
                    if (!skipTempReset) for (var name in this) if ("t" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1))) this[name] = undefined;
                },
                stop: function() {
                    this.done = true;
                    var rootEntry = this.tryEntries[0];
                    var rootRecord = rootEntry.completion;
                    if ("throw" === rootRecord.type) throw rootRecord.arg;
                    return this.rval;
                },
                dispatchException: function(exception) {
                    if (this.done) throw exception;
                    var context = this;
                    function handle(loc, caught) {
                        record.type = "throw";
                        record.arg = exception;
                        context.next = loc;
                        if (caught) {
                            context.method = "next";
                            context.arg = undefined;
                        }
                        return !!caught;
                    }
                    for (var i = this.tryEntries.length - 1; i >= 0; --i) {
                        var entry = this.tryEntries[i];
                        var record = entry.completion;
                        if ("root" === entry.tryLoc) return handle("end");
                        if (entry.tryLoc <= this.prev) {
                            var hasCatch = hasOwn.call(entry, "catchLoc");
                            var hasFinally = hasOwn.call(entry, "finallyLoc");
                            if (hasCatch && hasFinally) {
                                if (this.prev < entry.catchLoc) return handle(entry.catchLoc, true); else if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc);
                            } else if (hasCatch) {
                                if (this.prev < entry.catchLoc) return handle(entry.catchLoc, true);
                            } else if (hasFinally) {
                                if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc);
                            } else throw new Error("try statement without catch or finally");
                        }
                    }
                },
                abrupt: function(type, arg) {
                    for (var i = this.tryEntries.length - 1; i >= 0; --i) {
                        var entry = this.tryEntries[i];
                        if (entry.tryLoc <= this.prev && hasOwn.call(entry, "finallyLoc") && this.prev < entry.finallyLoc) {
                            var finallyEntry = entry;
                            break;
                        }
                    }
                    if (finallyEntry && ("break" === type || "continue" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc) finallyEntry = null;
                    var record = finallyEntry ? finallyEntry.completion : {};
                    record.type = type;
                    record.arg = arg;
                    if (finallyEntry) {
                        this.method = "next";
                        this.next = finallyEntry.finallyLoc;
                        return ContinueSentinel;
                    }
                    return this.complete(record);
                },
                complete: function(record, afterLoc) {
                    if ("throw" === record.type) throw record.arg;
                    if ("break" === record.type || "continue" === record.type) this.next = record.arg; else if ("return" === record.type) {
                        this.rval = this.arg = record.arg;
                        this.method = "return";
                        this.next = "end";
                    } else if ("normal" === record.type && afterLoc) this.next = afterLoc;
                    return ContinueSentinel;
                },
                finish: function(finallyLoc) {
                    for (var i = this.tryEntries.length - 1; i >= 0; --i) {
                        var entry = this.tryEntries[i];
                        if (entry.finallyLoc === finallyLoc) {
                            this.complete(entry.completion, entry.afterLoc);
                            resetTryEntry(entry);
                            return ContinueSentinel;
                        }
                    }
                },
                catch: function(tryLoc) {
                    for (var i = this.tryEntries.length - 1; i >= 0; --i) {
                        var entry = this.tryEntries[i];
                        if (entry.tryLoc === tryLoc) {
                            var record = entry.completion;
                            if ("throw" === record.type) {
                                var thrown = record.arg;
                                resetTryEntry(entry);
                            }
                            return thrown;
                        }
                    }
                    throw new Error("illegal catch attempt");
                },
                delegateYield: function(iterable, resultName, nextLoc) {
                    this.delegate = {
                        iterator: values(iterable),
                        resultName,
                        nextLoc
                    };
                    if ("next" === this.method) this.arg = undefined;
                    return ContinueSentinel;
                }
            };
            return exports;
        }(true ? module.exports : 0);
        try {
            regeneratorRuntime = runtime;
        } catch (accidentalStrictMode) {
            if ("object" === typeof globalThis) globalThis.regeneratorRuntime = runtime; else Function("r", "regeneratorRuntime = r")(runtime);
        }
    },
    "./node_modules/split-on-first/index.js": module => {
        "use strict";
        module.exports = (string, separator) => {
            if (!("string" === typeof string && "string" === typeof separator)) throw new TypeError("Expected the arguments to be of type `string`");
            if ("" === separator) return [ string ];
            const separatorIndex = string.indexOf(separator);
            if (-1 === separatorIndex) return [ string ];
            return [ string.slice(0, separatorIndex), string.slice(separatorIndex + separator.length) ];
        };
    },
    "./node_modules/ssr-window/ssr-window.esm.js": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
        "use strict";
        __webpack_require__.r(__webpack_exports__);
        __webpack_require__.d(__webpack_exports__, {
            extend: () => extend,
            getDocument: () => getDocument,
            getWindow: () => getWindow,
            ssrDocument: () => ssrDocument,
            ssrWindow: () => ssrWindow
        });
        function isObject(obj) {
            return null !== obj && "object" === typeof obj && "constructor" in obj && obj.constructor === Object;
        }
        function extend(target, src) {
            if (void 0 === target) target = {};
            if (void 0 === src) src = {};
            Object.keys(src).forEach((function(key) {
                if ("undefined" === typeof target[key]) target[key] = src[key]; else if (isObject(src[key]) && isObject(target[key]) && Object.keys(src[key]).length > 0) extend(target[key], src[key]);
            }));
        }
        var ssrDocument = {
            body: {},
            addEventListener: function() {},
            removeEventListener: function() {},
            activeElement: {
                blur: function() {},
                nodeName: ""
            },
            querySelector: function() {
                return null;
            },
            querySelectorAll: function() {
                return [];
            },
            getElementById: function() {
                return null;
            },
            createEvent: function() {
                return {
                    initEvent: function() {}
                };
            },
            createElement: function() {
                return {
                    children: [],
                    childNodes: [],
                    style: {},
                    setAttribute: function() {},
                    getElementsByTagName: function() {
                        return [];
                    }
                };
            },
            createElementNS: function() {
                return {};
            },
            importNode: function() {
                return null;
            },
            location: {
                hash: "",
                host: "",
                hostname: "",
                href: "",
                origin: "",
                pathname: "",
                protocol: "",
                search: ""
            }
        };
        function getDocument() {
            var doc = "undefined" !== typeof document ? document : {};
            extend(doc, ssrDocument);
            return doc;
        }
        var ssrWindow = {
            document: ssrDocument,
            navigator: {
                userAgent: ""
            },
            location: {
                hash: "",
                host: "",
                hostname: "",
                href: "",
                origin: "",
                pathname: "",
                protocol: "",
                search: ""
            },
            history: {
                replaceState: function() {},
                pushState: function() {},
                go: function() {},
                back: function() {}
            },
            CustomEvent: function() {
                return this;
            },
            addEventListener: function() {},
            removeEventListener: function() {},
            getComputedStyle: function() {
                return {
                    getPropertyValue: function() {
                        return "";
                    }
                };
            },
            Image: function() {},
            Date: function() {},
            screen: {},
            setTimeout: function() {},
            clearTimeout: function() {},
            matchMedia: function() {
                return {};
            },
            requestAnimationFrame: function(callback) {
                if ("undefined" === typeof setTimeout) {
                    callback();
                    return null;
                }
                return setTimeout(callback, 0);
            },
            cancelAnimationFrame: function(id) {
                if ("undefined" === typeof setTimeout) return;
                clearTimeout(id);
            }
        };
        function getWindow() {
            var win = "undefined" !== typeof window ? window : {};
            extend(win, ssrWindow);
            return win;
        }
    },
    "./node_modules/strict-uri-encode/index.js": module => {
        "use strict";
        module.exports = str => encodeURIComponent(str).replace(/[!'()*]/g, (x => `%${x.charCodeAt(0).toString(16).toUpperCase()}`));
    },
    "./node_modules/swiper/esm/components/core/core-class.js": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
        "use strict";
        __webpack_require__.d(__webpack_exports__, {
            default: () => core_class
        });
        var ssr_window_esm = __webpack_require__("./node_modules/ssr-window/ssr-window.esm.js");
        var dom = __webpack_require__("./node_modules/swiper/esm/utils/dom.js");
        var utils = __webpack_require__("./node_modules/swiper/esm/utils/utils.js");
        var support;
        function calcSupport() {
            var window = (0, ssr_window_esm.getWindow)();
            var document = (0, ssr_window_esm.getDocument)();
            return {
                touch: !!("ontouchstart" in window || window.DocumentTouch && document instanceof window.DocumentTouch),
                pointerEvents: !!window.PointerEvent && "maxTouchPoints" in window.navigator && window.navigator.maxTouchPoints >= 0,
                observer: function() {
                    return "MutationObserver" in window || "WebkitMutationObserver" in window;
                }(),
                passiveListener: function() {
                    var supportsPassive = false;
                    try {
                        var opts = Object.defineProperty({}, "passive", {
                            get: function() {
                                supportsPassive = true;
                            }
                        });
                        window.addEventListener("testPassiveListener", null, opts);
                    } catch (e) {}
                    return supportsPassive;
                }(),
                gestures: function() {
                    return "ongesturestart" in window;
                }()
            };
        }
        function getSupport() {
            if (!support) support = calcSupport();
            return support;
        }
        var device;
        function calcDevice(_temp) {
            var _ref = void 0 === _temp ? {} : _temp, userAgent = _ref.userAgent;
            var support = getSupport();
            var window = (0, ssr_window_esm.getWindow)();
            var platform = window.navigator.platform;
            var ua = userAgent || window.navigator.userAgent;
            var device = {
                ios: false,
                android: false
            };
            var screenWidth = window.screen.width;
            var screenHeight = window.screen.height;
            var android = ua.match(/(Android);?[\s\/]+([\d.]+)?/);
            var ipad = ua.match(/(iPad).*OS\s([\d_]+)/);
            var ipod = ua.match(/(iPod)(.*OS\s([\d_]+))?/);
            var iphone = !ipad && ua.match(/(iPhone\sOS|iOS)\s([\d_]+)/);
            var windows = "Win32" === platform;
            var macos = "MacIntel" === platform;
            var iPadScreens = [ "1024x1366", "1366x1024", "834x1194", "1194x834", "834x1112", "1112x834", "768x1024", "1024x768", "820x1180", "1180x820", "810x1080", "1080x810" ];
            if (!ipad && macos && support.touch && iPadScreens.indexOf(screenWidth + "x" + screenHeight) >= 0) {
                ipad = ua.match(/(Version)\/([\d.]+)/);
                if (!ipad) ipad = [ 0, 1, "13_0_0" ];
                macos = false;
            }
            if (android && !windows) {
                device.os = "android";
                device.android = true;
            }
            if (ipad || iphone || ipod) {
                device.os = "ios";
                device.ios = true;
            }
            return device;
        }
        function getDevice(overrides) {
            if (void 0 === overrides) overrides = {};
            if (!device) device = calcDevice(overrides);
            return device;
        }
        var browser;
        function calcBrowser() {
            var window = (0, ssr_window_esm.getWindow)();
            function isSafari() {
                var ua = window.navigator.userAgent.toLowerCase();
                return ua.indexOf("safari") >= 0 && ua.indexOf("chrome") < 0 && ua.indexOf("android") < 0;
            }
            return {
                isEdge: !!window.navigator.userAgent.match(/Edge/g),
                isSafari: isSafari(),
                isWebView: /(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/i.test(window.navigator.userAgent)
            };
        }
        function getBrowser() {
            if (!browser) browser = calcBrowser();
            return browser;
        }
        var supportsResizeObserver = function() {
            var window = (0, ssr_window_esm.getWindow)();
            return "undefined" !== typeof window.ResizeObserver;
        };
        const resize = {
            name: "resize",
            create: function() {
                var swiper = this;
                (0, utils.extend)(swiper, {
                    resize: {
                        observer: null,
                        createObserver: function() {
                            if (!swiper || swiper.destroyed || !swiper.initialized) return;
                            swiper.resize.observer = new ResizeObserver((function(entries) {
                                var width = swiper.width, height = swiper.height;
                                var newWidth = width;
                                var newHeight = height;
                                entries.forEach((function(_ref) {
                                    var contentBoxSize = _ref.contentBoxSize, contentRect = _ref.contentRect, target = _ref.target;
                                    if (target && target !== swiper.el) return;
                                    newWidth = contentRect ? contentRect.width : (contentBoxSize[0] || contentBoxSize).inlineSize;
                                    newHeight = contentRect ? contentRect.height : (contentBoxSize[0] || contentBoxSize).blockSize;
                                }));
                                if (newWidth !== width || newHeight !== height) swiper.resize.resizeHandler();
                            }));
                            swiper.resize.observer.observe(swiper.el);
                        },
                        removeObserver: function() {
                            if (swiper.resize.observer && swiper.resize.observer.unobserve && swiper.el) {
                                swiper.resize.observer.unobserve(swiper.el);
                                swiper.resize.observer = null;
                            }
                        },
                        resizeHandler: function() {
                            if (!swiper || swiper.destroyed || !swiper.initialized) return;
                            swiper.emit("beforeResize");
                            swiper.emit("resize");
                        },
                        orientationChangeHandler: function() {
                            if (!swiper || swiper.destroyed || !swiper.initialized) return;
                            swiper.emit("orientationchange");
                        }
                    }
                });
            },
            on: {
                init: function(swiper) {
                    var window = (0, ssr_window_esm.getWindow)();
                    if (swiper.params.resizeObserver && supportsResizeObserver()) {
                        swiper.resize.createObserver();
                        return;
                    }
                    window.addEventListener("resize", swiper.resize.resizeHandler);
                    window.addEventListener("orientationchange", swiper.resize.orientationChangeHandler);
                },
                destroy: function(swiper) {
                    var window = (0, ssr_window_esm.getWindow)();
                    swiper.resize.removeObserver();
                    window.removeEventListener("resize", swiper.resize.resizeHandler);
                    window.removeEventListener("orientationchange", swiper.resize.orientationChangeHandler);
                }
            }
        };
        function _extends() {
            _extends = Object.assign || function(target) {
                for (var i = 1; i < arguments.length; i++) {
                    var source = arguments[i];
                    for (var key in source) if (Object.prototype.hasOwnProperty.call(source, key)) target[key] = source[key];
                }
                return target;
            };
            return _extends.apply(this, arguments);
        }
        var Observer = {
            attach: function(target, options) {
                if (void 0 === options) options = {};
                var window = (0, ssr_window_esm.getWindow)();
                var swiper = this;
                var ObserverFunc = window.MutationObserver || window.WebkitMutationObserver;
                var observer = new ObserverFunc((function(mutations) {
                    if (1 === mutations.length) {
                        swiper.emit("observerUpdate", mutations[0]);
                        return;
                    }
                    var observerUpdate = function() {
                        swiper.emit("observerUpdate", mutations[0]);
                    };
                    if (window.requestAnimationFrame) window.requestAnimationFrame(observerUpdate); else window.setTimeout(observerUpdate, 0);
                }));
                observer.observe(target, {
                    attributes: "undefined" === typeof options.attributes ? true : options.attributes,
                    childList: "undefined" === typeof options.childList ? true : options.childList,
                    characterData: "undefined" === typeof options.characterData ? true : options.characterData
                });
                swiper.observer.observers.push(observer);
            },
            init: function() {
                var swiper = this;
                if (!swiper.support.observer || !swiper.params.observer) return;
                if (swiper.params.observeParents) {
                    var containerParents = swiper.$el.parents();
                    for (var i = 0; i < containerParents.length; i += 1) swiper.observer.attach(containerParents[i]);
                }
                swiper.observer.attach(swiper.$el[0], {
                    childList: swiper.params.observeSlideChildren
                });
                swiper.observer.attach(swiper.$wrapperEl[0], {
                    attributes: false
                });
            },
            destroy: function() {
                var swiper = this;
                swiper.observer.observers.forEach((function(observer) {
                    observer.disconnect();
                }));
                swiper.observer.observers = [];
            }
        };
        const observer = {
            name: "observer",
            params: {
                observer: false,
                observeParents: false,
                observeSlideChildren: false
            },
            create: function() {
                var swiper = this;
                (0, utils.bindModuleMethods)(swiper, {
                    observer: _extends({}, Observer, {
                        observers: []
                    })
                });
            },
            on: {
                init: function(swiper) {
                    swiper.observer.init();
                },
                destroy: function(swiper) {
                    swiper.observer.destroy();
                }
            }
        };
        const modular = {
            useParams: function(instanceParams) {
                var instance = this;
                if (!instance.modules) return;
                Object.keys(instance.modules).forEach((function(moduleName) {
                    var module = instance.modules[moduleName];
                    if (module.params) (0, utils.extend)(instanceParams, module.params);
                }));
            },
            useModules: function(modulesParams) {
                if (void 0 === modulesParams) modulesParams = {};
                var instance = this;
                if (!instance.modules) return;
                Object.keys(instance.modules).forEach((function(moduleName) {
                    var module = instance.modules[moduleName];
                    var moduleParams = modulesParams[moduleName] || {};
                    if (module.on && instance.on) Object.keys(module.on).forEach((function(moduleEventName) {
                        instance.on(moduleEventName, module.on[moduleEventName]);
                    }));
                    if (module.create) module.create.bind(instance)(moduleParams);
                }));
            }
        };
        const events_emitter = {
            on: function(events, handler, priority) {
                var self = this;
                if ("function" !== typeof handler) return self;
                var method = priority ? "unshift" : "push";
                events.split(" ").forEach((function(event) {
                    if (!self.eventsListeners[event]) self.eventsListeners[event] = [];
                    self.eventsListeners[event][method](handler);
                }));
                return self;
            },
            once: function(events, handler, priority) {
                var self = this;
                if ("function" !== typeof handler) return self;
                function onceHandler() {
                    self.off(events, onceHandler);
                    if (onceHandler.__emitterProxy) delete onceHandler.__emitterProxy;
                    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) args[_key] = arguments[_key];
                    handler.apply(self, args);
                }
                onceHandler.__emitterProxy = handler;
                return self.on(events, onceHandler, priority);
            },
            onAny: function(handler, priority) {
                var self = this;
                if ("function" !== typeof handler) return self;
                var method = priority ? "unshift" : "push";
                if (self.eventsAnyListeners.indexOf(handler) < 0) self.eventsAnyListeners[method](handler);
                return self;
            },
            offAny: function(handler) {
                var self = this;
                if (!self.eventsAnyListeners) return self;
                var index = self.eventsAnyListeners.indexOf(handler);
                if (index >= 0) self.eventsAnyListeners.splice(index, 1);
                return self;
            },
            off: function(events, handler) {
                var self = this;
                if (!self.eventsListeners) return self;
                events.split(" ").forEach((function(event) {
                    if ("undefined" === typeof handler) self.eventsListeners[event] = []; else if (self.eventsListeners[event]) self.eventsListeners[event].forEach((function(eventHandler, index) {
                        if (eventHandler === handler || eventHandler.__emitterProxy && eventHandler.__emitterProxy === handler) self.eventsListeners[event].splice(index, 1);
                    }));
                }));
                return self;
            },
            emit: function() {
                var self = this;
                if (!self.eventsListeners) return self;
                var events;
                var data;
                var context;
                for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) args[_key2] = arguments[_key2];
                if ("string" === typeof args[0] || Array.isArray(args[0])) {
                    events = args[0];
                    data = args.slice(1, args.length);
                    context = self;
                } else {
                    events = args[0].events;
                    data = args[0].data;
                    context = args[0].context || self;
                }
                data.unshift(context);
                var eventsArray = Array.isArray(events) ? events : events.split(" ");
                eventsArray.forEach((function(event) {
                    if (self.eventsAnyListeners && self.eventsAnyListeners.length) self.eventsAnyListeners.forEach((function(eventHandler) {
                        eventHandler.apply(context, [ event ].concat(data));
                    }));
                    if (self.eventsListeners && self.eventsListeners[event]) self.eventsListeners[event].forEach((function(eventHandler) {
                        eventHandler.apply(context, data);
                    }));
                }));
                return self;
            }
        };
        function updateSize() {
            var swiper = this;
            var width;
            var height;
            var $el = swiper.$el;
            if ("undefined" !== typeof swiper.params.width && null !== swiper.params.width) width = swiper.params.width; else width = $el[0].clientWidth;
            if ("undefined" !== typeof swiper.params.height && null !== swiper.params.height) height = swiper.params.height; else height = $el[0].clientHeight;
            if (0 === width && swiper.isHorizontal() || 0 === height && swiper.isVertical()) return;
            width = width - parseInt($el.css("padding-left") || 0, 10) - parseInt($el.css("padding-right") || 0, 10);
            height = height - parseInt($el.css("padding-top") || 0, 10) - parseInt($el.css("padding-bottom") || 0, 10);
            if (Number.isNaN(width)) width = 0;
            if (Number.isNaN(height)) height = 0;
            (0, utils.extend)(swiper, {
                width,
                height,
                size: swiper.isHorizontal() ? width : height
            });
        }
        function updateSlides() {
            var swiper = this;
            function getDirectionLabel(property) {
                if (swiper.isHorizontal()) return property;
                return {
                    width: "height",
                    "margin-top": "margin-left",
                    "margin-bottom ": "margin-right",
                    "margin-left": "margin-top",
                    "margin-right": "margin-bottom",
                    "padding-left": "padding-top",
                    "padding-right": "padding-bottom",
                    marginRight: "marginBottom"
                }[property];
            }
            function getDirectionPropertyValue(node, label) {
                return parseFloat(node.getPropertyValue(getDirectionLabel(label)) || 0);
            }
            var params = swiper.params;
            var $wrapperEl = swiper.$wrapperEl, swiperSize = swiper.size, rtl = swiper.rtlTranslate, wrongRTL = swiper.wrongRTL;
            var isVirtual = swiper.virtual && params.virtual.enabled;
            var previousSlidesLength = isVirtual ? swiper.virtual.slides.length : swiper.slides.length;
            var slides = $wrapperEl.children("." + swiper.params.slideClass);
            var slidesLength = isVirtual ? swiper.virtual.slides.length : slides.length;
            var snapGrid = [];
            var slidesGrid = [];
            var slidesSizesGrid = [];
            var offsetBefore = params.slidesOffsetBefore;
            if ("function" === typeof offsetBefore) offsetBefore = params.slidesOffsetBefore.call(swiper);
            var offsetAfter = params.slidesOffsetAfter;
            if ("function" === typeof offsetAfter) offsetAfter = params.slidesOffsetAfter.call(swiper);
            var previousSnapGridLength = swiper.snapGrid.length;
            var previousSlidesGridLength = swiper.slidesGrid.length;
            var spaceBetween = params.spaceBetween;
            var slidePosition = -offsetBefore;
            var prevSlideSize = 0;
            var index = 0;
            if ("undefined" === typeof swiperSize) return;
            if ("string" === typeof spaceBetween && spaceBetween.indexOf("%") >= 0) spaceBetween = parseFloat(spaceBetween.replace("%", "")) / 100 * swiperSize;
            swiper.virtualSize = -spaceBetween;
            if (rtl) slides.css({
                marginLeft: "",
                marginBottom: "",
                marginTop: ""
            }); else slides.css({
                marginRight: "",
                marginBottom: "",
                marginTop: ""
            });
            var slidesNumberEvenToRows;
            if (params.slidesPerColumn > 1) {
                if (Math.floor(slidesLength / params.slidesPerColumn) === slidesLength / swiper.params.slidesPerColumn) slidesNumberEvenToRows = slidesLength; else slidesNumberEvenToRows = Math.ceil(slidesLength / params.slidesPerColumn) * params.slidesPerColumn;
                if ("auto" !== params.slidesPerView && "row" === params.slidesPerColumnFill) slidesNumberEvenToRows = Math.max(slidesNumberEvenToRows, params.slidesPerView * params.slidesPerColumn);
            }
            var slideSize;
            var slidesPerColumn = params.slidesPerColumn;
            var slidesPerRow = slidesNumberEvenToRows / slidesPerColumn;
            var numFullColumns = Math.floor(slidesLength / params.slidesPerColumn);
            for (var i = 0; i < slidesLength; i += 1) {
                slideSize = 0;
                var slide = slides.eq(i);
                if (params.slidesPerColumn > 1) {
                    var newSlideOrderIndex = void 0;
                    var column = void 0;
                    var row = void 0;
                    if ("row" === params.slidesPerColumnFill && params.slidesPerGroup > 1) {
                        var groupIndex = Math.floor(i / (params.slidesPerGroup * params.slidesPerColumn));
                        var slideIndexInGroup = i - params.slidesPerColumn * params.slidesPerGroup * groupIndex;
                        var columnsInGroup = 0 === groupIndex ? params.slidesPerGroup : Math.min(Math.ceil((slidesLength - groupIndex * slidesPerColumn * params.slidesPerGroup) / slidesPerColumn), params.slidesPerGroup);
                        row = Math.floor(slideIndexInGroup / columnsInGroup);
                        column = slideIndexInGroup - row * columnsInGroup + groupIndex * params.slidesPerGroup;
                        newSlideOrderIndex = column + row * slidesNumberEvenToRows / slidesPerColumn;
                        slide.css({
                            "-webkit-box-ordinal-group": newSlideOrderIndex,
                            "-moz-box-ordinal-group": newSlideOrderIndex,
                            "-ms-flex-order": newSlideOrderIndex,
                            "-webkit-order": newSlideOrderIndex,
                            order: newSlideOrderIndex
                        });
                    } else if ("column" === params.slidesPerColumnFill) {
                        column = Math.floor(i / slidesPerColumn);
                        row = i - column * slidesPerColumn;
                        if (column > numFullColumns || column === numFullColumns && row === slidesPerColumn - 1) {
                            row += 1;
                            if (row >= slidesPerColumn) {
                                row = 0;
                                column += 1;
                            }
                        }
                    } else {
                        row = Math.floor(i / slidesPerRow);
                        column = i - row * slidesPerRow;
                    }
                    slide.css(getDirectionLabel("margin-top"), 0 !== row ? params.spaceBetween && params.spaceBetween + "px" : "");
                }
                if ("none" === slide.css("display")) continue;
                if ("auto" === params.slidesPerView) {
                    var slideStyles = getComputedStyle(slide[0]);
                    var currentTransform = slide[0].style.transform;
                    var currentWebKitTransform = slide[0].style.webkitTransform;
                    if (currentTransform) slide[0].style.transform = "none";
                    if (currentWebKitTransform) slide[0].style.webkitTransform = "none";
                    if (params.roundLengths) slideSize = swiper.isHorizontal() ? slide.outerWidth(true) : slide.outerHeight(true); else {
                        var width = getDirectionPropertyValue(slideStyles, "width");
                        var paddingLeft = getDirectionPropertyValue(slideStyles, "padding-left");
                        var paddingRight = getDirectionPropertyValue(slideStyles, "padding-right");
                        var marginLeft = getDirectionPropertyValue(slideStyles, "margin-left");
                        var marginRight = getDirectionPropertyValue(slideStyles, "margin-right");
                        var boxSizing = slideStyles.getPropertyValue("box-sizing");
                        if (boxSizing && "border-box" === boxSizing) slideSize = width + marginLeft + marginRight; else {
                            var _slide$ = slide[0], clientWidth = _slide$.clientWidth, offsetWidth = _slide$.offsetWidth;
                            slideSize = width + paddingLeft + paddingRight + marginLeft + marginRight + (offsetWidth - clientWidth);
                        }
                    }
                    if (currentTransform) slide[0].style.transform = currentTransform;
                    if (currentWebKitTransform) slide[0].style.webkitTransform = currentWebKitTransform;
                    if (params.roundLengths) slideSize = Math.floor(slideSize);
                } else {
                    slideSize = (swiperSize - (params.slidesPerView - 1) * spaceBetween) / params.slidesPerView;
                    if (params.roundLengths) slideSize = Math.floor(slideSize);
                    if (slides[i]) slides[i].style[getDirectionLabel("width")] = slideSize + "px";
                }
                if (slides[i]) slides[i].swiperSlideSize = slideSize;
                slidesSizesGrid.push(slideSize);
                if (params.centeredSlides) {
                    slidePosition = slidePosition + slideSize / 2 + prevSlideSize / 2 + spaceBetween;
                    if (0 === prevSlideSize && 0 !== i) slidePosition = slidePosition - swiperSize / 2 - spaceBetween;
                    if (0 === i) slidePosition = slidePosition - swiperSize / 2 - spaceBetween;
                    if (Math.abs(slidePosition) < 1 / 1e3) slidePosition = 0;
                    if (params.roundLengths) slidePosition = Math.floor(slidePosition);
                    if (index % params.slidesPerGroup === 0) snapGrid.push(slidePosition);
                    slidesGrid.push(slidePosition);
                } else {
                    if (params.roundLengths) slidePosition = Math.floor(slidePosition);
                    if ((index - Math.min(swiper.params.slidesPerGroupSkip, index)) % swiper.params.slidesPerGroup === 0) snapGrid.push(slidePosition);
                    slidesGrid.push(slidePosition);
                    slidePosition = slidePosition + slideSize + spaceBetween;
                }
                swiper.virtualSize += slideSize + spaceBetween;
                prevSlideSize = slideSize;
                index += 1;
            }
            swiper.virtualSize = Math.max(swiper.virtualSize, swiperSize) + offsetAfter;
            var newSlidesGrid;
            if (rtl && wrongRTL && ("slide" === params.effect || "coverflow" === params.effect)) $wrapperEl.css({
                width: swiper.virtualSize + params.spaceBetween + "px"
            });
            if (params.setWrapperSize) {
                var _$wrapperEl$css;
                $wrapperEl.css((_$wrapperEl$css = {}, _$wrapperEl$css[getDirectionLabel("width")] = swiper.virtualSize + params.spaceBetween + "px", 
                _$wrapperEl$css));
            }
            if (params.slidesPerColumn > 1) {
                var _$wrapperEl$css2;
                swiper.virtualSize = (slideSize + params.spaceBetween) * slidesNumberEvenToRows;
                swiper.virtualSize = Math.ceil(swiper.virtualSize / params.slidesPerColumn) - params.spaceBetween;
                $wrapperEl.css((_$wrapperEl$css2 = {}, _$wrapperEl$css2[getDirectionLabel("width")] = swiper.virtualSize + params.spaceBetween + "px", 
                _$wrapperEl$css2));
                if (params.centeredSlides) {
                    newSlidesGrid = [];
                    for (var _i = 0; _i < snapGrid.length; _i += 1) {
                        var slidesGridItem = snapGrid[_i];
                        if (params.roundLengths) slidesGridItem = Math.floor(slidesGridItem);
                        if (snapGrid[_i] < swiper.virtualSize + snapGrid[0]) newSlidesGrid.push(slidesGridItem);
                    }
                    snapGrid = newSlidesGrid;
                }
            }
            if (!params.centeredSlides) {
                newSlidesGrid = [];
                for (var _i2 = 0; _i2 < snapGrid.length; _i2 += 1) {
                    var _slidesGridItem = snapGrid[_i2];
                    if (params.roundLengths) _slidesGridItem = Math.floor(_slidesGridItem);
                    if (snapGrid[_i2] <= swiper.virtualSize - swiperSize) newSlidesGrid.push(_slidesGridItem);
                }
                snapGrid = newSlidesGrid;
                if (Math.floor(swiper.virtualSize - swiperSize) - Math.floor(snapGrid[snapGrid.length - 1]) > 1) snapGrid.push(swiper.virtualSize - swiperSize);
            }
            if (0 === snapGrid.length) snapGrid = [ 0 ];
            if (0 !== params.spaceBetween) {
                var _slides$filter$css;
                var key = swiper.isHorizontal() && rtl ? "marginLeft" : getDirectionLabel("marginRight");
                slides.filter((function(_, slideIndex) {
                    if (!params.cssMode) return true;
                    if (slideIndex === slides.length - 1) return false;
                    return true;
                })).css((_slides$filter$css = {}, _slides$filter$css[key] = spaceBetween + "px", 
                _slides$filter$css));
            }
            if (params.centeredSlides && params.centeredSlidesBounds) {
                var allSlidesSize = 0;
                slidesSizesGrid.forEach((function(slideSizeValue) {
                    allSlidesSize += slideSizeValue + (params.spaceBetween ? params.spaceBetween : 0);
                }));
                allSlidesSize -= params.spaceBetween;
                var maxSnap = allSlidesSize - swiperSize;
                snapGrid = snapGrid.map((function(snap) {
                    if (snap < 0) return -offsetBefore;
                    if (snap > maxSnap) return maxSnap + offsetAfter;
                    return snap;
                }));
            }
            if (params.centerInsufficientSlides) {
                var _allSlidesSize = 0;
                slidesSizesGrid.forEach((function(slideSizeValue) {
                    _allSlidesSize += slideSizeValue + (params.spaceBetween ? params.spaceBetween : 0);
                }));
                _allSlidesSize -= params.spaceBetween;
                if (_allSlidesSize < swiperSize) {
                    var allSlidesOffset = (swiperSize - _allSlidesSize) / 2;
                    snapGrid.forEach((function(snap, snapIndex) {
                        snapGrid[snapIndex] = snap - allSlidesOffset;
                    }));
                    slidesGrid.forEach((function(snap, snapIndex) {
                        slidesGrid[snapIndex] = snap + allSlidesOffset;
                    }));
                }
            }
            (0, utils.extend)(swiper, {
                slides,
                snapGrid,
                slidesGrid,
                slidesSizesGrid
            });
            if (slidesLength !== previousSlidesLength) swiper.emit("slidesLengthChange");
            if (snapGrid.length !== previousSnapGridLength) {
                if (swiper.params.watchOverflow) swiper.checkOverflow();
                swiper.emit("snapGridLengthChange");
            }
            if (slidesGrid.length !== previousSlidesGridLength) swiper.emit("slidesGridLengthChange");
            if (params.watchSlidesProgress || params.watchSlidesVisibility) swiper.updateSlidesOffset();
        }
        function updateAutoHeight(speed) {
            var swiper = this;
            var activeSlides = [];
            var isVirtual = swiper.virtual && swiper.params.virtual.enabled;
            var newHeight = 0;
            var i;
            if ("number" === typeof speed) swiper.setTransition(speed); else if (true === speed) swiper.setTransition(swiper.params.speed);
            var getSlideByIndex = function(index) {
                if (isVirtual) return swiper.slides.filter((function(el) {
                    return parseInt(el.getAttribute("data-swiper-slide-index"), 10) === index;
                }))[0];
                return swiper.slides.eq(index)[0];
            };
            if ("auto" !== swiper.params.slidesPerView && swiper.params.slidesPerView > 1) if (swiper.params.centeredSlides) swiper.visibleSlides.each((function(slide) {
                activeSlides.push(slide);
            })); else for (i = 0; i < Math.ceil(swiper.params.slidesPerView); i += 1) {
                var index = swiper.activeIndex + i;
                if (index > swiper.slides.length && !isVirtual) break;
                activeSlides.push(getSlideByIndex(index));
            } else activeSlides.push(getSlideByIndex(swiper.activeIndex));
            for (i = 0; i < activeSlides.length; i += 1) if ("undefined" !== typeof activeSlides[i]) {
                var height = activeSlides[i].offsetHeight;
                newHeight = height > newHeight ? height : newHeight;
            }
            if (newHeight) swiper.$wrapperEl.css("height", newHeight + "px");
        }
        function updateSlidesOffset() {
            var swiper = this;
            var slides = swiper.slides;
            for (var i = 0; i < slides.length; i += 1) slides[i].swiperSlideOffset = swiper.isHorizontal() ? slides[i].offsetLeft : slides[i].offsetTop;
        }
        function updateSlidesProgress(translate) {
            if (void 0 === translate) translate = this && this.translate || 0;
            var swiper = this;
            var params = swiper.params;
            var slides = swiper.slides, rtl = swiper.rtlTranslate;
            if (0 === slides.length) return;
            if ("undefined" === typeof slides[0].swiperSlideOffset) swiper.updateSlidesOffset();
            var offsetCenter = -translate;
            if (rtl) offsetCenter = translate;
            slides.removeClass(params.slideVisibleClass);
            swiper.visibleSlidesIndexes = [];
            swiper.visibleSlides = [];
            for (var i = 0; i < slides.length; i += 1) {
                var slide = slides[i];
                var slideProgress = (offsetCenter + (params.centeredSlides ? swiper.minTranslate() : 0) - slide.swiperSlideOffset) / (slide.swiperSlideSize + params.spaceBetween);
                if (params.watchSlidesVisibility || params.centeredSlides && params.autoHeight) {
                    var slideBefore = -(offsetCenter - slide.swiperSlideOffset);
                    var slideAfter = slideBefore + swiper.slidesSizesGrid[i];
                    var isVisible = slideBefore >= 0 && slideBefore < swiper.size - 1 || slideAfter > 1 && slideAfter <= swiper.size || slideBefore <= 0 && slideAfter >= swiper.size;
                    if (isVisible) {
                        swiper.visibleSlides.push(slide);
                        swiper.visibleSlidesIndexes.push(i);
                        slides.eq(i).addClass(params.slideVisibleClass);
                    }
                }
                slide.progress = rtl ? -slideProgress : slideProgress;
            }
            swiper.visibleSlides = (0, dom["default"])(swiper.visibleSlides);
        }
        function updateProgress(translate) {
            var swiper = this;
            if ("undefined" === typeof translate) {
                var multiplier = swiper.rtlTranslate ? -1 : 1;
                translate = swiper && swiper.translate && swiper.translate * multiplier || 0;
            }
            var params = swiper.params;
            var translatesDiff = swiper.maxTranslate() - swiper.minTranslate();
            var progress = swiper.progress, isBeginning = swiper.isBeginning, isEnd = swiper.isEnd;
            var wasBeginning = isBeginning;
            var wasEnd = isEnd;
            if (0 === translatesDiff) {
                progress = 0;
                isBeginning = true;
                isEnd = true;
            } else {
                progress = (translate - swiper.minTranslate()) / translatesDiff;
                isBeginning = progress <= 0;
                isEnd = progress >= 1;
            }
            (0, utils.extend)(swiper, {
                progress,
                isBeginning,
                isEnd
            });
            if (params.watchSlidesProgress || params.watchSlidesVisibility || params.centeredSlides && params.autoHeight) swiper.updateSlidesProgress(translate);
            if (isBeginning && !wasBeginning) swiper.emit("reachBeginning toEdge");
            if (isEnd && !wasEnd) swiper.emit("reachEnd toEdge");
            if (wasBeginning && !isBeginning || wasEnd && !isEnd) swiper.emit("fromEdge");
            swiper.emit("progress", progress);
        }
        function updateSlidesClasses() {
            var swiper = this;
            var slides = swiper.slides, params = swiper.params, $wrapperEl = swiper.$wrapperEl, activeIndex = swiper.activeIndex, realIndex = swiper.realIndex;
            var isVirtual = swiper.virtual && params.virtual.enabled;
            slides.removeClass(params.slideActiveClass + " " + params.slideNextClass + " " + params.slidePrevClass + " " + params.slideDuplicateActiveClass + " " + params.slideDuplicateNextClass + " " + params.slideDuplicatePrevClass);
            var activeSlide;
            if (isVirtual) activeSlide = swiper.$wrapperEl.find("." + params.slideClass + '[data-swiper-slide-index="' + activeIndex + '"]'); else activeSlide = slides.eq(activeIndex);
            activeSlide.addClass(params.slideActiveClass);
            if (params.loop) if (activeSlide.hasClass(params.slideDuplicateClass)) $wrapperEl.children("." + params.slideClass + ":not(." + params.slideDuplicateClass + ')[data-swiper-slide-index="' + realIndex + '"]').addClass(params.slideDuplicateActiveClass); else $wrapperEl.children("." + params.slideClass + "." + params.slideDuplicateClass + '[data-swiper-slide-index="' + realIndex + '"]').addClass(params.slideDuplicateActiveClass);
            var nextSlide = activeSlide.nextAll("." + params.slideClass).eq(0).addClass(params.slideNextClass);
            if (params.loop && 0 === nextSlide.length) {
                nextSlide = slides.eq(0);
                nextSlide.addClass(params.slideNextClass);
            }
            var prevSlide = activeSlide.prevAll("." + params.slideClass).eq(0).addClass(params.slidePrevClass);
            if (params.loop && 0 === prevSlide.length) {
                prevSlide = slides.eq(-1);
                prevSlide.addClass(params.slidePrevClass);
            }
            if (params.loop) {
                if (nextSlide.hasClass(params.slideDuplicateClass)) $wrapperEl.children("." + params.slideClass + ":not(." + params.slideDuplicateClass + ')[data-swiper-slide-index="' + nextSlide.attr("data-swiper-slide-index") + '"]').addClass(params.slideDuplicateNextClass); else $wrapperEl.children("." + params.slideClass + "." + params.slideDuplicateClass + '[data-swiper-slide-index="' + nextSlide.attr("data-swiper-slide-index") + '"]').addClass(params.slideDuplicateNextClass);
                if (prevSlide.hasClass(params.slideDuplicateClass)) $wrapperEl.children("." + params.slideClass + ":not(." + params.slideDuplicateClass + ')[data-swiper-slide-index="' + prevSlide.attr("data-swiper-slide-index") + '"]').addClass(params.slideDuplicatePrevClass); else $wrapperEl.children("." + params.slideClass + "." + params.slideDuplicateClass + '[data-swiper-slide-index="' + prevSlide.attr("data-swiper-slide-index") + '"]').addClass(params.slideDuplicatePrevClass);
            }
            swiper.emitSlidesClasses();
        }
        function updateActiveIndex(newActiveIndex) {
            var swiper = this;
            var translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;
            var slidesGrid = swiper.slidesGrid, snapGrid = swiper.snapGrid, params = swiper.params, previousIndex = swiper.activeIndex, previousRealIndex = swiper.realIndex, previousSnapIndex = swiper.snapIndex;
            var activeIndex = newActiveIndex;
            var snapIndex;
            if ("undefined" === typeof activeIndex) {
                for (var i = 0; i < slidesGrid.length; i += 1) if ("undefined" !== typeof slidesGrid[i + 1]) {
                    if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1] - (slidesGrid[i + 1] - slidesGrid[i]) / 2) activeIndex = i; else if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1]) activeIndex = i + 1;
                } else if (translate >= slidesGrid[i]) activeIndex = i;
                if (params.normalizeSlideIndex) if (activeIndex < 0 || "undefined" === typeof activeIndex) activeIndex = 0;
            }
            if (snapGrid.indexOf(translate) >= 0) snapIndex = snapGrid.indexOf(translate); else {
                var skip = Math.min(params.slidesPerGroupSkip, activeIndex);
                snapIndex = skip + Math.floor((activeIndex - skip) / params.slidesPerGroup);
            }
            if (snapIndex >= snapGrid.length) snapIndex = snapGrid.length - 1;
            if (activeIndex === previousIndex) {
                if (snapIndex !== previousSnapIndex) {
                    swiper.snapIndex = snapIndex;
                    swiper.emit("snapIndexChange");
                }
                return;
            }
            var realIndex = parseInt(swiper.slides.eq(activeIndex).attr("data-swiper-slide-index") || activeIndex, 10);
            (0, utils.extend)(swiper, {
                snapIndex,
                realIndex,
                previousIndex,
                activeIndex
            });
            swiper.emit("activeIndexChange");
            swiper.emit("snapIndexChange");
            if (previousRealIndex !== realIndex) swiper.emit("realIndexChange");
            if (swiper.initialized || swiper.params.runCallbacksOnInit) swiper.emit("slideChange");
        }
        function updateClickedSlide(e) {
            var swiper = this;
            var params = swiper.params;
            var slide = (0, dom["default"])(e.target).closest("." + params.slideClass)[0];
            var slideFound = false;
            var slideIndex;
            if (slide) for (var i = 0; i < swiper.slides.length; i += 1) if (swiper.slides[i] === slide) {
                slideFound = true;
                slideIndex = i;
                break;
            }
            if (slide && slideFound) {
                swiper.clickedSlide = slide;
                if (swiper.virtual && swiper.params.virtual.enabled) swiper.clickedIndex = parseInt((0, 
                dom["default"])(slide).attr("data-swiper-slide-index"), 10); else swiper.clickedIndex = slideIndex;
            } else {
                swiper.clickedSlide = void 0;
                swiper.clickedIndex = void 0;
                return;
            }
            if (params.slideToClickedSlide && void 0 !== swiper.clickedIndex && swiper.clickedIndex !== swiper.activeIndex) swiper.slideToClickedSlide();
        }
        const update = {
            updateSize,
            updateSlides,
            updateAutoHeight,
            updateSlidesOffset,
            updateSlidesProgress,
            updateProgress,
            updateSlidesClasses,
            updateActiveIndex,
            updateClickedSlide
        };
        function getSwiperTranslate(axis) {
            if (void 0 === axis) axis = this.isHorizontal() ? "x" : "y";
            var swiper = this;
            var params = swiper.params, rtl = swiper.rtlTranslate, translate = swiper.translate, $wrapperEl = swiper.$wrapperEl;
            if (params.virtualTranslate) return rtl ? -translate : translate;
            if (params.cssMode) return translate;
            var currentTranslate = (0, utils.getTranslate)($wrapperEl[0], axis);
            if (rtl) currentTranslate = -currentTranslate;
            return currentTranslate || 0;
        }
        function setTranslate(translate, byController) {
            var swiper = this;
            var rtl = swiper.rtlTranslate, params = swiper.params, $wrapperEl = swiper.$wrapperEl, wrapperEl = swiper.wrapperEl, progress = swiper.progress;
            var x = 0;
            var y = 0;
            var z = 0;
            if (swiper.isHorizontal()) x = rtl ? -translate : translate; else y = translate;
            if (params.roundLengths) {
                x = Math.floor(x);
                y = Math.floor(y);
            }
            if (params.cssMode) wrapperEl[swiper.isHorizontal() ? "scrollLeft" : "scrollTop"] = swiper.isHorizontal() ? -x : -y; else if (!params.virtualTranslate) $wrapperEl.transform("translate3d(" + x + "px, " + y + "px, " + z + "px)");
            swiper.previousTranslate = swiper.translate;
            swiper.translate = swiper.isHorizontal() ? x : y;
            var newProgress;
            var translatesDiff = swiper.maxTranslate() - swiper.minTranslate();
            if (0 === translatesDiff) newProgress = 0; else newProgress = (translate - swiper.minTranslate()) / translatesDiff;
            if (newProgress !== progress) swiper.updateProgress(translate);
            swiper.emit("setTranslate", swiper.translate, byController);
        }
        function minTranslate() {
            return -this.snapGrid[0];
        }
        function maxTranslate() {
            return -this.snapGrid[this.snapGrid.length - 1];
        }
        function translateTo(translate, speed, runCallbacks, translateBounds, internal) {
            if (void 0 === translate) translate = 0;
            if (void 0 === speed) speed = this.params.speed;
            if (void 0 === runCallbacks) runCallbacks = true;
            if (void 0 === translateBounds) translateBounds = true;
            var swiper = this;
            var params = swiper.params, wrapperEl = swiper.wrapperEl;
            if (swiper.animating && params.preventInteractionOnTransition) return false;
            var minTranslate = swiper.minTranslate();
            var maxTranslate = swiper.maxTranslate();
            var newTranslate;
            if (translateBounds && translate > minTranslate) newTranslate = minTranslate; else if (translateBounds && translate < maxTranslate) newTranslate = maxTranslate; else newTranslate = translate;
            swiper.updateProgress(newTranslate);
            if (params.cssMode) {
                var isH = swiper.isHorizontal();
                if (0 === speed) wrapperEl[isH ? "scrollLeft" : "scrollTop"] = -newTranslate; else if (wrapperEl.scrollTo) {
                    var _wrapperEl$scrollTo;
                    wrapperEl.scrollTo((_wrapperEl$scrollTo = {}, _wrapperEl$scrollTo[isH ? "left" : "top"] = -newTranslate, 
                    _wrapperEl$scrollTo.behavior = "smooth", _wrapperEl$scrollTo));
                } else wrapperEl[isH ? "scrollLeft" : "scrollTop"] = -newTranslate;
                return true;
            }
            if (0 === speed) {
                swiper.setTransition(0);
                swiper.setTranslate(newTranslate);
                if (runCallbacks) {
                    swiper.emit("beforeTransitionStart", speed, internal);
                    swiper.emit("transitionEnd");
                }
            } else {
                swiper.setTransition(speed);
                swiper.setTranslate(newTranslate);
                if (runCallbacks) {
                    swiper.emit("beforeTransitionStart", speed, internal);
                    swiper.emit("transitionStart");
                }
                if (!swiper.animating) {
                    swiper.animating = true;
                    if (!swiper.onTranslateToWrapperTransitionEnd) swiper.onTranslateToWrapperTransitionEnd = function(e) {
                        if (!swiper || swiper.destroyed) return;
                        if (e.target !== this) return;
                        swiper.$wrapperEl[0].removeEventListener("transitionend", swiper.onTranslateToWrapperTransitionEnd);
                        swiper.$wrapperEl[0].removeEventListener("webkitTransitionEnd", swiper.onTranslateToWrapperTransitionEnd);
                        swiper.onTranslateToWrapperTransitionEnd = null;
                        delete swiper.onTranslateToWrapperTransitionEnd;
                        if (runCallbacks) swiper.emit("transitionEnd");
                    };
                    swiper.$wrapperEl[0].addEventListener("transitionend", swiper.onTranslateToWrapperTransitionEnd);
                    swiper.$wrapperEl[0].addEventListener("webkitTransitionEnd", swiper.onTranslateToWrapperTransitionEnd);
                }
            }
            return true;
        }
        const translate = {
            getTranslate: getSwiperTranslate,
            setTranslate,
            minTranslate,
            maxTranslate,
            translateTo
        };
        function setTransition(duration, byController) {
            var swiper = this;
            if (!swiper.params.cssMode) swiper.$wrapperEl.transition(duration);
            swiper.emit("setTransition", duration, byController);
        }
        function transitionStart(runCallbacks, direction) {
            if (void 0 === runCallbacks) runCallbacks = true;
            var swiper = this;
            var activeIndex = swiper.activeIndex, params = swiper.params, previousIndex = swiper.previousIndex;
            if (params.cssMode) return;
            if (params.autoHeight) swiper.updateAutoHeight();
            var dir = direction;
            if (!dir) if (activeIndex > previousIndex) dir = "next"; else if (activeIndex < previousIndex) dir = "prev"; else dir = "reset";
            swiper.emit("transitionStart");
            if (runCallbacks && activeIndex !== previousIndex) {
                if ("reset" === dir) {
                    swiper.emit("slideResetTransitionStart");
                    return;
                }
                swiper.emit("slideChangeTransitionStart");
                if ("next" === dir) swiper.emit("slideNextTransitionStart"); else swiper.emit("slidePrevTransitionStart");
            }
        }
        function transitionEnd(runCallbacks, direction) {
            if (void 0 === runCallbacks) runCallbacks = true;
            var swiper = this;
            var activeIndex = swiper.activeIndex, previousIndex = swiper.previousIndex, params = swiper.params;
            swiper.animating = false;
            if (params.cssMode) return;
            swiper.setTransition(0);
            var dir = direction;
            if (!dir) if (activeIndex > previousIndex) dir = "next"; else if (activeIndex < previousIndex) dir = "prev"; else dir = "reset";
            swiper.emit("transitionEnd");
            if (runCallbacks && activeIndex !== previousIndex) {
                if ("reset" === dir) {
                    swiper.emit("slideResetTransitionEnd");
                    return;
                }
                swiper.emit("slideChangeTransitionEnd");
                if ("next" === dir) swiper.emit("slideNextTransitionEnd"); else swiper.emit("slidePrevTransitionEnd");
            }
        }
        const transition = {
            setTransition,
            transitionStart,
            transitionEnd
        };
        function slideTo(index, speed, runCallbacks, internal, initial) {
            if (void 0 === index) index = 0;
            if (void 0 === speed) speed = this.params.speed;
            if (void 0 === runCallbacks) runCallbacks = true;
            if ("number" !== typeof index && "string" !== typeof index) throw new Error("The 'index' argument cannot have type other than 'number' or 'string'. [" + typeof index + "] given.");
            if ("string" === typeof index) {
                var indexAsNumber = parseInt(index, 10);
                var isValidNumber = isFinite(indexAsNumber);
                if (!isValidNumber) throw new Error("The passed-in 'index' (string) couldn't be converted to 'number'. [" + index + "] given.");
                index = indexAsNumber;
            }
            var swiper = this;
            var slideIndex = index;
            if (slideIndex < 0) slideIndex = 0;
            var params = swiper.params, snapGrid = swiper.snapGrid, slidesGrid = swiper.slidesGrid, previousIndex = swiper.previousIndex, activeIndex = swiper.activeIndex, rtl = swiper.rtlTranslate, wrapperEl = swiper.wrapperEl, enabled = swiper.enabled;
            if (swiper.animating && params.preventInteractionOnTransition || !enabled && !internal && !initial) return false;
            var skip = Math.min(swiper.params.slidesPerGroupSkip, slideIndex);
            var snapIndex = skip + Math.floor((slideIndex - skip) / swiper.params.slidesPerGroup);
            if (snapIndex >= snapGrid.length) snapIndex = snapGrid.length - 1;
            if ((activeIndex || params.initialSlide || 0) === (previousIndex || 0) && runCallbacks) swiper.emit("beforeSlideChangeStart");
            var translate = -snapGrid[snapIndex];
            swiper.updateProgress(translate);
            if (params.normalizeSlideIndex) for (var i = 0; i < slidesGrid.length; i += 1) {
                var normalizedTranslate = -Math.floor(100 * translate);
                var normalizedGird = Math.floor(100 * slidesGrid[i]);
                var normalizedGridNext = Math.floor(100 * slidesGrid[i + 1]);
                if ("undefined" !== typeof slidesGrid[i + 1]) {
                    if (normalizedTranslate >= normalizedGird && normalizedTranslate < normalizedGridNext - (normalizedGridNext - normalizedGird) / 2) slideIndex = i; else if (normalizedTranslate >= normalizedGird && normalizedTranslate < normalizedGridNext) slideIndex = i + 1;
                } else if (normalizedTranslate >= normalizedGird) slideIndex = i;
            }
            if (swiper.initialized && slideIndex !== activeIndex) {
                if (!swiper.allowSlideNext && translate < swiper.translate && translate < swiper.minTranslate()) return false;
                if (!swiper.allowSlidePrev && translate > swiper.translate && translate > swiper.maxTranslate()) if ((activeIndex || 0) !== slideIndex) return false;
            }
            var direction;
            if (slideIndex > activeIndex) direction = "next"; else if (slideIndex < activeIndex) direction = "prev"; else direction = "reset";
            if (rtl && -translate === swiper.translate || !rtl && translate === swiper.translate) {
                swiper.updateActiveIndex(slideIndex);
                if (params.autoHeight) swiper.updateAutoHeight();
                swiper.updateSlidesClasses();
                if ("slide" !== params.effect) swiper.setTranslate(translate);
                if ("reset" !== direction) {
                    swiper.transitionStart(runCallbacks, direction);
                    swiper.transitionEnd(runCallbacks, direction);
                }
                return false;
            }
            if (params.cssMode) {
                var isH = swiper.isHorizontal();
                var t = -translate;
                if (rtl) t = wrapperEl.scrollWidth - wrapperEl.offsetWidth - t;
                if (0 === speed) wrapperEl[isH ? "scrollLeft" : "scrollTop"] = t; else if (wrapperEl.scrollTo) {
                    var _wrapperEl$scrollTo;
                    wrapperEl.scrollTo((_wrapperEl$scrollTo = {}, _wrapperEl$scrollTo[isH ? "left" : "top"] = t, 
                    _wrapperEl$scrollTo.behavior = "smooth", _wrapperEl$scrollTo));
                } else wrapperEl[isH ? "scrollLeft" : "scrollTop"] = t;
                return true;
            }
            if (0 === speed) {
                swiper.setTransition(0);
                swiper.setTranslate(translate);
                swiper.updateActiveIndex(slideIndex);
                swiper.updateSlidesClasses();
                swiper.emit("beforeTransitionStart", speed, internal);
                swiper.transitionStart(runCallbacks, direction);
                swiper.transitionEnd(runCallbacks, direction);
            } else {
                swiper.setTransition(speed);
                swiper.setTranslate(translate);
                swiper.updateActiveIndex(slideIndex);
                swiper.updateSlidesClasses();
                swiper.emit("beforeTransitionStart", speed, internal);
                swiper.transitionStart(runCallbacks, direction);
                if (!swiper.animating) {
                    swiper.animating = true;
                    if (!swiper.onSlideToWrapperTransitionEnd) swiper.onSlideToWrapperTransitionEnd = function(e) {
                        if (!swiper || swiper.destroyed) return;
                        if (e.target !== this) return;
                        swiper.$wrapperEl[0].removeEventListener("transitionend", swiper.onSlideToWrapperTransitionEnd);
                        swiper.$wrapperEl[0].removeEventListener("webkitTransitionEnd", swiper.onSlideToWrapperTransitionEnd);
                        swiper.onSlideToWrapperTransitionEnd = null;
                        delete swiper.onSlideToWrapperTransitionEnd;
                        swiper.transitionEnd(runCallbacks, direction);
                    };
                    swiper.$wrapperEl[0].addEventListener("transitionend", swiper.onSlideToWrapperTransitionEnd);
                    swiper.$wrapperEl[0].addEventListener("webkitTransitionEnd", swiper.onSlideToWrapperTransitionEnd);
                }
            }
            return true;
        }
        function slideToLoop(index, speed, runCallbacks, internal) {
            if (void 0 === index) index = 0;
            if (void 0 === speed) speed = this.params.speed;
            if (void 0 === runCallbacks) runCallbacks = true;
            var swiper = this;
            var newIndex = index;
            if (swiper.params.loop) newIndex += swiper.loopedSlides;
            return swiper.slideTo(newIndex, speed, runCallbacks, internal);
        }
        function slideNext(speed, runCallbacks, internal) {
            if (void 0 === speed) speed = this.params.speed;
            if (void 0 === runCallbacks) runCallbacks = true;
            var swiper = this;
            var params = swiper.params, animating = swiper.animating, enabled = swiper.enabled;
            if (!enabled) return swiper;
            var increment = swiper.activeIndex < params.slidesPerGroupSkip ? 1 : params.slidesPerGroup;
            if (params.loop) {
                if (animating && params.loopPreventsSlide) return false;
                swiper.loopFix();
                swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;
            }
            return swiper.slideTo(swiper.activeIndex + increment, speed, runCallbacks, internal);
        }
        function slidePrev(speed, runCallbacks, internal) {
            if (void 0 === speed) speed = this.params.speed;
            if (void 0 === runCallbacks) runCallbacks = true;
            var swiper = this;
            var params = swiper.params, animating = swiper.animating, snapGrid = swiper.snapGrid, slidesGrid = swiper.slidesGrid, rtlTranslate = swiper.rtlTranslate, enabled = swiper.enabled;
            if (!enabled) return swiper;
            if (params.loop) {
                if (animating && params.loopPreventsSlide) return false;
                swiper.loopFix();
                swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;
            }
            var translate = rtlTranslate ? swiper.translate : -swiper.translate;
            function normalize(val) {
                if (val < 0) return -Math.floor(Math.abs(val));
                return Math.floor(val);
            }
            var normalizedTranslate = normalize(translate);
            var normalizedSnapGrid = snapGrid.map((function(val) {
                return normalize(val);
            }));
            var prevSnap = snapGrid[normalizedSnapGrid.indexOf(normalizedTranslate) - 1];
            if ("undefined" === typeof prevSnap && params.cssMode) snapGrid.forEach((function(snap) {
                if (!prevSnap && normalizedTranslate >= snap) prevSnap = snap;
            }));
            var prevIndex;
            if ("undefined" !== typeof prevSnap) {
                prevIndex = slidesGrid.indexOf(prevSnap);
                if (prevIndex < 0) prevIndex = swiper.activeIndex - 1;
            }
            return swiper.slideTo(prevIndex, speed, runCallbacks, internal);
        }
        function slideReset(speed, runCallbacks, internal) {
            if (void 0 === speed) speed = this.params.speed;
            if (void 0 === runCallbacks) runCallbacks = true;
            var swiper = this;
            return swiper.slideTo(swiper.activeIndex, speed, runCallbacks, internal);
        }
        function slideToClosest(speed, runCallbacks, internal, threshold) {
            if (void 0 === speed) speed = this.params.speed;
            if (void 0 === runCallbacks) runCallbacks = true;
            if (void 0 === threshold) threshold = .5;
            var swiper = this;
            var index = swiper.activeIndex;
            var skip = Math.min(swiper.params.slidesPerGroupSkip, index);
            var snapIndex = skip + Math.floor((index - skip) / swiper.params.slidesPerGroup);
            var translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;
            if (translate >= swiper.snapGrid[snapIndex]) {
                var currentSnap = swiper.snapGrid[snapIndex];
                var nextSnap = swiper.snapGrid[snapIndex + 1];
                if (translate - currentSnap > (nextSnap - currentSnap) * threshold) index += swiper.params.slidesPerGroup;
            } else {
                var prevSnap = swiper.snapGrid[snapIndex - 1];
                var _currentSnap = swiper.snapGrid[snapIndex];
                if (translate - prevSnap <= (_currentSnap - prevSnap) * threshold) index -= swiper.params.slidesPerGroup;
            }
            index = Math.max(index, 0);
            index = Math.min(index, swiper.slidesGrid.length - 1);
            return swiper.slideTo(index, speed, runCallbacks, internal);
        }
        function slideToClickedSlide() {
            var swiper = this;
            var params = swiper.params, $wrapperEl = swiper.$wrapperEl;
            var slidesPerView = "auto" === params.slidesPerView ? swiper.slidesPerViewDynamic() : params.slidesPerView;
            var slideToIndex = swiper.clickedIndex;
            var realIndex;
            if (params.loop) {
                if (swiper.animating) return;
                realIndex = parseInt((0, dom["default"])(swiper.clickedSlide).attr("data-swiper-slide-index"), 10);
                if (params.centeredSlides) if (slideToIndex < swiper.loopedSlides - slidesPerView / 2 || slideToIndex > swiper.slides.length - swiper.loopedSlides + slidesPerView / 2) {
                    swiper.loopFix();
                    slideToIndex = $wrapperEl.children("." + params.slideClass + '[data-swiper-slide-index="' + realIndex + '"]:not(.' + params.slideDuplicateClass + ")").eq(0).index();
                    (0, utils.nextTick)((function() {
                        swiper.slideTo(slideToIndex);
                    }));
                } else swiper.slideTo(slideToIndex); else if (slideToIndex > swiper.slides.length - slidesPerView) {
                    swiper.loopFix();
                    slideToIndex = $wrapperEl.children("." + params.slideClass + '[data-swiper-slide-index="' + realIndex + '"]:not(.' + params.slideDuplicateClass + ")").eq(0).index();
                    (0, utils.nextTick)((function() {
                        swiper.slideTo(slideToIndex);
                    }));
                } else swiper.slideTo(slideToIndex);
            } else swiper.slideTo(slideToIndex);
        }
        const slide = {
            slideTo,
            slideToLoop,
            slideNext,
            slidePrev,
            slideReset,
            slideToClosest,
            slideToClickedSlide
        };
        function loopCreate() {
            var swiper = this;
            var document = (0, ssr_window_esm.getDocument)();
            var params = swiper.params, $wrapperEl = swiper.$wrapperEl;
            $wrapperEl.children("." + params.slideClass + "." + params.slideDuplicateClass).remove();
            var slides = $wrapperEl.children("." + params.slideClass);
            if (params.loopFillGroupWithBlank) {
                var blankSlidesNum = params.slidesPerGroup - slides.length % params.slidesPerGroup;
                if (blankSlidesNum !== params.slidesPerGroup) {
                    for (var i = 0; i < blankSlidesNum; i += 1) {
                        var blankNode = (0, dom["default"])(document.createElement("div")).addClass(params.slideClass + " " + params.slideBlankClass);
                        $wrapperEl.append(blankNode);
                    }
                    slides = $wrapperEl.children("." + params.slideClass);
                }
            }
            if ("auto" === params.slidesPerView && !params.loopedSlides) params.loopedSlides = slides.length;
            swiper.loopedSlides = Math.ceil(parseFloat(params.loopedSlides || params.slidesPerView, 10));
            swiper.loopedSlides += params.loopAdditionalSlides;
            if (swiper.loopedSlides > slides.length) swiper.loopedSlides = slides.length;
            var prependSlides = [];
            var appendSlides = [];
            slides.each((function(el, index) {
                var slide = (0, dom["default"])(el);
                if (index < swiper.loopedSlides) appendSlides.push(el);
                if (index < slides.length && index >= slides.length - swiper.loopedSlides) prependSlides.push(el);
                slide.attr("data-swiper-slide-index", index);
            }));
            for (var _i = 0; _i < appendSlides.length; _i += 1) $wrapperEl.append((0, dom["default"])(appendSlides[_i].cloneNode(true)).addClass(params.slideDuplicateClass));
            for (var _i2 = prependSlides.length - 1; _i2 >= 0; _i2 -= 1) $wrapperEl.prepend((0, 
            dom["default"])(prependSlides[_i2].cloneNode(true)).addClass(params.slideDuplicateClass));
        }
        function loopFix() {
            var swiper = this;
            swiper.emit("beforeLoopFix");
            var activeIndex = swiper.activeIndex, slides = swiper.slides, loopedSlides = swiper.loopedSlides, allowSlidePrev = swiper.allowSlidePrev, allowSlideNext = swiper.allowSlideNext, snapGrid = swiper.snapGrid, rtl = swiper.rtlTranslate;
            var newIndex;
            swiper.allowSlidePrev = true;
            swiper.allowSlideNext = true;
            var snapTranslate = -snapGrid[activeIndex];
            var diff = snapTranslate - swiper.getTranslate();
            if (activeIndex < loopedSlides) {
                newIndex = slides.length - 3 * loopedSlides + activeIndex;
                newIndex += loopedSlides;
                var slideChanged = swiper.slideTo(newIndex, 0, false, true);
                if (slideChanged && 0 !== diff) swiper.setTranslate((rtl ? -swiper.translate : swiper.translate) - diff);
            } else if (activeIndex >= slides.length - loopedSlides) {
                newIndex = -slides.length + activeIndex + loopedSlides;
                newIndex += loopedSlides;
                var _slideChanged = swiper.slideTo(newIndex, 0, false, true);
                if (_slideChanged && 0 !== diff) swiper.setTranslate((rtl ? -swiper.translate : swiper.translate) - diff);
            }
            swiper.allowSlidePrev = allowSlidePrev;
            swiper.allowSlideNext = allowSlideNext;
            swiper.emit("loopFix");
        }
        function loopDestroy() {
            var swiper = this;
            var $wrapperEl = swiper.$wrapperEl, params = swiper.params, slides = swiper.slides;
            $wrapperEl.children("." + params.slideClass + "." + params.slideDuplicateClass + ",." + params.slideClass + "." + params.slideBlankClass).remove();
            slides.removeAttr("data-swiper-slide-index");
        }
        const loop = {
            loopCreate,
            loopFix,
            loopDestroy
        };
        function setGrabCursor(moving) {
            var swiper = this;
            if (swiper.support.touch || !swiper.params.simulateTouch || swiper.params.watchOverflow && swiper.isLocked || swiper.params.cssMode) return;
            var el = swiper.el;
            el.style.cursor = "move";
            el.style.cursor = moving ? "-webkit-grabbing" : "-webkit-grab";
            el.style.cursor = moving ? "-moz-grabbin" : "-moz-grab";
            el.style.cursor = moving ? "grabbing" : "grab";
        }
        function unsetGrabCursor() {
            var swiper = this;
            if (swiper.support.touch || swiper.params.watchOverflow && swiper.isLocked || swiper.params.cssMode) return;
            swiper.el.style.cursor = "";
        }
        const grab_cursor = {
            setGrabCursor,
            unsetGrabCursor
        };
        function appendSlide(slides) {
            var swiper = this;
            var $wrapperEl = swiper.$wrapperEl, params = swiper.params;
            if (params.loop) swiper.loopDestroy();
            if ("object" === typeof slides && "length" in slides) {
                for (var i = 0; i < slides.length; i += 1) if (slides[i]) $wrapperEl.append(slides[i]);
            } else $wrapperEl.append(slides);
            if (params.loop) swiper.loopCreate();
            if (!(params.observer && swiper.support.observer)) swiper.update();
        }
        function prependSlide(slides) {
            var swiper = this;
            var params = swiper.params, $wrapperEl = swiper.$wrapperEl, activeIndex = swiper.activeIndex;
            if (params.loop) swiper.loopDestroy();
            var newActiveIndex = activeIndex + 1;
            if ("object" === typeof slides && "length" in slides) {
                for (var i = 0; i < slides.length; i += 1) if (slides[i]) $wrapperEl.prepend(slides[i]);
                newActiveIndex = activeIndex + slides.length;
            } else $wrapperEl.prepend(slides);
            if (params.loop) swiper.loopCreate();
            if (!(params.observer && swiper.support.observer)) swiper.update();
            swiper.slideTo(newActiveIndex, 0, false);
        }
        function addSlide(index, slides) {
            var swiper = this;
            var $wrapperEl = swiper.$wrapperEl, params = swiper.params, activeIndex = swiper.activeIndex;
            var activeIndexBuffer = activeIndex;
            if (params.loop) {
                activeIndexBuffer -= swiper.loopedSlides;
                swiper.loopDestroy();
                swiper.slides = $wrapperEl.children("." + params.slideClass);
            }
            var baseLength = swiper.slides.length;
            if (index <= 0) {
                swiper.prependSlide(slides);
                return;
            }
            if (index >= baseLength) {
                swiper.appendSlide(slides);
                return;
            }
            var newActiveIndex = activeIndexBuffer > index ? activeIndexBuffer + 1 : activeIndexBuffer;
            var slidesBuffer = [];
            for (var i = baseLength - 1; i >= index; i -= 1) {
                var currentSlide = swiper.slides.eq(i);
                currentSlide.remove();
                slidesBuffer.unshift(currentSlide);
            }
            if ("object" === typeof slides && "length" in slides) {
                for (var _i = 0; _i < slides.length; _i += 1) if (slides[_i]) $wrapperEl.append(slides[_i]);
                newActiveIndex = activeIndexBuffer > index ? activeIndexBuffer + slides.length : activeIndexBuffer;
            } else $wrapperEl.append(slides);
            for (var _i2 = 0; _i2 < slidesBuffer.length; _i2 += 1) $wrapperEl.append(slidesBuffer[_i2]);
            if (params.loop) swiper.loopCreate();
            if (!(params.observer && swiper.support.observer)) swiper.update();
            if (params.loop) swiper.slideTo(newActiveIndex + swiper.loopedSlides, 0, false); else swiper.slideTo(newActiveIndex, 0, false);
        }
        function removeSlide(slidesIndexes) {
            var swiper = this;
            var params = swiper.params, $wrapperEl = swiper.$wrapperEl, activeIndex = swiper.activeIndex;
            var activeIndexBuffer = activeIndex;
            if (params.loop) {
                activeIndexBuffer -= swiper.loopedSlides;
                swiper.loopDestroy();
                swiper.slides = $wrapperEl.children("." + params.slideClass);
            }
            var newActiveIndex = activeIndexBuffer;
            var indexToRemove;
            if ("object" === typeof slidesIndexes && "length" in slidesIndexes) {
                for (var i = 0; i < slidesIndexes.length; i += 1) {
                    indexToRemove = slidesIndexes[i];
                    if (swiper.slides[indexToRemove]) swiper.slides.eq(indexToRemove).remove();
                    if (indexToRemove < newActiveIndex) newActiveIndex -= 1;
                }
                newActiveIndex = Math.max(newActiveIndex, 0);
            } else {
                indexToRemove = slidesIndexes;
                if (swiper.slides[indexToRemove]) swiper.slides.eq(indexToRemove).remove();
                if (indexToRemove < newActiveIndex) newActiveIndex -= 1;
                newActiveIndex = Math.max(newActiveIndex, 0);
            }
            if (params.loop) swiper.loopCreate();
            if (!(params.observer && swiper.support.observer)) swiper.update();
            if (params.loop) swiper.slideTo(newActiveIndex + swiper.loopedSlides, 0, false); else swiper.slideTo(newActiveIndex, 0, false);
        }
        function removeAllSlides() {
            var swiper = this;
            var slidesIndexes = [];
            for (var i = 0; i < swiper.slides.length; i += 1) slidesIndexes.push(i);
            swiper.removeSlide(slidesIndexes);
        }
        const manipulation = {
            appendSlide,
            prependSlide,
            addSlide,
            removeSlide,
            removeAllSlides
        };
        function closestElement(selector, base) {
            if (void 0 === base) base = this;
            function __closestFrom(el) {
                if (!el || el === (0, ssr_window_esm.getDocument)() || el === (0, ssr_window_esm.getWindow)()) return null;
                if (el.assignedSlot) el = el.assignedSlot;
                var found = el.closest(selector);
                return found || __closestFrom(el.getRootNode().host);
            }
            return __closestFrom(base);
        }
        function onTouchStart(event) {
            var swiper = this;
            var document = (0, ssr_window_esm.getDocument)();
            var window = (0, ssr_window_esm.getWindow)();
            var data = swiper.touchEventsData;
            var params = swiper.params, touches = swiper.touches, enabled = swiper.enabled;
            if (!enabled) return;
            if (swiper.animating && params.preventInteractionOnTransition) return;
            var e = event;
            if (e.originalEvent) e = e.originalEvent;
            var $targetEl = (0, dom["default"])(e.target);
            if ("wrapper" === params.touchEventsTarget) if (!$targetEl.closest(swiper.wrapperEl).length) return;
            data.isTouchEvent = "touchstart" === e.type;
            if (!data.isTouchEvent && "which" in e && 3 === e.which) return;
            if (!data.isTouchEvent && "button" in e && e.button > 0) return;
            if (data.isTouched && data.isMoved) return;
            var swipingClassHasValue = !!params.noSwipingClass && "" !== params.noSwipingClass;
            if (swipingClassHasValue && e.target && e.target.shadowRoot && event.path && event.path[0]) $targetEl = (0, 
            dom["default"])(event.path[0]);
            var noSwipingSelector = params.noSwipingSelector ? params.noSwipingSelector : "." + params.noSwipingClass;
            var isTargetShadow = !!(e.target && e.target.shadowRoot);
            if (params.noSwiping && (isTargetShadow ? closestElement(noSwipingSelector, e.target) : $targetEl.closest(noSwipingSelector)[0])) {
                swiper.allowClick = true;
                return;
            }
            if (params.swipeHandler) if (!$targetEl.closest(params.swipeHandler)[0]) return;
            touches.currentX = "touchstart" === e.type ? e.targetTouches[0].pageX : e.pageX;
            touches.currentY = "touchstart" === e.type ? e.targetTouches[0].pageY : e.pageY;
            var startX = touches.currentX;
            var startY = touches.currentY;
            var edgeSwipeDetection = params.edgeSwipeDetection || params.iOSEdgeSwipeDetection;
            var edgeSwipeThreshold = params.edgeSwipeThreshold || params.iOSEdgeSwipeThreshold;
            if (edgeSwipeDetection && (startX <= edgeSwipeThreshold || startX >= window.innerWidth - edgeSwipeThreshold)) if ("prevent" === edgeSwipeDetection) event.preventDefault(); else return;
            (0, utils.extend)(data, {
                isTouched: true,
                isMoved: false,
                allowTouchCallbacks: true,
                isScrolling: void 0,
                startMoving: void 0
            });
            touches.startX = startX;
            touches.startY = startY;
            data.touchStartTime = (0, utils.now)();
            swiper.allowClick = true;
            swiper.updateSize();
            swiper.swipeDirection = void 0;
            if (params.threshold > 0) data.allowThresholdMove = false;
            if ("touchstart" !== e.type) {
                var preventDefault = true;
                if ($targetEl.is(data.focusableElements)) preventDefault = false;
                if (document.activeElement && (0, dom["default"])(document.activeElement).is(data.focusableElements) && document.activeElement !== $targetEl[0]) document.activeElement.blur();
                var shouldPreventDefault = preventDefault && swiper.allowTouchMove && params.touchStartPreventDefault;
                if ((params.touchStartForcePreventDefault || shouldPreventDefault) && !$targetEl[0].isContentEditable) e.preventDefault();
            }
            swiper.emit("touchStart", e);
        }
        function onTouchMove(event) {
            var document = (0, ssr_window_esm.getDocument)();
            var swiper = this;
            var data = swiper.touchEventsData;
            var params = swiper.params, touches = swiper.touches, rtl = swiper.rtlTranslate, enabled = swiper.enabled;
            if (!enabled) return;
            var e = event;
            if (e.originalEvent) e = e.originalEvent;
            if (!data.isTouched) {
                if (data.startMoving && data.isScrolling) swiper.emit("touchMoveOpposite", e);
                return;
            }
            if (data.isTouchEvent && "touchmove" !== e.type) return;
            var targetTouch = "touchmove" === e.type && e.targetTouches && (e.targetTouches[0] || e.changedTouches[0]);
            var pageX = "touchmove" === e.type ? targetTouch.pageX : e.pageX;
            var pageY = "touchmove" === e.type ? targetTouch.pageY : e.pageY;
            if (e.preventedByNestedSwiper) {
                touches.startX = pageX;
                touches.startY = pageY;
                return;
            }
            if (!swiper.allowTouchMove) {
                swiper.allowClick = false;
                if (data.isTouched) {
                    (0, utils.extend)(touches, {
                        startX: pageX,
                        startY: pageY,
                        currentX: pageX,
                        currentY: pageY
                    });
                    data.touchStartTime = (0, utils.now)();
                }
                return;
            }
            if (data.isTouchEvent && params.touchReleaseOnEdges && !params.loop) if (swiper.isVertical()) {
                if (pageY < touches.startY && swiper.translate <= swiper.maxTranslate() || pageY > touches.startY && swiper.translate >= swiper.minTranslate()) {
                    data.isTouched = false;
                    data.isMoved = false;
                    return;
                }
            } else if (pageX < touches.startX && swiper.translate <= swiper.maxTranslate() || pageX > touches.startX && swiper.translate >= swiper.minTranslate()) return;
            if (data.isTouchEvent && document.activeElement) if (e.target === document.activeElement && (0, 
            dom["default"])(e.target).is(data.focusableElements)) {
                data.isMoved = true;
                swiper.allowClick = false;
                return;
            }
            if (data.allowTouchCallbacks) swiper.emit("touchMove", e);
            if (e.targetTouches && e.targetTouches.length > 1) return;
            touches.currentX = pageX;
            touches.currentY = pageY;
            var diffX = touches.currentX - touches.startX;
            var diffY = touches.currentY - touches.startY;
            if (swiper.params.threshold && Math.sqrt(Math.pow(diffX, 2) + Math.pow(diffY, 2)) < swiper.params.threshold) return;
            if ("undefined" === typeof data.isScrolling) {
                var touchAngle;
                if (swiper.isHorizontal() && touches.currentY === touches.startY || swiper.isVertical() && touches.currentX === touches.startX) data.isScrolling = false; else if (diffX * diffX + diffY * diffY >= 25) {
                    touchAngle = 180 * Math.atan2(Math.abs(diffY), Math.abs(diffX)) / Math.PI;
                    data.isScrolling = swiper.isHorizontal() ? touchAngle > params.touchAngle : 90 - touchAngle > params.touchAngle;
                }
            }
            if (data.isScrolling) swiper.emit("touchMoveOpposite", e);
            if ("undefined" === typeof data.startMoving) if (touches.currentX !== touches.startX || touches.currentY !== touches.startY) data.startMoving = true;
            if (data.isScrolling) {
                data.isTouched = false;
                return;
            }
            if (!data.startMoving) return;
            swiper.allowClick = false;
            if (!params.cssMode && e.cancelable) e.preventDefault();
            if (params.touchMoveStopPropagation && !params.nested) e.stopPropagation();
            if (!data.isMoved) {
                if (params.loop) swiper.loopFix();
                data.startTranslate = swiper.getTranslate();
                swiper.setTransition(0);
                if (swiper.animating) swiper.$wrapperEl.trigger("webkitTransitionEnd transitionend");
                data.allowMomentumBounce = false;
                if (params.grabCursor && (true === swiper.allowSlideNext || true === swiper.allowSlidePrev)) swiper.setGrabCursor(true);
                swiper.emit("sliderFirstMove", e);
            }
            swiper.emit("sliderMove", e);
            data.isMoved = true;
            var diff = swiper.isHorizontal() ? diffX : diffY;
            touches.diff = diff;
            diff *= params.touchRatio;
            if (rtl) diff = -diff;
            swiper.swipeDirection = diff > 0 ? "prev" : "next";
            data.currentTranslate = diff + data.startTranslate;
            var disableParentSwiper = true;
            var resistanceRatio = params.resistanceRatio;
            if (params.touchReleaseOnEdges) resistanceRatio = 0;
            if (diff > 0 && data.currentTranslate > swiper.minTranslate()) {
                disableParentSwiper = false;
                if (params.resistance) data.currentTranslate = swiper.minTranslate() - 1 + Math.pow(-swiper.minTranslate() + data.startTranslate + diff, resistanceRatio);
            } else if (diff < 0 && data.currentTranslate < swiper.maxTranslate()) {
                disableParentSwiper = false;
                if (params.resistance) data.currentTranslate = swiper.maxTranslate() + 1 - Math.pow(swiper.maxTranslate() - data.startTranslate - diff, resistanceRatio);
            }
            if (disableParentSwiper) e.preventedByNestedSwiper = true;
            if (!swiper.allowSlideNext && "next" === swiper.swipeDirection && data.currentTranslate < data.startTranslate) data.currentTranslate = data.startTranslate;
            if (!swiper.allowSlidePrev && "prev" === swiper.swipeDirection && data.currentTranslate > data.startTranslate) data.currentTranslate = data.startTranslate;
            if (!swiper.allowSlidePrev && !swiper.allowSlideNext) data.currentTranslate = data.startTranslate;
            if (params.threshold > 0) if (Math.abs(diff) > params.threshold || data.allowThresholdMove) {
                if (!data.allowThresholdMove) {
                    data.allowThresholdMove = true;
                    touches.startX = touches.currentX;
                    touches.startY = touches.currentY;
                    data.currentTranslate = data.startTranslate;
                    touches.diff = swiper.isHorizontal() ? touches.currentX - touches.startX : touches.currentY - touches.startY;
                    return;
                }
            } else {
                data.currentTranslate = data.startTranslate;
                return;
            }
            if (!params.followFinger || params.cssMode) return;
            if (params.freeMode || params.watchSlidesProgress || params.watchSlidesVisibility) {
                swiper.updateActiveIndex();
                swiper.updateSlidesClasses();
            }
            if (params.freeMode) {
                if (0 === data.velocities.length) data.velocities.push({
                    position: touches[swiper.isHorizontal() ? "startX" : "startY"],
                    time: data.touchStartTime
                });
                data.velocities.push({
                    position: touches[swiper.isHorizontal() ? "currentX" : "currentY"],
                    time: (0, utils.now)()
                });
            }
            swiper.updateProgress(data.currentTranslate);
            swiper.setTranslate(data.currentTranslate);
        }
        function onTouchEnd(event) {
            var swiper = this;
            var data = swiper.touchEventsData;
            var params = swiper.params, touches = swiper.touches, rtl = swiper.rtlTranslate, $wrapperEl = swiper.$wrapperEl, slidesGrid = swiper.slidesGrid, snapGrid = swiper.snapGrid, enabled = swiper.enabled;
            if (!enabled) return;
            var e = event;
            if (e.originalEvent) e = e.originalEvent;
            if (data.allowTouchCallbacks) swiper.emit("touchEnd", e);
            data.allowTouchCallbacks = false;
            if (!data.isTouched) {
                if (data.isMoved && params.grabCursor) swiper.setGrabCursor(false);
                data.isMoved = false;
                data.startMoving = false;
                return;
            }
            if (params.grabCursor && data.isMoved && data.isTouched && (true === swiper.allowSlideNext || true === swiper.allowSlidePrev)) swiper.setGrabCursor(false);
            var touchEndTime = (0, utils.now)();
            var timeDiff = touchEndTime - data.touchStartTime;
            if (swiper.allowClick) {
                swiper.updateClickedSlide(e);
                swiper.emit("tap click", e);
                if (timeDiff < 300 && touchEndTime - data.lastClickTime < 300) swiper.emit("doubleTap doubleClick", e);
            }
            data.lastClickTime = (0, utils.now)();
            (0, utils.nextTick)((function() {
                if (!swiper.destroyed) swiper.allowClick = true;
            }));
            if (!data.isTouched || !data.isMoved || !swiper.swipeDirection || 0 === touches.diff || data.currentTranslate === data.startTranslate) {
                data.isTouched = false;
                data.isMoved = false;
                data.startMoving = false;
                return;
            }
            data.isTouched = false;
            data.isMoved = false;
            data.startMoving = false;
            var currentPos;
            if (params.followFinger) currentPos = rtl ? swiper.translate : -swiper.translate; else currentPos = -data.currentTranslate;
            if (params.cssMode) return;
            if (params.freeMode) {
                if (currentPos < -swiper.minTranslate()) {
                    swiper.slideTo(swiper.activeIndex);
                    return;
                }
                if (currentPos > -swiper.maxTranslate()) {
                    if (swiper.slides.length < snapGrid.length) swiper.slideTo(snapGrid.length - 1); else swiper.slideTo(swiper.slides.length - 1);
                    return;
                }
                if (params.freeModeMomentum) {
                    if (data.velocities.length > 1) {
                        var lastMoveEvent = data.velocities.pop();
                        var velocityEvent = data.velocities.pop();
                        var distance = lastMoveEvent.position - velocityEvent.position;
                        var time = lastMoveEvent.time - velocityEvent.time;
                        swiper.velocity = distance / time;
                        swiper.velocity /= 2;
                        if (Math.abs(swiper.velocity) < params.freeModeMinimumVelocity) swiper.velocity = 0;
                        if (time > 150 || (0, utils.now)() - lastMoveEvent.time > 300) swiper.velocity = 0;
                    } else swiper.velocity = 0;
                    swiper.velocity *= params.freeModeMomentumVelocityRatio;
                    data.velocities.length = 0;
                    var momentumDuration = 1e3 * params.freeModeMomentumRatio;
                    var momentumDistance = swiper.velocity * momentumDuration;
                    var newPosition = swiper.translate + momentumDistance;
                    if (rtl) newPosition = -newPosition;
                    var doBounce = false;
                    var afterBouncePosition;
                    var bounceAmount = 20 * Math.abs(swiper.velocity) * params.freeModeMomentumBounceRatio;
                    var needsLoopFix;
                    if (newPosition < swiper.maxTranslate()) {
                        if (params.freeModeMomentumBounce) {
                            if (newPosition + swiper.maxTranslate() < -bounceAmount) newPosition = swiper.maxTranslate() - bounceAmount;
                            afterBouncePosition = swiper.maxTranslate();
                            doBounce = true;
                            data.allowMomentumBounce = true;
                        } else newPosition = swiper.maxTranslate();
                        if (params.loop && params.centeredSlides) needsLoopFix = true;
                    } else if (newPosition > swiper.minTranslate()) {
                        if (params.freeModeMomentumBounce) {
                            if (newPosition - swiper.minTranslate() > bounceAmount) newPosition = swiper.minTranslate() + bounceAmount;
                            afterBouncePosition = swiper.minTranslate();
                            doBounce = true;
                            data.allowMomentumBounce = true;
                        } else newPosition = swiper.minTranslate();
                        if (params.loop && params.centeredSlides) needsLoopFix = true;
                    } else if (params.freeModeSticky) {
                        var nextSlide;
                        for (var j = 0; j < snapGrid.length; j += 1) if (snapGrid[j] > -newPosition) {
                            nextSlide = j;
                            break;
                        }
                        if (Math.abs(snapGrid[nextSlide] - newPosition) < Math.abs(snapGrid[nextSlide - 1] - newPosition) || "next" === swiper.swipeDirection) newPosition = snapGrid[nextSlide]; else newPosition = snapGrid[nextSlide - 1];
                        newPosition = -newPosition;
                    }
                    if (needsLoopFix) swiper.once("transitionEnd", (function() {
                        swiper.loopFix();
                    }));
                    if (0 !== swiper.velocity) {
                        if (rtl) momentumDuration = Math.abs((-newPosition - swiper.translate) / swiper.velocity); else momentumDuration = Math.abs((newPosition - swiper.translate) / swiper.velocity);
                        if (params.freeModeSticky) {
                            var moveDistance = Math.abs((rtl ? -newPosition : newPosition) - swiper.translate);
                            var currentSlideSize = swiper.slidesSizesGrid[swiper.activeIndex];
                            if (moveDistance < currentSlideSize) momentumDuration = params.speed; else if (moveDistance < 2 * currentSlideSize) momentumDuration = 1.5 * params.speed; else momentumDuration = 2.5 * params.speed;
                        }
                    } else if (params.freeModeSticky) {
                        swiper.slideToClosest();
                        return;
                    }
                    if (params.freeModeMomentumBounce && doBounce) {
                        swiper.updateProgress(afterBouncePosition);
                        swiper.setTransition(momentumDuration);
                        swiper.setTranslate(newPosition);
                        swiper.transitionStart(true, swiper.swipeDirection);
                        swiper.animating = true;
                        $wrapperEl.transitionEnd((function() {
                            if (!swiper || swiper.destroyed || !data.allowMomentumBounce) return;
                            swiper.emit("momentumBounce");
                            swiper.setTransition(params.speed);
                            setTimeout((function() {
                                swiper.setTranslate(afterBouncePosition);
                                $wrapperEl.transitionEnd((function() {
                                    if (!swiper || swiper.destroyed) return;
                                    swiper.transitionEnd();
                                }));
                            }), 0);
                        }));
                    } else if (swiper.velocity) {
                        swiper.updateProgress(newPosition);
                        swiper.setTransition(momentumDuration);
                        swiper.setTranslate(newPosition);
                        swiper.transitionStart(true, swiper.swipeDirection);
                        if (!swiper.animating) {
                            swiper.animating = true;
                            $wrapperEl.transitionEnd((function() {
                                if (!swiper || swiper.destroyed) return;
                                swiper.transitionEnd();
                            }));
                        }
                    } else {
                        swiper.emit("_freeModeNoMomentumRelease");
                        swiper.updateProgress(newPosition);
                    }
                    swiper.updateActiveIndex();
                    swiper.updateSlidesClasses();
                } else if (params.freeModeSticky) {
                    swiper.slideToClosest();
                    return;
                } else if (params.freeMode) swiper.emit("_freeModeNoMomentumRelease");
                if (!params.freeModeMomentum || timeDiff >= params.longSwipesMs) {
                    swiper.updateProgress();
                    swiper.updateActiveIndex();
                    swiper.updateSlidesClasses();
                }
                return;
            }
            var stopIndex = 0;
            var groupSize = swiper.slidesSizesGrid[0];
            for (var i = 0; i < slidesGrid.length; i += i < params.slidesPerGroupSkip ? 1 : params.slidesPerGroup) {
                var _increment = i < params.slidesPerGroupSkip - 1 ? 1 : params.slidesPerGroup;
                if ("undefined" !== typeof slidesGrid[i + _increment]) {
                    if (currentPos >= slidesGrid[i] && currentPos < slidesGrid[i + _increment]) {
                        stopIndex = i;
                        groupSize = slidesGrid[i + _increment] - slidesGrid[i];
                    }
                } else if (currentPos >= slidesGrid[i]) {
                    stopIndex = i;
                    groupSize = slidesGrid[slidesGrid.length - 1] - slidesGrid[slidesGrid.length - 2];
                }
            }
            var ratio = (currentPos - slidesGrid[stopIndex]) / groupSize;
            var increment = stopIndex < params.slidesPerGroupSkip - 1 ? 1 : params.slidesPerGroup;
            if (timeDiff > params.longSwipesMs) {
                if (!params.longSwipes) {
                    swiper.slideTo(swiper.activeIndex);
                    return;
                }
                if ("next" === swiper.swipeDirection) if (ratio >= params.longSwipesRatio) swiper.slideTo(stopIndex + increment); else swiper.slideTo(stopIndex);
                if ("prev" === swiper.swipeDirection) if (ratio > 1 - params.longSwipesRatio) swiper.slideTo(stopIndex + increment); else swiper.slideTo(stopIndex);
            } else {
                if (!params.shortSwipes) {
                    swiper.slideTo(swiper.activeIndex);
                    return;
                }
                var isNavButtonTarget = swiper.navigation && (e.target === swiper.navigation.nextEl || e.target === swiper.navigation.prevEl);
                if (!isNavButtonTarget) {
                    if ("next" === swiper.swipeDirection) swiper.slideTo(stopIndex + increment);
                    if ("prev" === swiper.swipeDirection) swiper.slideTo(stopIndex);
                } else if (e.target === swiper.navigation.nextEl) swiper.slideTo(stopIndex + increment); else swiper.slideTo(stopIndex);
            }
        }
        function onResize() {
            var swiper = this;
            var params = swiper.params, el = swiper.el;
            if (el && 0 === el.offsetWidth) return;
            if (params.breakpoints) swiper.setBreakpoint();
            var allowSlideNext = swiper.allowSlideNext, allowSlidePrev = swiper.allowSlidePrev, snapGrid = swiper.snapGrid;
            swiper.allowSlideNext = true;
            swiper.allowSlidePrev = true;
            swiper.updateSize();
            swiper.updateSlides();
            swiper.updateSlidesClasses();
            if (("auto" === params.slidesPerView || params.slidesPerView > 1) && swiper.isEnd && !swiper.isBeginning && !swiper.params.centeredSlides) swiper.slideTo(swiper.slides.length - 1, 0, false, true); else swiper.slideTo(swiper.activeIndex, 0, false, true);
            if (swiper.autoplay && swiper.autoplay.running && swiper.autoplay.paused) swiper.autoplay.run();
            swiper.allowSlidePrev = allowSlidePrev;
            swiper.allowSlideNext = allowSlideNext;
            if (swiper.params.watchOverflow && snapGrid !== swiper.snapGrid) swiper.checkOverflow();
        }
        function onClick(e) {
            var swiper = this;
            if (!swiper.enabled) return;
            if (!swiper.allowClick) {
                if (swiper.params.preventClicks) e.preventDefault();
                if (swiper.params.preventClicksPropagation && swiper.animating) {
                    e.stopPropagation();
                    e.stopImmediatePropagation();
                }
            }
        }
        function onScroll() {
            var swiper = this;
            var wrapperEl = swiper.wrapperEl, rtlTranslate = swiper.rtlTranslate, enabled = swiper.enabled;
            if (!enabled) return;
            swiper.previousTranslate = swiper.translate;
            if (swiper.isHorizontal()) if (rtlTranslate) swiper.translate = wrapperEl.scrollWidth - wrapperEl.offsetWidth - wrapperEl.scrollLeft; else swiper.translate = -wrapperEl.scrollLeft; else swiper.translate = -wrapperEl.scrollTop;
            if (-0 === swiper.translate) swiper.translate = 0;
            swiper.updateActiveIndex();
            swiper.updateSlidesClasses();
            var newProgress;
            var translatesDiff = swiper.maxTranslate() - swiper.minTranslate();
            if (0 === translatesDiff) newProgress = 0; else newProgress = (swiper.translate - swiper.minTranslate()) / translatesDiff;
            if (newProgress !== swiper.progress) swiper.updateProgress(rtlTranslate ? -swiper.translate : swiper.translate);
            swiper.emit("setTranslate", swiper.translate, false);
        }
        var dummyEventAttached = false;
        function dummyEventListener() {}
        function attachEvents() {
            var swiper = this;
            var document = (0, ssr_window_esm.getDocument)();
            var params = swiper.params, touchEvents = swiper.touchEvents, el = swiper.el, wrapperEl = swiper.wrapperEl, device = swiper.device, support = swiper.support;
            swiper.onTouchStart = onTouchStart.bind(swiper);
            swiper.onTouchMove = onTouchMove.bind(swiper);
            swiper.onTouchEnd = onTouchEnd.bind(swiper);
            if (params.cssMode) swiper.onScroll = onScroll.bind(swiper);
            swiper.onClick = onClick.bind(swiper);
            var capture = !!params.nested;
            if (!support.touch && support.pointerEvents) {
                el.addEventListener(touchEvents.start, swiper.onTouchStart, false);
                document.addEventListener(touchEvents.move, swiper.onTouchMove, capture);
                document.addEventListener(touchEvents.end, swiper.onTouchEnd, false);
            } else {
                if (support.touch) {
                    var passiveListener = "touchstart" === touchEvents.start && support.passiveListener && params.passiveListeners ? {
                        passive: true,
                        capture: false
                    } : false;
                    el.addEventListener(touchEvents.start, swiper.onTouchStart, passiveListener);
                    el.addEventListener(touchEvents.move, swiper.onTouchMove, support.passiveListener ? {
                        passive: false,
                        capture
                    } : capture);
                    el.addEventListener(touchEvents.end, swiper.onTouchEnd, passiveListener);
                    if (touchEvents.cancel) el.addEventListener(touchEvents.cancel, swiper.onTouchEnd, passiveListener);
                    if (!dummyEventAttached) {
                        document.addEventListener("touchstart", dummyEventListener);
                        dummyEventAttached = true;
                    }
                }
                if (params.simulateTouch && !device.ios && !device.android || params.simulateTouch && !support.touch && device.ios) {
                    el.addEventListener("mousedown", swiper.onTouchStart, false);
                    document.addEventListener("mousemove", swiper.onTouchMove, capture);
                    document.addEventListener("mouseup", swiper.onTouchEnd, false);
                }
            }
            if (params.preventClicks || params.preventClicksPropagation) el.addEventListener("click", swiper.onClick, true);
            if (params.cssMode) wrapperEl.addEventListener("scroll", swiper.onScroll);
            if (params.updateOnWindowResize) swiper.on(device.ios || device.android ? "resize orientationchange observerUpdate" : "resize observerUpdate", onResize, true); else swiper.on("observerUpdate", onResize, true);
        }
        function detachEvents() {
            var swiper = this;
            var document = (0, ssr_window_esm.getDocument)();
            var params = swiper.params, touchEvents = swiper.touchEvents, el = swiper.el, wrapperEl = swiper.wrapperEl, device = swiper.device, support = swiper.support;
            var capture = !!params.nested;
            if (!support.touch && support.pointerEvents) {
                el.removeEventListener(touchEvents.start, swiper.onTouchStart, false);
                document.removeEventListener(touchEvents.move, swiper.onTouchMove, capture);
                document.removeEventListener(touchEvents.end, swiper.onTouchEnd, false);
            } else {
                if (support.touch) {
                    var passiveListener = "onTouchStart" === touchEvents.start && support.passiveListener && params.passiveListeners ? {
                        passive: true,
                        capture: false
                    } : false;
                    el.removeEventListener(touchEvents.start, swiper.onTouchStart, passiveListener);
                    el.removeEventListener(touchEvents.move, swiper.onTouchMove, capture);
                    el.removeEventListener(touchEvents.end, swiper.onTouchEnd, passiveListener);
                    if (touchEvents.cancel) el.removeEventListener(touchEvents.cancel, swiper.onTouchEnd, passiveListener);
                }
                if (params.simulateTouch && !device.ios && !device.android || params.simulateTouch && !support.touch && device.ios) {
                    el.removeEventListener("mousedown", swiper.onTouchStart, false);
                    document.removeEventListener("mousemove", swiper.onTouchMove, capture);
                    document.removeEventListener("mouseup", swiper.onTouchEnd, false);
                }
            }
            if (params.preventClicks || params.preventClicksPropagation) el.removeEventListener("click", swiper.onClick, true);
            if (params.cssMode) wrapperEl.removeEventListener("scroll", swiper.onScroll);
            swiper.off(device.ios || device.android ? "resize orientationchange observerUpdate" : "resize observerUpdate", onResize);
        }
        const events = {
            attachEvents,
            detachEvents
        };
        function setBreakpoint() {
            var swiper = this;
            var activeIndex = swiper.activeIndex, initialized = swiper.initialized, _swiper$loopedSlides = swiper.loopedSlides, loopedSlides = void 0 === _swiper$loopedSlides ? 0 : _swiper$loopedSlides, params = swiper.params, $el = swiper.$el;
            var breakpoints = params.breakpoints;
            if (!breakpoints || breakpoints && 0 === Object.keys(breakpoints).length) return;
            var breakpoint = swiper.getBreakpoint(breakpoints, swiper.params.breakpointsBase, swiper.el);
            if (!breakpoint || swiper.currentBreakpoint === breakpoint) return;
            var breakpointOnlyParams = breakpoint in breakpoints ? breakpoints[breakpoint] : void 0;
            if (breakpointOnlyParams) [ "slidesPerView", "spaceBetween", "slidesPerGroup", "slidesPerGroupSkip", "slidesPerColumn" ].forEach((function(param) {
                var paramValue = breakpointOnlyParams[param];
                if ("undefined" === typeof paramValue) return;
                if ("slidesPerView" === param && ("AUTO" === paramValue || "auto" === paramValue)) breakpointOnlyParams[param] = "auto"; else if ("slidesPerView" === param) breakpointOnlyParams[param] = parseFloat(paramValue); else breakpointOnlyParams[param] = parseInt(paramValue, 10);
            }));
            var breakpointParams = breakpointOnlyParams || swiper.originalParams;
            var wasMultiRow = params.slidesPerColumn > 1;
            var isMultiRow = breakpointParams.slidesPerColumn > 1;
            var wasEnabled = params.enabled;
            if (wasMultiRow && !isMultiRow) {
                $el.removeClass(params.containerModifierClass + "multirow " + params.containerModifierClass + "multirow-column");
                swiper.emitContainerClasses();
            } else if (!wasMultiRow && isMultiRow) {
                $el.addClass(params.containerModifierClass + "multirow");
                if (breakpointParams.slidesPerColumnFill && "column" === breakpointParams.slidesPerColumnFill || !breakpointParams.slidesPerColumnFill && "column" === params.slidesPerColumnFill) $el.addClass(params.containerModifierClass + "multirow-column");
                swiper.emitContainerClasses();
            }
            var directionChanged = breakpointParams.direction && breakpointParams.direction !== params.direction;
            var needsReLoop = params.loop && (breakpointParams.slidesPerView !== params.slidesPerView || directionChanged);
            if (directionChanged && initialized) swiper.changeDirection();
            (0, utils.extend)(swiper.params, breakpointParams);
            var isEnabled = swiper.params.enabled;
            (0, utils.extend)(swiper, {
                allowTouchMove: swiper.params.allowTouchMove,
                allowSlideNext: swiper.params.allowSlideNext,
                allowSlidePrev: swiper.params.allowSlidePrev
            });
            if (wasEnabled && !isEnabled) swiper.disable(); else if (!wasEnabled && isEnabled) swiper.enable();
            swiper.currentBreakpoint = breakpoint;
            swiper.emit("_beforeBreakpoint", breakpointParams);
            if (needsReLoop && initialized) {
                swiper.loopDestroy();
                swiper.loopCreate();
                swiper.updateSlides();
                swiper.slideTo(activeIndex - loopedSlides + swiper.loopedSlides, 0, false);
            }
            swiper.emit("breakpoint", breakpointParams);
        }
        function getBreakpoint(breakpoints, base, containerEl) {
            if (void 0 === base) base = "window";
            if (!breakpoints || "container" === base && !containerEl) return;
            var breakpoint = false;
            var window = (0, ssr_window_esm.getWindow)();
            var currentHeight = "window" === base ? window.innerHeight : containerEl.clientHeight;
            var points = Object.keys(breakpoints).map((function(point) {
                if ("string" === typeof point && 0 === point.indexOf("@")) {
                    var minRatio = parseFloat(point.substr(1));
                    var value = currentHeight * minRatio;
                    return {
                        value,
                        point
                    };
                }
                return {
                    value: point,
                    point
                };
            }));
            points.sort((function(a, b) {
                return parseInt(a.value, 10) - parseInt(b.value, 10);
            }));
            for (var i = 0; i < points.length; i += 1) {
                var _points$i = points[i], point = _points$i.point, value = _points$i.value;
                if ("window" === base) {
                    if (window.matchMedia("(min-width: " + value + "px)").matches) breakpoint = point;
                } else if (value <= containerEl.clientWidth) breakpoint = point;
            }
            return breakpoint || "max";
        }
        const breakpoints = {
            setBreakpoint,
            getBreakpoint
        };
        function prepareClasses(entries, prefix) {
            var resultClasses = [];
            entries.forEach((function(item) {
                if ("object" === typeof item) Object.keys(item).forEach((function(classNames) {
                    if (item[classNames]) resultClasses.push(prefix + classNames);
                })); else if ("string" === typeof item) resultClasses.push(prefix + item);
            }));
            return resultClasses;
        }
        function addClasses() {
            var swiper = this;
            var classNames = swiper.classNames, params = swiper.params, rtl = swiper.rtl, $el = swiper.$el, device = swiper.device, support = swiper.support;
            var suffixes = prepareClasses([ "initialized", params.direction, {
                "pointer-events": support.pointerEvents && !support.touch
            }, {
                "free-mode": params.freeMode
            }, {
                autoheight: params.autoHeight
            }, {
                rtl
            }, {
                multirow: params.slidesPerColumn > 1
            }, {
                "multirow-column": params.slidesPerColumn > 1 && "column" === params.slidesPerColumnFill
            }, {
                android: device.android
            }, {
                ios: device.ios
            }, {
                "css-mode": params.cssMode
            } ], params.containerModifierClass);
            classNames.push.apply(classNames, suffixes);
            $el.addClass([].concat(classNames).join(" "));
            swiper.emitContainerClasses();
        }
        function removeClasses() {
            var swiper = this;
            var $el = swiper.$el, classNames = swiper.classNames;
            $el.removeClass(classNames.join(" "));
            swiper.emitContainerClasses();
        }
        const classes = {
            addClasses,
            removeClasses
        };
        function loadImage(imageEl, src, srcset, sizes, checkForComplete, callback) {
            var window = (0, ssr_window_esm.getWindow)();
            var image;
            function onReady() {
                if (callback) callback();
            }
            var isPicture = (0, dom["default"])(imageEl).parent("picture")[0];
            if (!isPicture && (!imageEl.complete || !checkForComplete)) if (src) {
                image = new window.Image;
                image.onload = onReady;
                image.onerror = onReady;
                if (sizes) image.sizes = sizes;
                if (srcset) image.srcset = srcset;
                if (src) image.src = src;
            } else onReady(); else onReady();
        }
        function preloadImages() {
            var swiper = this;
            swiper.imagesToLoad = swiper.$el.find("img");
            function onReady() {
                if ("undefined" === typeof swiper || null === swiper || !swiper || swiper.destroyed) return;
                if (void 0 !== swiper.imagesLoaded) swiper.imagesLoaded += 1;
                if (swiper.imagesLoaded === swiper.imagesToLoad.length) {
                    if (swiper.params.updateOnImagesReady) swiper.update();
                    swiper.emit("imagesReady");
                }
            }
            for (var i = 0; i < swiper.imagesToLoad.length; i += 1) {
                var imageEl = swiper.imagesToLoad[i];
                swiper.loadImage(imageEl, imageEl.currentSrc || imageEl.getAttribute("src"), imageEl.srcset || imageEl.getAttribute("srcset"), imageEl.sizes || imageEl.getAttribute("sizes"), true, onReady);
            }
        }
        const core_images = {
            loadImage,
            preloadImages
        };
        function checkOverflow() {
            var swiper = this;
            var params = swiper.params;
            var wasLocked = swiper.isLocked;
            var lastSlidePosition = swiper.slides.length > 0 && params.slidesOffsetBefore + params.spaceBetween * (swiper.slides.length - 1) + swiper.slides[0].offsetWidth * swiper.slides.length;
            if (params.slidesOffsetBefore && params.slidesOffsetAfter && lastSlidePosition) swiper.isLocked = lastSlidePosition <= swiper.size; else swiper.isLocked = 1 === swiper.snapGrid.length;
            swiper.allowSlideNext = !swiper.isLocked;
            swiper.allowSlidePrev = !swiper.isLocked;
            if (wasLocked !== swiper.isLocked) swiper.emit(swiper.isLocked ? "lock" : "unlock");
            if (wasLocked && wasLocked !== swiper.isLocked) {
                swiper.isEnd = false;
                if (swiper.navigation) swiper.navigation.update();
            }
        }
        const check_overflow = {
            checkOverflow
        };
        const defaults = {
            init: true,
            direction: "horizontal",
            touchEventsTarget: "container",
            initialSlide: 0,
            speed: 300,
            cssMode: false,
            updateOnWindowResize: true,
            resizeObserver: false,
            nested: false,
            createElements: false,
            enabled: true,
            focusableElements: "input, select, option, textarea, button, video, label",
            width: null,
            height: null,
            preventInteractionOnTransition: false,
            userAgent: null,
            url: null,
            edgeSwipeDetection: false,
            edgeSwipeThreshold: 20,
            freeMode: false,
            freeModeMomentum: true,
            freeModeMomentumRatio: 1,
            freeModeMomentumBounce: true,
            freeModeMomentumBounceRatio: 1,
            freeModeMomentumVelocityRatio: 1,
            freeModeSticky: false,
            freeModeMinimumVelocity: .02,
            autoHeight: false,
            setWrapperSize: false,
            virtualTranslate: false,
            effect: "slide",
            breakpoints: void 0,
            breakpointsBase: "window",
            spaceBetween: 0,
            slidesPerView: 1,
            slidesPerColumn: 1,
            slidesPerColumnFill: "column",
            slidesPerGroup: 1,
            slidesPerGroupSkip: 0,
            centeredSlides: false,
            centeredSlidesBounds: false,
            slidesOffsetBefore: 0,
            slidesOffsetAfter: 0,
            normalizeSlideIndex: true,
            centerInsufficientSlides: false,
            watchOverflow: false,
            roundLengths: false,
            touchRatio: 1,
            touchAngle: 45,
            simulateTouch: true,
            shortSwipes: true,
            longSwipes: true,
            longSwipesRatio: .5,
            longSwipesMs: 300,
            followFinger: true,
            allowTouchMove: true,
            threshold: 0,
            touchMoveStopPropagation: false,
            touchStartPreventDefault: true,
            touchStartForcePreventDefault: false,
            touchReleaseOnEdges: false,
            uniqueNavElements: true,
            resistance: true,
            resistanceRatio: .85,
            watchSlidesProgress: false,
            watchSlidesVisibility: false,
            grabCursor: false,
            preventClicks: true,
            preventClicksPropagation: true,
            slideToClickedSlide: false,
            preloadImages: true,
            updateOnImagesReady: true,
            loop: false,
            loopAdditionalSlides: 0,
            loopedSlides: null,
            loopFillGroupWithBlank: false,
            loopPreventsSlide: true,
            allowSlidePrev: true,
            allowSlideNext: true,
            swipeHandler: null,
            noSwiping: true,
            noSwipingClass: "swiper-no-swiping",
            noSwipingSelector: null,
            passiveListeners: true,
            containerModifierClass: "swiper-container-",
            slideClass: "swiper-slide",
            slideBlankClass: "swiper-slide-invisible-blank",
            slideActiveClass: "swiper-slide-active",
            slideDuplicateActiveClass: "swiper-slide-duplicate-active",
            slideVisibleClass: "swiper-slide-visible",
            slideDuplicateClass: "swiper-slide-duplicate",
            slideNextClass: "swiper-slide-next",
            slideDuplicateNextClass: "swiper-slide-duplicate-next",
            slidePrevClass: "swiper-slide-prev",
            slideDuplicatePrevClass: "swiper-slide-duplicate-prev",
            wrapperClass: "swiper-wrapper",
            runCallbacksOnInit: true,
            _emitClasses: false
        };
        function _defineProperties(target, props) {
            for (var i = 0; i < props.length; i++) {
                var descriptor = props[i];
                descriptor.enumerable = descriptor.enumerable || false;
                descriptor.configurable = true;
                if ("value" in descriptor) descriptor.writable = true;
                Object.defineProperty(target, descriptor.key, descriptor);
            }
        }
        function _createClass(Constructor, protoProps, staticProps) {
            if (protoProps) _defineProperties(Constructor.prototype, protoProps);
            if (staticProps) _defineProperties(Constructor, staticProps);
            return Constructor;
        }
        var prototypes = {
            modular,
            eventsEmitter: events_emitter,
            update,
            translate,
            transition,
            slide,
            loop,
            grabCursor: grab_cursor,
            manipulation,
            events,
            breakpoints,
            checkOverflow: check_overflow,
            classes,
            images: core_images
        };
        var extendedDefaults = {};
        var Swiper = function() {
            function Swiper() {
                var el;
                var params;
                for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) args[_key] = arguments[_key];
                if (1 === args.length && args[0].constructor && "Object" === Object.prototype.toString.call(args[0]).slice(8, -1)) params = args[0]; else {
                    el = args[0];
                    params = args[1];
                }
                if (!params) params = {};
                params = (0, utils.extend)({}, params);
                if (el && !params.el) params.el = el;
                if (params.el && (0, dom["default"])(params.el).length > 1) {
                    var swipers = [];
                    (0, dom["default"])(params.el).each((function(containerEl) {
                        var newParams = (0, utils.extend)({}, params, {
                            el: containerEl
                        });
                        swipers.push(new Swiper(newParams));
                    }));
                    return swipers;
                }
                var swiper = this;
                swiper.__swiper__ = true;
                swiper.support = getSupport();
                swiper.device = getDevice({
                    userAgent: params.userAgent
                });
                swiper.browser = getBrowser();
                swiper.eventsListeners = {};
                swiper.eventsAnyListeners = [];
                if ("undefined" === typeof swiper.modules) swiper.modules = {};
                Object.keys(swiper.modules).forEach((function(moduleName) {
                    var module = swiper.modules[moduleName];
                    if (module.params) {
                        var moduleParamName = Object.keys(module.params)[0];
                        var moduleParams = module.params[moduleParamName];
                        if ("object" !== typeof moduleParams || null === moduleParams) return;
                        if ([ "navigation", "pagination", "scrollbar" ].indexOf(moduleParamName) >= 0 && true === params[moduleParamName]) params[moduleParamName] = {
                            auto: true
                        };
                        if (!(moduleParamName in params && "enabled" in moduleParams)) return;
                        if (true === params[moduleParamName]) params[moduleParamName] = {
                            enabled: true
                        };
                        if ("object" === typeof params[moduleParamName] && !("enabled" in params[moduleParamName])) params[moduleParamName].enabled = true;
                        if (!params[moduleParamName]) params[moduleParamName] = {
                            enabled: false
                        };
                    }
                }));
                var swiperParams = (0, utils.extend)({}, defaults);
                swiper.useParams(swiperParams);
                swiper.params = (0, utils.extend)({}, swiperParams, extendedDefaults, params);
                swiper.originalParams = (0, utils.extend)({}, swiper.params);
                swiper.passedParams = (0, utils.extend)({}, params);
                if (swiper.params && swiper.params.on) Object.keys(swiper.params.on).forEach((function(eventName) {
                    swiper.on(eventName, swiper.params.on[eventName]);
                }));
                if (swiper.params && swiper.params.onAny) swiper.onAny(swiper.params.onAny);
                swiper.$ = dom["default"];
                (0, utils.extend)(swiper, {
                    enabled: swiper.params.enabled,
                    el,
                    classNames: [],
                    slides: (0, dom["default"])(),
                    slidesGrid: [],
                    snapGrid: [],
                    slidesSizesGrid: [],
                    isHorizontal: function() {
                        return "horizontal" === swiper.params.direction;
                    },
                    isVertical: function() {
                        return "vertical" === swiper.params.direction;
                    },
                    activeIndex: 0,
                    realIndex: 0,
                    isBeginning: true,
                    isEnd: false,
                    translate: 0,
                    previousTranslate: 0,
                    progress: 0,
                    velocity: 0,
                    animating: false,
                    allowSlideNext: swiper.params.allowSlideNext,
                    allowSlidePrev: swiper.params.allowSlidePrev,
                    touchEvents: function() {
                        var touch = [ "touchstart", "touchmove", "touchend", "touchcancel" ];
                        var desktop = [ "mousedown", "mousemove", "mouseup" ];
                        if (swiper.support.pointerEvents) desktop = [ "pointerdown", "pointermove", "pointerup" ];
                        swiper.touchEventsTouch = {
                            start: touch[0],
                            move: touch[1],
                            end: touch[2],
                            cancel: touch[3]
                        };
                        swiper.touchEventsDesktop = {
                            start: desktop[0],
                            move: desktop[1],
                            end: desktop[2]
                        };
                        return swiper.support.touch || !swiper.params.simulateTouch ? swiper.touchEventsTouch : swiper.touchEventsDesktop;
                    }(),
                    touchEventsData: {
                        isTouched: void 0,
                        isMoved: void 0,
                        allowTouchCallbacks: void 0,
                        touchStartTime: void 0,
                        isScrolling: void 0,
                        currentTranslate: void 0,
                        startTranslate: void 0,
                        allowThresholdMove: void 0,
                        focusableElements: swiper.params.focusableElements,
                        lastClickTime: (0, utils.now)(),
                        clickTimeout: void 0,
                        velocities: [],
                        allowMomentumBounce: void 0,
                        isTouchEvent: void 0,
                        startMoving: void 0
                    },
                    allowClick: true,
                    allowTouchMove: swiper.params.allowTouchMove,
                    touches: {
                        startX: 0,
                        startY: 0,
                        currentX: 0,
                        currentY: 0,
                        diff: 0
                    },
                    imagesToLoad: [],
                    imagesLoaded: 0
                });
                swiper.useModules();
                swiper.emit("_swiper");
                if (swiper.params.init) swiper.init();
                return swiper;
            }
            var _proto = Swiper.prototype;
            _proto.enable = function() {
                var swiper = this;
                if (swiper.enabled) return;
                swiper.enabled = true;
                if (swiper.params.grabCursor) swiper.setGrabCursor();
                swiper.emit("enable");
            };
            _proto.disable = function() {
                var swiper = this;
                if (!swiper.enabled) return;
                swiper.enabled = false;
                if (swiper.params.grabCursor) swiper.unsetGrabCursor();
                swiper.emit("disable");
            };
            _proto.setProgress = function(progress, speed) {
                var swiper = this;
                progress = Math.min(Math.max(progress, 0), 1);
                var min = swiper.minTranslate();
                var max = swiper.maxTranslate();
                var current = (max - min) * progress + min;
                swiper.translateTo(current, "undefined" === typeof speed ? 0 : speed);
                swiper.updateActiveIndex();
                swiper.updateSlidesClasses();
            };
            _proto.emitContainerClasses = function() {
                var swiper = this;
                if (!swiper.params._emitClasses || !swiper.el) return;
                var classes = swiper.el.className.split(" ").filter((function(className) {
                    return 0 === className.indexOf("swiper-container") || 0 === className.indexOf(swiper.params.containerModifierClass);
                }));
                swiper.emit("_containerClasses", classes.join(" "));
            };
            _proto.getSlideClasses = function(slideEl) {
                var swiper = this;
                return slideEl.className.split(" ").filter((function(className) {
                    return 0 === className.indexOf("swiper-slide") || 0 === className.indexOf(swiper.params.slideClass);
                })).join(" ");
            };
            _proto.emitSlidesClasses = function() {
                var swiper = this;
                if (!swiper.params._emitClasses || !swiper.el) return;
                var updates = [];
                swiper.slides.each((function(slideEl) {
                    var classNames = swiper.getSlideClasses(slideEl);
                    updates.push({
                        slideEl,
                        classNames
                    });
                    swiper.emit("_slideClass", slideEl, classNames);
                }));
                swiper.emit("_slideClasses", updates);
            };
            _proto.slidesPerViewDynamic = function() {
                var swiper = this;
                var params = swiper.params, slides = swiper.slides, slidesGrid = swiper.slidesGrid, swiperSize = swiper.size, activeIndex = swiper.activeIndex;
                var spv = 1;
                if (params.centeredSlides) {
                    var slideSize = slides[activeIndex].swiperSlideSize;
                    var breakLoop;
                    for (var i = activeIndex + 1; i < slides.length; i += 1) if (slides[i] && !breakLoop) {
                        slideSize += slides[i].swiperSlideSize;
                        spv += 1;
                        if (slideSize > swiperSize) breakLoop = true;
                    }
                    for (var _i = activeIndex - 1; _i >= 0; _i -= 1) if (slides[_i] && !breakLoop) {
                        slideSize += slides[_i].swiperSlideSize;
                        spv += 1;
                        if (slideSize > swiperSize) breakLoop = true;
                    }
                } else for (var _i2 = activeIndex + 1; _i2 < slides.length; _i2 += 1) if (slidesGrid[_i2] - slidesGrid[activeIndex] < swiperSize) spv += 1;
                return spv;
            };
            _proto.update = function() {
                var swiper = this;
                if (!swiper || swiper.destroyed) return;
                var snapGrid = swiper.snapGrid, params = swiper.params;
                if (params.breakpoints) swiper.setBreakpoint();
                swiper.updateSize();
                swiper.updateSlides();
                swiper.updateProgress();
                swiper.updateSlidesClasses();
                function setTranslate() {
                    var translateValue = swiper.rtlTranslate ? -1 * swiper.translate : swiper.translate;
                    var newTranslate = Math.min(Math.max(translateValue, swiper.maxTranslate()), swiper.minTranslate());
                    swiper.setTranslate(newTranslate);
                    swiper.updateActiveIndex();
                    swiper.updateSlidesClasses();
                }
                var translated;
                if (swiper.params.freeMode) {
                    setTranslate();
                    if (swiper.params.autoHeight) swiper.updateAutoHeight();
                } else {
                    if (("auto" === swiper.params.slidesPerView || swiper.params.slidesPerView > 1) && swiper.isEnd && !swiper.params.centeredSlides) translated = swiper.slideTo(swiper.slides.length - 1, 0, false, true); else translated = swiper.slideTo(swiper.activeIndex, 0, false, true);
                    if (!translated) setTranslate();
                }
                if (params.watchOverflow && snapGrid !== swiper.snapGrid) swiper.checkOverflow();
                swiper.emit("update");
            };
            _proto.changeDirection = function(newDirection, needUpdate) {
                if (void 0 === needUpdate) needUpdate = true;
                var swiper = this;
                var currentDirection = swiper.params.direction;
                if (!newDirection) newDirection = "horizontal" === currentDirection ? "vertical" : "horizontal";
                if (newDirection === currentDirection || "horizontal" !== newDirection && "vertical" !== newDirection) return swiper;
                swiper.$el.removeClass("" + swiper.params.containerModifierClass + currentDirection).addClass("" + swiper.params.containerModifierClass + newDirection);
                swiper.emitContainerClasses();
                swiper.params.direction = newDirection;
                swiper.slides.each((function(slideEl) {
                    if ("vertical" === newDirection) slideEl.style.width = ""; else slideEl.style.height = "";
                }));
                swiper.emit("changeDirection");
                if (needUpdate) swiper.update();
                return swiper;
            };
            _proto.mount = function(el) {
                var swiper = this;
                if (swiper.mounted) return true;
                var $el = (0, dom["default"])(el || swiper.params.el);
                el = $el[0];
                if (!el) return false;
                el.swiper = swiper;
                var getWrapperSelector = function() {
                    return "." + (swiper.params.wrapperClass || "").trim().split(" ").join(".");
                };
                var getWrapper = function() {
                    if (el && el.shadowRoot && el.shadowRoot.querySelector) {
                        var res = (0, dom["default"])(el.shadowRoot.querySelector(getWrapperSelector()));
                        res.children = function(options) {
                            return $el.children(options);
                        };
                        return res;
                    }
                    return $el.children(getWrapperSelector());
                };
                var $wrapperEl = getWrapper();
                if (0 === $wrapperEl.length && swiper.params.createElements) {
                    var document = (0, ssr_window_esm.getDocument)();
                    var wrapper = document.createElement("div");
                    $wrapperEl = (0, dom["default"])(wrapper);
                    wrapper.className = swiper.params.wrapperClass;
                    $el.append(wrapper);
                    $el.children("." + swiper.params.slideClass).each((function(slideEl) {
                        $wrapperEl.append(slideEl);
                    }));
                }
                (0, utils.extend)(swiper, {
                    $el,
                    el,
                    $wrapperEl,
                    wrapperEl: $wrapperEl[0],
                    mounted: true,
                    rtl: "rtl" === el.dir.toLowerCase() || "rtl" === $el.css("direction"),
                    rtlTranslate: "horizontal" === swiper.params.direction && ("rtl" === el.dir.toLowerCase() || "rtl" === $el.css("direction")),
                    wrongRTL: "-webkit-box" === $wrapperEl.css("display")
                });
                return true;
            };
            _proto.init = function(el) {
                var swiper = this;
                if (swiper.initialized) return swiper;
                var mounted = swiper.mount(el);
                if (false === mounted) return swiper;
                swiper.emit("beforeInit");
                if (swiper.params.breakpoints) swiper.setBreakpoint();
                swiper.addClasses();
                if (swiper.params.loop) swiper.loopCreate();
                swiper.updateSize();
                swiper.updateSlides();
                if (swiper.params.watchOverflow) swiper.checkOverflow();
                if (swiper.params.grabCursor && swiper.enabled) swiper.setGrabCursor();
                if (swiper.params.preloadImages) swiper.preloadImages();
                if (swiper.params.loop) swiper.slideTo(swiper.params.initialSlide + swiper.loopedSlides, 0, swiper.params.runCallbacksOnInit, false, true); else swiper.slideTo(swiper.params.initialSlide, 0, swiper.params.runCallbacksOnInit, false, true);
                swiper.attachEvents();
                swiper.initialized = true;
                swiper.emit("init");
                swiper.emit("afterInit");
                return swiper;
            };
            _proto.destroy = function(deleteInstance, cleanStyles) {
                if (void 0 === deleteInstance) deleteInstance = true;
                if (void 0 === cleanStyles) cleanStyles = true;
                var swiper = this;
                var params = swiper.params, $el = swiper.$el, $wrapperEl = swiper.$wrapperEl, slides = swiper.slides;
                if ("undefined" === typeof swiper.params || swiper.destroyed) return null;
                swiper.emit("beforeDestroy");
                swiper.initialized = false;
                swiper.detachEvents();
                if (params.loop) swiper.loopDestroy();
                if (cleanStyles) {
                    swiper.removeClasses();
                    $el.removeAttr("style");
                    $wrapperEl.removeAttr("style");
                    if (slides && slides.length) slides.removeClass([ params.slideVisibleClass, params.slideActiveClass, params.slideNextClass, params.slidePrevClass ].join(" ")).removeAttr("style").removeAttr("data-swiper-slide-index");
                }
                swiper.emit("destroy");
                Object.keys(swiper.eventsListeners).forEach((function(eventName) {
                    swiper.off(eventName);
                }));
                if (false !== deleteInstance) {
                    swiper.$el[0].swiper = null;
                    (0, utils.deleteProps)(swiper);
                }
                swiper.destroyed = true;
                return null;
            };
            Swiper.extendDefaults = function(newDefaults) {
                (0, utils.extend)(extendedDefaults, newDefaults);
            };
            Swiper.installModule = function(module) {
                if (!Swiper.prototype.modules) Swiper.prototype.modules = {};
                var name = module.name || Object.keys(Swiper.prototype.modules).length + "_" + (0, 
                utils.now)();
                Swiper.prototype.modules[name] = module;
            };
            Swiper.use = function(module) {
                if (Array.isArray(module)) {
                    module.forEach((function(m) {
                        return Swiper.installModule(m);
                    }));
                    return Swiper;
                }
                Swiper.installModule(module);
                return Swiper;
            };
            _createClass(Swiper, null, [ {
                key: "extendedDefaults",
                get: function() {
                    return extendedDefaults;
                }
            }, {
                key: "defaults",
                get: function() {
                    return defaults;
                }
            } ]);
            return Swiper;
        }();
        Object.keys(prototypes).forEach((function(prototypeGroup) {
            Object.keys(prototypes[prototypeGroup]).forEach((function(protoMethod) {
                Swiper.prototype[protoMethod] = prototypes[prototypeGroup][protoMethod];
            }));
        }));
        Swiper.use([ resize, observer ]);
        const core_class = Swiper;
    },
    "./node_modules/swiper/esm/components/effect-fade/effect-fade.js": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
        "use strict";
        __webpack_require__.d(__webpack_exports__, {
            default: () => __WEBPACK_DEFAULT_EXPORT__
        });
        var _utils_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/swiper/esm/utils/utils.js");
        function _extends() {
            _extends = Object.assign || function(target) {
                for (var i = 1; i < arguments.length; i++) {
                    var source = arguments[i];
                    for (var key in source) if (Object.prototype.hasOwnProperty.call(source, key)) target[key] = source[key];
                }
                return target;
            };
            return _extends.apply(this, arguments);
        }
        var Fade = {
            setTranslate: function() {
                var swiper = this;
                var slides = swiper.slides;
                for (var i = 0; i < slides.length; i += 1) {
                    var $slideEl = swiper.slides.eq(i);
                    var offset = $slideEl[0].swiperSlideOffset;
                    var tx = -offset;
                    if (!swiper.params.virtualTranslate) tx -= swiper.translate;
                    var ty = 0;
                    if (!swiper.isHorizontal()) {
                        ty = tx;
                        tx = 0;
                    }
                    var slideOpacity = swiper.params.fadeEffect.crossFade ? Math.max(1 - Math.abs($slideEl[0].progress), 0) : 1 + Math.min(Math.max($slideEl[0].progress, -1), 0);
                    $slideEl.css({
                        opacity: slideOpacity
                    }).transform("translate3d(" + tx + "px, " + ty + "px, 0px)");
                }
            },
            setTransition: function(duration) {
                var swiper = this;
                var slides = swiper.slides, $wrapperEl = swiper.$wrapperEl;
                slides.transition(duration);
                if (swiper.params.virtualTranslate && 0 !== duration) {
                    var eventTriggered = false;
                    slides.transitionEnd((function() {
                        if (eventTriggered) return;
                        if (!swiper || swiper.destroyed) return;
                        eventTriggered = true;
                        swiper.animating = false;
                        var triggerEvents = [ "webkitTransitionEnd", "transitionend" ];
                        for (var i = 0; i < triggerEvents.length; i += 1) $wrapperEl.trigger(triggerEvents[i]);
                    }));
                }
            }
        };
        const __WEBPACK_DEFAULT_EXPORT__ = {
            name: "effect-fade",
            params: {
                fadeEffect: {
                    crossFade: false
                }
            },
            create: function() {
                var swiper = this;
                (0, _utils_utils__WEBPACK_IMPORTED_MODULE_0__.bindModuleMethods)(swiper, {
                    fadeEffect: _extends({}, Fade)
                });
            },
            on: {
                beforeInit: function(swiper) {
                    if ("fade" !== swiper.params.effect) return;
                    swiper.classNames.push(swiper.params.containerModifierClass + "fade");
                    var overwriteParams = {
                        slidesPerView: 1,
                        slidesPerColumn: 1,
                        slidesPerGroup: 1,
                        watchSlidesProgress: true,
                        spaceBetween: 0,
                        virtualTranslate: true
                    };
                    (0, _utils_utils__WEBPACK_IMPORTED_MODULE_0__.extend)(swiper.params, overwriteParams);
                    (0, _utils_utils__WEBPACK_IMPORTED_MODULE_0__.extend)(swiper.originalParams, overwriteParams);
                },
                setTranslate: function(swiper) {
                    if ("fade" !== swiper.params.effect) return;
                    swiper.fadeEffect.setTranslate();
                },
                setTransition: function(swiper, duration) {
                    if ("fade" !== swiper.params.effect) return;
                    swiper.fadeEffect.setTransition(duration);
                }
            }
        };
    },
    "./node_modules/swiper/esm/components/navigation/navigation.js": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
        "use strict";
        __webpack_require__.d(__webpack_exports__, {
            default: () => __WEBPACK_DEFAULT_EXPORT__
        });
        var _utils_dom__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/swiper/esm/utils/dom.js");
        var _utils_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/swiper/esm/utils/utils.js");
        function _extends() {
            _extends = Object.assign || function(target) {
                for (var i = 1; i < arguments.length; i++) {
                    var source = arguments[i];
                    for (var key in source) if (Object.prototype.hasOwnProperty.call(source, key)) target[key] = source[key];
                }
                return target;
            };
            return _extends.apply(this, arguments);
        }
        var Navigation = {
            toggleEl: function($el, disabled) {
                $el[disabled ? "addClass" : "removeClass"](this.params.navigation.disabledClass);
                if ($el[0] && "BUTTON" === $el[0].tagName) $el[0].disabled = disabled;
            },
            update: function() {
                var swiper = this;
                var params = swiper.params.navigation;
                var toggleEl = swiper.navigation.toggleEl;
                if (swiper.params.loop) return;
                var _swiper$navigation = swiper.navigation, $nextEl = _swiper$navigation.$nextEl, $prevEl = _swiper$navigation.$prevEl;
                if ($prevEl && $prevEl.length > 0) {
                    if (swiper.isBeginning) toggleEl($prevEl, true); else toggleEl($prevEl, false);
                    if (swiper.params.watchOverflow && swiper.enabled) $prevEl[swiper.isLocked ? "addClass" : "removeClass"](params.lockClass);
                }
                if ($nextEl && $nextEl.length > 0) {
                    if (swiper.isEnd) toggleEl($nextEl, true); else toggleEl($nextEl, false);
                    if (swiper.params.watchOverflow && swiper.enabled) $nextEl[swiper.isLocked ? "addClass" : "removeClass"](params.lockClass);
                }
            },
            onPrevClick: function(e) {
                var swiper = this;
                e.preventDefault();
                if (swiper.isBeginning && !swiper.params.loop) return;
                swiper.slidePrev();
            },
            onNextClick: function(e) {
                var swiper = this;
                e.preventDefault();
                if (swiper.isEnd && !swiper.params.loop) return;
                swiper.slideNext();
            },
            init: function() {
                var swiper = this;
                var params = swiper.params.navigation;
                swiper.params.navigation = (0, _utils_utils__WEBPACK_IMPORTED_MODULE_1__.createElementIfNotDefined)(swiper.$el, swiper.params.navigation, swiper.params.createElements, {
                    nextEl: "swiper-button-next",
                    prevEl: "swiper-button-prev"
                });
                if (!(params.nextEl || params.prevEl)) return;
                var $nextEl;
                var $prevEl;
                if (params.nextEl) {
                    $nextEl = (0, _utils_dom__WEBPACK_IMPORTED_MODULE_0__["default"])(params.nextEl);
                    if (swiper.params.uniqueNavElements && "string" === typeof params.nextEl && $nextEl.length > 1 && 1 === swiper.$el.find(params.nextEl).length) $nextEl = swiper.$el.find(params.nextEl);
                }
                if (params.prevEl) {
                    $prevEl = (0, _utils_dom__WEBPACK_IMPORTED_MODULE_0__["default"])(params.prevEl);
                    if (swiper.params.uniqueNavElements && "string" === typeof params.prevEl && $prevEl.length > 1 && 1 === swiper.$el.find(params.prevEl).length) $prevEl = swiper.$el.find(params.prevEl);
                }
                if ($nextEl && $nextEl.length > 0) $nextEl.on("click", swiper.navigation.onNextClick);
                if ($prevEl && $prevEl.length > 0) $prevEl.on("click", swiper.navigation.onPrevClick);
                (0, _utils_utils__WEBPACK_IMPORTED_MODULE_1__.extend)(swiper.navigation, {
                    $nextEl,
                    nextEl: $nextEl && $nextEl[0],
                    $prevEl,
                    prevEl: $prevEl && $prevEl[0]
                });
                if (!swiper.enabled) {
                    if ($nextEl) $nextEl.addClass(params.lockClass);
                    if ($prevEl) $prevEl.addClass(params.lockClass);
                }
            },
            destroy: function() {
                var swiper = this;
                var _swiper$navigation2 = swiper.navigation, $nextEl = _swiper$navigation2.$nextEl, $prevEl = _swiper$navigation2.$prevEl;
                if ($nextEl && $nextEl.length) {
                    $nextEl.off("click", swiper.navigation.onNextClick);
                    $nextEl.removeClass(swiper.params.navigation.disabledClass);
                }
                if ($prevEl && $prevEl.length) {
                    $prevEl.off("click", swiper.navigation.onPrevClick);
                    $prevEl.removeClass(swiper.params.navigation.disabledClass);
                }
            }
        };
        const __WEBPACK_DEFAULT_EXPORT__ = {
            name: "navigation",
            params: {
                navigation: {
                    nextEl: null,
                    prevEl: null,
                    hideOnClick: false,
                    disabledClass: "swiper-button-disabled",
                    hiddenClass: "swiper-button-hidden",
                    lockClass: "swiper-button-lock"
                }
            },
            create: function() {
                var swiper = this;
                (0, _utils_utils__WEBPACK_IMPORTED_MODULE_1__.bindModuleMethods)(swiper, {
                    navigation: _extends({}, Navigation)
                });
            },
            on: {
                init: function(swiper) {
                    swiper.navigation.init();
                    swiper.navigation.update();
                },
                toEdge: function(swiper) {
                    swiper.navigation.update();
                },
                fromEdge: function(swiper) {
                    swiper.navigation.update();
                },
                destroy: function(swiper) {
                    swiper.navigation.destroy();
                },
                "enable disable": function(swiper) {
                    var _swiper$navigation3 = swiper.navigation, $nextEl = _swiper$navigation3.$nextEl, $prevEl = _swiper$navigation3.$prevEl;
                    if ($nextEl) $nextEl[swiper.enabled ? "removeClass" : "addClass"](swiper.params.navigation.lockClass);
                    if ($prevEl) $prevEl[swiper.enabled ? "removeClass" : "addClass"](swiper.params.navigation.lockClass);
                },
                click: function(swiper, e) {
                    var _swiper$navigation4 = swiper.navigation, $nextEl = _swiper$navigation4.$nextEl, $prevEl = _swiper$navigation4.$prevEl;
                    var targetEl = e.target;
                    if (swiper.params.navigation.hideOnClick && !(0, _utils_dom__WEBPACK_IMPORTED_MODULE_0__["default"])(targetEl).is($prevEl) && !(0, 
                    _utils_dom__WEBPACK_IMPORTED_MODULE_0__["default"])(targetEl).is($nextEl)) {
                        if (swiper.pagination && swiper.params.pagination && swiper.params.pagination.clickable && (swiper.pagination.el === targetEl || swiper.pagination.el.contains(targetEl))) return;
                        var isHidden;
                        if ($nextEl) isHidden = $nextEl.hasClass(swiper.params.navigation.hiddenClass); else if ($prevEl) isHidden = $prevEl.hasClass(swiper.params.navigation.hiddenClass);
                        if (true === isHidden) swiper.emit("navigationShow"); else swiper.emit("navigationHide");
                        if ($nextEl) $nextEl.toggleClass(swiper.params.navigation.hiddenClass);
                        if ($prevEl) $prevEl.toggleClass(swiper.params.navigation.hiddenClass);
                    }
                }
            }
        };
    },
    "./node_modules/swiper/esm/utils/dom.js": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
        "use strict";
        __webpack_require__.d(__webpack_exports__, {
            default: () => dom
        });
        var ssr_window_esm = __webpack_require__("./node_modules/ssr-window/ssr-window.esm.js");
        function _inheritsLoose(subClass, superClass) {
            subClass.prototype = Object.create(superClass.prototype);
            subClass.prototype.constructor = subClass;
            subClass.__proto__ = superClass;
        }
        function _getPrototypeOf(o) {
            _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function(o) {
                return o.__proto__ || Object.getPrototypeOf(o);
            };
            return _getPrototypeOf(o);
        }
        function _setPrototypeOf(o, p) {
            _setPrototypeOf = Object.setPrototypeOf || function(o, p) {
                o.__proto__ = p;
                return o;
            };
            return _setPrototypeOf(o, p);
        }
        function _isNativeReflectConstruct() {
            if ("undefined" === typeof Reflect || !Reflect.construct) return false;
            if (Reflect.construct.sham) return false;
            if ("function" === typeof Proxy) return true;
            try {
                Date.prototype.toString.call(Reflect.construct(Date, [], (function() {})));
                return true;
            } catch (e) {
                return false;
            }
        }
        function _construct(Parent, args, Class) {
            if (_isNativeReflectConstruct()) _construct = Reflect.construct; else _construct = function(Parent, args, Class) {
                var a = [ null ];
                a.push.apply(a, args);
                var Constructor = Function.bind.apply(Parent, a);
                var instance = new Constructor;
                if (Class) _setPrototypeOf(instance, Class.prototype);
                return instance;
            };
            return _construct.apply(null, arguments);
        }
        function _isNativeFunction(fn) {
            return -1 !== Function.toString.call(fn).indexOf("[native code]");
        }
        function _wrapNativeSuper(Class) {
            var _cache = "function" === typeof Map ? new Map : void 0;
            _wrapNativeSuper = function(Class) {
                if (null === Class || !_isNativeFunction(Class)) return Class;
                if ("function" !== typeof Class) throw new TypeError("Super expression must either be null or a function");
                if ("undefined" !== typeof _cache) {
                    if (_cache.has(Class)) return _cache.get(Class);
                    _cache.set(Class, Wrapper);
                }
                function Wrapper() {
                    return _construct(Class, arguments, _getPrototypeOf(this).constructor);
                }
                Wrapper.prototype = Object.create(Class.prototype, {
                    constructor: {
                        value: Wrapper,
                        enumerable: false,
                        writable: true,
                        configurable: true
                    }
                });
                return _setPrototypeOf(Wrapper, Class);
            };
            return _wrapNativeSuper(Class);
        }
        function _assertThisInitialized(self) {
            if (void 0 === self) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            return self;
        }
        function makeReactive(obj) {
            var proto = obj.__proto__;
            Object.defineProperty(obj, "__proto__", {
                get: function() {
                    return proto;
                },
                set: function(value) {
                    proto.__proto__ = value;
                }
            });
        }
        var Dom7 = function(_Array) {
            _inheritsLoose(Dom7, _Array);
            function Dom7(items) {
                var _this;
                _this = _Array.call.apply(_Array, [ this ].concat(items)) || this;
                makeReactive(_assertThisInitialized(_this));
                return _this;
            }
            return Dom7;
        }(_wrapNativeSuper(Array));
        function arrayFlat(arr) {
            if (void 0 === arr) arr = [];
            var res = [];
            arr.forEach((function(el) {
                if (Array.isArray(el)) res.push.apply(res, arrayFlat(el)); else res.push(el);
            }));
            return res;
        }
        function arrayFilter(arr, callback) {
            return Array.prototype.filter.call(arr, callback);
        }
        function arrayUnique(arr) {
            var uniqueArray = [];
            for (var i = 0; i < arr.length; i += 1) if (-1 === uniqueArray.indexOf(arr[i])) uniqueArray.push(arr[i]);
            return uniqueArray;
        }
        function qsa(selector, context) {
            if ("string" !== typeof selector) return [ selector ];
            var a = [];
            var res = context.querySelectorAll(selector);
            for (var i = 0; i < res.length; i += 1) a.push(res[i]);
            return a;
        }
        function $(selector, context) {
            var window = (0, ssr_window_esm.getWindow)();
            var document = (0, ssr_window_esm.getDocument)();
            var arr = [];
            if (!context && selector instanceof Dom7) return selector;
            if (!selector) return new Dom7(arr);
            if ("string" === typeof selector) {
                var html = selector.trim();
                if (html.indexOf("<") >= 0 && html.indexOf(">") >= 0) {
                    var toCreate = "div";
                    if (0 === html.indexOf("<li")) toCreate = "ul";
                    if (0 === html.indexOf("<tr")) toCreate = "tbody";
                    if (0 === html.indexOf("<td") || 0 === html.indexOf("<th")) toCreate = "tr";
                    if (0 === html.indexOf("<tbody")) toCreate = "table";
                    if (0 === html.indexOf("<option")) toCreate = "select";
                    var tempParent = document.createElement(toCreate);
                    tempParent.innerHTML = html;
                    for (var i = 0; i < tempParent.childNodes.length; i += 1) arr.push(tempParent.childNodes[i]);
                } else arr = qsa(selector.trim(), context || document);
            } else if (selector.nodeType || selector === window || selector === document) arr.push(selector); else if (Array.isArray(selector)) {
                if (selector instanceof Dom7) return selector;
                arr = selector;
            }
            return new Dom7(arrayUnique(arr));
        }
        $.fn = Dom7.prototype;
        function addClass() {
            for (var _len = arguments.length, classes = new Array(_len), _key = 0; _key < _len; _key++) classes[_key] = arguments[_key];
            var classNames = arrayFlat(classes.map((function(c) {
                return c.split(" ");
            })));
            this.forEach((function(el) {
                var _el$classList;
                (_el$classList = el.classList).add.apply(_el$classList, classNames);
            }));
            return this;
        }
        function removeClass() {
            for (var _len2 = arguments.length, classes = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) classes[_key2] = arguments[_key2];
            var classNames = arrayFlat(classes.map((function(c) {
                return c.split(" ");
            })));
            this.forEach((function(el) {
                var _el$classList2;
                (_el$classList2 = el.classList).remove.apply(_el$classList2, classNames);
            }));
            return this;
        }
        function toggleClass() {
            for (var _len3 = arguments.length, classes = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) classes[_key3] = arguments[_key3];
            var classNames = arrayFlat(classes.map((function(c) {
                return c.split(" ");
            })));
            this.forEach((function(el) {
                classNames.forEach((function(className) {
                    el.classList.toggle(className);
                }));
            }));
        }
        function hasClass() {
            for (var _len4 = arguments.length, classes = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) classes[_key4] = arguments[_key4];
            var classNames = arrayFlat(classes.map((function(c) {
                return c.split(" ");
            })));
            return arrayFilter(this, (function(el) {
                return classNames.filter((function(className) {
                    return el.classList.contains(className);
                })).length > 0;
            })).length > 0;
        }
        function attr(attrs, value) {
            if (1 === arguments.length && "string" === typeof attrs) {
                if (this[0]) return this[0].getAttribute(attrs);
                return;
            }
            for (var i = 0; i < this.length; i += 1) if (2 === arguments.length) this[i].setAttribute(attrs, value); else for (var attrName in attrs) {
                this[i][attrName] = attrs[attrName];
                this[i].setAttribute(attrName, attrs[attrName]);
            }
            return this;
        }
        function removeAttr(attr) {
            for (var i = 0; i < this.length; i += 1) this[i].removeAttribute(attr);
            return this;
        }
        function transform(transform) {
            for (var i = 0; i < this.length; i += 1) this[i].style.transform = transform;
            return this;
        }
        function transition(duration) {
            for (var i = 0; i < this.length; i += 1) this[i].style.transitionDuration = "string" !== typeof duration ? duration + "ms" : duration;
            return this;
        }
        function on() {
            for (var _len5 = arguments.length, args = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) args[_key5] = arguments[_key5];
            var eventType = args[0], targetSelector = args[1], listener = args[2], capture = args[3];
            if ("function" === typeof args[1]) {
                eventType = args[0];
                listener = args[1];
                capture = args[2];
                targetSelector = void 0;
            }
            if (!capture) capture = false;
            function handleLiveEvent(e) {
                var target = e.target;
                if (!target) return;
                var eventData = e.target.dom7EventData || [];
                if (eventData.indexOf(e) < 0) eventData.unshift(e);
                if ($(target).is(targetSelector)) listener.apply(target, eventData); else {
                    var _parents = $(target).parents();
                    for (var k = 0; k < _parents.length; k += 1) if ($(_parents[k]).is(targetSelector)) listener.apply(_parents[k], eventData);
                }
            }
            function handleEvent(e) {
                var eventData = e && e.target ? e.target.dom7EventData || [] : [];
                if (eventData.indexOf(e) < 0) eventData.unshift(e);
                listener.apply(this, eventData);
            }
            var events = eventType.split(" ");
            var j;
            for (var i = 0; i < this.length; i += 1) {
                var el = this[i];
                if (!targetSelector) for (j = 0; j < events.length; j += 1) {
                    var event = events[j];
                    if (!el.dom7Listeners) el.dom7Listeners = {};
                    if (!el.dom7Listeners[event]) el.dom7Listeners[event] = [];
                    el.dom7Listeners[event].push({
                        listener,
                        proxyListener: handleEvent
                    });
                    el.addEventListener(event, handleEvent, capture);
                } else for (j = 0; j < events.length; j += 1) {
                    var _event = events[j];
                    if (!el.dom7LiveListeners) el.dom7LiveListeners = {};
                    if (!el.dom7LiveListeners[_event]) el.dom7LiveListeners[_event] = [];
                    el.dom7LiveListeners[_event].push({
                        listener,
                        proxyListener: handleLiveEvent
                    });
                    el.addEventListener(_event, handleLiveEvent, capture);
                }
            }
            return this;
        }
        function off() {
            for (var _len6 = arguments.length, args = new Array(_len6), _key6 = 0; _key6 < _len6; _key6++) args[_key6] = arguments[_key6];
            var eventType = args[0], targetSelector = args[1], listener = args[2], capture = args[3];
            if ("function" === typeof args[1]) {
                eventType = args[0];
                listener = args[1];
                capture = args[2];
                targetSelector = void 0;
            }
            if (!capture) capture = false;
            var events = eventType.split(" ");
            for (var i = 0; i < events.length; i += 1) {
                var event = events[i];
                for (var j = 0; j < this.length; j += 1) {
                    var el = this[j];
                    var handlers = void 0;
                    if (!targetSelector && el.dom7Listeners) handlers = el.dom7Listeners[event]; else if (targetSelector && el.dom7LiveListeners) handlers = el.dom7LiveListeners[event];
                    if (handlers && handlers.length) for (var k = handlers.length - 1; k >= 0; k -= 1) {
                        var handler = handlers[k];
                        if (listener && handler.listener === listener) {
                            el.removeEventListener(event, handler.proxyListener, capture);
                            handlers.splice(k, 1);
                        } else if (listener && handler.listener && handler.listener.dom7proxy && handler.listener.dom7proxy === listener) {
                            el.removeEventListener(event, handler.proxyListener, capture);
                            handlers.splice(k, 1);
                        } else if (!listener) {
                            el.removeEventListener(event, handler.proxyListener, capture);
                            handlers.splice(k, 1);
                        }
                    }
                }
            }
            return this;
        }
        function trigger() {
            var window = (0, ssr_window_esm.getWindow)();
            for (var _len9 = arguments.length, args = new Array(_len9), _key9 = 0; _key9 < _len9; _key9++) args[_key9] = arguments[_key9];
            var events = args[0].split(" ");
            var eventData = args[1];
            for (var i = 0; i < events.length; i += 1) {
                var event = events[i];
                for (var j = 0; j < this.length; j += 1) {
                    var el = this[j];
                    if (window.CustomEvent) {
                        var evt = new window.CustomEvent(event, {
                            detail: eventData,
                            bubbles: true,
                            cancelable: true
                        });
                        el.dom7EventData = args.filter((function(data, dataIndex) {
                            return dataIndex > 0;
                        }));
                        el.dispatchEvent(evt);
                        el.dom7EventData = [];
                        delete el.dom7EventData;
                    }
                }
            }
            return this;
        }
        function transitionEnd(callback) {
            var dom = this;
            function fireCallBack(e) {
                if (e.target !== this) return;
                callback.call(this, e);
                dom.off("transitionend", fireCallBack);
            }
            if (callback) dom.on("transitionend", fireCallBack);
            return this;
        }
        function dom7_esm_outerWidth(includeMargins) {
            if (this.length > 0) {
                if (includeMargins) {
                    var _styles = this.styles();
                    return this[0].offsetWidth + parseFloat(_styles.getPropertyValue("margin-right")) + parseFloat(_styles.getPropertyValue("margin-left"));
                }
                return this[0].offsetWidth;
            }
            return null;
        }
        function dom7_esm_outerHeight(includeMargins) {
            if (this.length > 0) {
                if (includeMargins) {
                    var _styles2 = this.styles();
                    return this[0].offsetHeight + parseFloat(_styles2.getPropertyValue("margin-top")) + parseFloat(_styles2.getPropertyValue("margin-bottom"));
                }
                return this[0].offsetHeight;
            }
            return null;
        }
        function offset() {
            if (this.length > 0) {
                var window = (0, ssr_window_esm.getWindow)();
                var document = (0, ssr_window_esm.getDocument)();
                var el = this[0];
                var box = el.getBoundingClientRect();
                var body = document.body;
                var clientTop = el.clientTop || body.clientTop || 0;
                var clientLeft = el.clientLeft || body.clientLeft || 0;
                var scrollTop = el === window ? window.scrollY : el.scrollTop;
                var scrollLeft = el === window ? window.scrollX : el.scrollLeft;
                return {
                    top: box.top + scrollTop - clientTop,
                    left: box.left + scrollLeft - clientLeft
                };
            }
            return null;
        }
        function styles() {
            var window = (0, ssr_window_esm.getWindow)();
            if (this[0]) return window.getComputedStyle(this[0], null);
            return {};
        }
        function css(props, value) {
            var window = (0, ssr_window_esm.getWindow)();
            var i;
            if (1 === arguments.length) if ("string" === typeof props) {
                if (this[0]) return window.getComputedStyle(this[0], null).getPropertyValue(props);
            } else {
                for (i = 0; i < this.length; i += 1) for (var _prop in props) this[i].style[_prop] = props[_prop];
                return this;
            }
            if (2 === arguments.length && "string" === typeof props) {
                for (i = 0; i < this.length; i += 1) this[i].style[props] = value;
                return this;
            }
            return this;
        }
        function each(callback) {
            if (!callback) return this;
            this.forEach((function(el, index) {
                callback.apply(el, [ el, index ]);
            }));
            return this;
        }
        function filter(callback) {
            var result = arrayFilter(this, callback);
            return $(result);
        }
        function html(html) {
            if ("undefined" === typeof html) return this[0] ? this[0].innerHTML : null;
            for (var i = 0; i < this.length; i += 1) this[i].innerHTML = html;
            return this;
        }
        function dom7_esm_text(text) {
            if ("undefined" === typeof text) return this[0] ? this[0].textContent.trim() : null;
            for (var i = 0; i < this.length; i += 1) this[i].textContent = text;
            return this;
        }
        function is(selector) {
            var window = (0, ssr_window_esm.getWindow)();
            var document = (0, ssr_window_esm.getDocument)();
            var el = this[0];
            var compareWith;
            var i;
            if (!el || "undefined" === typeof selector) return false;
            if ("string" === typeof selector) {
                if (el.matches) return el.matches(selector);
                if (el.webkitMatchesSelector) return el.webkitMatchesSelector(selector);
                if (el.msMatchesSelector) return el.msMatchesSelector(selector);
                compareWith = $(selector);
                for (i = 0; i < compareWith.length; i += 1) if (compareWith[i] === el) return true;
                return false;
            }
            if (selector === document) return el === document;
            if (selector === window) return el === window;
            if (selector.nodeType || selector instanceof Dom7) {
                compareWith = selector.nodeType ? [ selector ] : selector;
                for (i = 0; i < compareWith.length; i += 1) if (compareWith[i] === el) return true;
                return false;
            }
            return false;
        }
        function index() {
            var child = this[0];
            var i;
            if (child) {
                i = 0;
                while (null !== (child = child.previousSibling)) if (1 === child.nodeType) i += 1;
                return i;
            }
            return;
        }
        function eq(index) {
            if ("undefined" === typeof index) return this;
            var length = this.length;
            if (index > length - 1) return $([]);
            if (index < 0) {
                var returnIndex = length + index;
                if (returnIndex < 0) return $([]);
                return $([ this[returnIndex] ]);
            }
            return $([ this[index] ]);
        }
        function append() {
            var newChild;
            var document = (0, ssr_window_esm.getDocument)();
            for (var k = 0; k < arguments.length; k += 1) {
                newChild = k < 0 || arguments.length <= k ? void 0 : arguments[k];
                for (var i = 0; i < this.length; i += 1) if ("string" === typeof newChild) {
                    var tempDiv = document.createElement("div");
                    tempDiv.innerHTML = newChild;
                    while (tempDiv.firstChild) this[i].appendChild(tempDiv.firstChild);
                } else if (newChild instanceof Dom7) for (var j = 0; j < newChild.length; j += 1) this[i].appendChild(newChild[j]); else this[i].appendChild(newChild);
            }
            return this;
        }
        function prepend(newChild) {
            var document = (0, ssr_window_esm.getDocument)();
            var i;
            var j;
            for (i = 0; i < this.length; i += 1) if ("string" === typeof newChild) {
                var tempDiv = document.createElement("div");
                tempDiv.innerHTML = newChild;
                for (j = tempDiv.childNodes.length - 1; j >= 0; j -= 1) this[i].insertBefore(tempDiv.childNodes[j], this[i].childNodes[0]);
            } else if (newChild instanceof Dom7) for (j = 0; j < newChild.length; j += 1) this[i].insertBefore(newChild[j], this[i].childNodes[0]); else this[i].insertBefore(newChild, this[i].childNodes[0]);
            return this;
        }
        function next(selector) {
            if (this.length > 0) {
                if (selector) {
                    if (this[0].nextElementSibling && $(this[0].nextElementSibling).is(selector)) return $([ this[0].nextElementSibling ]);
                    return $([]);
                }
                if (this[0].nextElementSibling) return $([ this[0].nextElementSibling ]);
                return $([]);
            }
            return $([]);
        }
        function nextAll(selector) {
            var nextEls = [];
            var el = this[0];
            if (!el) return $([]);
            while (el.nextElementSibling) {
                var _next = el.nextElementSibling;
                if (selector) {
                    if ($(_next).is(selector)) nextEls.push(_next);
                } else nextEls.push(_next);
                el = _next;
            }
            return $(nextEls);
        }
        function prev(selector) {
            if (this.length > 0) {
                var el = this[0];
                if (selector) {
                    if (el.previousElementSibling && $(el.previousElementSibling).is(selector)) return $([ el.previousElementSibling ]);
                    return $([]);
                }
                if (el.previousElementSibling) return $([ el.previousElementSibling ]);
                return $([]);
            }
            return $([]);
        }
        function prevAll(selector) {
            var prevEls = [];
            var el = this[0];
            if (!el) return $([]);
            while (el.previousElementSibling) {
                var _prev = el.previousElementSibling;
                if (selector) {
                    if ($(_prev).is(selector)) prevEls.push(_prev);
                } else prevEls.push(_prev);
                el = _prev;
            }
            return $(prevEls);
        }
        function dom7_esm_parent(selector) {
            var parents = [];
            for (var i = 0; i < this.length; i += 1) if (null !== this[i].parentNode) if (selector) {
                if ($(this[i].parentNode).is(selector)) parents.push(this[i].parentNode);
            } else parents.push(this[i].parentNode);
            return $(parents);
        }
        function parents(selector) {
            var parents = [];
            for (var i = 0; i < this.length; i += 1) {
                var _parent = this[i].parentNode;
                while (_parent) {
                    if (selector) {
                        if ($(_parent).is(selector)) parents.push(_parent);
                    } else parents.push(_parent);
                    _parent = _parent.parentNode;
                }
            }
            return $(parents);
        }
        function closest(selector) {
            var closest = this;
            if ("undefined" === typeof selector) return $([]);
            if (!closest.is(selector)) closest = closest.parents(selector).eq(0);
            return closest;
        }
        function find(selector) {
            var foundElements = [];
            for (var i = 0; i < this.length; i += 1) {
                var found = this[i].querySelectorAll(selector);
                for (var j = 0; j < found.length; j += 1) foundElements.push(found[j]);
            }
            return $(foundElements);
        }
        function children(selector) {
            var children = [];
            for (var i = 0; i < this.length; i += 1) {
                var childNodes = this[i].children;
                for (var j = 0; j < childNodes.length; j += 1) if (!selector || $(childNodes[j]).is(selector)) children.push(childNodes[j]);
            }
            return $(children);
        }
        function remove() {
            for (var i = 0; i < this.length; i += 1) if (this[i].parentNode) this[i].parentNode.removeChild(this[i]);
            return this;
        }
        var noTrigger = "resize scroll".split(" ");
        function shortcut(name) {
            function eventHandler() {
                for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) args[_key] = arguments[_key];
                if ("undefined" === typeof args[0]) {
                    for (var i = 0; i < this.length; i += 1) if (noTrigger.indexOf(name) < 0) if (name in this[i]) this[i][name](); else $(this[i]).trigger(name);
                    return this;
                }
                return this.on.apply(this, [ name ].concat(args));
            }
            return eventHandler;
        }
        shortcut("click");
        shortcut("blur");
        shortcut("focus");
        shortcut("focusin");
        shortcut("focusout");
        shortcut("keyup");
        shortcut("keydown");
        shortcut("keypress");
        shortcut("submit");
        shortcut("change");
        shortcut("mousedown");
        shortcut("mousemove");
        shortcut("mouseup");
        shortcut("mouseenter");
        shortcut("mouseleave");
        shortcut("mouseout");
        shortcut("mouseover");
        shortcut("touchstart");
        shortcut("touchend");
        shortcut("touchmove");
        shortcut("resize");
        shortcut("scroll");
        var Methods = {
            addClass,
            removeClass,
            hasClass,
            toggleClass,
            attr,
            removeAttr,
            transform,
            transition,
            on,
            off,
            trigger,
            transitionEnd,
            outerWidth: dom7_esm_outerWidth,
            outerHeight: dom7_esm_outerHeight,
            styles,
            offset,
            css,
            each,
            html,
            text: dom7_esm_text,
            is,
            index,
            eq,
            append,
            prepend,
            next,
            nextAll,
            prev,
            prevAll,
            parent: dom7_esm_parent,
            parents,
            closest,
            find,
            children,
            filter,
            remove
        };
        Object.keys(Methods).forEach((function(methodName) {
            Object.defineProperty($.fn, methodName, {
                value: Methods[methodName],
                writable: true
            });
        }));
        const dom = $;
    },
    "./node_modules/swiper/esm/utils/utils.js": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
        "use strict";
        __webpack_require__.d(__webpack_exports__, {
            deleteProps: () => deleteProps,
            nextTick: () => nextTick,
            now: () => now,
            getTranslate: () => getTranslate,
            isObject: () => isObject,
            extend: () => extend,
            bindModuleMethods: () => bindModuleMethods,
            classesToSelector: () => classesToSelector,
            createElementIfNotDefined: () => createElementIfNotDefined
        });
        var ssr_window__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/ssr-window/ssr-window.esm.js");
        function deleteProps(obj) {
            var object = obj;
            Object.keys(object).forEach((function(key) {
                try {
                    object[key] = null;
                } catch (e) {}
                try {
                    delete object[key];
                } catch (e) {}
            }));
        }
        function nextTick(callback, delay) {
            if (void 0 === delay) delay = 0;
            return setTimeout(callback, delay);
        }
        function now() {
            return Date.now();
        }
        function getComputedStyle(el) {
            var window = (0, ssr_window__WEBPACK_IMPORTED_MODULE_0__.getWindow)();
            var style;
            if (window.getComputedStyle) style = window.getComputedStyle(el, null);
            if (!style && el.currentStyle) style = el.currentStyle;
            if (!style) style = el.style;
            return style;
        }
        function getTranslate(el, axis) {
            if (void 0 === axis) axis = "x";
            var window = (0, ssr_window__WEBPACK_IMPORTED_MODULE_0__.getWindow)();
            var matrix;
            var curTransform;
            var transformMatrix;
            var curStyle = getComputedStyle(el, null);
            if (window.WebKitCSSMatrix) {
                curTransform = curStyle.transform || curStyle.webkitTransform;
                if (curTransform.split(",").length > 6) curTransform = curTransform.split(", ").map((function(a) {
                    return a.replace(",", ".");
                })).join(", ");
                transformMatrix = new window.WebKitCSSMatrix("none" === curTransform ? "" : curTransform);
            } else {
                transformMatrix = curStyle.MozTransform || curStyle.OTransform || curStyle.MsTransform || curStyle.msTransform || curStyle.transform || curStyle.getPropertyValue("transform").replace("translate(", "matrix(1, 0, 0, 1,");
                matrix = transformMatrix.toString().split(",");
            }
            if ("x" === axis) if (window.WebKitCSSMatrix) curTransform = transformMatrix.m41; else if (16 === matrix.length) curTransform = parseFloat(matrix[12]); else curTransform = parseFloat(matrix[4]);
            if ("y" === axis) if (window.WebKitCSSMatrix) curTransform = transformMatrix.m42; else if (16 === matrix.length) curTransform = parseFloat(matrix[13]); else curTransform = parseFloat(matrix[5]);
            return curTransform || 0;
        }
        function isObject(o) {
            return "object" === typeof o && null !== o && o.constructor && "Object" === Object.prototype.toString.call(o).slice(8, -1);
        }
        function isNode(node) {
            if ("undefined" !== typeof window && "undefined" !== typeof window.HTMLElement) return node instanceof HTMLElement;
            return node && (1 === node.nodeType || 11 === node.nodeType);
        }
        function extend() {
            var to = Object(arguments.length <= 0 ? void 0 : arguments[0]);
            var noExtend = [ "__proto__", "constructor", "prototype" ];
            for (var i = 1; i < arguments.length; i += 1) {
                var nextSource = i < 0 || arguments.length <= i ? void 0 : arguments[i];
                if (void 0 !== nextSource && null !== nextSource && !isNode(nextSource)) {
                    var keysArray = Object.keys(Object(nextSource)).filter((function(key) {
                        return noExtend.indexOf(key) < 0;
                    }));
                    for (var nextIndex = 0, len = keysArray.length; nextIndex < len; nextIndex += 1) {
                        var nextKey = keysArray[nextIndex];
                        var desc = Object.getOwnPropertyDescriptor(nextSource, nextKey);
                        if (void 0 !== desc && desc.enumerable) if (isObject(to[nextKey]) && isObject(nextSource[nextKey])) if (nextSource[nextKey].__swiper__) to[nextKey] = nextSource[nextKey]; else extend(to[nextKey], nextSource[nextKey]); else if (!isObject(to[nextKey]) && isObject(nextSource[nextKey])) {
                            to[nextKey] = {};
                            if (nextSource[nextKey].__swiper__) to[nextKey] = nextSource[nextKey]; else extend(to[nextKey], nextSource[nextKey]);
                        } else to[nextKey] = nextSource[nextKey];
                    }
                }
            }
            return to;
        }
        function bindModuleMethods(instance, obj) {
            Object.keys(obj).forEach((function(key) {
                if (isObject(obj[key])) Object.keys(obj[key]).forEach((function(subKey) {
                    if ("function" === typeof obj[key][subKey]) obj[key][subKey] = obj[key][subKey].bind(instance);
                }));
                instance[key] = obj[key];
            }));
        }
        function classesToSelector(classes) {
            if (void 0 === classes) classes = "";
            return "." + classes.trim().replace(/([\.:!\/])/g, "\\$1").replace(/ /g, ".");
        }
        function createElementIfNotDefined($container, params, createElements, checkProps) {
            var document = (0, ssr_window__WEBPACK_IMPORTED_MODULE_0__.getDocument)();
            if (createElements) Object.keys(checkProps).forEach((function(key) {
                if (!params[key] && true === params.auto) {
                    var element = document.createElement("div");
                    element.className = checkProps[key];
                    $container.append(element);
                    params[key] = element;
                }
            }));
            return params;
        }
    },
    "./node_modules/url/node_modules/punycode/punycode.js": function(module, exports, __webpack_require__) {
        module = __webpack_require__.nmd(module);
        var __WEBPACK_AMD_DEFINE_RESULT__;
        (function(root) {
            true && exports && exports.nodeType;
            true && module && module.nodeType;
            var freeGlobal = "object" == typeof __webpack_require__.g && __webpack_require__.g;
            if (freeGlobal.global === freeGlobal || freeGlobal.window === freeGlobal || freeGlobal.self === freeGlobal) freeGlobal;
            var punycode, maxInt = 2147483647, base = 36, tMin = 1, tMax = 26, skew = 38, damp = 700, initialBias = 72, initialN = 128, delimiter = "-", regexPunycode = /^xn--/, regexNonASCII = /[^\x20-\x7E]/, regexSeparators = /[\x2E\u3002\uFF0E\uFF61]/g, errors = {
                overflow: "Overflow: input needs wider integers to process",
                "not-basic": "Illegal input >= 0x80 (not a basic code point)",
                "invalid-input": "Invalid input"
            }, baseMinusTMin = base - tMin, floor = Math.floor, stringFromCharCode = String.fromCharCode;
            function error(type) {
                throw RangeError(errors[type]);
            }
            function map(array, fn) {
                var length = array.length;
                var result = [];
                while (length--) result[length] = fn(array[length]);
                return result;
            }
            function mapDomain(string, fn) {
                var parts = string.split("@");
                var result = "";
                if (parts.length > 1) {
                    result = parts[0] + "@";
                    string = parts[1];
                }
                string = string.replace(regexSeparators, ".");
                var labels = string.split(".");
                var encoded = map(labels, fn).join(".");
                return result + encoded;
            }
            function ucs2decode(string) {
                var value, extra, output = [], counter = 0, length = string.length;
                while (counter < length) {
                    value = string.charCodeAt(counter++);
                    if (value >= 55296 && value <= 56319 && counter < length) {
                        extra = string.charCodeAt(counter++);
                        if (56320 == (64512 & extra)) output.push(((1023 & value) << 10) + (1023 & extra) + 65536); else {
                            output.push(value);
                            counter--;
                        }
                    } else output.push(value);
                }
                return output;
            }
            function ucs2encode(array) {
                return map(array, (function(value) {
                    var output = "";
                    if (value > 65535) {
                        value -= 65536;
                        output += stringFromCharCode(value >>> 10 & 1023 | 55296);
                        value = 56320 | 1023 & value;
                    }
                    output += stringFromCharCode(value);
                    return output;
                })).join("");
            }
            function basicToDigit(codePoint) {
                if (codePoint - 48 < 10) return codePoint - 22;
                if (codePoint - 65 < 26) return codePoint - 65;
                if (codePoint - 97 < 26) return codePoint - 97;
                return base;
            }
            function digitToBasic(digit, flag) {
                return digit + 22 + 75 * (digit < 26) - ((0 != flag) << 5);
            }
            function adapt(delta, numPoints, firstTime) {
                var k = 0;
                delta = firstTime ? floor(delta / damp) : delta >> 1;
                delta += floor(delta / numPoints);
                for (;delta > baseMinusTMin * tMax >> 1; k += base) delta = floor(delta / baseMinusTMin);
                return floor(k + (baseMinusTMin + 1) * delta / (delta + skew));
            }
            function decode(input) {
                var out, basic, j, index, oldi, w, k, digit, t, baseMinusT, output = [], inputLength = input.length, i = 0, n = initialN, bias = initialBias;
                basic = input.lastIndexOf(delimiter);
                if (basic < 0) basic = 0;
                for (j = 0; j < basic; ++j) {
                    if (input.charCodeAt(j) >= 128) error("not-basic");
                    output.push(input.charCodeAt(j));
                }
                for (index = basic > 0 ? basic + 1 : 0; index < inputLength; ) {
                    for (oldi = i, w = 1, k = base; ;k += base) {
                        if (index >= inputLength) error("invalid-input");
                        digit = basicToDigit(input.charCodeAt(index++));
                        if (digit >= base || digit > floor((maxInt - i) / w)) error("overflow");
                        i += digit * w;
                        t = k <= bias ? tMin : k >= bias + tMax ? tMax : k - bias;
                        if (digit < t) break;
                        baseMinusT = base - t;
                        if (w > floor(maxInt / baseMinusT)) error("overflow");
                        w *= baseMinusT;
                    }
                    out = output.length + 1;
                    bias = adapt(i - oldi, out, 0 == oldi);
                    if (floor(i / out) > maxInt - n) error("overflow");
                    n += floor(i / out);
                    i %= out;
                    output.splice(i++, 0, n);
                }
                return ucs2encode(output);
            }
            function encode(input) {
                var n, delta, handledCPCount, basicLength, bias, j, m, q, k, t, currentValue, inputLength, handledCPCountPlusOne, baseMinusT, qMinusT, output = [];
                input = ucs2decode(input);
                inputLength = input.length;
                n = initialN;
                delta = 0;
                bias = initialBias;
                for (j = 0; j < inputLength; ++j) {
                    currentValue = input[j];
                    if (currentValue < 128) output.push(stringFromCharCode(currentValue));
                }
                handledCPCount = basicLength = output.length;
                if (basicLength) output.push(delimiter);
                while (handledCPCount < inputLength) {
                    for (m = maxInt, j = 0; j < inputLength; ++j) {
                        currentValue = input[j];
                        if (currentValue >= n && currentValue < m) m = currentValue;
                    }
                    handledCPCountPlusOne = handledCPCount + 1;
                    if (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) error("overflow");
                    delta += (m - n) * handledCPCountPlusOne;
                    n = m;
                    for (j = 0; j < inputLength; ++j) {
                        currentValue = input[j];
                        if (currentValue < n && ++delta > maxInt) error("overflow");
                        if (currentValue == n) {
                            for (q = delta, k = base; ;k += base) {
                                t = k <= bias ? tMin : k >= bias + tMax ? tMax : k - bias;
                                if (q < t) break;
                                qMinusT = q - t;
                                baseMinusT = base - t;
                                output.push(stringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0)));
                                q = floor(qMinusT / baseMinusT);
                            }
                            output.push(stringFromCharCode(digitToBasic(q, 0)));
                            bias = adapt(delta, handledCPCountPlusOne, handledCPCount == basicLength);
                            delta = 0;
                            ++handledCPCount;
                        }
                    }
                    ++delta;
                    ++n;
                }
                return output.join("");
            }
            function toUnicode(input) {
                return mapDomain(input, (function(string) {
                    return regexPunycode.test(string) ? decode(string.slice(4).toLowerCase()) : string;
                }));
            }
            function toASCII(input) {
                return mapDomain(input, (function(string) {
                    return regexNonASCII.test(string) ? "xn--" + encode(string) : string;
                }));
            }
            punycode = {
                version: "1.3.2",
                ucs2: {
                    decode: ucs2decode,
                    encode: ucs2encode
                },
                decode,
                encode,
                toASCII,
                toUnicode
            };
            if (true) !(__WEBPACK_AMD_DEFINE_RESULT__ = function() {
                return punycode;
            }.call(exports, __webpack_require__, exports, module), void 0 !== __WEBPACK_AMD_DEFINE_RESULT__ && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
        })();
    },
    "./node_modules/url/url.js": (__unused_webpack_module, exports, __webpack_require__) => {
        var punycode = __webpack_require__("./node_modules/url/node_modules/punycode/punycode.js");
        exports.parse = urlParse;
        exports.resolve = urlResolve;
        exports.resolveObject = urlResolveObject;
        exports.format = urlFormat;
        exports.Url = Url;
        function Url() {
            this.protocol = null;
            this.slashes = null;
            this.auth = null;
            this.host = null;
            this.port = null;
            this.hostname = null;
            this.hash = null;
            this.search = null;
            this.query = null;
            this.pathname = null;
            this.path = null;
            this.href = null;
        }
        var protocolPattern = /^([a-z0-9.+-]+:)/i, portPattern = /:[0-9]*$/, delims = [ "<", ">", '"', "`", " ", "\r", "\n", "\t" ], unwise = [ "{", "}", "|", "\\", "^", "`" ].concat(delims), autoEscape = [ "'" ].concat(unwise), nonHostChars = [ "%", "/", "?", ";", "#" ].concat(autoEscape), hostEndingChars = [ "/", "?", "#" ], hostnameMaxLen = 255, hostnamePartPattern = /^[a-z0-9A-Z_-]{0,63}$/, hostnamePartStart = /^([a-z0-9A-Z_-]{0,63})(.*)$/, unsafeProtocol = {
            javascript: true,
            "javascript:": true
        }, hostlessProtocol = {
            javascript: true,
            "javascript:": true
        }, slashedProtocol = {
            http: true,
            https: true,
            ftp: true,
            gopher: true,
            file: true,
            "http:": true,
            "https:": true,
            "ftp:": true,
            "gopher:": true,
            "file:": true
        }, querystring = __webpack_require__("./node_modules/querystring/index.js");
        function urlParse(url, parseQueryString, slashesDenoteHost) {
            if (url && isObject(url) && url instanceof Url) return url;
            var u = new Url;
            u.parse(url, parseQueryString, slashesDenoteHost);
            return u;
        }
        Url.prototype.parse = function(url, parseQueryString, slashesDenoteHost) {
            if (!isString(url)) throw new TypeError("Parameter 'url' must be a string, not " + typeof url);
            var rest = url;
            rest = rest.trim();
            var proto = protocolPattern.exec(rest);
            if (proto) {
                proto = proto[0];
                var lowerProto = proto.toLowerCase();
                this.protocol = lowerProto;
                rest = rest.substr(proto.length);
            }
            if (slashesDenoteHost || proto || rest.match(/^\/\/[^@\/]+@[^@\/]+/)) {
                var slashes = "//" === rest.substr(0, 2);
                if (slashes && !(proto && hostlessProtocol[proto])) {
                    rest = rest.substr(2);
                    this.slashes = true;
                }
            }
            if (!hostlessProtocol[proto] && (slashes || proto && !slashedProtocol[proto])) {
                var hostEnd = -1;
                for (var i = 0; i < hostEndingChars.length; i++) {
                    var hec = rest.indexOf(hostEndingChars[i]);
                    if (-1 !== hec && (-1 === hostEnd || hec < hostEnd)) hostEnd = hec;
                }
                var auth, atSign;
                if (-1 === hostEnd) atSign = rest.lastIndexOf("@"); else atSign = rest.lastIndexOf("@", hostEnd);
                if (-1 !== atSign) {
                    auth = rest.slice(0, atSign);
                    rest = rest.slice(atSign + 1);
                    this.auth = decodeURIComponent(auth);
                }
                hostEnd = -1;
                for (i = 0; i < nonHostChars.length; i++) {
                    hec = rest.indexOf(nonHostChars[i]);
                    if (-1 !== hec && (-1 === hostEnd || hec < hostEnd)) hostEnd = hec;
                }
                if (-1 === hostEnd) hostEnd = rest.length;
                this.host = rest.slice(0, hostEnd);
                rest = rest.slice(hostEnd);
                this.parseHost();
                this.hostname = this.hostname || "";
                var ipv6Hostname = "[" === this.hostname[0] && "]" === this.hostname[this.hostname.length - 1];
                if (!ipv6Hostname) {
                    var hostparts = this.hostname.split(/\./);
                    i = 0;
                    for (var l = hostparts.length; i < l; i++) {
                        var part = hostparts[i];
                        if (!part) continue;
                        if (!part.match(hostnamePartPattern)) {
                            var newpart = "";
                            for (var j = 0, k = part.length; j < k; j++) if (part.charCodeAt(j) > 127) newpart += "x"; else newpart += part[j];
                            if (!newpart.match(hostnamePartPattern)) {
                                var validParts = hostparts.slice(0, i);
                                var notHost = hostparts.slice(i + 1);
                                var bit = part.match(hostnamePartStart);
                                if (bit) {
                                    validParts.push(bit[1]);
                                    notHost.unshift(bit[2]);
                                }
                                if (notHost.length) rest = "/" + notHost.join(".") + rest;
                                this.hostname = validParts.join(".");
                                break;
                            }
                        }
                    }
                }
                if (this.hostname.length > hostnameMaxLen) this.hostname = ""; else this.hostname = this.hostname.toLowerCase();
                if (!ipv6Hostname) {
                    var domainArray = this.hostname.split(".");
                    var newOut = [];
                    for (i = 0; i < domainArray.length; ++i) {
                        var s = domainArray[i];
                        newOut.push(s.match(/[^A-Za-z0-9_-]/) ? "xn--" + punycode.encode(s) : s);
                    }
                    this.hostname = newOut.join(".");
                }
                var p = this.port ? ":" + this.port : "";
                var h = this.hostname || "";
                this.host = h + p;
                this.href += this.host;
                if (ipv6Hostname) {
                    this.hostname = this.hostname.substr(1, this.hostname.length - 2);
                    if ("/" !== rest[0]) rest = "/" + rest;
                }
            }
            if (!unsafeProtocol[lowerProto]) for (i = 0, l = autoEscape.length; i < l; i++) {
                var ae = autoEscape[i];
                var esc = encodeURIComponent(ae);
                if (esc === ae) esc = escape(ae);
                rest = rest.split(ae).join(esc);
            }
            var hash = rest.indexOf("#");
            if (-1 !== hash) {
                this.hash = rest.substr(hash);
                rest = rest.slice(0, hash);
            }
            var qm = rest.indexOf("?");
            if (-1 !== qm) {
                this.search = rest.substr(qm);
                this.query = rest.substr(qm + 1);
                if (parseQueryString) this.query = querystring.parse(this.query);
                rest = rest.slice(0, qm);
            } else if (parseQueryString) {
                this.search = "";
                this.query = {};
            }
            if (rest) this.pathname = rest;
            if (slashedProtocol[lowerProto] && this.hostname && !this.pathname) this.pathname = "/";
            if (this.pathname || this.search) {
                p = this.pathname || "";
                s = this.search || "";
                this.path = p + s;
            }
            this.href = this.format();
            return this;
        };
        function urlFormat(obj) {
            if (isString(obj)) obj = urlParse(obj);
            if (!(obj instanceof Url)) return Url.prototype.format.call(obj);
            return obj.format();
        }
        Url.prototype.format = function() {
            var auth = this.auth || "";
            if (auth) {
                auth = encodeURIComponent(auth);
                auth = auth.replace(/%3A/i, ":");
                auth += "@";
            }
            var protocol = this.protocol || "", pathname = this.pathname || "", hash = this.hash || "", host = false, query = "";
            if (this.host) host = auth + this.host; else if (this.hostname) {
                host = auth + (-1 === this.hostname.indexOf(":") ? this.hostname : "[" + this.hostname + "]");
                if (this.port) host += ":" + this.port;
            }
            if (this.query && isObject(this.query) && Object.keys(this.query).length) query = querystring.stringify(this.query);
            var search = this.search || query && "?" + query || "";
            if (protocol && ":" !== protocol.substr(-1)) protocol += ":";
            if (this.slashes || (!protocol || slashedProtocol[protocol]) && false !== host) {
                host = "//" + (host || "");
                if (pathname && "/" !== pathname.charAt(0)) pathname = "/" + pathname;
            } else if (!host) host = "";
            if (hash && "#" !== hash.charAt(0)) hash = "#" + hash;
            if (search && "?" !== search.charAt(0)) search = "?" + search;
            pathname = pathname.replace(/[?#]/g, (function(match) {
                return encodeURIComponent(match);
            }));
            search = search.replace("#", "%23");
            return protocol + host + pathname + search + hash;
        };
        function urlResolve(source, relative) {
            return urlParse(source, false, true).resolve(relative);
        }
        Url.prototype.resolve = function(relative) {
            return this.resolveObject(urlParse(relative, false, true)).format();
        };
        function urlResolveObject(source, relative) {
            if (!source) return relative;
            return urlParse(source, false, true).resolveObject(relative);
        }
        Url.prototype.resolveObject = function(relative) {
            if (isString(relative)) {
                var rel = new Url;
                rel.parse(relative, false, true);
                relative = rel;
            }
            var result = new Url;
            Object.keys(this).forEach((function(k) {
                result[k] = this[k];
            }), this);
            result.hash = relative.hash;
            if ("" === relative.href) {
                result.href = result.format();
                return result;
            }
            if (relative.slashes && !relative.protocol) {
                Object.keys(relative).forEach((function(k) {
                    if ("protocol" !== k) result[k] = relative[k];
                }));
                if (slashedProtocol[result.protocol] && result.hostname && !result.pathname) result.path = result.pathname = "/";
                result.href = result.format();
                return result;
            }
            if (relative.protocol && relative.protocol !== result.protocol) {
                if (!slashedProtocol[relative.protocol]) {
                    Object.keys(relative).forEach((function(k) {
                        result[k] = relative[k];
                    }));
                    result.href = result.format();
                    return result;
                }
                result.protocol = relative.protocol;
                if (!relative.host && !hostlessProtocol[relative.protocol]) {
                    var relPath = (relative.pathname || "").split("/");
                    while (relPath.length && !(relative.host = relPath.shift())) ;
                    if (!relative.host) relative.host = "";
                    if (!relative.hostname) relative.hostname = "";
                    if ("" !== relPath[0]) relPath.unshift("");
                    if (relPath.length < 2) relPath.unshift("");
                    result.pathname = relPath.join("/");
                } else result.pathname = relative.pathname;
                result.search = relative.search;
                result.query = relative.query;
                result.host = relative.host || "";
                result.auth = relative.auth;
                result.hostname = relative.hostname || relative.host;
                result.port = relative.port;
                if (result.pathname || result.search) {
                    var p = result.pathname || "";
                    var s = result.search || "";
                    result.path = p + s;
                }
                result.slashes = result.slashes || relative.slashes;
                result.href = result.format();
                return result;
            }
            var isSourceAbs = result.pathname && "/" === result.pathname.charAt(0), isRelAbs = relative.host || relative.pathname && "/" === relative.pathname.charAt(0), mustEndAbs = isRelAbs || isSourceAbs || result.host && relative.pathname, removeAllDots = mustEndAbs, srcPath = result.pathname && result.pathname.split("/") || [], psychotic = (relPath = relative.pathname && relative.pathname.split("/") || [], 
            result.protocol && !slashedProtocol[result.protocol]);
            if (psychotic) {
                result.hostname = "";
                result.port = null;
                if (result.host) if ("" === srcPath[0]) srcPath[0] = result.host; else srcPath.unshift(result.host);
                result.host = "";
                if (relative.protocol) {
                    relative.hostname = null;
                    relative.port = null;
                    if (relative.host) if ("" === relPath[0]) relPath[0] = relative.host; else relPath.unshift(relative.host);
                    relative.host = null;
                }
                mustEndAbs = mustEndAbs && ("" === relPath[0] || "" === srcPath[0]);
            }
            if (isRelAbs) {
                result.host = relative.host || "" === relative.host ? relative.host : result.host;
                result.hostname = relative.hostname || "" === relative.hostname ? relative.hostname : result.hostname;
                result.search = relative.search;
                result.query = relative.query;
                srcPath = relPath;
            } else if (relPath.length) {
                if (!srcPath) srcPath = [];
                srcPath.pop();
                srcPath = srcPath.concat(relPath);
                result.search = relative.search;
                result.query = relative.query;
            } else if (!isNullOrUndefined(relative.search)) {
                if (psychotic) {
                    result.hostname = result.host = srcPath.shift();
                    var authInHost = result.host && result.host.indexOf("@") > 0 ? result.host.split("@") : false;
                    if (authInHost) {
                        result.auth = authInHost.shift();
                        result.host = result.hostname = authInHost.shift();
                    }
                }
                result.search = relative.search;
                result.query = relative.query;
                if (!isNull(result.pathname) || !isNull(result.search)) result.path = (result.pathname ? result.pathname : "") + (result.search ? result.search : "");
                result.href = result.format();
                return result;
            }
            if (!srcPath.length) {
                result.pathname = null;
                if (result.search) result.path = "/" + result.search; else result.path = null;
                result.href = result.format();
                return result;
            }
            var last = srcPath.slice(-1)[0];
            var hasTrailingSlash = (result.host || relative.host) && ("." === last || ".." === last) || "" === last;
            var up = 0;
            for (var i = srcPath.length; i >= 0; i--) {
                last = srcPath[i];
                if ("." == last) srcPath.splice(i, 1); else if (".." === last) {
                    srcPath.splice(i, 1);
                    up++;
                } else if (up) {
                    srcPath.splice(i, 1);
                    up--;
                }
            }
            if (!mustEndAbs && !removeAllDots) for (;up--; up) srcPath.unshift("..");
            if (mustEndAbs && "" !== srcPath[0] && (!srcPath[0] || "/" !== srcPath[0].charAt(0))) srcPath.unshift("");
            if (hasTrailingSlash && "/" !== srcPath.join("/").substr(-1)) srcPath.push("");
            var isAbsolute = "" === srcPath[0] || srcPath[0] && "/" === srcPath[0].charAt(0);
            if (psychotic) {
                result.hostname = result.host = isAbsolute ? "" : srcPath.length ? srcPath.shift() : "";
                authInHost = result.host && result.host.indexOf("@") > 0 ? result.host.split("@") : false;
                if (authInHost) {
                    result.auth = authInHost.shift();
                    result.host = result.hostname = authInHost.shift();
                }
            }
            mustEndAbs = mustEndAbs || result.host && srcPath.length;
            if (mustEndAbs && !isAbsolute) srcPath.unshift("");
            if (!srcPath.length) {
                result.pathname = null;
                result.path = null;
            } else result.pathname = srcPath.join("/");
            if (!isNull(result.pathname) || !isNull(result.search)) result.path = (result.pathname ? result.pathname : "") + (result.search ? result.search : "");
            result.auth = relative.auth || result.auth;
            result.slashes = result.slashes || relative.slashes;
            result.href = result.format();
            return result;
        };
        Url.prototype.parseHost = function() {
            var host = this.host;
            var port = portPattern.exec(host);
            if (port) {
                port = port[0];
                if (":" !== port) this.port = port.substr(1);
                host = host.substr(0, host.length - port.length);
            }
            if (host) this.hostname = host;
        };
        function isString(arg) {
            return "string" === typeof arg;
        }
        function isObject(arg) {
            return "object" === typeof arg && null !== arg;
        }
        function isNull(arg) {
            return null === arg;
        }
        function isNullOrUndefined(arg) {
            return null == arg;
        }
    },
    "./node_modules/uuid/dist/esm-browser/regex.js": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
        "use strict";
        __webpack_require__.d(__webpack_exports__, {
            default: () => __WEBPACK_DEFAULT_EXPORT__
        });
        const __WEBPACK_DEFAULT_EXPORT__ = /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;
    },
    "./node_modules/uuid/dist/esm-browser/rng.js": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
        "use strict";
        __webpack_require__.d(__webpack_exports__, {
            default: () => rng
        });
        var getRandomValues;
        var rnds8 = new Uint8Array(16);
        function rng() {
            if (!getRandomValues) {
                getRandomValues = "undefined" !== typeof crypto && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || "undefined" !== typeof msCrypto && "function" === typeof msCrypto.getRandomValues && msCrypto.getRandomValues.bind(msCrypto);
                if (!getRandomValues) throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");
            }
            return getRandomValues(rnds8);
        }
    },
    "./node_modules/uuid/dist/esm-browser/stringify.js": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
        "use strict";
        __webpack_require__.d(__webpack_exports__, {
            default: () => __WEBPACK_DEFAULT_EXPORT__
        });
        var _validate_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/uuid/dist/esm-browser/validate.js");
        var byteToHex = [];
        for (var i = 0; i < 256; ++i) byteToHex.push((i + 256).toString(16).substr(1));
        function stringify(arr) {
            var offset = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0;
            var uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + "-" + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + "-" + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + "-" + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + "-" + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase();
            if (!(0, _validate_js__WEBPACK_IMPORTED_MODULE_0__["default"])(uuid)) throw TypeError("Stringified UUID is invalid");
            return uuid;
        }
        const __WEBPACK_DEFAULT_EXPORT__ = stringify;
    },
    "./node_modules/uuid/dist/esm-browser/v4.js": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
        "use strict";
        __webpack_require__.d(__webpack_exports__, {
            default: () => __WEBPACK_DEFAULT_EXPORT__
        });
        var _rng_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/uuid/dist/esm-browser/rng.js");
        var _stringify_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/uuid/dist/esm-browser/stringify.js");
        function v4(options, buf, offset) {
            options = options || {};
            var rnds = options.random || (options.rng || _rng_js__WEBPACK_IMPORTED_MODULE_0__["default"])();
            rnds[6] = 15 & rnds[6] | 64;
            rnds[8] = 63 & rnds[8] | 128;
            if (buf) {
                offset = offset || 0;
                for (var i = 0; i < 16; ++i) buf[offset + i] = rnds[i];
                return buf;
            }
            return (0, _stringify_js__WEBPACK_IMPORTED_MODULE_1__["default"])(rnds);
        }
        const __WEBPACK_DEFAULT_EXPORT__ = v4;
    },
    "./node_modules/uuid/dist/esm-browser/validate.js": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
        "use strict";
        __webpack_require__.d(__webpack_exports__, {
            default: () => __WEBPACK_DEFAULT_EXPORT__
        });
        var _regex_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/uuid/dist/esm-browser/regex.js");
        function validate(uuid) {
            return "string" === typeof uuid && _regex_js__WEBPACK_IMPORTED_MODULE_0__["default"].test(uuid);
        }
        const __WEBPACK_DEFAULT_EXPORT__ = validate;
    },
    "./src/assets/cart/script/constant/cartQuantity.js": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
        "use strict";
        __webpack_require__.d(__webpack_exports__, {
            default: () => __WEBPACK_DEFAULT_EXPORT__
        });
        const __WEBPACK_DEFAULT_EXPORT__ = {
            MAX_CART_ITEM_LIST_QUANTITY: 99,
            MAX_CART_ITEM_QUANTITY: 999
        };
    },
    "./src/assets/cart/script/constant/priceType.js": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
        "use strict";
        __webpack_require__.d(__webpack_exports__, {
            default: () => __WEBPACK_DEFAULT_EXPORT__
        });
        const __WEBPACK_DEFAULT_EXPORT__ = {
            NORMAL: 0,
            MEMBER: 1,
            SEC_KILL: 2,
            NTH_DISCOUNT: 3
        };
    },
    "./src/assets/cart/script/constant/responseCode.js": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
        "use strict";
        __webpack_require__.d(__webpack_exports__, {
            default: () => __WEBPACK_DEFAULT_EXPORT__
        });
        const __WEBPACK_DEFAULT_EXPORT__ = {
            SUCCESS: "SUCCESS",
            FA_INVALID_PARAMS: "FA_INVALID_PARAMS",
            FA_COUPON_INVALID_CODE: "FA_COUPON_INVALID_CODE",
            FA_PRODUCT_VALIDATE: "FA_PRODUCT_VALIDATE",
            FA_PRODUCT_CHANGED: "FA_PRODUCT_CHANGED",
            FA_PRODUCT_OVERFLOW: "FA_PRODUCT_OVERFLOW",
            FA_PRODUCT_ACTIVE_EMPTY: "FA_PRODUCT_ACTIVE_EMPTY",
            FA_PRODUCT_SOLD_OUT: "FA_PRODUCT_SOLD_OUT",
            FA_PRODUCT_QUANTITY: "FA_PRODUCT_QUANTITY",
            FA_CHECKOUT_CANCELED: "FA_CHECKOUT_CANCELED"
        };
    },
    "./src/assets/cart/script/constant/stockType.js": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
        "use strict";
        __webpack_require__.d(__webpack_exports__, {
            default: () => __WEBPACK_DEFAULT_EXPORT__,
            cartLimitedEnum: () => cartLimitedEnum
        });
        const __WEBPACK_DEFAULT_EXPORT__ = {
            LIMITED: 0,
            UNLIMITED: 1,
            OVERSOLD: 2
        };
        const cartLimitedEnum = {
            NORMAL_ITEM_MAX_NUM: [ "ITEM_MAX_NUM" ],
            ACTIVE_LIMITED: [ "LIMITED_ACTIVE_OVER", "LIMITED_ACTIVE_SKU_OVER" ],
            NORMAL_STOCK_OVER: [ "STOCK_OVER" ],
            ACTIVE_STOCK_OVER: [ "LIMITED_ACTIVE_STOCK_OVER" ],
            ACTIVE: [ "LIMITED_ACTIVE_OVER", "LIMITED_ACTIVE_SKU_OVER", "LIMITED_ACTIVE_STOCK_OVER" ],
            NORMAL: [ "ITEM_MAX_NUM", "STOCK_OVER" ]
        };
    },
    "./src/assets/cart/script/domain/adapter/storage/constant.js": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
        "use strict";
        __webpack_require__.d(__webpack_exports__, {
            default: () => __WEBPACK_DEFAULT_EXPORT__
        });
        const KEY_PREFIX = "sl.trade.cart";
        const __WEBPACK_DEFAULT_EXPORT__ = {
            KEY_PREFIX,
            KEY_CART_ABANDON_INFO: "cartAbOrderSeqInfo"
        };
    },
    "./src/assets/cart/script/domain/adapter/storage/index.js": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
        "use strict";
        __webpack_require__.d(__webpack_exports__, {
            default: () => __WEBPACK_DEFAULT_EXPORT__
        });
        var _constant__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./src/assets/cart/script/domain/adapter/storage/constant.js");
        class Storage {
            constructor(config) {
                this.prefix = _constant__WEBPACK_IMPORTED_MODULE_0__["default"].KEY_PREFIX;
                this.config = config;
            }
            setItem(key, value) {
                if (null == value) localStorage.removeItem(this.withKey(key)); else localStorage.setItem(this.withKey(key), value);
            }
            getItem(key) {
                return localStorage.getItem(this.withKey(key));
            }
            withKey(key) {
                return `${this.prefix}.${key}`;
            }
        }
        let globalStorage = new Storage;
        function withStorage(config) {
            globalStorage = new Storage(config);
        }
        function takeStorage() {
            return globalStorage;
        }
        const __WEBPACK_DEFAULT_EXPORT__ = {
            withStorage,
            takeStorage
        };
    },
    "./src/assets/cart/script/domain/adapter/svc/cart.js": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
        "use strict";
        __webpack_require__.d(__webpack_exports__, {
            default: () => __WEBPACK_DEFAULT_EXPORT__
        });
        var _internal_constant__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./src/assets/cart/script/domain/adapter/svc/internal/constant.js");
        async function getCart(svc, abandonedOrderMark, abandonedOrderSeq) {
            return svc.request.get(_internal_constant__WEBPACK_IMPORTED_MODULE_0__["default"].endpointCart, {
                params: {
                    abandonedOrderMark,
                    abandonedOrderSeq
                }
            });
        }
        async function deleteCartItemList(svc, skuList) {
            return svc.request.post(_internal_constant__WEBPACK_IMPORTED_MODULE_0__["default"].endpointCartItemNumReduce, skuList || []);
        }
        async function putCartItem(svc, skuInfo) {
            return svc.request.put(_internal_constant__WEBPACK_IMPORTED_MODULE_0__["default"].endpointCart, skuInfo);
        }
        async function addCartItem(svc, {spuId, skuId, num, orderFrom, dataReportReq, sellingPlanId}) {
            return svc.request.post(_internal_constant__WEBPACK_IMPORTED_MODULE_0__["default"].endpointCart, {
                orderFrom,
                item: {
                    spuId,
                    skuId,
                    num,
                    sellingPlanId
                },
                dataReportReq
            });
        }
        async function verifyCartItemListV2(svc, {itemList, orderFrom}) {
            return svc.request.post(_internal_constant__WEBPACK_IMPORTED_MODULE_0__["default"].endpointCartVerifyV2, {
                cartItemList: itemList || [],
                orderFrom
            });
        }
        async function memberPoint(svc, use) {
            return svc.request.get(_internal_constant__WEBPACK_IMPORTED_MODULE_0__["default"].memberPoint, {
                params: {
                    use
                }
            });
        }
        const __WEBPACK_DEFAULT_EXPORT__ = {
            getCart,
            deleteCartItemList,
            verifyCartItemListV2,
            putCartItem,
            addCartItem,
            memberPoint
        };
    },
    "./src/assets/cart/script/domain/adapter/svc/coupon.js": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
        "use strict";
        __webpack_require__.d(__webpack_exports__, {
            default: () => __WEBPACK_DEFAULT_EXPORT__
        });
        var _sl_cart_lib_config_reductionCode_service__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/@sl/cart/lib/config/reductionCode/service.js");
        async function applyCoupon(svc, params) {
            return svc.request.post(_sl_cart_lib_config_reductionCode_service__WEBPACK_IMPORTED_MODULE_0__.servicesList.ONLINE_CART.endpointPromotionCode, {
                ...params
            });
        }
        async function withdrawCoupon(svc, req) {
            return svc.request.delete(_sl_cart_lib_config_reductionCode_service__WEBPACK_IMPORTED_MODULE_0__.servicesList.ONLINE_CART.endpointPromotionCodeDel, {
                data: req
            });
        }
        const __WEBPACK_DEFAULT_EXPORT__ = {
            applyCoupon,
            withdrawCoupon
        };
    },
    "./src/assets/cart/script/domain/adapter/svc/index.js": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
        "use strict";
        __webpack_require__.d(__webpack_exports__, {
            default: () => __WEBPACK_DEFAULT_EXPORT__
        });
        var _internal_config__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./src/assets/cart/script/domain/adapter/svc/internal/config.js");
        var _internal_transport__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./src/assets/cart/script/domain/adapter/svc/internal/transport.js");
        class Svc {
            constructor(svcConfig) {
                this._config = svcConfig;
                this._transport = _internal_transport__WEBPACK_IMPORTED_MODULE_1__["default"].newTransport(_internal_config__WEBPACK_IMPORTED_MODULE_0__["default"].getRequest(svcConfig));
            }
            get transport() {
                return this._transport;
            }
            get lang() {
                return _internal_config__WEBPACK_IMPORTED_MODULE_0__["default"].getLangConfig(this._config);
            }
            get request() {
                return this.transport.request;
            }
        }
        let globalSvc;
        function withSvc(svcConfig) {
            globalSvc = new Svc(svcConfig);
        }
        function takeSvc() {
            return globalSvc;
        }
        const __WEBPACK_DEFAULT_EXPORT__ = {
            withSvc,
            takeSvc
        };
    },
    "./src/assets/cart/script/domain/adapter/svc/internal/config.js": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
        "use strict";
        __webpack_require__.d(__webpack_exports__, {
            default: () => __WEBPACK_DEFAULT_EXPORT__
        });
        const presetConfig = {
            ai: null,
            t(key) {
                return key;
            },
            lang: "zh-hans-cn"
        };
        function getLangConfig(config) {
            return (null === config || void 0 === config ? void 0 : config.lang) || presetConfig.lang;
        }
        function getRequest(config) {
            return config.ai;
        }
        const __WEBPACK_DEFAULT_EXPORT__ = {
            getLangConfig,
            getRequest
        };
    },
    "./src/assets/cart/script/domain/adapter/svc/internal/constant.js": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
        "use strict";
        __webpack_require__.d(__webpack_exports__, {
            default: () => __WEBPACK_DEFAULT_EXPORT__
        });
        const __WEBPACK_DEFAULT_EXPORT__ = {
            endpointCart: "/carts/cart",
            endpointCartVerifyV2: "/carts/cart/check-v2",
            endpointCartItemNumReduce: "/carts/cart/items_num_reduce",
            endpointVoucher: "/carts/cart/shopping_money",
            memberPoint: "/carts/cart/member-point",
            endpointOrderSaveAbandonOrder: "/trade/center/order/abandoned/save"
        };
    },
    "./src/assets/cart/script/domain/adapter/svc/internal/transport.js": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
        "use strict";
        __webpack_require__.d(__webpack_exports__, {
            default: () => __WEBPACK_DEFAULT_EXPORT__
        });
        function catchBizErr(fn) {
            return async function(...args) {
                try {
                    return await fn(...args);
                } catch (e) {
                    if (Reflect.has(e, "code") && Reflect.has(e, "success")) return e;
                    throw e;
                }
            };
        }
        const requestMethodsList = [ "get", "post", "put", "delete", "head", "options", "patch" ];
        function wrapAxios(axiosInstance) {
            const wrapped = catchBizErr(axiosInstance);
            requestMethodsList.forEach((method => {
                wrapped[method] = catchBizErr(axiosInstance[method].bind(axiosInstance));
            }));
            return wrapped;
        }
        function newTransport(axiosInstance) {
            if (!axiosInstance) throw new Error("failed to new transport without AxiosInstance");
            return Object.freeze({
                request: wrapAxios(axiosInstance)
            });
        }
        const __WEBPACK_DEFAULT_EXPORT__ = {
            newTransport
        };
    },
    "./src/assets/cart/script/domain/adapter/svc/order.js": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
        "use strict";
        __webpack_require__.d(__webpack_exports__, {
            default: () => __WEBPACK_DEFAULT_EXPORT__
        });
        var _internal_constant__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./src/assets/cart/script/domain/adapter/svc/internal/constant.js");
        var _model_helpers__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./src/assets/cart/script/domain/model/helpers.js");
        async function saveAbandonOrder(svc, config) {
            return svc.request.post(_internal_constant__WEBPACK_IMPORTED_MODULE_0__["default"].endpointOrderSaveAbandonOrder, {
                associateCart: true,
                abandonedOrderSeqInfo: config.abandonedOrderSeqInfo || null,
                discountCodes: config.discountCode || null,
                products: config.products || []
            });
        }
        function withAbandonOrderInfo(config, seq, mark) {
            if (!seq) return config;
            return _model_helpers__WEBPACK_IMPORTED_MODULE_1__["default"].merge(config, {
                abandonedOrderSeqInfo: {
                    seq,
                    mark
                }
            });
        }
        function withAbandonOrderDiscountCode(config, discountCode) {
            if (!discountCode) return config;
            return _model_helpers__WEBPACK_IMPORTED_MODULE_1__["default"].merge(config, {
                discountCode
            });
        }
        function withAbandonOrderProductList(config, productList) {
            if (!productList) return config;
            return _model_helpers__WEBPACK_IMPORTED_MODULE_1__["default"].merge(config, {
                products: productList
            });
        }
        const __WEBPACK_DEFAULT_EXPORT__ = {
            saveAbandonOrder,
            withAbandonOrderInfo,
            withAbandonOrderDiscountCode,
            withAbandonOrderProductList
        };
    },
    "./src/assets/cart/script/domain/adapter/svc/voucher.js": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
        "use strict";
        __webpack_require__.d(__webpack_exports__, {
            default: () => __WEBPACK_DEFAULT_EXPORT__
        });
        var _internal_constant__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./src/assets/cart/script/domain/adapter/svc/internal/constant.js");
        async function toggleVoucher(svc, used) {
            return svc.request.get(_internal_constant__WEBPACK_IMPORTED_MODULE_0__["default"].endpointVoucher, {
                params: {
                    selected: used
                }
            });
        }
        const __WEBPACK_DEFAULT_EXPORT__ = {
            toggleVoucher
        };
    },
    "./src/assets/cart/script/domain/model/cart.js": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
        "use strict";
        __webpack_require__.d(__webpack_exports__, {
            default: () => __WEBPACK_DEFAULT_EXPORT__
        });
        var _constant_cartQuantity__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./src/assets/cart/script/constant/cartQuantity.js");
        function getActiveCartItemList(model) {
            const activeItems = model.activeItems || [];
            return activeItems.reduce(((list, item) => list.concat(item.itemList || [])), []);
        }
        function getInactiveCartItemList(model) {
            return model.inactiveItems || [];
        }
        function getCartItemList(model) {
            return [ ...getActiveCartItemList(model), ...getInactiveCartItemList(model) ];
        }
        function getActiveCartItemListQuantity(model) {
            return getActiveCartItemList(model).length;
        }
        function getInactiveCartItemListQuantity(model) {
            return getInactiveCartItemList(model).length;
        }
        function getCartItemListQuantity(model) {
            return getActiveCartItemListQuantity(model) + getInactiveCartItemListQuantity(model);
        }
        function isCartItemListQuantityOverflow(model) {
            return getCartItemListQuantity(model) > _constant_cartQuantity__WEBPACK_IMPORTED_MODULE_0__["default"].MAX_CART_ITEM_LIST_QUANTITY;
        }
        function isActiveCartItemListQuantityOverflow(model) {
            return getActiveCartItemListQuantity(model) > _constant_cartQuantity__WEBPACK_IMPORTED_MODULE_0__["default"].MAX_CART_ITEM_LIST_QUANTITY;
        }
        function getSkuQuantity(model) {
            if (!model) return 0;
            return model.count || 0;
        }
        function getPromotionInfo(model) {
            return null === model || void 0 === model ? void 0 : model.promotionCodes;
        }
        function getVoucherInfo(model) {
            return null === model || void 0 === model ? void 0 : model.shoppingMoneyDTO;
        }
        const __WEBPACK_DEFAULT_EXPORT__ = {
            getActiveCartItemList,
            getInactiveCartItemList,
            getCartItemList,
            getActiveCartItemListQuantity,
            getInactiveCartItemListQuantity,
            getCartItemListQuantity,
            isCartItemListQuantityOverflow,
            isActiveCartItemListQuantityOverflow,
            getSkuQuantity,
            getPromotionInfo,
            getVoucherInfo
        };
    },
    "./src/assets/cart/script/domain/model/cartItem.js": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
        "use strict";
        __webpack_require__.d(__webpack_exports__, {
            default: () => __WEBPACK_DEFAULT_EXPORT__
        });
        var _vo_productStock__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./src/assets/cart/script/domain/vo/productStock.js");
        var _vo_productPriceType__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./src/assets/cart/script/domain/vo/productPriceType.js");
        var _constant_priceType__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./src/assets/cart/script/constant/priceType.js");
        var _utils_object__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("./src/assets/cart/script/utils/object.js");
        var _constant_cartQuantity__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__("./src/assets/cart/script/constant/cartQuantity.js");
        function getSpuId(model) {
            if (!model) return "";
            return model.spuId || "";
        }
        function getSkuId(model) {
            if (!model) return "";
            return model.skuId || "";
        }
        function getGroupId(model) {
            if (!model) return "";
            return model.groupId || "";
        }
        function getParentSkuId(model) {
            if (!model) return "";
            return model.parentSkuId || "";
        }
        function getProductSource(model) {
            if (!model) return "";
            return model.productSource || "";
        }
        function getQuantity(model) {
            if (!model) return 0;
            return model.num || 0;
        }
        function getStock(model) {
            if (!model) return 0;
            return model.stock || 0;
        }
        function getPriceType(model) {
            if (!model) return _constant_priceType__WEBPACK_IMPORTED_MODULE_2__["default"].NORMAL;
            return model.priceType;
        }
        function isProductOnSale(model) {
            return _vo_productStock__WEBPACK_IMPORTED_MODULE_0__["default"].isProductOnSale(model);
        }
        function isProductQuantityAvailable(model) {
            if (!model) return false;
            const quantity = getQuantity(model);
            if (quantity <= 0) return false;
            if (quantity > _constant_cartQuantity__WEBPACK_IMPORTED_MODULE_4__["default"].MAX_CART_ITEM_QUANTITY) return false;
            const stock = getStock(model);
            if (quantity <= stock) return true;
            return _vo_productStock__WEBPACK_IMPORTED_MODULE_0__["default"].isStockNotLimited(model);
        }
        function isProductQuantityOverflow(model) {
            return getQuantity(model) > _constant_cartQuantity__WEBPACK_IMPORTED_MODULE_4__["default"].MAX_CART_ITEM_QUANTITY;
        }
        function getUniqueID(model) {
            if (!model) return "";
            return `${model.groupId}${model.spuId}.${model.skuId}`;
        }
        function filterOnSaleProduct(list) {
            return filter(list, _vo_productStock__WEBPACK_IMPORTED_MODULE_0__["default"].isProductOnSale);
        }
        function mergeNthProduct(list) {
            if (!list) return [];
            const productIndexMap = {};
            const result = [];
            for (let i = 0; i < list.length; ++i) {
                const item = list[i];
                if (_utils_object__WEBPACK_IMPORTED_MODULE_3__["default"].has(productIndexMap, `${item.groupId}${item.skuId}`)) {
                    const pushedItem = result[productIndexMap[`${item.groupId}${item.skuId}`]];
                    if (_vo_productPriceType__WEBPACK_IMPORTED_MODULE_1__["default"].isNthDiscount(item)) {
                        item.num += pushedItem.num;
                        result[productIndexMap[`${item.groupId}${item.skuId}`]] = item;
                    } else pushedItem.num += item.num;
                } else {
                    productIndexMap[`${item.groupId}${item.skuId}`] = result.length;
                    result.push({
                        ...item
                    });
                }
            }
            return result;
        }
        function isCartItemListOverflow(list) {
            if (!list) return false;
            return list.length > _constant_cartQuantity__WEBPACK_IMPORTED_MODULE_4__["default"].MAX_CART_ITEM_LIST_QUANTITY;
        }
        function filterProductInGroup(list, groupId) {
            if (!list || !groupId) return [];
            return filter(list, (model => getGroupId(model) === groupId));
        }
        function groupProductsWithSkuId(list, skuId) {
            if (!list || !skuId) return [];
            return filter(list, (model => {
                if (getSkuId(model) === skuId) return true;
                return getParentSkuId(model) === skuId;
            }));
        }
        function filterProductsWithParentSkuId(list, skuId) {
            if (!list || !skuId) return [];
            return filter(list, (model => {
                if (getSkuId(model) === skuId) return false;
                return getParentSkuId(model) === skuId;
            }));
        }
        function findProductWithGroupIdAndSkuId(list, groupId, skuId) {
            if (!list || !skuId) return [];
            if (!groupId) groupId = "0";
            return find(list, (model => {
                if (getSkuId(model) !== skuId) return false;
                let targetGroupId = getGroupId(model);
                if (!targetGroupId) targetGroupId = "0";
                return targetGroupId === groupId;
            }));
        }
        const __WEBPACK_DEFAULT_EXPORT__ = {
            getUniqueID,
            getPriceType,
            getSpuId,
            getSkuId,
            getGroupId,
            getProductSource,
            getQuantity,
            isProductOnSale,
            isProductQuantityAvailable,
            isProductQuantityOverflow,
            isCartItemListOverflow,
            mergeNthProduct,
            filterOnSaleProduct,
            filterProductInGroup,
            groupProductsWithSkuId,
            filterProductsWithParentSkuId,
            findProductWithGroupIdAndSkuId
        };
        function filter(list, filterFn) {
            if (!list || "function" !== typeof filterFn) return [];
            return list.filter(filterFn);
        }
        function find(list, filterFn) {
            if (!list || "function" !== typeof filterFn) return [];
            return list.find(filterFn);
        }
    },
    "./src/assets/cart/script/domain/model/cartVerifyItem.js": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
        "use strict";
        __webpack_require__.d(__webpack_exports__, {
            default: () => __WEBPACK_DEFAULT_EXPORT__
        });
        var _yy_sl_theme_shared_biz_com_trade_optimize_modal_cartChangeItem__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("../shared/browser/biz-com/trade/optimize-modal/cartChangeItem.js");
        var _cartItem__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./src/assets/cart/script/domain/model/cartItem.js");
        var _vo_productVerifyType__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./src/assets/cart/script/domain/vo/productVerifyType.js");
        function makeVerifyList(cartItemList, checkList) {
            const checkItemMap = (checkList || []).reduce(((result, item) => {
                result[`${_yy_sl_theme_shared_biz_com_trade_optimize_modal_cartChangeItem__WEBPACK_IMPORTED_MODULE_0__["default"].getGroupId(item)}-${_yy_sl_theme_shared_biz_com_trade_optimize_modal_cartChangeItem__WEBPACK_IMPORTED_MODULE_0__["default"].getSkuId(item)}`] = item;
                return result;
            }), {});
            const results = [];
            (cartItemList || []).forEach((item => {
                if (item) {
                    const changeItem = checkItemMap[`${_cartItem__WEBPACK_IMPORTED_MODULE_1__["default"].getGroupId(item)}-${_cartItem__WEBPACK_IMPORTED_MODULE_1__["default"].getSkuId(item)}`];
                    results.push({
                        verifyType: _yy_sl_theme_shared_biz_com_trade_optimize_modal_cartChangeItem__WEBPACK_IMPORTED_MODULE_0__["default"].getVerifyType(changeItem),
                        cartItem: item,
                        cartChangeItem: changeItem
                    });
                }
            }));
            return results;
        }
        function isVerifyFailed(list) {
            if (!Array.isArray(list)) return false;
            if (list.length <= 0) return false;
            return list.find((item => _vo_productVerifyType__WEBPACK_IMPORTED_MODULE_2__["default"].hasError(item)));
        }
        function filterFailedList(list) {
            if (!Array.isArray(list)) return [];
            if (list.length <= 0) return [];
            return list.filter((item => _vo_productVerifyType__WEBPACK_IMPORTED_MODULE_2__["default"].hasError(item)));
        }
        function getVerifiedCartItemList(list) {
            if (!list || list.length <= 0) return [];
            return list.map((verifyItem => {
                const {cartItem, cartChangeItem} = verifyItem;
                const {errorInfo} = cartChangeItem || {};
                if (!errorInfo) return {
                    ...cartItem
                };
                const {targetNum} = errorInfo;
                if (targetNum > 0) return {
                    ...cartItem,
                    num: targetNum
                };
                return null;
            })).filter((v => !!v));
        }
        const __WEBPACK_DEFAULT_EXPORT__ = {
            makeVerifyList,
            isVerifyFailed,
            filterFailedList,
            getVerifiedCartItemList
        };
    },
    "./src/assets/cart/script/domain/model/helpers.js": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
        "use strict";
        __webpack_require__.d(__webpack_exports__, {
            default: () => __WEBPACK_DEFAULT_EXPORT__
        });
        function reducer(source) {
            function reduce(ctx) {
                const cal = () => ctx;
                cal.next = (extractor, ...args) => {
                    if (!extractor) return reduce(ctx);
                    return reduce(extractor(ctx, ...args));
                };
                return cal;
            }
            return reduce(source);
        }
        function memo() {
            let deps;
            let result;
            return function(getter, ...args) {
                if (null == deps || !compare(deps, args)) {
                    result = getter(...args);
                    deps = args;
                }
                return result;
            };
        }
        function merge(source, target) {
            if (!source) source = {};
            if (!target) return source;
            return {
                ...source,
                ...target
            };
        }
        const __WEBPACK_DEFAULT_EXPORT__ = {
            reducer,
            memo,
            merge
        };
        function compare(v1, v2) {
            if (v1 === v2) return true;
            if (null == v1 || null == v2) return false;
            const t1 = typeof v1;
            const t2 = typeof v2;
            if (t1 !== t2) return false;
            if ("function" === t1) return false;
            if (Array.isArray(v1) && Array.isArray(v2)) {
                const l1 = v1.length;
                const l2 = v2.length;
                if (l1 !== l2) return false;
                let i = 0;
                for (;i < l1; ++i) {
                    const i1 = v1[i];
                    const i2 = v2[i];
                    if (!compare(i1, i2)) return false;
                }
                return i === l2;
            }
            return false;
        }
    },
    "./src/assets/cart/script/domain/model/promotionCode.js": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
        "use strict";
        __webpack_require__.d(__webpack_exports__, {
            default: () => __WEBPACK_DEFAULT_EXPORT__
        });
        function getCode(model) {
            if (!model) return;
            return model.map((codeInfo => codeInfo.promotionCode)) || "";
        }
        const __WEBPACK_DEFAULT_EXPORT__ = {
            getCode
        };
    },
    "./src/assets/cart/script/domain/model/response.js": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
        "use strict";
        __webpack_require__.d(__webpack_exports__, {
            default: () => __WEBPACK_DEFAULT_EXPORT__
        });
        var _vo_responseCode__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./src/assets/cart/script/domain/vo/responseCode.js");
        var _constant_responseCode__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./src/assets/cart/script/constant/responseCode.js");
        function getCode(model) {
            if (!model) return "";
            return model.code;
        }
        function getData(model) {
            if (!model) return null;
            return model.data;
        }
        function isResolved(model) {
            if (!model) return false;
            return true === model.success && _vo_responseCode__WEBPACK_IMPORTED_MODULE_0__["default"].isOk(model);
        }
        function rejectWithCode(code = "") {
            return {
                code,
                success: false
            };
        }
        function resolveWithData(data = void 0) {
            return {
                code: _constant_responseCode__WEBPACK_IMPORTED_MODULE_1__["default"].SUCCESS,
                success: true,
                data
            };
        }
        const __WEBPACK_DEFAULT_EXPORT__ = {
            getCode,
            getData,
            isResolved,
            rejectWithCode,
            resolveWithData
        };
    },
    "./src/assets/cart/script/domain/vo/productPriceType.js": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
        "use strict";
        __webpack_require__.d(__webpack_exports__, {
            default: () => __WEBPACK_DEFAULT_EXPORT__
        });
        var _constant_priceType__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./src/assets/cart/script/constant/priceType.js");
        function isNthDiscount(vo) {
            if (!vo) return false;
            return vo.priceType === _constant_priceType__WEBPACK_IMPORTED_MODULE_0__["default"].NTH_DISCOUNT;
        }
        const __WEBPACK_DEFAULT_EXPORT__ = {
            isNthDiscount
        };
    },
    "./src/assets/cart/script/domain/vo/productStock.js": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
        "use strict";
        __webpack_require__.d(__webpack_exports__, {
            default: () => __WEBPACK_DEFAULT_EXPORT__
        });
        var _constant_stockType__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./src/assets/cart/script/constant/stockType.js");
        function isProductOnSale(vo) {
            if (!vo) return false;
            if (vo.stock > 0) return true;
            return vo.stockType === _constant_stockType__WEBPACK_IMPORTED_MODULE_0__["default"].OVERSOLD || vo.stockType === _constant_stockType__WEBPACK_IMPORTED_MODULE_0__["default"].UNLIMITED;
        }
        function isStockNotLimited(vo) {
            if (!vo) return false;
            return vo.stockType === _constant_stockType__WEBPACK_IMPORTED_MODULE_0__["default"].OVERSOLD || vo.stockType === _constant_stockType__WEBPACK_IMPORTED_MODULE_0__["default"].UNLIMITED;
        }
        const __WEBPACK_DEFAULT_EXPORT__ = {
            isProductOnSale,
            isStockNotLimited
        };
    },
    "./src/assets/cart/script/domain/vo/productVerifyType.js": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
        "use strict";
        __webpack_require__.d(__webpack_exports__, {
            default: () => __WEBPACK_DEFAULT_EXPORT__
        });
        var _yy_sl_theme_shared_biz_com_trade_optimize_modal_constant__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("../shared/browser/biz-com/trade/optimize-modal/constant.js");
        function noError(vo) {
            return !vo || !vo.verifyType || vo.verifyType === _yy_sl_theme_shared_biz_com_trade_optimize_modal_constant__WEBPACK_IMPORTED_MODULE_0__.verifyType.NIL;
        }
        function hasError(vo) {
            return !noError(vo);
        }
        function isUnderStock(vo) {
            return (null === vo || void 0 === vo ? void 0 : vo.verifyType) === _yy_sl_theme_shared_biz_com_trade_optimize_modal_constant__WEBPACK_IMPORTED_MODULE_0__.verifyType.UNDER_STOCK;
        }
        const __WEBPACK_DEFAULT_EXPORT__ = {
            noError,
            hasError,
            isUnderStock
        };
    },
    "./src/assets/cart/script/domain/vo/responseCode.js": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
        "use strict";
        __webpack_require__.d(__webpack_exports__, {
            default: () => __WEBPACK_DEFAULT_EXPORT__
        });
        var _constant_responseCode__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./src/assets/cart/script/constant/responseCode.js");
        function isOk(vo) {
            if (!vo) return false;
            return vo.code === _constant_responseCode__WEBPACK_IMPORTED_MODULE_0__["default"].SUCCESS;
        }
        function is(vo, code) {
            if (!vo || !code) return false;
            return vo.code === code;
        }
        function batchIs(vo, code) {
            if (!vo || !code) return false;
            try {
                return code.split(",").includes(vo.code);
            } catch {
                return false;
            }
        }
        const __WEBPACK_DEFAULT_EXPORT__ = {
            is,
            isOk,
            batchIs
        };
    },
    "./src/assets/cart/script/service/cart/hooks.js": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
        "use strict";
        __webpack_require__.d(__webpack_exports__, {
            default: () => __WEBPACK_DEFAULT_EXPORT__
        });
        var _funnyecho_hamon__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/@funnyecho/hamon/dist/index.js");
        var _domain_model_cartItem__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./src/assets/cart/script/domain/model/cartItem.js");
        const verifyingProductOverflow = new _funnyecho_hamon__WEBPACK_IMPORTED_MODULE_0__.AsyncSeriesBailHook;
        const verifyingActiveProductEmpty = new _funnyecho_hamon__WEBPACK_IMPORTED_MODULE_0__.AsyncSeriesBailHook;
        const verifyingProductSoldOut = new _funnyecho_hamon__WEBPACK_IMPORTED_MODULE_0__.AsyncSeriesBailHook((item => _domain_model_cartItem__WEBPACK_IMPORTED_MODULE_1__["default"].getUniqueID(item)));
        const verifyingProductQuantityInvalid = new _funnyecho_hamon__WEBPACK_IMPORTED_MODULE_0__.AsyncSeriesBailHook((item => _domain_model_cartItem__WEBPACK_IMPORTED_MODULE_1__["default"].getUniqueID(item)));
        const productVerified = new _funnyecho_hamon__WEBPACK_IMPORTED_MODULE_0__.AsyncSeriesBailHook;
        const __WEBPACK_DEFAULT_EXPORT__ = {
            verifyingProductOverflow,
            verifyingActiveProductEmpty,
            verifyingProductSoldOut,
            verifyingProductQuantityInvalid,
            productVerified
        };
    },
    "./src/assets/cart/script/service/cart/index.js": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
        "use strict";
        __webpack_require__.d(__webpack_exports__, {
            default: () => __WEBPACK_DEFAULT_EXPORT__
        });
        var _service__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./src/assets/cart/script/service/cart/service.js");
        function withCartService(svcAdapter, storageAdapter) {
            window._sl_cart__cart_service__ = new _service__WEBPACK_IMPORTED_MODULE_0__["default"].CartService(svcAdapter, storageAdapter);
        }
        function takeCartService() {
            return window._sl_cart__cart_service__;
        }
        const __WEBPACK_DEFAULT_EXPORT__ = {
            withCartService,
            takeCartService,
            eventBusEnum: _service__WEBPACK_IMPORTED_MODULE_0__["default"].CartEventBusEnum,
            eventBus: _service__WEBPACK_IMPORTED_MODULE_0__["default"].cartEventBus
        };
    },
    "./src/assets/cart/script/service/cart/service.js": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
        "use strict";
        __webpack_require__.d(__webpack_exports__, {
            default: () => __WEBPACK_DEFAULT_EXPORT__
        });
        var _yy_sl_theme_shared_utils_state_selector__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("../shared/browser/utils/state-selector.js");
        var _yy_sl_theme_shared_utils_dataAccessor__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__("../shared/browser/utils/dataAccessor.js");
        var _sl_cart_lib_utils_store__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/@sl/cart/lib/utils/store.js");
        var _utils_event_bus__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("./src/assets/cart/script/utils/event-bus/index.js");
        var _domain_adapter_svc_cart__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("./src/assets/cart/script/domain/adapter/svc/cart.js");
        var _domain_adapter_svc_voucher__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__("./src/assets/cart/script/domain/adapter/svc/voucher.js");
        var _domain_adapter_svc_coupon__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__("./src/assets/cart/script/domain/adapter/svc/coupon.js");
        var _domain_adapter_svc_order__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__("./src/assets/cart/script/domain/adapter/svc/order.js");
        var _domain_adapter_storage_constant__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__("./src/assets/cart/script/domain/adapter/storage/constant.js");
        var _constant_responseCode__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__("./src/assets/cart/script/constant/responseCode.js");
        var _domain_model_cart__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__("./src/assets/cart/script/domain/model/cart.js");
        var _domain_model_cartItem__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__("./src/assets/cart/script/domain/model/cartItem.js");
        var _domain_model_response__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__("./src/assets/cart/script/domain/model/response.js");
        var _domain_model_promotionCode__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__("./src/assets/cart/script/domain/model/promotionCode.js");
        var _domain_model_cartVerifyItem__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__("./src/assets/cart/script/domain/model/cartVerifyItem.js");
        var _domain_model_helpers__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__("./src/assets/cart/script/domain/model/helpers.js");
        var _hooks__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__("./src/assets/cart/script/service/cart/hooks.js");
        const CartEventBusEnum = {
            UPDATE: "cart:update"
        };
        const CartInfoKey = "cartInfo";
        class CartService {
            constructor(svcAdapter, storageAdapter) {
                this._svc = svcAdapter;
                this._storage = storageAdapter;
                this._cartDetail = _yy_sl_theme_shared_utils_state_selector__WEBPACK_IMPORTED_MODULE_0__.SL_State.get(CartInfoKey) || null;
                this._inactiveCartItemListMemo = _domain_model_helpers__WEBPACK_IMPORTED_MODULE_14__["default"].memo();
                this._activeCartItemListMemo = _domain_model_helpers__WEBPACK_IMPORTED_MODULE_14__["default"].memo();
                this._cartItemListMemo = _domain_model_helpers__WEBPACK_IMPORTED_MODULE_14__["default"].memo();
                _utils_event_bus__WEBPACK_IMPORTED_MODULE_2__["default"].on(CartEventBusEnum.UPDATE, (data => {
                    this._cartDetail = data;
                }));
            }
            get inactiveCartItemList() {
                return this._inactiveCartItemListMemo((cartDetail => _domain_model_helpers__WEBPACK_IMPORTED_MODULE_14__["default"].reducer(cartDetail).next(_domain_model_cart__WEBPACK_IMPORTED_MODULE_9__["default"].getInactiveCartItemList).next(_domain_model_cartItem__WEBPACK_IMPORTED_MODULE_10__["default"].mergeNthProduct)()), this.cartDetail);
            }
            get activeCartItemList() {
                return this._activeCartItemListMemo((cartDetail => _domain_model_helpers__WEBPACK_IMPORTED_MODULE_14__["default"].reducer(cartDetail).next(_domain_model_cart__WEBPACK_IMPORTED_MODULE_9__["default"].getActiveCartItemList).next(_domain_model_cartItem__WEBPACK_IMPORTED_MODULE_10__["default"].mergeNthProduct)()), this.cartDetail);
            }
            get cartItemList() {
                return this._cartItemListMemo((cartDetail => _domain_model_helpers__WEBPACK_IMPORTED_MODULE_14__["default"].reducer(cartDetail).next(_domain_model_cart__WEBPACK_IMPORTED_MODULE_9__["default"].getCartItemList).next(_domain_model_cartItem__WEBPACK_IMPORTED_MODULE_10__["default"].mergeNthProduct)()), this.cartDetail);
            }
            get cartDetail() {
                return this._cartDetail;
            }
            async getCartDetail() {
                const res = await _domain_adapter_svc_cart__WEBPACK_IMPORTED_MODULE_3__["default"].getCart(this._svc);
                if (_domain_model_response__WEBPACK_IMPORTED_MODULE_11__["default"].isResolved(res)) {
                    const {data} = res;
                    this._cartDetail = data;
                    _sl_cart_lib_utils_store__WEBPACK_IMPORTED_MODULE_1__["default"].add({
                        cartInfo: data
                    });
                    _yy_sl_theme_shared_utils_state_selector__WEBPACK_IMPORTED_MODULE_0__.SL_State.set(CartInfoKey, data);
                    _utils_event_bus__WEBPACK_IMPORTED_MODULE_2__["default"].emit(CartEventBusEnum.UPDATE, data);
                }
                return res;
            }
            async updateCartState() {
                const res = await _domain_adapter_svc_cart__WEBPACK_IMPORTED_MODULE_3__["default"].getCart(this._svc);
                if (_domain_model_response__WEBPACK_IMPORTED_MODULE_11__["default"].isResolved(res)) {
                    const {data} = res;
                    this._cartDetail = data;
                    _sl_cart_lib_utils_store__WEBPACK_IMPORTED_MODULE_1__["default"].add({
                        cartInfo: data
                    });
                    _yy_sl_theme_shared_utils_state_selector__WEBPACK_IMPORTED_MODULE_0__.SL_State.set(CartInfoKey, data);
                }
                return res;
            }
            async rerenderCartDom() {
                await _utils_event_bus__WEBPACK_IMPORTED_MODULE_2__["default"].emit(CartEventBusEnum.UPDATE, this._cartDetail);
            }
            async addSku({spuId, skuId, num, orderFrom, dataReportReq, sellingPlanId}) {
                if (!spuId || !skuId || num < 0) return _domain_model_response__WEBPACK_IMPORTED_MODULE_11__["default"].rejectWithCode(_constant_responseCode__WEBPACK_IMPORTED_MODULE_8__["default"].FA_INVALID_PARAMS);
                const res = await _domain_adapter_svc_cart__WEBPACK_IMPORTED_MODULE_3__["default"].addCartItem(this._svc, {
                    spuId,
                    skuId,
                    num,
                    orderFrom,
                    dataReportReq,
                    sellingPlanId
                });
                if (_domain_model_response__WEBPACK_IMPORTED_MODULE_11__["default"].isResolved(res)) await this.getCartDetail();
                return res;
            }
            async editSku({spuId, skuId, num, groupId, productSource}) {
                if (!spuId || !skuId || num < 0) return _domain_model_response__WEBPACK_IMPORTED_MODULE_11__["default"].rejectWithCode(_constant_responseCode__WEBPACK_IMPORTED_MODULE_8__["default"].FA_INVALID_PARAMS);
                const skuInfo = {
                    spuId,
                    skuId,
                    num,
                    groupId,
                    productSource
                };
                const res = await _domain_adapter_svc_cart__WEBPACK_IMPORTED_MODULE_3__["default"].putCartItem(this._svc, skuInfo);
                if (_domain_model_response__WEBPACK_IMPORTED_MODULE_11__["default"].isResolved(res)) await this.getCartDetail();
                return res;
            }
            async removeSkuList(skuInfoList) {
                if (Array.isArray(skuInfoList) && skuInfoList.length) {
                    const res = await _domain_adapter_svc_cart__WEBPACK_IMPORTED_MODULE_3__["default"].deleteCartItemList(this._svc, skuInfoList || []);
                    if (_domain_model_response__WEBPACK_IMPORTED_MODULE_11__["default"].isResolved(res)) await this.getCartDetail();
                    return res;
                }
                return _domain_model_response__WEBPACK_IMPORTED_MODULE_11__["default"].resolveWithData();
            }
            getCheckoutParams(itemList) {
                var _this$cartDetail, _this$cartDetail$memb;
                const discountCode = _domain_model_helpers__WEBPACK_IMPORTED_MODULE_14__["default"].reducer(this.cartDetail).next(_domain_model_cart__WEBPACK_IMPORTED_MODULE_9__["default"].getPromotionInfo).next(_domain_model_promotionCode__WEBPACK_IMPORTED_MODULE_12__["default"].getCode)();
                const useMemberPoint = null === (_this$cartDetail = this.cartDetail) || void 0 === _this$cartDetail ? void 0 : null === (_this$cartDetail$memb = _this$cartDetail.memberPointInfo) || void 0 === _this$cartDetail$memb ? void 0 : _this$cartDetail$memb.use;
                let abandonSeq = null;
                let abandonMark = null;
                const rawAbandonInfoFromCache = this._storage.getItem(_domain_adapter_storage_constant__WEBPACK_IMPORTED_MODULE_7__["default"].KEY_CART_ABANDON_INFO);
                if (rawAbandonInfoFromCache) ({mark: abandonMark, seq: abandonSeq} = JSON.parse(rawAbandonInfoFromCache));
                return _domain_model_helpers__WEBPACK_IMPORTED_MODULE_14__["default"].reducer({
                    associateCart: true,
                    useMemberPoint
                }).next(discountCode ? _domain_adapter_svc_order__WEBPACK_IMPORTED_MODULE_6__["default"].withAbandonOrderDiscountCode : null, discountCode).next(abandonSeq ? _domain_adapter_svc_order__WEBPACK_IMPORTED_MODULE_6__["default"].withAbandonOrderInfo : null, abandonSeq, abandonMark).next(_domain_adapter_svc_order__WEBPACK_IMPORTED_MODULE_6__["default"].withAbandonOrderProductList, (itemList || []).map((item => {
                    var _item$subscriptionInf;
                    return {
                        productSku: item.skuId,
                        productSeq: item.spuId,
                        productNum: item.num,
                        productPrice: item.price,
                        productName: item.name,
                        groupId: item.groupId,
                        productSource: item.productSource,
                        sellingPlanId: null === (_item$subscriptionInf = item.subscriptionInfo) || void 0 === _item$subscriptionInf ? void 0 : _item$subscriptionInf.sellingPlanId
                    };
                })))();
            }
            async toggleVoucher(used) {
                const res = await _domain_adapter_svc_voucher__WEBPACK_IMPORTED_MODULE_4__["default"].toggleVoucher(this._svc, !!used);
                if (_domain_model_response__WEBPACK_IMPORTED_MODULE_11__["default"].isResolved(res)) await this.getCartDetail();
                return res;
            }
            async applyCoupon(info) {
                const res = await _domain_adapter_svc_coupon__WEBPACK_IMPORTED_MODULE_5__["default"].applyCoupon(this._svc, info);
                if (_domain_model_response__WEBPACK_IMPORTED_MODULE_11__["default"].isResolved(res)) await this.getCartDetail();
                return res;
            }
            async withdrawCoupon(req) {
                const couponCode = _domain_model_helpers__WEBPACK_IMPORTED_MODULE_14__["default"].reducer(this._cartDetail).next(_domain_model_cart__WEBPACK_IMPORTED_MODULE_9__["default"].getPromotionInfo).next(_domain_model_promotionCode__WEBPACK_IMPORTED_MODULE_12__["default"].getCode)();
                if (!couponCode) return _domain_model_response__WEBPACK_IMPORTED_MODULE_11__["default"].rejectWithCode(_constant_responseCode__WEBPACK_IMPORTED_MODULE_8__["default"].FA_COUPON_INVALID_CODE);
                const res = await _domain_adapter_svc_coupon__WEBPACK_IMPORTED_MODULE_5__["default"].withdrawCoupon(this._svc, req);
                if (_domain_model_response__WEBPACK_IMPORTED_MODULE_11__["default"].isResolved(res)) await this.getCartDetail();
                return res;
            }
            async verifyCartItemList(cartItemList) {
                if (!cartItemList) cartItemList = this.cartItemList;
                return this._verifyCartItemList(cartItemList);
            }
            async _verifyCartItemList(cartItemList) {
                if (!Array.isArray(cartItemList)) return _domain_model_response__WEBPACK_IMPORTED_MODULE_11__["default"].rejectWithCode(_constant_responseCode__WEBPACK_IMPORTED_MODULE_8__["default"].FA_INVALID_PARAMS);
                if (cartItemList.length <= 0) if (false !== await _hooks__WEBPACK_IMPORTED_MODULE_15__["default"].verifyingActiveProductEmpty.callPromise()) return _domain_model_response__WEBPACK_IMPORTED_MODULE_11__["default"].rejectWithCode(_constant_responseCode__WEBPACK_IMPORTED_MODULE_8__["default"].FA_PRODUCT_ACTIVE_EMPTY);
                const checkRes = await _domain_adapter_svc_cart__WEBPACK_IMPORTED_MODULE_3__["default"].verifyCartItemListV2(this._svc, {
                    orderFrom: (0, _yy_sl_theme_shared_utils_dataAccessor__WEBPACK_IMPORTED_MODULE_16__.getSyncData)("orderFrom") || "web",
                    itemList: cartItemList.map((item => ({
                        spuId: _domain_model_cartItem__WEBPACK_IMPORTED_MODULE_10__["default"].getSpuId(item),
                        skuId: _domain_model_cartItem__WEBPACK_IMPORTED_MODULE_10__["default"].getSkuId(item),
                        num: _domain_model_cartItem__WEBPACK_IMPORTED_MODULE_10__["default"].getQuantity(item),
                        groupId: _domain_model_cartItem__WEBPACK_IMPORTED_MODULE_10__["default"].getGroupId(item),
                        productSource: _domain_model_cartItem__WEBPACK_IMPORTED_MODULE_10__["default"].getProductSource(item)
                    }))).filter((i => !!i.spuId && !!i.skuId))
                });
                if (!_domain_model_response__WEBPACK_IMPORTED_MODULE_11__["default"].isResolved(checkRes)) return checkRes;
                return _domain_model_response__WEBPACK_IMPORTED_MODULE_11__["default"].resolveWithData(_domain_model_cartVerifyItem__WEBPACK_IMPORTED_MODULE_13__["default"].makeVerifyList(cartItemList, _domain_model_response__WEBPACK_IMPORTED_MODULE_11__["default"].getData(checkRes).checkItemList));
            }
            async getMemberPoint(use) {
                const res = await _domain_adapter_svc_cart__WEBPACK_IMPORTED_MODULE_3__["default"].memberPoint(this._svc, use);
                return res;
            }
            getCardItemList() {
                return this.cartItemList;
            }
        }
        const __WEBPACK_DEFAULT_EXPORT__ = {
            CartService,
            CartEventBusEnum,
            cartEventBus: _utils_event_bus__WEBPACK_IMPORTED_MODULE_2__["default"]
        };
    },
    "./src/assets/cart/script/service/index.js": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
        "use strict";
        __webpack_require__.d(__webpack_exports__, {
            default: () => __WEBPACK_DEFAULT_EXPORT__
        });
        var js_cookie__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/js-cookie/src/js.cookie.js");
        var js_cookie__WEBPACK_IMPORTED_MODULE_0___default = __webpack_require__.n(js_cookie__WEBPACK_IMPORTED_MODULE_0__);
        var _yy_sl_theme_shared_utils_request__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("../shared/browser/utils/request.js");
        var _yy_sl_theme_shared_utils_logger_sentryReport__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("../shared/browser/utils/logger/sentryReport.js");
        var _domain_adapter_svc__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("./src/assets/cart/script/domain/adapter/svc/index.js");
        var _domain_adapter_storage__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__("./src/assets/cart/script/domain/adapter/storage/index.js");
        var _cart__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__("./src/assets/cart/script/service/cart/index.js");
        var _shared_logger__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__("./src/assets/shared/logger/index.js");
        const logger = _shared_logger__WEBPACK_IMPORTED_MODULE_6__["default"].pipeOwner(`${_yy_sl_theme_shared_utils_logger_sentryReport__WEBPACK_IMPORTED_MODULE_2__.Owner.Cart} cart/script/service/index.js`);
        const cartToken = js_cookie__WEBPACK_IMPORTED_MODULE_0___default().get("t_cart");
        let initialized = false;
        function init() {
            if (initialized) return;
            initialized = true;
            _domain_adapter_svc__WEBPACK_IMPORTED_MODULE_3__["default"].withSvc({
                ai: _yy_sl_theme_shared_utils_request__WEBPACK_IMPORTED_MODULE_1__["default"]
            });
            _cart__WEBPACK_IMPORTED_MODULE_5__["default"].withCartService(_domain_adapter_svc__WEBPACK_IMPORTED_MODULE_3__["default"].takeSvc(), _domain_adapter_storage__WEBPACK_IMPORTED_MODULE_4__["default"].takeStorage());
            logger.info(`normal 主站购物车 全局化 cart service _init`, {
                data: {
                    cartToken
                },
                action: _yy_sl_theme_shared_utils_logger_sentryReport__WEBPACK_IMPORTED_MODULE_2__.Action.InitCart,
                status: _shared_logger__WEBPACK_IMPORTED_MODULE_6__.Status.Success
            });
        }
        const __WEBPACK_DEFAULT_EXPORT__ = {
            init
        };
    },
    "./src/assets/cart/script/utils/event-bus/index.js": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
        "use strict";
        __webpack_require__.d(__webpack_exports__, {
            default: () => __WEBPACK_DEFAULT_EXPORT__
        });
        var _yy_sl_theme_shared_utils_createLogger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("../shared/browser/utils/createLogger.js");
        var _yy_sl_theme_shared_utils_event_bus__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("../shared/browser/utils/event-bus.js");
        const emitLogger = (0, _yy_sl_theme_shared_utils_createLogger__WEBPACK_IMPORTED_MODULE_0__["default"])("emit");
        const emitter = _yy_sl_theme_shared_utils_event_bus__WEBPACK_IMPORTED_MODULE_1__.SL_EventBus;
        const oriEmit = emitter.emit;
        emitter.emit = function(event, data) {
            emitLogger.log(event, data);
            oriEmit.apply(emitter, arguments);
        };
        const __WEBPACK_DEFAULT_EXPORT__ = emitter;
    },
    "./src/assets/cart/script/utils/object.js": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
        "use strict";
        __webpack_require__.d(__webpack_exports__, {
            default: () => __WEBPACK_DEFAULT_EXPORT__
        });
        function has(o, k) {
            if (!o || !k) return false;
            return Object.prototype.hasOwnProperty.call(o, k);
        }
        function isNilObject(o) {
            if (!o) return true;
            return 0 === Object.keys(o).length;
        }
        const __WEBPACK_DEFAULT_EXPORT__ = {
            has,
            isNilObject
        };
    },
    "./src/assets/commons/base/BaseClass.js": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
        "use strict";
        __webpack_require__.d(__webpack_exports__, {
            default: () => EventManager
        });
        function isInvalid(param) {
            return !param || "string" !== typeof param;
        }
        function isJqueryInstance(dom) {
            return dom && dom instanceof __SL_$__ && dom.length > 0;
        }
        function getEventHandlerName(event, selector, namepsace) {
            if (!selector) return [ event, namepsace ].join("-");
            if (isJqueryInstance(selector)) return selector;
            return [ selector, event, namepsace ].join("-");
        }
        function getNamespace(event, namespace) {
            if (isInvalid(event) && isInvalid(namespace)) throw new Error("one of these two parameters must be provided!");
            if (isInvalid(event)) return `.${namespace}`;
            return [ event, namespace ].join(".");
        }
        const eventInvalidErrorMessage = "event param must be provided and it must be a string type";
        function on({eventName, handler, selector, scope} = {}) {
            if (isInvalid(eventName)) throw new Error(eventInvalidErrorMessage);
            if (!isJqueryInstance(scope)) throw new Error("scope must be a jQuery Object");
            if ("function" !== typeof handler) throw new TypeError("handler must be a function");
            if (selector) {
                if (isInvalid(selector)) throw new TypeError("selector must be a string!");
                scope.on(eventName, selector, handler);
            } else scope.on(eventName, handler);
        }
        function off({eventName, selector, handler, scope} = {}) {
            if (isInvalid(eventName)) throw new Error(eventInvalidErrorMessage);
            if (!isJqueryInstance(scope)) throw new Error("scope must be a jQuery Object");
            if (selector) {
                if (isInvalid(selector)) throw new TypeError("selector must be a string!");
                if ("function" === typeof handler) scope.off(eventName, selector, handler); else scope.off(eventName, selector);
            } else scope.off(eventName);
        }
        function onConsistent(event, selector, handler) {
            if (isInvalid(event)) throw new Error(eventInvalidErrorMessage);
            if (!handler) {
                handler = selector;
                selector = null;
            }
            const eventHandlerKey = this.getEventHandlerName(event, selector);
            const ns = this.getEventNamespace(event);
            this.$eventHandlers.set(eventHandlerKey, handler);
            return scope => {
                on({
                    eventName: ns,
                    selector,
                    handler,
                    scope
                });
            };
        }
        function offConsistent(event, selector) {
            if (isInvalid(event)) throw new Error(eventInvalidErrorMessage);
            const eventHandlerName = this.getEventHandlerName(event, selector);
            const handler = this.$eventHandlers.get(eventHandlerName);
            const ns = this.getEventNamespace(event);
            return scope => {
                off({
                    eventName: ns,
                    selector,
                    handler,
                    scope
                });
                if (handler) this.$eventHandlers.delete(eventHandlerName);
            };
        }
        class EventManager {
            constructor(namespace = "", portals) {
                this.$win = __SL_$__(window);
                this.$doc = __SL_$__(document);
                this.$portals = portals ? __SL_$__(portals) : null;
                this.namespace = "string" === typeof namespace ? namespace : "";
                this.$eventHandlers = new Map;
                this.$winEventHandlers = new Map;
            }
            getEventNamespace(event) {
                return getNamespace(event, this.namespace);
            }
            getEventHandlerName(event, selector) {
                return getEventHandlerName(event, selector, this.namespace);
            }
            getPortals() {
                return isJqueryInstance(this.$portals) ? this.$portals : this.$doc;
            }
            $setNamespace(namespace) {
                this.namespace = namespace;
            }
            $setPortals(portals) {
                this.$portals = portals ? __SL_$__(portals) : null;
            }
            $on(event, selector, handler) {
                const onEvent = onConsistent.call(this, event, selector, handler);
                onEvent(this.$doc);
            }
            $onPortals(event, selector, handler) {
                const $dom = this.getPortals();
                const onEvent = onConsistent.call(this, event, selector, handler);
                onEvent($dom);
            }
            $onWin(event, handler) {
                this.$winEventHandlers.set(this.getEventHandlerName(event), handler);
                this.$win.on(this.getEventNamespace(event), handler);
            }
            $off(event, selector) {
                const offEvent = offConsistent.call(this, event, selector);
                offEvent(this.$doc);
            }
            $offPortals(event, selector) {
                const $dom = this.getPortals();
                const offEvent = offConsistent.call(this, event, selector);
                offEvent($dom);
            }
            $offWin(event) {
                const eventHandlerName = this.getEventHandlerName(event);
                const handler = this.$winEventHandlers.get(eventHandlerName);
                this.$win.off(this.getEventNamespace(event));
                if (handler) this.$winEventHandlers.delete(eventHandlerName);
            }
            $offAll() {
                const ns = this.getEventNamespace();
                this.$win.off(ns);
                this.$doc.off(ns);
                if (isJqueryInstance(this.$portals)) this.$portals.off(ns);
                this.$eventHandlers.clear();
                this.$winEventHandlers.clear();
            }
            prepareTransition($el, callback, endCallback) {
                function removeClass() {
                    $el.removeClass("is-transitioning");
                    $el.off("transitionend", removeClass);
                    if (endCallback) endCallback();
                }
                $el.on("transitionend", removeClass);
                $el.addClass("is-transitioning");
                $el.width();
                if ("function" === typeof callback) callback();
            }
        }
    },
    "./src/assets/commons/cart/globalEvent.js": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
        "use strict";
        __webpack_require__.d(__webpack_exports__, {
            ADD_TO_CART: () => interior_event.ADD_TO_CART,
            CLOSE_MINI_CART: () => CLOSE_MINI_CART,
            OPEN_MINI_CART: () => interior_event.OPEN_MINI_CART
        });
        var state_selector = __webpack_require__("../shared/browser/utils/state-selector.js");
        var logger = __webpack_require__("../shared/browser/utils/logger/index.js");
        var i18n = __webpack_require__("../shared/browser/utils/i18n.js");
        var dataAccessor = __webpack_require__("../shared/browser/utils/dataAccessor.js");
        var tradeReport = __webpack_require__("../shared/browser/utils/tradeReport/index.js");
        var interior_event = __webpack_require__("../shared/browser/events/trade/interior-event/index.js");
        var hdReport = __webpack_require__("../shared/browser/utils/tradeReport/hdReport.js");
        var event_bus = __webpack_require__("../shared/browser/utils/event-bus.js");
        var newCurrency = __webpack_require__("../shared/browser/utils/newCurrency/index.js");
        var tradeReport_const = __webpack_require__("../shared/browser/utils/tradeReport/const.js");
        const reportEvent = data => {
            window.HdSdk && window.HdSdk.shopTracker.collect(data);
        };
        const setProduct = data => {
            const product_id = [];
            const variantion_id = [];
            const quantity = [];
            const price = [];
            const product_name = [];
            const isCheckoutPage = "Checkout" === window.Shopline.uri.alias;
            data && data.forEach((item => {
                const {productSeq, productSku, productNum, finalPrice, productPrice, productName} = item || {};
                product_id.push(productSeq);
                variantion_id.push(productSku);
                quantity.push(productNum);
                price.push(newCurrency["default"].formatNumber(Number(isCheckoutPage ? finalPrice : productPrice) || 0).toString());
                product_name.push(productName);
            }));
            return {
                product_id: product_id.join(","),
                variantion_id: variantion_id.join(","),
                quantity: quantity.join(","),
                price: price.join(","),
                product_name: product_name.join(",")
            };
        };
        const reportCoupon = data => {
            reportEvent(data);
        };
        const reportV2Checkout = data => {
            const {products, ...ext} = data;
            const items = setProduct(products);
            reportEvent({
                ...ext,
                ...items
            });
        };
        const {GO_TO_CHECKOUT, PAYPAL_CHECKOUT, COUPON_APPLY, COUPON_INPUT} = tradeReport_const.HD_EVENT_NAME;
        const reportPaypal = (data, cid, ext = {}) => {
            const products = data && data.map((item => ({
                product_id: item.productSeq,
                variantion_id: item.productSku,
                quantity: item.productNum,
                price: `${newCurrency["default"].formatNumber(Number(item && item.productPrice) || 0)}`,
                product_name: item.productName
            })));
            const page = "cart";
            hdReport.hidooRp.event({
                event_name: "quick_payment",
                page,
                products,
                ...ext
            }, cid);
        };
        const proceedToCheckout = ({cid, event_status}) => {
            hdReport.hidooRp.event({
                event_name: "click_component",
                custom_component: [ "proceed_to_checkout" ]
            }, cid);
            hdReport.hidooRp.event({
                event_name: "proceed_to_checkout",
                event_status
            }, cid);
        };
        const getIsMiniCart = (node, ele) => {
            const dom = __SL_$__(node);
            const closest = dom && dom.closest(ele || ".trade_coupon__wrapper");
            const isMiniCart = closest && closest.hasClass("sidebar");
            return isMiniCart;
        };
        const couponInput = () => {
            event_bus.SL_EventBus.on(COUPON_INPUT, (({data}) => {
                const {node, ele} = data;
                const isMiniCart = getIsMiniCart(node, ele);
                reportCoupon({
                    page: isMiniCart ? tradeReport_const.pageMapV2.MiniCart : tradeReport_const.pageMapV2.Cart,
                    module: tradeReport_const.HdModule.couponCode,
                    component: tradeReport_const.HdComponent.couponCodeInput,
                    action_type: tradeReport_const.ActionType.input
                });
            }));
        };
        const couponApply = () => {
            event_bus.SL_EventBus.on(COUPON_APPLY, (({data}) => {
                const {discountCode, node, ele} = data;
                const isMiniCart = getIsMiniCart(node, ele);
                reportCoupon({
                    page: isMiniCart ? tradeReport_const.pageMapV2.MiniCart : tradeReport_const.pageMapV2.Cart,
                    module: tradeReport_const.HdModule.couponCode,
                    component: tradeReport_const.HdComponent.couponCodeUse,
                    action_type: tradeReport_const.ActionType.click,
                    coupon_code: discountCode
                });
            }));
        };
        const reportBuyNow = () => {
            event_bus.SL_EventBus.on(GO_TO_CHECKOUT, (({data}) => {
                const {event_status, isCart, stage, products} = data;
                if (isCart) {
                    const cid = tradeReport_const.pageMap[stage];
                    const page = tradeReport_const.pageMapV2[stage];
                    if (page) reportV2Checkout({
                        page: tradeReport_const.pageMapV2[stage],
                        module: tradeReport_const.HdModule.checkout,
                        component: tradeReport_const.HdComponent.checkout,
                        action_type: tradeReport_const.ActionType.click,
                        products
                    });
                    if (cid) proceedToCheckout({
                        cid,
                        event_status
                    });
                }
            }));
        };
        const quickPayment = () => {
            event_bus.SL_EventBus.on(PAYPAL_CHECKOUT, (({data}) => {
                const {event_status, product, stage} = data;
                if (tradeReport_const.cartPage[stage]) {
                    const cid = tradeReport_const.pageMap[stage];
                    const page = tradeReport_const.pageMapV2[stage];
                    if (page) reportV2Checkout({
                        page: tradeReport_const.pageMapV2[stage],
                        module: tradeReport_const.HdModule.checkout,
                        component: tradeReport_const.HdComponent.paypalBtn,
                        action_type: tradeReport_const.ActionType.click,
                        products: product
                    });
                    reportPaypal(product, cid, {
                        event_status
                    });
                }
            }));
        };
        const clickCarContinue = key => {
            const dom = document.querySelector(key);
            dom && dom.addEventListener("click", (() => {
                const isCartPage = "Cart" === window.Shopline.uri.alias;
                if (isCartPage) reportEvent({
                    page: tradeReport_const.pageMapV2.Cart,
                    module: tradeReport_const.HdModule.normal,
                    component: tradeReport_const.HdComponent.continueShopping,
                    action_type: tradeReport_const.ActionType.click
                });
            }));
        };
        const listenCartReport = () => {
            reportBuyNow();
            quickPayment();
            couponInput();
            couponApply();
            clickCarContinue(".trade-cart-non-empty-continue-btn");
        };
        var topDrawer_const = __webpack_require__("../shared/browser/components/hbs/shared/components/topDrawer/const.js");
        var service = __webpack_require__("./src/assets/cart/script/service/index.js");
        var cart = __webpack_require__("./src/assets/cart/script/service/cart/index.js");
        var responseCode = __webpack_require__("./src/assets/cart/script/domain/vo/responseCode.js");
        let miniCartScriptPromise;
        const dynamicImportMiniCart = async () => {
            if (miniCartScriptPromise) return miniCartScriptPromise;
            miniCartScriptPromise = new Promise(((resolve, reject) => {
                const script = document.createElement("script");
                const {js} = window.__CHUNK_URL__.miniCart;
                document.body.appendChild(script);
                script.onload = () => {
                    resolve();
                };
                script.onerror = reject;
                script.src = js;
            }));
            return miniCartScriptPromise;
        };
        var toast = __webpack_require__("./src/assets/commons/components/toast/index.js");
        const globalEvent_logger = logger["default"].pipeOwner({
            owner: "Cart",
            onTag: key => {
                if ("eventId" === key) return true; else return false;
            }
        });
        const CLOSE_MINI_CART = Symbol("CLOSE_MINI_CART");
        const OPEN_TOP_CART = Symbol("OPEN_TOP_CART");
        const cartOpenType = state_selector.SL_State.get("theme.settings.cart_open_type");
        service["default"].init();
        if (window.location.pathname.includes("/cart")) dynamicImportMiniCart(); else if ("newpage" !== cartOpenType && "cartremain" !== cartOpenType) setTimeout(dynamicImportMiniCart, 6e3);
        const interior = window.SL_EventBus;
        const noop = () => {};
        listenCartReport();
        interior.on(interior_event.OPEN_MINI_CART, (async ({data = {}, onSuccess = noop} = {}) => {
            null === onSuccess || void 0 === onSuccess ? void 0 : onSuccess(data);
            window.location.href = "/cart";
        }));
        window.SL_EventBus.on(OPEN_TOP_CART, (async () => {
            await dynamicImportMiniCart();
            window.SL_EventBus.emit(topDrawer_const.DRAWER_EVENT_NAME, {
                id: "cart-select",
                operator: topDrawer_const.DRAWER_OPERATORS.OPEN
            });
        }));
        const closeMiniCart = () => {
            window.SL_EventBus.emit(topDrawer_const.DRAWER_EVENT_NAME, {
                id: "cart-select",
                operator: topDrawer_const.DRAWER_OPERATORS.CLOSE
            });
        };
        window.SL_EventBus.on(CLOSE_MINI_CART, closeMiniCart);
        interior.on("REFRESH_CART", (async () => {
            await cart["default"].takeCartService().getCartDetail();
        }));
        window.SL_EventBus.on(interior_event.ADD_TO_CART, (async ({spuId, skuId, num, price, success, error, complete, eventID, reportParamsExt, sellingPlanId}) => {
            var _window;
            const dataReportReq = (0, tradeReport.setAddtoCart)(price, null === (_window = window) || void 0 === _window ? void 0 : _window.SL_State.get("storeInfo.currency"), eventID, reportParamsExt);
            const skuParams = {
                spuId,
                skuId,
                num,
                orderFrom: (0, dataAccessor.getSyncData)("orderFrom"),
                dataReportReq,
                sellingPlanId
            };
            try {
                if ("newpage" !== cartOpenType && "cartremain" !== cartOpenType) {
                    closeMiniCart();
                    await dynamicImportMiniCart();
                    window.SL_EventBus.emit("NEED_OPEN_TOP_CART", {
                        spuId,
                        skuId,
                        num,
                        sellingPlanId
                    });
                }
                const isDismissParams = [ "orderFrom" ].some((key => !skuParams[key] && 0 !== skuParams[key]));
                if (isDismissParams) globalEvent_logger.info("[加购请求参数缺失，请检查]", {
                    ...skuParams
                });
                globalEvent_logger.debug("[加购请求参数初始化]", {
                    ...skuParams
                });
                const res = await cart["default"].takeCartService().addSku(skuParams);
                globalEvent_logger.debug("[加购请求响应数据]", {
                    res,
                    eventId: dataReportReq.eventId
                });
                if (!responseCode["default"].isOk(res)) {
                    let errMsg = res.msg;
                    if (responseCode["default"].is(res, "TCAT0109")) errMsg = (0, i18n.t)("cart.notices.product_amount_limit");
                    if (responseCode["default"].batchIs(res, "TCAT0107,TCAT0112")) errMsg = (0, i18n.t)("cart.discount_price.buy_limit3", {
                        stock: res.data.maxPurchaseTotalNum > 0 ? res.data.maxPurchaseTotalNum : "0"
                    });
                    if (responseCode["default"].is(res, "TCAT0111")) errMsg = (0, i18n.t)("cart.discount_price.buy_limit2", {
                        stock: res.data.maxPurchaseTotalNum > 0 ? res.data.maxPurchaseTotalNum : "0"
                    });
                    if (responseCode["default"].is(res, "TCAT0101")) errMsg = (0, i18n.t)("cart.item.none_existent");
                    if (responseCode["default"].is(res, "TCAT0103")) errMsg = (0, i18n.t)("products.product_list.product_has_been_removed");
                    (new toast["default"]).open(errMsg, 1500);
                    if ("function" === typeof error) error();
                } else {
                    if ("function" === typeof success) try {
                        success();
                    } catch (e) {
                        console.error(e);
                    }
                    if ("cartremain" === cartOpenType) return;
                    if ("newpage" !== cartOpenType) window.SL_EventBus.emit(OPEN_TOP_CART); else interior.emit(interior_event.OPEN_MINI_CART);
                }
            } catch (e) {
                console.warn("add to cart fail:", e);
                globalEvent_logger.error(`[加购失败]`, {
                    e,
                    eventId: dataReportReq.eventId
                });
            } finally {
                if ("function" === typeof complete) complete();
            }
        }));
        window.SL_EventBus.on(interior_event.CONTROL_CART_BASIS, (async ({options, success, error}) => {
            const paramsEnum = {
                switchSideBar: "switchSideBar",
                updateState: "updateState",
                rerenderDom: "rerenderDom",
                cartDetail: "cartDetail"
            };
            const sideBarStatusEnum = {
                open: "open",
                close: "close"
            };
            const paramsFilter = () => {
                do {
                    const eventName = "Cart::ControlCartBasis Event: ";
                    if (!options || !Object.keys(options).length) {
                        console.warn(eventName, "params missing");
                        break;
                    }
                    if (!!Object.hasOwnProperty.call(options, paramsEnum.switchSideBar) && !Object.values(sideBarStatusEnum).includes(options.switchSideBar)) {
                        console.warn(eventName, `【switchSideBar: ${options.switchSideBar}】 is invalid`);
                        break;
                    }
                    if (!!Object.hasOwnProperty.call(options, paramsEnum.updateState) && "boolean" !== typeof options.updateState) {
                        console.warn(eventName, `【updateState: ${options.updateState}】 is invalid`);
                        break;
                    }
                    if (!!Object.hasOwnProperty.call(options, paramsEnum.rerenderDom) && "boolean" !== typeof options.rerenderDom) {
                        console.warn(eventName, `【rerenderDom: ${options.rerenderDom}】 is invalid`);
                        break;
                    }
                    if (!!Object.hasOwnProperty.call(options, paramsEnum.cartDetail) && "boolean" !== typeof options.cartDetail) {
                        console.warn(eventName, `【cartDetail: ${options.cartDetail}】 is invalid`);
                        break;
                    }
                    if (Object.keys(options).some((item => !Object.hasOwnProperty.call(paramsEnum, item)))) {
                        console.warn(eventName, "params has invalid key");
                        break;
                    }
                    return true;
                } while (false);
                return false;
            };
            try {
                if (paramsFilter()) {
                    const {switchSideBar, updateState, rerenderDom, cartDetail} = options;
                    const cartId = "cart-drawer";
                    let cartInfo;
                    if (switchSideBar) interior.emit(topDrawer_const.DRAWER_EVENT_NAME, {
                        id: cartId,
                        status: switchSideBar
                    });
                    if (updateState) await cart["default"].takeCartService().updateCartState();
                    if (rerenderDom) await cart["default"].takeCartService().rerenderCartDom();
                    if (cartDetail) {
                        const CartInfoKey = "cartInfo";
                        cartInfo = state_selector.SL_State.get(CartInfoKey) || null;
                        null === success || void 0 === success ? void 0 : success(cartInfo);
                        return;
                    }
                    null === success || void 0 === success ? void 0 : success();
                    return;
                }
            } catch (e) {
                null === error || void 0 === error ? void 0 : error();
                console.warn(`${interior_event.CONTROL_CART_BASIS} FAIL:`, e);
            }
        }));
    },
    "./src/assets/commons/components/breadcrumb/index.js": () => {
        const PLPReg = /^\/collections\/[^/]+$/;
        const PDPReg = /^(\/collections\/[^/]+)?\/products\/[^/]/;
        if (PLPReg.test(window.location.pathname)) {
            const name = window.SL_State.get("sortation.sortation.title");
            if (name) sessionStorage.setItem("breadcrumb", JSON.stringify({
                name,
                link: window.location.pathname + window.location.search
            }));
        } else if (PDPReg.test(window.location.pathname) && "/products/search" !== window.location.pathname) makeProductBreadCrumb(); else sessionStorage.removeItem("breadcrumb");
        function makeProductBreadCrumb() {
            var _window$sessionStorag;
            const breadCrumbTarget = __SL_$__("body .product-crumbs");
            const breadCrumbCache = JSON.parse(null !== (_window$sessionStorag = window.sessionStorage.getItem("breadcrumb")) && void 0 !== _window$sessionStorag ? _window$sessionStorag : '""');
            if (breadCrumbTarget.find(".product-crumbs-cateName").length) return true;
            if (breadCrumbCache) breadCrumbTarget.find(".product-crumbs-productName").before(`\n      <a class="body4" href="${breadCrumbCache.link}">${breadCrumbCache.name}</a> / \n    `);
        }
    },
    "./src/assets/commons/components/modal/common.js": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
        "use strict";
        __webpack_require__.d(__webpack_exports__, {
            disablePageScroll: () => _yy_sl_theme_shared_components_hbs_shared_components_modal_common__WEBPACK_IMPORTED_MODULE_0__.disablePageScroll,
            enablePageScroll: () => _yy_sl_theme_shared_components_hbs_shared_components_modal_common__WEBPACK_IMPORTED_MODULE_0__.enablePageScroll,
            addLockableTarget: () => _yy_sl_theme_shared_components_hbs_shared_components_modal_common__WEBPACK_IMPORTED_MODULE_0__.addLockableTarget
        });
        var _yy_sl_theme_shared_components_hbs_shared_components_modal_common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("../shared/browser/components/hbs/shared/components/modal/common.js");
    },
    "./src/assets/commons/components/modal/index.js": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
        "use strict";
        __webpack_require__.d(__webpack_exports__, {
            ModalWithHtml: () => modal_full,
            default: () => modal_lite
        });
        var lite = __webpack_require__("../shared/browser/components/hbs/shared/components/modal/lite.js");
        const modal_lite = lite["default"];
        var full = __webpack_require__("../shared/browser/components/hbs/shared/components/modal/full.js");
        const modal_full = full["default"];
    },
    "./src/assets/commons/components/toast/index.js": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
        "use strict";
        __webpack_require__.d(__webpack_exports__, {
            default: () => _toast__WEBPACK_IMPORTED_MODULE_0__["default"],
            Loading: () => _loading__WEBPACK_IMPORTED_MODULE_1__["default"]
        });
        var _toast__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./src/assets/commons/components/toast/toast.js");
        var _loading__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./src/assets/commons/components/toast/loading.js");
    },
    "./src/assets/commons/components/toast/loading.js": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
        "use strict";
        __webpack_require__.d(__webpack_exports__, {
            default: () => __WEBPACK_DEFAULT_EXPORT__
        });
        var _yy_sl_theme_shared_components_hbs_shared_components_toast_loading_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("../shared/browser/components/hbs/shared/components/toast/loading.js");
        const __WEBPACK_DEFAULT_EXPORT__ = _yy_sl_theme_shared_components_hbs_shared_components_toast_loading_js__WEBPACK_IMPORTED_MODULE_0__["default"];
    },
    "./src/assets/commons/components/toast/toast.js": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
        "use strict";
        __webpack_require__.d(__webpack_exports__, {
            default: () => __WEBPACK_DEFAULT_EXPORT__
        });
        var _yy_sl_theme_shared_components_hbs_shared_components_toast_toast_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("../shared/browser/components/hbs/shared/components/toast/toast.js");
        const __WEBPACK_DEFAULT_EXPORT__ = _yy_sl_theme_shared_components_hbs_shared_components_toast_toast_js__WEBPACK_IMPORTED_MODULE_0__["default"];
    },
    "./src/assets/commons/components/topDrawer/index.js": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
        "use strict";
        __webpack_require__.d(__webpack_exports__, {
            DRAWER_CALLBACK_EVENT_NAME: () => _yy_sl_theme_shared_components_hbs_shared_components_topDrawer_const__WEBPACK_IMPORTED_MODULE_1__.DRAWER_CALLBACK_EVENT_NAME,
            default: () => __WEBPACK_DEFAULT_EXPORT__
        });
        var _yy_sl_theme_shared_components_hbs_shared_components_topDrawer_index__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("../shared/browser/components/hbs/shared/components/topDrawer/index.js");
        var _yy_sl_theme_shared_components_hbs_shared_components_topDrawer_const__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("../shared/browser/components/hbs/shared/components/topDrawer/const.js");
        const __WEBPACK_DEFAULT_EXPORT__ = _yy_sl_theme_shared_components_hbs_shared_components_topDrawer_index__WEBPACK_IMPORTED_MODULE_0__["default"];
    },
    "./src/assets/commons/utils/checkEmail.js": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
        "use strict";
        __webpack_require__.d(__webpack_exports__, {
            default: () => __WEBPACK_DEFAULT_EXPORT__
        });
        const checkEmail = email => {
            const re = /^([\w-.+]+)@([\w-.]+)\.([\w-.]+)$/;
            if (!re.test(String(email).toLowerCase())) return "regexp";
            if ((null === email || void 0 === email ? void 0 : email.length) > 50) return "length.over";
            return true;
        };
        const __WEBPACK_DEFAULT_EXPORT__ = checkEmail;
    },
    "./src/assets/commons/utils/convertPrice.js": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
        "use strict";
        __webpack_require__.d(__webpack_exports__, {
            processPrice: () => processPrice
        });
        var _yy_sl_theme_shared_utils_newCurrency__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("../shared/browser/utils/newCurrency/index.js");
        const useSuperScriptDecimals = window.SL_State.get("theme.settings.superscript_decimals");
        const {convertFormat, getConvertPrice} = _yy_sl_theme_shared_utils_newCurrency__WEBPACK_IMPORTED_MODULE_0__["default"];
        function convertPrice(price, {code, lang}) {
            const formattedPrice = convertFormat(price);
            code || (code = window.SL_State.get("currencyCode"));
            lang || (lang = window.SL_State.get("request.locale"));
            const {symbolOrder, currencySymbol, integer, decimal, fraction} = getConvertPrice(price, {
                code,
                lang
            });
            return {
                symbolIsPrefix: "prefix" === symbolOrder,
                symbol: currencySymbol,
                integer,
                decimal,
                fraction,
                origin: formattedPrice
            };
        }
        function processPrice($el, price, {isSavePrice, code, lang} = {}, decimalBuilders = (decimal => `<sup class="body6">${decimal}</sup>`)) {
            const {symbolIsPrefix, symbol, fraction, integer, origin} = convertPrice(price, {
                code,
                lang
            });
            const _integer = null !== integer && void 0 !== integer ? integer : "";
            const _decimal = null !== fraction && void 0 !== fraction ? fraction : "";
            let content = "";
            const currencySymbolHtml = `<span class="notranslate">${symbol}</span>`;
            const renderSuperDecimal = () => {
                const shouldShowDecimal = _decimal.length > 0;
                const noSymbolCurrency = `<span>${_integer}</span>${shouldShowDecimal ? decimalBuilders(_decimal) : ""}`;
                return symbolIsPrefix ? `${currencySymbolHtml}${noSymbolCurrency}` : `${noSymbolCurrency}${currencySymbolHtml}`;
            };
            const renderSavePrice = () => {
                const zeroRE = /^0+$/g;
                if (zeroRE.test(_decimal)) return symbolIsPrefix ? `${currencySymbolHtml}<span class="notranslate">${_integer}</span>` : `<span class="notranslate">${_integer}</span>${currencySymbolHtml}`;
                return `<span class="notranslate">${origin}</span>`;
            };
            if (useSuperScriptDecimals) content = renderSuperDecimal(); else content = `<span class="notranslate">${origin}</span>`;
            if (isSavePrice) content = renderSavePrice();
            return {
                render: () => {
                    $el.html(content);
                },
                get: () => content
            };
        }
    },
    "./src/assets/commons/utils/countdown.js": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
        "use strict";
        __webpack_require__.d(__webpack_exports__, {
            timers: () => timers,
            default: () => __WEBPACK_DEFAULT_EXPORT__
        });
        const t = {};
        const timers = t;
        const fillZero = num => `${num}`.padStart(2, "0");
        const countdown = (target, fn, params) => {
            var _p$interval;
            let p = {};
            let prevTimes = null;
            if ("string" === typeof params) p.id = params; else if ("object" === typeof params) p = params;
            let {id} = p;
            const {hasDay, hasMillisecond, autoFill = "part"} = p;
            if (t[id]) clearInterval(t[id]);
            const countFn = (times = [ "0", "0", "0", "0", "0" ], interval) => {
                if ("part" === autoFill || "all" === autoFill) {
                    if ("all" === autoFill) times[0] = fillZero(times[0]);
                    times[1] = fillZero(times[1]);
                    times[2] = fillZero(times[2]);
                    times[3] = fillZero(times[3]);
                }
                return fn(times, interval, t[id]);
            };
            const intervalFn = () => {
                const now = Date.now();
                if (now < target) {
                    const interval = target - now;
                    let d = 0;
                    let h = 0;
                    let ms = 0;
                    if (hasDay) {
                        d = Math.floor(interval / 864e5);
                        h = Math.floor(interval % 864e5 / 36e5);
                    } else h = Math.floor(interval / 36e5);
                    const m = Math.floor(interval % 36e5 / 6e4);
                    const s = Math.floor(interval % 6e4 / 1e3);
                    if (hasMillisecond) ms = Math.floor(interval % 1e3 / 100);
                    const times = [ `${d}`, `${h}`, `${m}`, `${s}`, `${ms}` ];
                    let changed = false;
                    if (!prevTimes || times.some(((item, index) => item !== prevTimes[index]))) changed = true;
                    prevTimes = times;
                    if (changed) {
                        const result = countFn(times, interval);
                        if (false === result) clearInterval(t[id]);
                    }
                } else {
                    countFn(void 0, 0);
                    clearInterval(t[id]);
                }
            };
            intervalFn();
            const timer = setInterval(intervalFn, null !== (_p$interval = p.interval) && void 0 !== _p$interval ? _p$interval : 200);
            if (!id) id = timer;
            t[id] = timer;
            return t[id];
        };
        const __WEBPACK_DEFAULT_EXPORT__ = countdown;
    },
    "./src/assets/commons/utils/debounce.js": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
        "use strict";
        __webpack_require__.d(__webpack_exports__, {
            default: () => __WEBPACK_DEFAULT_EXPORT__
        });
        function __WEBPACK_DEFAULT_EXPORT__(wait, callback, immediate) {
            let timeout;
            return function(...args) {
                const context = this;
                const later = function() {
                    timeout = null;
                    if (!immediate) callback.apply(context, args);
                };
                const callNow = immediate && !timeout;
                clearTimeout(timeout);
                timeout = setTimeout(later, wait);
                if (callNow) callback.apply(context, args);
            };
        }
    },
    "./src/assets/commons/utils/effectFc.js": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
        "use strict";
        __webpack_require__.d(__webpack_exports__, {
            default: () => __WEBPACK_DEFAULT_EXPORT__
        });
        const __WEBPACK_DEFAULT_EXPORT__ = fn => (...props) => {
            let offEvents = [];
            let useEffect = function(instance, method, eventName, eventFn) {
                if ("object" !== typeof instance || "string" !== typeof method || "string" !== typeof eventName || "function" !== typeof eventFn) return;
                const arr = null === method || void 0 === method ? void 0 : method.split(/\s*,\s*/);
                const onName = null === arr || void 0 === arr ? void 0 : arr[0];
                const offName = null === arr || void 0 === arr ? void 0 : arr[1];
                if (onName) {
                    var _instance$onName;
                    null === (_instance$onName = instance[onName]) || void 0 === _instance$onName ? void 0 : _instance$onName.call(instance, eventName, eventFn);
                }
                if (offName) {
                    var _instance$offName;
                    const offEvent = null === (_instance$offName = instance[offName]) || void 0 === _instance$offName ? void 0 : _instance$offName.bind(instance, eventName, eventFn);
                    offEvents.push(offEvent);
                }
            };
            let unmount = null === fn || void 0 === fn ? void 0 : fn.call({
                useEffect
            }, ...props);
            return (...args) => {
                var _offEvents;
                if (null !== (_offEvents = offEvents) && void 0 !== _offEvents && _offEvents.length) offEvents.forEach((offEvent => {
                    offEvent();
                }));
                if ("function" === typeof unmount) {
                    var _unmount;
                    null === (_unmount = unmount) || void 0 === _unmount ? void 0 : _unmount(...args);
                }
                offEvents = null;
                useEffect = null;
                unmount = null;
            };
        };
    },
    "./src/assets/commons/utils/helper.js": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
        "use strict";
        __webpack_require__.d(__webpack_exports__, {
            default: () => __WEBPACK_DEFAULT_EXPORT__
        });
        var _yy_sl_theme_shared_utils_event_bus__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("../shared/browser/utils/event-bus.js");
        var _main__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./src/assets/commons/utils/main.js");
        const platformType = {
            pc: "pc",
            pad: "pad",
            mobile: "mobile"
        };
        const getPlatform = () => {
            const winWidth = Math.min(window.innerWidth, document.documentElement.clientWidth, document.body.clientWidth);
            let platform;
            if (winWidth > 960) platform = "pc"; else if (winWidth > 750) platform = "pad"; else platform = "mobile";
            return platform;
        };
        function listenPlatform(callback) {
            _yy_sl_theme_shared_utils_event_bus__WEBPACK_IMPORTED_MODULE_0__.SL_EventBus.on("global:platformChange", callback);
        }
        let timer;
        let timerCount = 0;
        function init() {
            var _window;
            if (null !== (_window = window) && void 0 !== _window && _window.addEventListener) {
                if (timer) clearTimeout(timer);
                window.addEventListener("load", (() => {
                    let platform = getPlatform();
                    window.addEventListener("resize", (() => {
                        const newPlatform = getPlatform();
                        if (newPlatform !== platform) {
                            _yy_sl_theme_shared_utils_event_bus__WEBPACK_IMPORTED_MODULE_0__.SL_EventBus.emit("global:platformChange", newPlatform);
                            platform = newPlatform;
                        }
                    }));
                }));
            } else {
                if (10 === timerCount) return;
                timer = setTimeout(init, 1e3);
                timerCount += 1;
            }
        }
        function isInViewport(el) {
            if (!(null !== el && void 0 !== el && el.tagName)) return console.warn(`${el} is not a element`);
            const rect = el.getBoundingClientRect();
            const vWidth = document.documentElement.clientWidth;
            const vHeight = document.documentElement.clientHeight;
            if (rect.right < 0 || rect.bottom < 0 || rect.left > vWidth || rect.top > vHeight) return false;
            return true;
        }
        function isUnderViewport(el) {
            if (!(null !== el && void 0 !== el && el.tagName)) return console.warn(`${el} is not a element`);
            const rect = el.getBoundingClientRect();
            const vWidth = document.documentElement.clientWidth;
            const vHeight = document.documentElement.clientHeight;
            if (rect.right < 0 || rect.left > vWidth || rect.top > vHeight) return false;
            return true;
        }
        init();
        function getAbOrderSeqInfoCache(buyScence = "cart") {
            const seqInfo = _main__WEBPACK_IMPORTED_MODULE_1__["default"].localStorage.get(`${buyScence}AbOrderSeqInfo`);
            return seqInfo;
        }
        function setAbOrderSeqInfoCache(abandonedOrderSeqInfo, buyScence) {
            if (!buyScence) {
                console.warn("setAbOrderSeqInfoCache err miss buyScence");
                return;
            }
            _main__WEBPACK_IMPORTED_MODULE_1__["default"].localStorage.set(`${buyScence}AbOrderSeqInfo`, abandonedOrderSeqInfo);
        }
        const __WEBPACK_DEFAULT_EXPORT__ = {
            getPlatform,
            listenPlatform,
            platformType,
            getAbOrderSeqInfoCache,
            setAbOrderSeqInfoCache,
            isInViewport,
            isUnderViewport
        };
    },
    "./src/assets/commons/utils/index.js": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
        "use strict";
        __webpack_require__.d(__webpack_exports__, {
            default: () => __WEBPACK_DEFAULT_EXPORT__
        });
        var _helper__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./src/assets/commons/utils/helper.js");
        var _main__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./src/assets/commons/utils/main.js");
        const __WEBPACK_DEFAULT_EXPORT__ = {
            ..._main__WEBPACK_IMPORTED_MODULE_1__["default"],
            helper: _helper__WEBPACK_IMPORTED_MODULE_0__["default"]
        };
    },
    "./src/assets/commons/utils/isMobile.js": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
        "use strict";
        __webpack_require__.d(__webpack_exports__, {
            default: () => isMobile
        });
        let d = __SL_$__("i[data-platform]");
        if (!d.get(0)) {
            d = __SL_$__(`<i data-platform></i>`);
            __SL_$__(document.body).append(d);
        }
        function isMobile() {
            let dom = __SL_$__("i[data-platform]");
            if (!dom.get(0)) {
                dom = __SL_$__(`<i data-platform></i>`);
                __SL_$__(document.body).append(dom);
            }
            return "block" === dom.css("display");
        }
    },
    "./src/assets/commons/utils/main.js": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
        "use strict";
        __webpack_require__.d(__webpack_exports__, {
            default: () => __WEBPACK_DEFAULT_EXPORT__
        });
        var lodash_isPlainObject__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/lodash/isPlainObject.js");
        var lodash_isPlainObject__WEBPACK_IMPORTED_MODULE_0___default = __webpack_require__.n(lodash_isPlainObject__WEBPACK_IMPORTED_MODULE_0__);
        const isBrowser = "undefined" !== typeof window && "undefined" !== typeof navigator;
        function getStorage(storageName) {
            return {
                get(key) {
                    if (!isBrowser) return;
                    const storage = window[storageName];
                    const numRe = /^\d+$/;
                    const jsonRe = /(^\{.*\}$)|(^\[.*\]$)/;
                    const boolRe = /^(true|false|null)$/;
                    let val = storage.getItem(key);
                    try {
                        if ("string" === typeof val && val && (numRe.test(val) || boolRe.test(val) || jsonRe.test(val))) val = JSON.parse(val);
                    } catch (e) {
                        console.warn("json.parse storage value err:", e);
                        val = {};
                    }
                    return val;
                },
                set(key, val) {
                    if (!isBrowser) return;
                    let value = val;
                    if (lodash_isPlainObject__WEBPACK_IMPORTED_MODULE_0___default()(value) || value instanceof Array) value = JSON.stringify(value);
                    const storage = window[storageName];
                    storage[key] = value;
                },
                del(key) {
                    if (!isBrowser) return;
                    const storage = window[storageName];
                    storage.removeItem(key);
                }
            };
        }
        const [sessionStorage, localStorage] = [ "sessionStorage", "localStorage" ].map(getStorage);
        const utils = {
            sessionStorage,
            localStorage
        };
        const __WEBPACK_DEFAULT_EXPORT__ = utils;
    },
    "./src/assets/commons/utils/url.js": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
        "use strict";
        __webpack_require__.d(__webpack_exports__, {
            changeURLArg: () => changeURLArg,
            getUrlQuery: () => getUrlQuery,
            getUrlAllQuery: () => getUrlAllQuery,
            delParam: () => delParam,
            updateUrlQueryParam: () => updateUrlQueryParam
        });
        var url__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/url/url.js");
        var querystring__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./node_modules/querystring/index.js");
        function changeURLArg(urlStr, arg, argVal) {
            const durl = decodeURIComponent(urlStr);
            const pattern = `${arg}=([^&]*)`;
            const replaceText = `${arg}=${argVal}`;
            if (durl.match(pattern)) {
                let tmp = `/(${arg}=)([^&]*)/gi`;
                tmp = durl.replace(eval(tmp), replaceText);
                return tmp;
            }
            if (durl.match("[?]")) return `${durl}&${replaceText}`;
            return `${durl}?${replaceText}`;
        }
        function getUrlQuery(key) {
            if ("undefined" !== typeof window) {
                var _url$parse;
                const locationHref = window.location.href;
                const urlQuery = null === (_url$parse = url__WEBPACK_IMPORTED_MODULE_0__.parse(decodeURIComponent(locationHref))) || void 0 === _url$parse ? void 0 : _url$parse.query;
                const urlQueryObj = querystring__WEBPACK_IMPORTED_MODULE_1__.parse(urlQuery);
                const hitUrlQuery = urlQueryObj[key];
                if (hitUrlQuery) {
                    if (hitUrlQuery && -1 !== hitUrlQuery.indexOf("?")) {
                        window.history.replaceState({}, document.title, changeURLArg(locationHref, key, `${hitUrlQuery.replace("?", "&")}`));
                        return hitUrlQuery.split("?")[0];
                    }
                    return hitUrlQuery;
                }
                return null;
            }
            return null;
        }
        function getUrlAllQuery(href) {
            var _url$parse2;
            const locationHref = href || window.location.href;
            const urlQuery = null === (_url$parse2 = url__WEBPACK_IMPORTED_MODULE_0__.parse(decodeURIComponent(locationHref))) || void 0 === _url$parse2 ? void 0 : _url$parse2.query;
            const urlQueryObj = querystring__WEBPACK_IMPORTED_MODULE_1__.parse(urlQuery);
            return urlQueryObj;
        }
        function delParam(paramKey) {
            let {href} = window.location;
            const urlParam = window.location.search.substr(1);
            const beforeUrl = href.substr(0, href.indexOf("?"));
            let nextUrl = "";
            const arr = [];
            if ("" !== urlParam) {
                const urlParamArr = urlParam.split("&");
                urlParamArr.forEach((segment => {
                    const paramArr = segment.split("=");
                    if (paramArr[0] !== paramKey) arr.push(segment);
                }));
            }
            if (arr.length > 0) nextUrl = `?${arr.join("&")}`;
            href = beforeUrl + nextUrl;
            return href;
        }
        function getUrlPathId(u = window.location.href, index = -1) {
            var _url$parse$pathname;
            const urlArr = (null === (_url$parse$pathname = url__WEBPACK_IMPORTED_MODULE_0__.parse(u).pathname) || void 0 === _url$parse$pathname ? void 0 : _url$parse$pathname.replace(/^\//, "").split("/")) || [];
            if (index < 0) return urlArr[urlArr.length + index];
            return urlArr[index];
        }
        function updateUrlQueryParam(urlStr, param, value) {
            const re = new RegExp(`([?&])${param}=.*?(&|$)`, "i");
            const separator = -1 !== urlStr.indexOf("?") ? "&" : "?";
            if (urlStr.match(re)) return urlStr.replace(re, `$1${param}=${value}$2`);
            return `${urlStr}${separator}${param}=${value}`;
        }
        function stringifyUrl(originUrl, params, sign = "?") {
            const keys = Object.keys(params);
            if (!keys.length) return originUrl;
            return `${originUrl}${originUrl.includes(sign) ? "" : sign}${keys.map((key => {
                var _params$key;
                let value = null !== (_params$key = params[key]) && void 0 !== _params$key ? _params$key : "";
                if ("object" === typeof value) value = JSON.stringify(value);
                return `${key}=${window.encodeURIComponent(value)}`;
            })).join("&")}`;
        }
    },
    "./src/assets/product/commons/js/createShadowDom.js": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
        "use strict";
        __webpack_require__.d(__webpack_exports__, {
            shadowDomStyle: () => shadowDomStyle,
            default: () => __WEBPACK_DEFAULT_EXPORT__
        });
        const shadowDomStyle = __SL_$__("<style></style>").attr({
            type: "text/css"
        }).append(`table{border-collapse:collapse}table:not([cellpadding]) td,table:not([cellpadding]) th{padding:.4rem}table:not([border="0"]):not([style*=border-width]) td,table:not([border="0"]):not([style*=border-width]) th{border-width:1px}table:not([border="0"]):not([style*=border-style]) td,table:not([border="0"]):not([style*=border-style]) th{border-style:solid}table:not([border="0"]):not([style*=border-color]) td,table:not([border="0"]):not([style*=border-color]) th{border-color:#ccc}iframe,video{max-width:100%;outline:none}img{height:auto;max-width:100%}figure{display:table;margin:1rem auto}figure figcaption{color:#999;display:block;margin-top:.25rem;text-align:center}hr{border-color:#ccc;border-style:solid;border-width:1px 0 0 0}code{background-color:#e8e8e8;border-radius:3px;padding:.1rem .2rem}.mce-content-body:not([dir=rtl]) blockquote{border-left:2px solid #ccc;margin-left:1.5rem;padding-left:1rem}.mce-content-body[dir=rtl] blockquote{border-right:2px solid #ccc;margin-right:1.5rem;padding-right:1rem}@media screen and (max-width: 750px){table{width: 100%!important}}`);
        const createShadowDom = () => {
            const shadowDom = document.querySelector("[data-node=shadow-dom]");
            if (!shadowDom) return;
            const shadowContent = __SL_$__(shadowDom).prev("[data-node=shadow-content]");
            __SL_$__(shadowDom).attr("class", "shadow-dom");
            if (shadowContent.get(0)) {
                shadowContent.children(".mce-content-body").css("word-break", "break-word");
                shadowContent.prepend(__SL_$__("<style></style>").attr({
                    type: "text/css"
                }).append(`body{font-family:-apple-system,BlinkMacSystemFont,'Segoe UI',Roboto,Oxygen,Ubuntu,Cantarell,'Open Sans','Helvetica Neue',sans-serif;line-height:1.4;margin:1rem}table{border-collapse:collapse}table:not([cellpadding]) td,table:not([cellpadding]) th{padding:.4rem}table:not([border="0"]):not([style*=border-width]) td,table:not([border="0"]):not([style*=border-width]) th{border-width:1px}table:not([border="0"]):not([style*=border-style]) td,table:not([border="0"]):not([style*=border-style]) th{border-style:solid}table:not([border="0"]):not([style*=border-color]) td,table:not([border="0"]):not([style*=border-color]) th{border-color:#ccc}iframe,video{max-width:100%;outline:none}img{height:auto;max-width:100%}figure{display:table;margin:1rem auto}figure figcaption{color:#999;display:block;margin-top:.25rem;text-align:center}hr{border-color:#ccc;border-style:solid;border-width:1px 0 0 0}code{background-color:#e8e8e8;border-radius:3px;padding:.1rem .2rem}.mce-content-body:not([dir=rtl]) blockquote{border-left:2px solid #ccc;margin-left:1.5rem;padding-left:1rem}.mce-content-body[dir=rtl] blockquote{border-right:2px solid #ccc;margin-right:1.5rem;padding-right:1rem}@media screen and (max-width: 750px){table{width: 100%}}`));
                const shadowRoot = shadowDom.attachShadow({
                    mode: "open"
                });
                shadowRoot.append(shadowContent.get(0));
                __SL_$__(shadowDom).removeAttr("data-node");
                shadowContent.removeAttr("data-node");
            }
            shadowDom.__updateLazyExtraElements__();
        };
        const __WEBPACK_DEFAULT_EXPORT__ = createShadowDom;
    },
    "./src/assets/product/commons/js/preview-modal/index.js": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
        "use strict";
        __webpack_require__.d(__webpack_exports__, {
            default: () => preview_modal
        });
        var i18n = __webpack_require__("../shared/browser/utils/i18n.js");
        var pageMapping = __webpack_require__("../shared/browser/utils/report/pageMapping.js");
        var axios = __webpack_require__("./node_modules/axios/index.js");
        var axios_default = __webpack_require__.n(axios);
        var quickView_click = __webpack_require__("../shared/browser/events/product/quickView-click/index.js");
        var js = __webpack_require__("../shared/browser/components/hbs/productImages/js/index.js");
        var components_modal = __webpack_require__("./src/assets/commons/components/modal/index.js");
        var toast = __webpack_require__("./src/assets/commons/components/toast/index.js");
        var product_preview = __webpack_require__("./src/assets/product/detail/js/product-preview.js");
        var url = __webpack_require__("./src/assets/commons/utils/url.js");
        function modalExpose(modalPrefix) {
            var _window$HdSdk;
            null === (_window$HdSdk = window.HdSdk) || void 0 === _window$HdSdk ? void 0 : _window$HdSdk.shopTracker.report("60006263", {
                event_name: "view",
                page: "productRecommendModal" === modalPrefix ? "123" : pageMapping["default"][window.SL_State.get("templateAlias")]
            });
        }
        function fetchDetail(uniqueKey, params) {
            return axios_default().get(`/products/${uniqueKey}`, {
                params: {
                    ...params,
                    view: "modal",
                    preview: (0, url.getUrlQuery)("preview"),
                    themeId: (0, url.getUrlQuery)("themeId"),
                    ignoreRedirect: (0, url.getUrlQuery)("ignoreRedirect"),
                    engineType: (0, url.getUrlQuery)("engineType"),
                    sourcePage: window.SL_State.get("templateAlias")
                }
            });
        }
        function createContent() {
            return __SL_$__('<div class="product-preview-modal-content" data-scroll-lock-scrollable></div>');
        }
        const previewProductDescVideoMap = {};
        function collectProductDescVideo(children, id) {
            const productDescDom = children.find("[data-ssr-plugin-detail-description]");
            const video = productDescDom.find("video");
            const youtubeIframe = productDescDom.find("iframe").filter(((index, item) => {
                const src = __SL_$__(item).attr("src");
                return src && (0, js.isYoutube)(src);
            }));
            previewProductDescVideoMap[id] = {};
            if (video.length > 0) previewProductDescVideoMap[id].videoList = video;
            if (youtubeIframe.length > 0) previewProductDescVideoMap[id].youtubeIframeList = youtubeIframe;
        }
        function handleProductDescVideoByCloseModal(id) {
            const videoMap = previewProductDescVideoMap[id] || {};
            const {videoList, youtubeIframeList} = videoMap;
            if (videoList && videoList.each) videoList.each(((index, item) => {
                if (item.pause) item.pause();
            }));
            if (youtubeIframeList && youtubeIframeList.each) youtubeIframeList.each(((index, item) => {
                const src = __SL_$__(item).attr("src");
                __SL_$__(item).attr("data-resource-url", src);
                __SL_$__(item).attr("src", "");
            }));
        }
        function handleProductDescVideoByOpenModal(id) {
            const videoMap = previewProductDescVideoMap[id] || {};
            const {youtubeIframeList} = videoMap;
            if (youtubeIframeList && youtubeIframeList.each) youtubeIframeList.each(((index, item) => {
                const src = __SL_$__(item).attr("data-resource-url");
                if (src) __SL_$__(item).attr("src", src);
            }));
        }
        const modalMap = {};
        const previewMap = {};
        function previewModal({spuSeq, uniqueKey, query, position}) {
            let modalPrefix = "productModal_";
            let queryObj = {};
            try {
                queryObj = {
                    ...query
                };
                modalPrefix = queryObj.modalPrefix || "productModal_";
            } catch (e) {
                console.log(e);
            }
            if (modalMap[spuSeq]) {
                var _modalMap$spuSeq, _previewMap$spuSeq;
                handleProductDescVideoByOpenModal(spuSeq);
                null === (_modalMap$spuSeq = modalMap[spuSeq]) || void 0 === _modalMap$spuSeq ? void 0 : _modalMap$spuSeq.show();
                null === (_previewMap$spuSeq = previewMap[spuSeq]) || void 0 === _previewMap$spuSeq ? void 0 : _previewMap$spuSeq.productEventRepeat();
                modalExpose(modalPrefix);
                (0, quickView_click["default"])({
                    type: "change",
                    eventName: "OPEN_QUICKVIEW_EVENT",
                    prefix: modalPrefix,
                    spuSeq,
                    modal: modalMap[spuSeq],
                    preview: {
                        skuTrade: previewMap[spuSeq].skuTrade,
                        quantityStepper: previewMap[spuSeq].quantityStepper
                    },
                    $el: document.getElementById(modalMap[spuSeq].modalId)
                });
            } else {
                const children = createContent();
                const modal = new components_modal.ModalWithHtml({
                    children,
                    containerClassName: "product-preview-modal-container",
                    bodyClassName: "product-preview-modal-body",
                    zIndex: 128,
                    closeCallback: () => {
                        handleProductDescVideoByCloseModal(spuSeq);
                        (0, quickView_click["default"])({
                            eventName: "CLOSE_QUICKVIEW_EVENT",
                            spuSeq,
                            $el: document.getElementById(modalMap[spuSeq].modalId)
                        });
                    }
                });
                modal.show();
                new toast.Loading({
                    target: children,
                    loadingColor: "currentColor",
                    duration: -1
                }).open();
                fetchDetail(uniqueKey, queryObj).then((res => {
                    children.html('<div class="product-preview-modal-top-space"></div>').append(res.data);
                    collectProductDescVideo(children, spuSeq);
                    modalExpose(modalPrefix);
                    window.SL_EventBus.emit("global.activeIcon.show", {
                        type: "vip"
                    });
                    try {
                        const preview = (0, product_preview["default"])({
                            module: "quickViewModal",
                            id: `${modalPrefix}${spuSeq}`,
                            statePath: `${modalPrefix}${spuSeq}`,
                            offsetTop: 48,
                            container: modal.$modal.find(".product-preview-modal-body"),
                            modalType: "QuickView",
                            position,
                            modalContainer: modal.$modal,
                            onAddSuccess: () => {
                                modal.hide();
                            }
                        });
                        modalMap[spuSeq] = modal;
                        previewMap[spuSeq] = preview;
                        (0, quickView_click["default"])({
                            type: "init",
                            eventName: "OPEN_QUICKVIEW_EVENT",
                            prefix: modalPrefix,
                            spuSeq,
                            preview: {
                                skuTrade: preview.skuTrade,
                                quantityStepper: preview.quantityStepper
                            },
                            modal,
                            $el: document.getElementById(modalMap[spuSeq].modalId)
                        });
                    } catch (e) {
                        setTimeout((() => {
                            throw e;
                        }));
                    }
                })).catch((() => {
                    (new toast["default"]).open((0, i18n.t)("products.general.no_product_data_found"), 3e3);
                    modal.hide();
                    modal.destroy();
                }));
            }
            return modalMap[spuSeq];
        }
        const preview_modal = previewModal;
    },
    "./src/assets/product/commons/js/product-info.js": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
        "use strict";
        __webpack_require__.d(__webpack_exports__, {
            default: () => __WEBPACK_DEFAULT_EXPORT__
        });
        var _yy_sl_theme_shared_utils_i18n__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("../shared/browser/utils/i18n.js");
        var _commons_utils_convertPrice__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("./src/assets/commons/utils/convertPrice.js");
        let uniqueId = "";
        const priceWrap = ".product-info-price_";
        const priceSellWrap = ".product-price-sales_";
        const priceOriginWrap = ".product-price-origin_";
        const priceVipWrap = ".product-price-vip_";
        const priceDiscountWrap = ".product-price-discount_";
        function getDiscount(showDiscount, sku) {
            const $el = __SL_$__(`${priceDiscountWrap}${uniqueId}`);
            const discountSettingStyle = null === $el || void 0 === $el ? void 0 : $el.attr("product_discount_style");
            const ratioCalc = Math.round(100 * (1 - sku.price / sku.originPrice));
            const discountText = "number" === discountSettingStyle ? sku.originPrice - sku.price : ratioCalc;
            let isHidden = true;
            if (showDiscount && discountText > 0) if ("number" === discountSettingStyle) {
                const discount = sku.originPrice - sku.price;
                if (discount > 0) {
                    const {get: getPriceContent} = (0, _commons_utils_convertPrice__WEBPACK_IMPORTED_MODULE_1__.processPrice)($el, discount, {
                        isSavePrice: true
                    });
                    isHidden = false;
                    $el.html((0, _yy_sl_theme_shared_utils_i18n__WEBPACK_IMPORTED_MODULE_0__.t)("products.product_list.save_byjs", {
                        priceDom: getPriceContent()
                    }));
                } else isHidden = true;
            } else {
                isHidden = false;
                $el.html((0, _yy_sl_theme_shared_utils_i18n__WEBPACK_IMPORTED_MODULE_0__.t)("products.product_list.save_ratio", {
                    price: ratioCalc
                }));
            } else isHidden = true;
            $el.toggleClass("hide", isHidden);
        }
        const setSkuPrice = (spuSoldout, activeSku = {}) => {
            var _SL_$__;
            const discountSetting = null === (_SL_$__ = __SL_$__(`${priceWrap}${uniqueId}`)) || void 0 === _SL_$__ ? void 0 : _SL_$__.attr("product_discount");
            const {originPrice: oriPrice, price, showMemberMark} = activeSku;
            const originPrice = oriPrice > price ? oriPrice : "";
            const showDiscount = discountSetting && !spuSoldout;
            const $priceWrapperEl = __SL_$__(`.price.product-info-price_${uniqueId}`);
            if (oriPrice > price) {
                if (!$priceWrapperEl.hasClass("product-info-price_hasDiscount")) $priceWrapperEl.addClass("product-info-price_hasDiscount");
            } else $priceWrapperEl.removeClass("product-info-price_hasDiscount");
            (0, _commons_utils_convertPrice__WEBPACK_IMPORTED_MODULE_1__.processPrice)(__SL_$__(`${priceSellWrap}${uniqueId}`), price).render();
            if (showMemberMark) __SL_$__(`${priceVipWrap}${uniqueId}`).removeClass("hide"); else __SL_$__(`${priceVipWrap}${uniqueId}`).addClass("hide");
            if (originPrice) {
                (0, _commons_utils_convertPrice__WEBPACK_IMPORTED_MODULE_1__.processPrice)(__SL_$__(`${priceOriginWrap}${uniqueId}`), originPrice).render();
                __SL_$__(`${priceOriginWrap}${uniqueId}`).removeClass("hide");
            } else __SL_$__(`${priceOriginWrap}${uniqueId}`).addClass("hide");
            getDiscount(showDiscount, activeSku);
        };
        const getHighOriginPrice = (min, item) => {
            if (min.price === item.price) return min.originPrice > item.originPrice ? min : item;
            return min.price > item.price ? item : min;
        };
        const checkActive = item => {
            var _item$saleActivityRes;
            return null === item || void 0 === item ? void 0 : null === (_item$saleActivityRes = item.saleActivityResponseList) || void 0 === _item$saleActivityRes ? void 0 : _item$saleActivityRes.some((activity => 1 === activity.promotionType && 1 === activity.promotionSubType));
        };
        const getMinPrice = (soldOut, skuList) => null === skuList || void 0 === skuList ? void 0 : skuList.reduce(((min, item) => {
            if (null === min) return item;
            if (checkActive(min)) {
                if (checkActive(item)) return getHighOriginPrice(min, item);
                return min;
            }
            if (checkActive(item)) return item;
            if (null !== min && void 0 !== min && min.showMemberMark) {
                if (null !== item && void 0 !== item && item.showMemberMark) return getHighOriginPrice(min, item);
                return min;
            }
            if (null !== item && void 0 !== item && item.showMemberMark) return item;
            return getHighOriginPrice(min, item);
        }), null);
        const setMinPrice = (soldOut, skuList) => {
            const minSku = getMinPrice(soldOut, skuList);
            setSkuPrice(soldOut, minSku);
        };
        const setProductPrice = (id, statePath, activeSku) => {
            uniqueId = id;
            const {skuList} = window.SL_State.get(`${statePath}.sku`);
            const {soldOut} = window.SL_State.get(`${statePath}.spu`);
            if (activeSku) setSkuPrice(soldOut, activeSku); else setMinPrice(soldOut, skuList);
        };
        const __WEBPACK_DEFAULT_EXPORT__ = setProductPrice;
    },
    "./src/assets/product/commons/js/product-item.js": (__unused_webpack_module, __unused_webpack___webpack_exports__, __webpack_require__) => {
        "use strict";
        var _yy_sl_theme_shared_utils_newCurrency__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("../shared/browser/utils/newCurrency/index.js");
        var _yy_sl_theme_shared_utils_state_selector__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("../shared/browser/utils/state-selector.js");
        var _yy_sl_theme_shared_report_product_product_item__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("../shared/browser/report/product/product-item.js");
        var _preview_modal__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("./src/assets/product/commons/js/preview-modal/index.js");
        var _quick_add_modal__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__("./src/assets/product/commons/js/quick-add-modal.js");
        var _commons_utils_convertPrice__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__("./src/assets/commons/utils/convertPrice.js");
        const {formatCurrency} = _yy_sl_theme_shared_utils_newCurrency__WEBPACK_IMPORTED_MODULE_0__["default"];
        const hdReport = new _yy_sl_theme_shared_report_product_product_item__WEBPACK_IMPORTED_MODULE_2__["default"];
        const isPad = _yy_sl_theme_shared_utils_state_selector__WEBPACK_IMPORTED_MODULE_1__.SL_State.get("request.is_mobile") || void 0 !== document.ontouchmove;
        __SL_$__("body").delegate(".js-product-item-quick-view", "click", (function(e) {
            e.preventDefault();
            e.stopPropagation();
            const spuSeq = __SL_$__(this).data("spu-seq");
            const uniqueKey = __SL_$__(this).data("unique-key");
            const query = __SL_$__(this).data("query");
            const position = __SL_$__(this).data("index");
            (0, _preview_modal__WEBPACK_IMPORTED_MODULE_3__["default"])({
                spuSeq,
                uniqueKey,
                query,
                position
            });
        }));
        __SL_$__("body").on("click", ".js-product-item-quick-add", (e => {
            e.preventDefault();
            e.stopPropagation();
            const $current = __SL_$__(e.currentTarget);
            const itemIndex = $current.data("index");
            const spuSeq = $current.data("spu-seq");
            const uniqueKey = $current.data("unique-key");
            const status = $current.data("status");
            const position = $current.data("index");
            (0, _quick_add_modal__WEBPACK_IMPORTED_MODULE_4__["default"])({
                spuSeq,
                uniqueKey,
                $button: $current,
                position,
                itemIndex,
                status
            });
        }));
        __SL_$__("body").on("click", ".js-product-item-sold-out", (e => {
            e.preventDefault();
            e.stopPropagation();
        }));
        window.SL_EventBus.on("global:currency:format", (({currencyCode: code, lang}) => {
            const priceItems = __SL_$__("[data-product-item-price]");
            for (const priceItem of priceItems) {
                const priceValue = __SL_$__(priceItem).data("product-item-price");
                const isSavePrice = __SL_$__(priceItem).data("product-item-save-price");
                (0, _commons_utils_convertPrice__WEBPACK_IMPORTED_MODULE_5__.processPrice)(__SL_$__(priceItem), priceValue, {
                    isSavePrice,
                    code,
                    lang
                }).render();
            }
        }));
        if (isPad) {
            __SL_$__(".product-item__inner-wrap .product-item__actions").css({
                display: "block"
            });
            __SL_$__(".product-item__inner-wrap").removeClass("js-product-inner-wrap");
            __SL_$__("#collectionsAjaxInner").addClass("pad");
            __SL_$__(".product-item__wrapper").addClass("pad");
        }
        __SL_$__("body").on("mouseenter", ".js-product-inner-wrap", (function(e) {
            e.preventDefault();
            e.stopPropagation();
            const $item = __SL_$__(this);
            const $parent = $item.parent();
            const $btns = $item.find(".js-product-item__actions");
            const noHoverAnimation = $item.data("no-hover-ani-effect");
            if ($btns.hasClass("show-middle-btn") || noHoverAnimation) return;
            window.clearTimeout(+$item.attr("data-timer"));
            if ($parent.children(".js-bg").length) $item.css("height", `${$item.find(".js-product-item").outerHeight()}px`); else {
                const $bg = __SL_$__('<div class="js-bg" style="width: 100%;"></div>');
                $bg.css("height", `${$item.outerHeight()}px`).appendTo($parent);
                $item.css("position", "absolute").css("top", "0").css("left", "0").css("width", "100%").css("z-index", $item.attr("data-hover-z-index"));
                $btns.css("display", "block");
                $item.css("height", `${$bg.outerHeight(true)}px`);
                $item.css("height", `${$item.find(".js-product-item").outerHeight()}px`);
            }
        }));
        __SL_$__("body").on("mouseleave", ".js-product-inner-wrap", (function(e) {
            e.preventDefault();
            e.stopPropagation();
            const $item = __SL_$__(this);
            const $parent = $item.parent();
            const $btns = $item.find(".js-product-item__actions");
            if ($btns.hasClass("show-middle-btn")) return;
            const $bg = $parent.children(".js-bg");
            window.clearTimeout(+$item.attr("data-timer"));
            $item.css("height", `${$bg.outerHeight()}px`);
            $item.attr("data-timer", setTimeout((function() {
                $item.removeAttr("style");
                $bg.remove();
                $btns.removeAttr("style");
            }), 300));
        }));
        const tryDecodeURIComponent = str => {
            try {
                return decodeURIComponent(str);
            } catch (e) {
                return str;
            }
        };
        const judgePageType = () => {
            const pageType = window.SL_State.get("templateAlias");
            const title = window.SL_State.get("sortation.sortation.title");
            if ("Products" === pageType) {
                const {pathname, search} = window.location;
                let collectionName = "";
                if (title) collectionName = title; else collectionName = "All Products";
                if ("/collections/types" === pathname || "/collections/brands" === pathname) collectionName = tryDecodeURIComponent(pathname.replace("/collections/", "") + search); else {
                    const pathnameArr = pathname.split("/");
                    if ("" === pathnameArr[pathnameArr.length - 1]) pathnameArr.pop();
                    if ("collections" === pathnameArr[1] && 4 === pathnameArr.length) collectionName += tryDecodeURIComponent(pathname.replace("/collections/", "") + search);
                }
                return collectionName;
            }
            if ("ProductsSearch" === pageType) return "Search Result";
        };
        function thirdPartReport({id, name, price, index}) {
            const listName = judgePageType();
            window.SL_EventBus.emit("global:thirdPartReport", {
                GA: [ [ "event", "select_content", {
                    content_type: "product",
                    items: [ {
                        id,
                        name,
                        price: formatCurrency(price),
                        list_name: listName,
                        list_position: index
                    } ]
                } ] ],
                GA4: [ [ "event", "select_content", {
                    content_type: "product",
                    item_id: id
                } ], [ "event", "select_item", {
                    items: [ {
                        item_id: id,
                        item_name: name,
                        price: formatCurrency(price),
                        currency: window.SL_State.get("storeInfo.currency"),
                        item_list_name: listName,
                        index
                    } ]
                } ] ]
            });
        }
        function reportClickProduct(id) {
            const pageType = window.SL_State.get("template");
            if ("collection" === pageType) {
                var _window$HdSdk;
                null === (_window$HdSdk = window.HdSdk) || void 0 === _window$HdSdk ? void 0 : _window$HdSdk.shopTracker.report("60006260", {
                    event_name: "130",
                    product_id: id
                });
            }
        }
        __SL_$__(document.body).on("click", ".product-item", (function() {
            const item = __SL_$__(this);
            const isRecentlyProduct = item.hasClass("__sl-custom-track-product-recently-viewed-item");
            const isSearchProduct = item.hasClass("__sl-custom-track-product-item-search");
            const isRecommendProduct = item.hasClass("__sl-custom-track-product-recommend-item");
            if (!isSearchProduct && !isRecentlyProduct && !isRecommendProduct) hdReport.itemSelect({
                productInfo: item.data()
            });
            thirdPartReport({
                id: __SL_$__(this).data("skuId"),
                name: __SL_$__(this).data("name"),
                price: __SL_$__(this).data("price"),
                index: __SL_$__(this).data("index") + 1
            });
            reportClickProduct(item.data("id"));
        }));
    },
    "./src/assets/product/commons/js/quick-add-modal.js": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
        "use strict";
        __webpack_require__.d(__webpack_exports__, {
            default: () => quickAddModal
        });
        var axios = __webpack_require__("./node_modules/axios/index.js");
        var axios_default = __webpack_require__.n(axios);
        var i18n = __webpack_require__("../shared/browser/utils/i18n.js");
        var request = __webpack_require__("../shared/browser/utils/request.js");
        var tool = __webpack_require__("../shared/browser/utils/report/tool.js");
        var newCurrency = __webpack_require__("../shared/browser/utils/newCurrency/index.js");
        var view_content = __webpack_require__("../shared/browser/events/data-report/view-content/index.js");
        var baseReport = __webpack_require__("../shared/browser/report/common/baseReport.js");
        var utils = __webpack_require__("../shared/browser/report/product/utils/index.js");
        var syntax_patch = __webpack_require__("../shared/browser/utils/syntax-patch.js");
        const {formatCurrency} = newCurrency["default"];
        const pdpTypeMap = {
            101: 102,
            102: 103,
            103: 103,
            105: 101,
            115: 103
        };
        class ProductQuickAddCart extends baseReport.BaseReport {
            quickAddCartView(reportData) {
                (0, utils.validParams)(reportData);
                const {baseParams = {}, productInfo} = reportData;
                const {spuSeq, skuSeq, price, productName} = productInfo;
                const productInfoParams = {
                    content_ids: spuSeq,
                    sku_id: skuSeq,
                    content_name: productName,
                    currency: window.SL_State.get("storeInfo.currency"),
                    value: formatCurrency(price)
                };
                const params = {
                    page: 108,
                    module: -999,
                    component: -999,
                    action_type: 101,
                    popup_page_base: this.page,
                    pdp_type: (0, syntax_patch.nullishCoalescingOperator)(pdpTypeMap[this.page], 103),
                    ...baseParams,
                    ...productInfoParams
                };
                super.view({
                    selector: `.__sl-custom-track-quick-add-modal-${spuSeq}`,
                    reportOnce: false,
                    customParams: params
                });
            }
            async btnAddToCart(reportData) {
                (0, utils.validParams)(reportData);
                const TypeMap = {
                    101: "addtocart",
                    102: "buynow",
                    103: "paypal"
                };
                const {baseParams} = reportData;
                const productInfoParams = {
                    cart_id: await (0, utils.getCartId)(),
                    currency: window.SL_State.get("storeInfo.currency")
                };
                const params = {
                    page: 108,
                    module: 106,
                    event_name: "AddToCart",
                    addtocart_type: TypeMap[baseParams.component],
                    ...baseParams,
                    ...productInfoParams
                };
                super.collect(params);
            }
            itemAddToCart(reportData) {
                (0, utils.validParams)(reportData);
                const {baseParams = {}, productInfo} = reportData;
                const {spuSeq, itemIndex, status, price} = productInfo;
                const productInfoParams = {
                    spu_id: spuSeq,
                    price,
                    position: itemIndex + 1,
                    status: status ? 102 : 101
                };
                const params = {
                    page: 108,
                    module: 109,
                    component: 101,
                    event_name: "AddToCart",
                    ...baseParams,
                    ...productInfoParams
                };
                super.collect(params);
            }
        }
        var sku_change = __webpack_require__("../shared/browser/events/product/sku-change/index.js");
        var quickView_click = __webpack_require__("../shared/browser/events/product/quickView-click/index.js");
        var preview_init = __webpack_require__("../shared/browser/events/product/preview-init/index.js");
        var pageMapping = __webpack_require__("../shared/browser/utils/report/pageMapping.js");
        var common = __webpack_require__("./src/assets/commons/components/modal/common.js");
        var components_modal = __webpack_require__("./src/assets/commons/components/modal/index.js");
        var toast = __webpack_require__("./src/assets/commons/components/toast/index.js");
        var url = __webpack_require__("./src/assets/commons/utils/url.js");
        var product_button = __webpack_require__("./src/assets/product/detail/js/product-button.js");
        var product_button_report = __webpack_require__("./src/assets/product/detail/js/product-button-report.js");
        var product_quantity = __webpack_require__("./src/assets/product/detail/js/product-quantity.js");
        var sku_trade = __webpack_require__("./src/assets/product/detail/js/sku-trade.js");
        var product_info = __webpack_require__("./src/assets/product/commons/js/product-info.js");
        var globalEvent = __webpack_require__("./src/assets/commons/cart/globalEvent.js");
        var isMobile = __webpack_require__("./src/assets/commons/utils/isMobile.js");
        const {formatCurrency: quick_add_modal_formatCurrency} = newCurrency["default"];
        const emitProductSkuChange = data => {
            try {
                var _window, _window$SL_State;
                (0, sku_change["default"])({
                    currency: null === (_window = window) || void 0 === _window ? void 0 : null === (_window$SL_State = _window.SL_State) || void 0 === _window$SL_State ? void 0 : _window$SL_State.get("storeInfo.currency"),
                    ...data
                });
            } catch (e) {
                console.error(e);
            }
        };
        const hdReport = new ProductQuickAddCart;
        const emitViewContent = data => {
            try {
                (0, view_content["default"])(data);
                hdReport.quickAddCartView({
                    productInfo: {
                        spuSeq: null === data || void 0 === data ? void 0 : data.content_spu_id,
                        skuSeq: null === data || void 0 === data ? void 0 : data.content_sku_id,
                        price: null === data || void 0 === data ? void 0 : data.originPrice,
                        productName: null === data || void 0 === data ? void 0 : data.productName
                    }
                });
            } catch (e) {
                console.error(e);
            }
        };
        const getSortationIds = spu => {
            if (spu && spu.sortationList && Array.isArray(spu.sortationList)) return spu.sortationList.map((s => s.sortationId)).join(",");
            return "";
        };
        const modalInstanceMap = new Map;
        const previewInstanceMap = new Map;
        const quickAddLoadingClassName = "product-item__btn--loading";
        function modalExpose(page) {
            var _window$HdSdk;
            null === (_window$HdSdk = window.HdSdk) || void 0 === _window$HdSdk ? void 0 : _window$HdSdk.shopTracker.report("60006263", {
                event_name: "view",
                page
            });
        }
        const getSkuChangeData = (skuInfo = {}) => {
            const {spuSeq, discount, skuSeq, price, originPrice, stock, weight, weightUnit, available, shelves, skuAttributeIds, imageList, soldOut, allowOversold, imageBeanList} = skuInfo;
            return {
                spuSeq,
                discount,
                skuSeq,
                price: quick_add_modal_formatCurrency(price || 0),
                originPrice: quick_add_modal_formatCurrency(originPrice || 0),
                stock,
                weight,
                weightUnit,
                available,
                shelves,
                skuAttributeIds,
                imageList,
                soldOut,
                allowOversold,
                imageBeanList
            };
        };
        const getReportCartId = async () => await (0, utils.getCartId)();
        async function quickAddModal(data) {
            const {spuSeq, uniqueKey, $button, buttonLoadingCls} = data;
            let modalPrefix = "product_quick_add_";
            let queryObj = {};
            const query = $button.data("query");
            let cartId = "";
            getReportCartId().then((id => {
                cartId = id;
            }));
            try {
                queryObj = {
                    ...query
                };
                modalPrefix = queryObj.modalPrefix ? `${queryObj.modalPrefix}_product_quick_add_` : "product_quick_add_";
            } catch (e) {
                console.log(e);
            }
            const page = modalPrefix.startsWith("productRecommendModal") ? "123" : pageMapping["default"][window.SL_State.get("templateAlias")];
            function toggleAddLoading(isLoading) {
                $button.toggleClass(buttonLoadingCls || quickAddLoadingClassName, isLoading);
            }
            if ($button.hasClass(buttonLoadingCls || quickAddLoadingClassName)) return;
            try {
                toggleAddLoading(true);
                const res = await getProductDetail(spuSeq);
                if ("SUCCESS" === res.code) {
                    var _res$data$sku$skuList, _res$data, _res$data$sku, _res$data$sku$skuAttr, _res$data2, _res$data2$sku, _res$data3, _res$data3$spu;
                    const productInfo = res.data;
                    const skuList = null !== (_res$data$sku$skuList = null === (_res$data = res.data) || void 0 === _res$data ? void 0 : null === (_res$data$sku = _res$data.sku) || void 0 === _res$data$sku ? void 0 : _res$data$sku.skuList) && void 0 !== _res$data$sku$skuList ? _res$data$sku$skuList : [];
                    const skuAttributeMap = null !== (_res$data$sku$skuAttr = null === (_res$data2 = res.data) || void 0 === _res$data2 ? void 0 : null === (_res$data2$sku = _res$data2.sku) || void 0 === _res$data2$sku ? void 0 : _res$data2$sku.skuAttributeMap) && void 0 !== _res$data$sku$skuAttr ? _res$data$sku$skuAttr : {};
                    const isSoldOut = null === (_res$data3 = res.data) || void 0 === _res$data3 ? void 0 : null === (_res$data3$spu = _res$data3.spu) || void 0 === _res$data3$spu ? void 0 : _res$data3$spu.soldOut;
                    const isSingleSku = Array.isArray(skuList) && 1 === skuList.length;
                    if (isSoldOut) {
                        (new toast["default"]).open((0, i18n.t)("products.general.sold_out"), 3e3);
                        return;
                    }
                    modalExpose(page);
                    if (isSingleSku) {
                        var _productInfo$spu, _window2, _window2$SL_State, _res$data4, _res$data4$spu;
                        const skuInfo = skuList[0];
                        addToCart({
                            sku: skuInfo,
                            spu: null === productInfo || void 0 === productInfo ? void 0 : productInfo.spu,
                            toggleAddLoading,
                            hdReportPage: page,
                            skuAttributeMap,
                            cartId,
                            ...data
                        });
                        emitProductSkuChange({
                            type: "init",
                            quantity: 1,
                            ...getSkuChangeData(skuInfo)
                        });
                        emitViewContent({
                            content_spu_id: null === productInfo || void 0 === productInfo ? void 0 : null === (_productInfo$spu = productInfo.spu) || void 0 === _productInfo$spu ? void 0 : _productInfo$spu.spuSeq,
                            content_sku_id: null === skuInfo || void 0 === skuInfo ? void 0 : skuInfo.skuSeq,
                            content_category: getSortationIds(null === productInfo || void 0 === productInfo ? void 0 : productInfo.spu),
                            currency: null === (_window2 = window) || void 0 === _window2 ? void 0 : null === (_window2$SL_State = _window2.SL_State) || void 0 === _window2$SL_State ? void 0 : _window2$SL_State.get("storeInfo.currency"),
                            value: quick_add_modal_formatCurrency((null === skuInfo || void 0 === skuInfo ? void 0 : skuInfo.price) || 0),
                            quantity: 1,
                            price: quick_add_modal_formatCurrency((null === skuInfo || void 0 === skuInfo ? void 0 : skuInfo.price) || 0),
                            productName: null === (_res$data4 = res.data) || void 0 === _res$data4 ? void 0 : null === (_res$data4$spu = _res$data4.spu) || void 0 === _res$data4$spu ? void 0 : _res$data4$spu.title,
                            originPrice: (null === skuInfo || void 0 === skuInfo ? void 0 : skuInfo.price) || 0
                        });
                    } else showModal({
                        spuSeq,
                        uniqueKey,
                        modalPrefix,
                        ...data
                    });
                } else (new toast["default"]).open((0, i18n.t)("products.general.no_product_data_found"), 3e3);
            } catch (err) {
                (new toast["default"]).open((0, i18n.t)("products.general.no_product_data_found"), 3e3);
            } finally {
                toggleAddLoading(false);
            }
        }
        async function showModal({spuSeq, uniqueKey, modalPrefix, ...data}) {
            if (modalInstanceMap.has(spuSeq)) {
                var _modalInstanceMap$get, _previewInstanceMap$g, _modalInstanceMap$get2;
                null === (_modalInstanceMap$get = modalInstanceMap.get(spuSeq)) || void 0 === _modalInstanceMap$get ? void 0 : _modalInstanceMap$get.show();
                null === (_previewInstanceMap$g = previewInstanceMap.get(spuSeq)) || void 0 === _previewInstanceMap$g ? void 0 : _previewInstanceMap$g.emitEvent();
                (0, quickView_click["default"])({
                    type: "change",
                    eventName: "OPEN_QUICKVIEW_ADDTOCART",
                    prefix: modalPrefix,
                    spuSeq,
                    modal: modalInstanceMap.get(spuSeq),
                    preview: {
                        skuTrade: previewInstanceMap.get(spuSeq).skuTrade,
                        quantityStepper: previewInstanceMap.get(spuSeq).quantityStepper
                    },
                    $el: document.getElementById(null === (_modalInstanceMap$get2 = modalInstanceMap.get(spuSeq)) || void 0 === _modalInstanceMap$get2 ? void 0 : _modalInstanceMap$get2.modalId)
                });
            } else {
                const children = __SL_$__('<div class="quick-add-modal__outerWrapper"></div>');
                const modal = new components_modal.ModalWithHtml({
                    children,
                    containerClassName: `quick-add-modal__container __sl-custom-track-quick-add-modal-${spuSeq}`,
                    zIndex: 128,
                    closeCallback: () => {
                        var _modalInstanceMap$get3;
                        (0, quickView_click["default"])({
                            eventName: "CLOSE_QUICKVIEW_ADDTOCART",
                            spuSeq,
                            $el: document.getElementById(null === (_modalInstanceMap$get3 = modalInstanceMap.get(spuSeq)) || void 0 === _modalInstanceMap$get3 ? void 0 : _modalInstanceMap$get3.modalId)
                        });
                    }
                });
                modal.show();
                modal.$modal.get(0).style.setProperty("--max-body-height", `${.8 * window.innerHeight}px`);
                const loading = new toast.Loading({
                    target: modal.$modal.find(".mp-modal__body"),
                    loadingColor: "currentColor",
                    duration: -1
                });
                loading.open();
                try {
                    var _modalInstanceMap$get4;
                    const res = await fetchModalContent(uniqueKey, modalPrefix);
                    children.empty().append(res.data);
                    initQuickAddModal(`${modalPrefix}${spuSeq}`, children, modal, spuSeq, null === data || void 0 === data ? void 0 : data.position, modal.$modal);
                    modalInstanceMap.set(spuSeq, modal);
                    (0, quickView_click["default"])({
                        type: "init",
                        eventName: "OPEN_QUICKVIEW_ADDTOCART",
                        prefix: modalPrefix,
                        spuSeq,
                        modal: modalInstanceMap.get(spuSeq),
                        preview: {
                            skuTrade: previewInstanceMap.get(spuSeq).skuTrade,
                            quantityStepper: previewInstanceMap.get(spuSeq).quantityStepper
                        },
                        $el: document.getElementById(null === (_modalInstanceMap$get4 = modalInstanceMap.get(spuSeq)) || void 0 === _modalInstanceMap$get4 ? void 0 : _modalInstanceMap$get4.modalId)
                    });
                } catch (err) {
                    (new toast["default"]).open((0, i18n.t)("products.general.no_product_data_found"), 3e3);
                    modal.hide();
                } finally {
                    loading.close();
                    window.SL_EventBus.emit("global.activeIcon.show", {
                        type: "vip"
                    });
                }
            }
        }
        function initQuickAddModal(id, el, modal, spuSeq, position, modalContainer) {
            const sku = window.SL_State.get(`${id}.sku`);
            const spu = window.SL_State.get(`${id}.spu`);
            initWidgets({
                id,
                sku,
                spu
            }, el, modal, spuSeq, position, modalContainer);
        }
        function initWidgets({id, sku, spu}, el, modal, spuSeq, position, modalContainer) {
            let activeSkuCache = {};
            const ButtonGroup = new product_button["default"]({
                id,
                cartRoot: `.pdp_add_to_cart_${id}`,
                buyNowRoot: `.pdp_buy_now_${id}`,
                payPayId: `pdp_paypal_${id}`,
                soldOutRoot: `.pdp_sold_out_${id}`,
                spu,
                sku,
                modalType: "QuickAdd",
                position,
                onAddSuccess: () => {
                    modal.hide();
                }
            });
            const quantityStepper = new product_quantity["default"]({
                id,
                sku,
                spu,
                onChange: num => {
                    ButtonGroup.setActiveSkuNum(num);
                    window.SL_EventBus.emit("product:count:change", [ num, id ]);
                }
            });
            const skuTrade = (0, sku_trade["default"])({
                id,
                sku,
                spu,
                mixins: window.skuMixins,
                modalContainer,
                onInit: (trade, activeSku) => {
                    var _window3, _window3$SL_State;
                    activeSkuCache = activeSku;
                    let content_sku_id = "";
                    let price = null;
                    if (activeSku) {
                        var _activeSkuCache, _quantityStepper$skuS, _quantityStepper$skuS2;
                        changeActiveSku(activeSku);
                        content_sku_id = null === activeSku || void 0 === activeSku ? void 0 : activeSku.skuSeq;
                        price = quick_add_modal_formatCurrency((null === (_activeSkuCache = activeSkuCache) || void 0 === _activeSkuCache ? void 0 : _activeSkuCache.price) || 0);
                        emitProductSkuChange({
                            type: "init",
                            quantity: (null === quantityStepper || void 0 === quantityStepper ? void 0 : null === (_quantityStepper$skuS = quantityStepper.skuStepper) || void 0 === _quantityStepper$skuS ? void 0 : null === (_quantityStepper$skuS2 = _quantityStepper$skuS.data) || void 0 === _quantityStepper$skuS2 ? void 0 : _quantityStepper$skuS2.value) || 1,
                            ...getSkuChangeData(activeSku)
                        });
                    }
                    emitViewContent({
                        content_spu_id: spu.spuSeq,
                        content_sku_id,
                        content_category: getSortationIds(spu),
                        currency: null === (_window3 = window) || void 0 === _window3 ? void 0 : null === (_window3$SL_State = _window3.SL_State) || void 0 === _window3$SL_State ? void 0 : _window3$SL_State.get("storeInfo.currency"),
                        value: price,
                        quantity: 1,
                        price,
                        productName: null === spu || void 0 === spu ? void 0 : spu.title,
                        originPrice: (null === activeSku || void 0 === activeSku ? void 0 : activeSku.price) || 0
                    });
                },
                onChange: activeSku => {
                    activeSkuCache = activeSku;
                    if (activeSku) {
                        var _quantityStepper$skuS3, _quantityStepper$skuS4;
                        emitProductSkuChange({
                            type: "change",
                            quantity: (null === quantityStepper || void 0 === quantityStepper ? void 0 : null === (_quantityStepper$skuS3 = quantityStepper.skuStepper) || void 0 === _quantityStepper$skuS3 ? void 0 : null === (_quantityStepper$skuS4 = _quantityStepper$skuS3.data) || void 0 === _quantityStepper$skuS4 ? void 0 : _quantityStepper$skuS4.value) || 1,
                            ...getSkuChangeData(activeSku)
                        });
                    }
                    if (!activeSku && !quantityStepper.activeSku) return;
                    (0, product_info["default"])(id, id, activeSku);
                    changeActiveSku(activeSku);
                }
            });
            try {
                const _modalContainer = modal.$modal;
                (0, preview_init["default"])({
                    id,
                    position,
                    modalType: "quickAddToCart",
                    module: "quickAddToCartModal",
                    product: window.SL_State.get(id),
                    modalContainer: modal.$modal,
                    modalContainerElement: _modalContainer && _modalContainer[0],
                    instances: {
                        buttonGroup: ButtonGroup,
                        quantityStepper,
                        skuTrade
                    }
                });
            } catch (e) {
                console.error(e);
            }
            previewInstanceMap.set(spuSeq, {
                skuTrade,
                quantityStepper,
                emitEvent: () => {
                    var _window4, _window4$SL_State, _activeSkuCache4;
                    let content_sku_id = "";
                    let price = null;
                    if (activeSkuCache) {
                        var _activeSkuCache2, _activeSkuCache3, _quantityStepper$skuS5, _quantityStepper$skuS6;
                        content_sku_id = null === (_activeSkuCache2 = activeSkuCache) || void 0 === _activeSkuCache2 ? void 0 : _activeSkuCache2.skuSeq;
                        price = quick_add_modal_formatCurrency((null === (_activeSkuCache3 = activeSkuCache) || void 0 === _activeSkuCache3 ? void 0 : _activeSkuCache3.price) || 0);
                        emitProductSkuChange({
                            type: "init",
                            quantity: (null === quantityStepper || void 0 === quantityStepper ? void 0 : null === (_quantityStepper$skuS5 = quantityStepper.skuStepper) || void 0 === _quantityStepper$skuS5 ? void 0 : null === (_quantityStepper$skuS6 = _quantityStepper$skuS5.data) || void 0 === _quantityStepper$skuS6 ? void 0 : _quantityStepper$skuS6.value) || 1,
                            ...getSkuChangeData(activeSkuCache)
                        });
                    }
                    emitViewContent({
                        content_spu_id: spu.spuSeq,
                        content_sku_id,
                        content_category: getSortationIds(spu),
                        currency: null === (_window4 = window) || void 0 === _window4 ? void 0 : null === (_window4$SL_State = _window4.SL_State) || void 0 === _window4$SL_State ? void 0 : _window4$SL_State.get("storeInfo.currency"),
                        value: price,
                        quantity: 1,
                        price,
                        productName: null === spu || void 0 === spu ? void 0 : spu.title,
                        originPrice: (null === (_activeSkuCache4 = activeSkuCache) || void 0 === _activeSkuCache4 ? void 0 : _activeSkuCache4.price) || 0
                    });
                }
            });
            listenCurrencyCodeChange(id, id, quantityStepper);
            function changeActiveSku(activeSku) {
                ButtonGroup.setActiveSku(activeSku);
                quantityStepper.setActiveSku(activeSku);
                if ((0, isMobile["default"])()) {
                    const $footer = el.find(".quick-add-modal__footer");
                    const paddingBottom = $footer.outerHeight() + 10;
                    (0, common.addLockableTarget)($footer);
                    el.find(".quick-add-modal__body").css({
                        "padding-bottom": paddingBottom
                    });
                }
            }
        }
        function addToCart({sku, spu, toggleAddLoading, hdReportPage, skuAttributeMap, position, cartId}) {
            var _window$HdSdk2, _window$HdSdk2$shopTr, _spu$sortationList, _spu$sortationList$, _spu$sortationList2, _spu$sortationList2$;
            const activeSku = sku ? {
                ...sku,
                num: 1,
                name: spu.title
            } : null;
            if (isPreview()) {
                (new toast["default"]).open((0, i18n.t)("products.product_details.link_preview_does_not_support"));
                return;
            }
            if (!activeSku) {
                (new toast["default"]).open((0, i18n.t)("products.product_list.select_product_all_options"));
                return;
            }
            toggleAddLoading(true);
            const {spuSeq: spuId, skuSeq: skuId, num, name, price} = activeSku;
            const eventID = (0, tool.getEventID)();
            const dataId = null === (_window$HdSdk2 = window.HdSdk) || void 0 === _window$HdSdk2 ? void 0 : null === (_window$HdSdk2$shopTr = _window$HdSdk2.shopTracker) || void 0 === _window$HdSdk2$shopTr ? void 0 : _window$HdSdk2$shopTr.getDataId();
            const hdReportData = {
                page: hdReportPage,
                spuId,
                skuId,
                name,
                price,
                num,
                modalType: "SingleQuickAdd",
                variant: (0, product_button.getVariant)(null === activeSku || void 0 === activeSku ? void 0 : activeSku.skuAttributeIds, skuAttributeMap),
                collectionId: null === spu || void 0 === spu ? void 0 : null === (_spu$sortationList = spu.sortationList) || void 0 === _spu$sortationList ? void 0 : null === (_spu$sortationList$ = _spu$sortationList[0]) || void 0 === _spu$sortationList$ ? void 0 : _spu$sortationList$.sortationId,
                collectionName: null === spu || void 0 === spu ? void 0 : null === (_spu$sortationList2 = spu.sortationList) || void 0 === _spu$sortationList2 ? void 0 : null === (_spu$sortationList2$ = _spu$sortationList2[0]) || void 0 === _spu$sortationList2$ ? void 0 : _spu$sortationList2$.sortationName,
                position,
                dataId,
                eventID,
                cartId
            };
            window.SL_EventBus.emit(globalEvent.ADD_TO_CART, {
                spuId,
                skuId,
                num,
                price,
                name,
                eventID: `addToCart${eventID}`,
                reportParamsExt: {
                    dataId,
                    eventId: `addToCart${eventID}`,
                    eventName: "AddToCart"
                },
                error: () => {
                    (0, product_button_report.addToCartHdReport)({
                        ...hdReportData,
                        event_status: 0
                    });
                },
                success: () => {
                    (0, product_button_report.addToCartHdReport)({
                        ...hdReportData,
                        event_status: 1
                    });
                    (0, product_button_report.addToCartThirdReport)({
                        spuId,
                        name,
                        price,
                        skuId,
                        num,
                        eventID
                    });
                    const cartOpenType = window.SL_State.get("theme.settings.cart_open_type");
                    if ("cartremain" === cartOpenType) (new toast["default"]).open((0, i18n.t)("products.product_details.submission_successfully"), 1500);
                },
                complete: () => {
                    toggleAddLoading(false);
                }
            });
        }
        function listenCurrencyCodeChange(id, statePath, quantityStepper) {
            window.SL_EventBus.on("global:currency:format", (() => {
                (0, product_info["default"])(id, statePath, quantityStepper.activeSku);
            }));
        }
        function isPreview() {
            const currentUrl = window.location.pathname;
            return /^[/（]preview[/）].*/.test(currentUrl);
        }
        function fetchModalContent(uniqueKey, modalPrefix) {
            let recommendQuery = {};
            if (modalPrefix.startsWith("productRecommendModal")) recommendQuery = {
                modalPrefix: "productRecommendModal"
            };
            return axios_default().get(`/products/${uniqueKey}`, {
                params: {
                    view: "quick-add-modal",
                    preview: (0, url.getUrlQuery)("preview"),
                    themeId: (0, url.getUrlQuery)("themeId"),
                    ignoreRedirect: (0, url.getUrlQuery)("ignoreRedirect"),
                    engineType: (0, url.getUrlQuery)("engineType"),
                    sourcePage: window.SL_State.get("templateAlias"),
                    ...recommendQuery
                }
            });
        }
        function getProductDetail(spuSeq) {
            return request["default"].get(`/product/detail/query`, {
                params: {
                    spuSeq
                }
            });
        }
    },
    "./src/assets/product/detail/js/product-button-report.js": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
        "use strict";
        __webpack_require__.d(__webpack_exports__, {
            addToCartHdReport: () => addToCartHdReport,
            addToCartThirdReport: () => addToCartThirdReport,
            buyNowHdReport: () => buyNowHdReport,
            paypalHdReport: () => paypalHdReport
        });
        var tool = __webpack_require__("../shared/browser/utils/report/tool.js");
        var newCurrency = __webpack_require__("../shared/browser/utils/newCurrency/index.js");
        var state_selector = __webpack_require__("../shared/browser/utils/state-selector.js");
        var syntax_patch = __webpack_require__("../shared/browser/utils/syntax-patch.js");
        const {formatCurrency} = newCurrency["default"];
        const componentMap = {
            addtocart: 101,
            buynow: 102,
            paypal: 103,
            morePay: 104
        };
        const pageMap = {
            Home: {
                page: 101,
                module: 900
            },
            ProductsDetail: {
                page: 105,
                module: 106
            },
            QuickView: {
                page: 107,
                module: 106
            },
            QuickAdd: {
                page: 108,
                module: 106
            },
            SingleQuickAdd: {
                page: 108,
                module: 109,
                component: 101
            }
        };
        const pageId = {
            Home: 101,
            ProductsSearch: 102,
            Products: 103,
            ProductsDetail: 105,
            Activity: 115
        };
        function findSectionId(selector) {
            const id = __SL_$__(selector).closest(".shopline-section").attr("id");
            const trueId = id && id.replace("shopline-section-", "");
            return trueId;
        }
        function newHdReportData({addtocartType, price, skuId, spuId, num, modalType, variant, collectionId, collectionName, position, dataId, eventID, cartId, moreInfo = {}, singleItem = {}}) {
            let config = {};
            if (modalType) {
                config = pageMap[modalType];
                config.page_id = pageId[state_selector.SL_State.get("templateAlias")];
            } else {
                config = (0, syntax_patch.nullishCoalescingOperator)(pageMap[state_selector.SL_State.get("templateAlias")], {});
                if ("Home" === state_selector.SL_State.get("templateAlias")) {
                    config.module_type = "单个商品";
                    config.component_ID = findSectionId("[data-ssr-plugin-product-detail-container]");
                }
            }
            const index = "" === (0, syntax_patch.nullishCoalescingOperator)(position, "") ? "" : Number(position) + 1;
            const data = {
                component: componentMap[addtocartType],
                ...config,
                event_name: "AddToCart",
                data_id: dataId,
                addtocart_type: "morePay" === addtocartType ? "buynow" : addtocartType,
                action_type: -999,
                event_id: `addToCart${eventID}`,
                currency: state_selector.SL_State.get("storeInfo.currency"),
                value: formatCurrency(price * num),
                cart_id: cartId,
                ...moreInfo,
                items: [ {
                    sku_id: skuId,
                    spu_id: spuId,
                    index,
                    collection_id: (0, syntax_patch.nullishCoalescingOperator)(collectionId, ""),
                    collection_name: (0, syntax_patch.nullishCoalescingOperator)(collectionName, ""),
                    variant: (0, syntax_patch.nullishCoalescingOperator)(variant, ""),
                    price: formatCurrency(price),
                    quantity: num,
                    ...singleItem
                } ]
            };
            window.HdSdk && window.HdSdk.shopTracker && window.HdSdk.shopTracker.collect(data);
        }
        var api_logger = __webpack_require__("../shared/browser/events/utils/api-logger.js");
        var data_report_enum = __webpack_require__("../shared/browser/events/data-report/enum/index.js");
        const logger = (0, api_logger["default"])(`${data_report_enum.ADD_TO_CART} - EMIT`);
        const external = window && window.Shopline.event;
        const addToCart = data => {
            logger.info(data);
            return external.emit(data_report_enum.ADD_TO_CART, {
                data,
                interior: data_report_enum.ADD_TO_CART,
                onSuccess: result => {
                    logger.info("success", result);
                },
                onError: error => {
                    logger.error(error);
                }
            });
        };
        addToCart.apiName = data_report_enum.ADD_TO_CART;
        const add_to_cart = addToCart;
        const {formatCurrency: product_button_report_formatCurrency, unformatCurrency} = newCurrency["default"];
        function reportAddToCartEvent(data) {
            try {
                add_to_cart(data);
            } catch (e) {
                console.error(e);
            }
        }
        function addToCartThirdReport({spuId, name, price, skuId, num, eventID = (0, tool.getEventID)(), variant}) {
            var _window, _window$SL_State;
            window.SL_EventBus.emit("global:thirdPartReport", {
                GA: [ [ "event", "add_to_cart", {
                    items: [ {
                        id: skuId,
                        name,
                        price: product_button_report_formatCurrency(price),
                        quantity: num,
                        variant
                    } ]
                } ] ],
                GA4: [ [ "event", "add_to_cart", {
                    currency: window.SL_State.get("storeInfo.currency"),
                    value: product_button_report_formatCurrency(price * (num || 1)),
                    items: [ {
                        item_id: skuId,
                        item_name: name,
                        price: product_button_report_formatCurrency(price),
                        quantity: num,
                        item_variant: variant
                    } ]
                } ] ],
                GAAds: [ [ "event", "conversion", {
                    value: product_button_report_formatCurrency(price * (num || 1)),
                    currency: window.SL_State.get("storeInfo.currency")
                }, "ADD-TO-CART" ] ],
                FBPixel: [ [ "track", "AddToCart", {
                    content_ids: spuId,
                    content_name: name || "",
                    content_category: "",
                    content_type: "product_group",
                    currency: window.SL_State.get("storeInfo.currency"),
                    value: product_button_report_formatCurrency(price)
                }, {
                    eventID: `addToCart${eventID}`
                } ] ],
                GAR: [ [ "event", "add_to_cart", {
                    value: product_button_report_formatCurrency(price * (num || 1)),
                    items: [ {
                        id: skuId,
                        google_business_vertical: "retail"
                    } ]
                } ] ],
                GARemarketing: [ [ "event", "add_to_cart", {
                    ecomm_prodid: skuId,
                    ecomm_pagetype: "cart",
                    ecomm_totalvalue: product_button_report_formatCurrency(price * (num || 1))
                } ] ]
            });
            reportAddToCartEvent({
                content_spu_id: spuId,
                content_sku_id: skuId,
                content_category: "",
                content_name: name,
                currency: null === (_window = window) || void 0 === _window ? void 0 : null === (_window$SL_State = _window.SL_State) || void 0 === _window$SL_State ? void 0 : _window$SL_State.get("storeInfo.currency"),
                price: product_button_report_formatCurrency(price || 0),
                value: product_button_report_formatCurrency(price || 0),
                quantity: num
            });
            return eventID;
        }
        function addToCartHdReport({spuId, skuId, num, price, name, page, event_status, modalType, variant, collectionId, collectionName, position, dataId, eventID, cartId}) {
            var _window$HdSdk;
            null === (_window$HdSdk = window.HdSdk) || void 0 === _window$HdSdk ? void 0 : _window$HdSdk.shopTracker.report("60006263", {
                page,
                event_name: "additem",
                event_category: "cart",
                product_type: "product",
                product_id: spuId,
                variantion_id: skuId,
                quantity: num,
                price: product_button_report_formatCurrency(price),
                product_name: name,
                event_status,
                cart_id: cartId
            });
            newHdReportData({
                addtocartType: "addtocart",
                price,
                page,
                skuId,
                spuId,
                num,
                modalType,
                variant,
                collectionId,
                collectionName,
                position,
                dataId,
                eventID,
                cartId,
                moreInfo: {
                    event_status
                }
            });
        }
        function buyNowHdReport({spuId, skuId, num, price, name, page, event_status, modalType, variant, collectionId, collectionName, isMorePay, position, dataId, eventID, cartId}) {
            var _window$HdSdk2;
            null === (_window$HdSdk2 = window.HdSdk) || void 0 === _window$HdSdk2 ? void 0 : _window$HdSdk2.shopTracker.report("60006263", {
                page,
                event_name: "buy_now",
                product_id: spuId,
                variantion_id: skuId,
                quantity: num,
                price: product_button_report_formatCurrency(price),
                product_name: name,
                event_category: "cart",
                event_status
            });
            newHdReportData({
                addtocartType: isMorePay ? "morePay" : "buynow",
                price,
                page,
                skuId,
                spuId,
                num,
                modalType,
                variant,
                collectionId,
                collectionName,
                position,
                dataId,
                eventID,
                cartId,
                moreInfo: {
                    event_status
                }
            });
        }
        function paypalHdReport(data) {
            var _window$HdSdk3;
            const {cartId, ...rest} = data;
            const position = "" === (0, syntax_patch.nullishCoalescingOperator)(data.position, "") ? "" : Number(data.position) + 1;
            null === (_window$HdSdk3 = window.HdSdk) || void 0 === _window$HdSdk3 ? void 0 : _window$HdSdk3.shopTracker.report("60006263", {
                ...rest,
                position
            });
            newHdReportData({
                addtocartType: "paypal",
                price: unformatCurrency(data.price),
                page: data.page,
                skuId: data.variantion_id,
                spuId: data.product_id,
                num: data.quantity,
                modalType: data.modalType,
                variant: data.variant,
                collectionId: data.collectionId,
                collectionName: data.collectionName,
                position: data.position,
                dataId: data.dataId,
                eventID: data.eventID,
                cartId: data.cartId,
                moreInfo: {
                    event_status: data.event_status
                }
            });
        }
    },
    "./src/assets/product/detail/js/product-button.js": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
        "use strict";
        __webpack_require__.d(__webpack_exports__, {
            default: () => product_button,
            getVariant: () => getVariant
        });
        var i18n = __webpack_require__("../shared/browser/utils/i18n.js");
        var paypal = __webpack_require__("../shared/browser/components/paypal/index.js");
        var pageMapping = __webpack_require__("../shared/browser/utils/report/pageMapping.js");
        var newCurrency = __webpack_require__("../shared/browser/utils/newCurrency/index.js");
        var checkout = __webpack_require__("../shared/browser/utils/checkout.js");
        var tool = __webpack_require__("../shared/browser/utils/report/tool.js");
        var dataAccessor = __webpack_require__("../shared/browser/utils/dataAccessor.js");
        var syntax_patch = __webpack_require__("../shared/browser/utils/syntax-patch.js");
        class EventAddCheckoutEnd {
            constructor(name) {
                this.index = 0;
                this.name = "event_add_checkout_by_le";
                if (name) this.name = name;
            }
            static getUuid() {
                return "xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g, (function(c) {
                    const r = 16 * Math.random() | 0;
                    const v = "x" === c ? r : 3 & r | 8;
                    return v.toString(16);
                }));
            }
            getCheckoutKey() {
                this.index += 1;
                return `${this.name}_${EventAddCheckoutEnd.getUuid()}_${this.index}`;
            }
            getUuidAndMonitorCheckoutEnd(eventName, callback) {
                const key = this.getCheckoutKey();
                window.SL_EventBus && window.SL_EventBus.on(eventName, (data => {
                    const {event_status, stage} = (0, syntax_patch.nullishCoalescingOperator)(data.data, {});
                    if (stage === key) callback(event_status);
                }));
                return key;
            }
        }
        const checkoutEnd = new EventAddCheckoutEnd;
        var utils = __webpack_require__("../shared/browser/components/smart-payment/utils.js");
        var smart_payment = __webpack_require__("../shared/browser/components/smart-payment/index.js");
        var tradeReport = __webpack_require__("../shared/browser/utils/tradeReport/index.js");
        var state_selector = __webpack_require__("../shared/browser/utils/state-selector.js");
        var product_utils = __webpack_require__("../shared/browser/report/product/utils/index.js");
        var api_logger = __webpack_require__("../shared/browser/events/utils/api-logger.js");
        const EVENT_NAME = "Product::Paypal-Fallback";
        const logger = (0, api_logger["default"])(EVENT_NAME);
        const external = window.Shopline && window.Shopline.event;
        const paypalFallback = data => {
            if (external) {
                logger.info(`[emit Product::Paypal-Fallback]`, data);
                return external.emit(EVENT_NAME, {
                    data
                });
            }
        };
        paypalFallback.apiName = EVENT_NAME;
        const paypal_fallback = paypalFallback;
        var globalEvent = __webpack_require__("./src/assets/commons/cart/globalEvent.js");
        var toast = __webpack_require__("./src/assets/commons/components/toast/index.js");
        var debounce = __webpack_require__("./src/assets/commons/utils/debounce.js");
        var product_button_report = __webpack_require__("./src/assets/product/detail/js/product-button-report.js");
        const {formatCurrency} = newCurrency["default"];
        const getVariant = (skuAttributeIds, skuAttributeMap) => {
            var _skuAttributeIds$map;
            return null === skuAttributeIds || void 0 === skuAttributeIds ? void 0 : null === (_skuAttributeIds$map = skuAttributeIds.map((item => {
                var _skuAttributeMap$item, _skuAttributeMap$item2, _skuAttributeMap$item3;
                return null === skuAttributeMap || void 0 === skuAttributeMap ? void 0 : null === (_skuAttributeMap$item = skuAttributeMap[null === item || void 0 === item ? void 0 : item.id]) || void 0 === _skuAttributeMap$item ? void 0 : null === (_skuAttributeMap$item2 = _skuAttributeMap$item.skuAttributeValueMap) || void 0 === _skuAttributeMap$item2 ? void 0 : null === (_skuAttributeMap$item3 = _skuAttributeMap$item2[null === item || void 0 === item ? void 0 : item.valueId]) || void 0 === _skuAttributeMap$item3 ? void 0 : _skuAttributeMap$item3.defaultValue;
            }))) || void 0 === _skuAttributeIds$map ? void 0 : _skuAttributeIds$map.toString();
        };
        const setChannel = () => {
            (0, dataAccessor.setSyncData)({
                orderFrom: "web"
            });
        };
        class ButtonEvent {
            constructor({id, cartRoot, buyNowRoot, payPayId, soldOutRoot, spu, onAddSuccess, onAddError, sku, modalType, position}) {
                this.getReportCartId();
                this.addButton = cartRoot;
                this.addLoadingStatus = false;
                this.buyButton = buyNowRoot;
                this.buyLoadingStatus = false;
                this.payPayId = payPayId;
                this.soldOutRoot = soldOutRoot;
                this.onAddSuccess = onAddSuccess;
                this.onAddError = onAddError;
                this.spu = spu;
                this.sku = sku;
                this.initPaypal();
                this.initEvent();
                this.toast = new toast["default"];
                this.initLoading();
                this.num = 1;
                this.id = id;
                this.page = String(id).startsWith("productRecommendModal") ? "123" : pageMapping["default"][window.SL_State.get("templateAlias")];
                this.modalType = modalType;
                this.position = position;
            }
            async getReportCartId() {
                this.cartId = await (0, product_utils.getCartId)();
            }
            initLoading() {
                this.addLoading = new toast["default"]({
                    duration: 0,
                    target: this.addButton,
                    type: "loading",
                    className: "product_add_loading"
                });
                this.addLoading.close();
                this.buyLoading = new toast["default"]({
                    duration: 0,
                    target: this.buyButton,
                    type: "loading",
                    className: "product_buy_loading"
                });
                this.buyLoading.close();
            }
            transProducts(products) {
                return null === products || void 0 === products ? void 0 : products.map((item => ({
                    productNum: item.num,
                    productSeq: item.spuId,
                    productSku: item.skuId,
                    productPrice: item.price
                })));
            }
            needReport() {
                var _window$HdSdk, _window$HdSdk$shopTra, _this$activeSku, _this$sku;
                const dataId = null === (_window$HdSdk = window.HdSdk) || void 0 === _window$HdSdk ? void 0 : null === (_window$HdSdk$shopTra = _window$HdSdk.shopTracker) || void 0 === _window$HdSdk$shopTra ? void 0 : _window$HdSdk$shopTra.getDataId();
                const eventID = (0, tool.getEventID)();
                const {name, price, spuSeq: spuId, skuSeq: skuId, itemNo} = this.activeSku;
                return {
                    eventID: (0, product_button_report.addToCartThirdReport)({
                        eventID,
                        itemNo,
                        spuId,
                        name,
                        price,
                        num: this.num,
                        skuId,
                        variant: getVariant(null === (_this$activeSku = this.activeSku) || void 0 === _this$activeSku ? void 0 : _this$activeSku.skuAttributeIds, null === (_this$sku = this.sku) || void 0 === _this$sku ? void 0 : _this$sku.skuAttributeMap)
                    }),
                    dataId,
                    eventName: "AddToCart"
                };
            }
            get stage() {
                var _window$HdSdk2, _window$HdSdk2$shopTr;
                const dataId = null === (_window$HdSdk2 = window.HdSdk) || void 0 === _window$HdSdk2 ? void 0 : null === (_window$HdSdk2$shopTr = _window$HdSdk2.shopTracker) || void 0 === _window$HdSdk2$shopTr ? void 0 : _window$HdSdk2$shopTr.getDataId();
                const eventID = (0, tool.getEventID)();
                return checkoutEnd.getUuidAndMonitorCheckoutEnd("trade:spb:report", (async status => {
                    var _this$activeSku2, _this$sku2, _this$spu, _this$spu$sortationLi, _this$spu$sortationLi2, _this$spu2, _this$spu2$sortationL, _this$spu2$sortationL2;
                    const {name, price, spuSeq: spuId, skuSeq: skuId} = this.activeSku;
                    (0, product_button_report.paypalHdReport)({
                        event_name: "quick_payment",
                        product_id: spuId,
                        variantion_id: skuId,
                        quantity: this.num,
                        price: formatCurrency(price),
                        product_name: name,
                        page: this.page,
                        event_status: status,
                        modalType: this.modalType,
                        variant: getVariant(null === (_this$activeSku2 = this.activeSku) || void 0 === _this$activeSku2 ? void 0 : _this$activeSku2.skuAttributeIds, null === (_this$sku2 = this.sku) || void 0 === _this$sku2 ? void 0 : _this$sku2.skuAttributeMap),
                        collectionId: null === (_this$spu = this.spu) || void 0 === _this$spu ? void 0 : null === (_this$spu$sortationLi = _this$spu.sortationList) || void 0 === _this$spu$sortationLi ? void 0 : null === (_this$spu$sortationLi2 = _this$spu$sortationLi[0]) || void 0 === _this$spu$sortationLi2 ? void 0 : _this$spu$sortationLi2.sortationId,
                        collectionName: null === (_this$spu2 = this.spu) || void 0 === _this$spu2 ? void 0 : null === (_this$spu2$sortationL = _this$spu2.sortationList) || void 0 === _this$spu2$sortationL ? void 0 : null === (_this$spu2$sortationL2 = _this$spu2$sortationL[0]) || void 0 === _this$spu2$sortationL2 ? void 0 : _this$spu2$sortationL2.sortationName,
                        position: this.position,
                        dataId,
                        eventID,
                        cartId: this.cartId
                    });
                }));
            }
            renderPaypal() {
                var _this$buttonConfig, _this$buttonConfig$or, _this$PayPalButton;
                this.PayPalButton = new paypal["default"]({
                    stage: this.stage,
                    needReport: () => this.needReport(),
                    beforeCreateOrder: () => {},
                    domId: this.payPayId,
                    height: __SL_$__(`#${this.payPayId}`).height(),
                    dynamic: null === (_this$buttonConfig = this.buttonConfig) || void 0 === _this$buttonConfig ? void 0 : null === (_this$buttonConfig$or = _this$buttonConfig.originConfig) || void 0 === _this$buttonConfig$or ? void 0 : _this$buttonConfig$or.system,
                    onToast: ({message}) => this.toast.open(message),
                    onDynamicNotify: () => {
                        __SL_$__(`#${this.payPayId}`).remove();
                        __SL_$__(this.buyButton).filter(".product-more-payment-button").remove();
                        if (!this.buttonConfig.buyNow) this.extraBuyNow();
                    },
                    afterRender: () => {
                        if (!this.activeSku) this.setPaypalDisabled();
                    },
                    onInit: () => {
                        __SL_$__(this.buyButton).filter(".product-more-payment-button").html((0, i18n.t)("products.product_details.more_payment_options"));
                    }
                });
                null === (_this$PayPalButton = this.PayPalButton) || void 0 === _this$PayPalButton ? void 0 : _this$PayPalButton.render();
            }
            getDataReportReq() {
                return (0, tradeReport.setPayPalReportReq)({
                    products: this.transProducts(this.products),
                    needReport: () => this.needReport()
                });
            }
            async renderSmartPayment() {
                var _this$buttonConfig2, _this$buttonConfig2$o, _this$SmartPaymentCom;
                this.SmartPaymentComponent = new smart_payment.SmartPayment({
                    props: {
                        domId: this.payPayId,
                        dynamic: null === (_this$buttonConfig2 = this.buttonConfig) || void 0 === _this$buttonConfig2 ? void 0 : null === (_this$buttonConfig2$o = _this$buttonConfig2.originConfig) || void 0 === _this$buttonConfig2$o ? void 0 : _this$buttonConfig2$o.system,
                        styleOptions: {
                            height: __SL_$__(`#${this.payPayId}`).height()
                        }
                    },
                    emitData: {
                        stage: this.stage,
                        product: this.transProducts(this.products)
                    },
                    beforeCreateOrder: async () => {
                        try {
                            const {url: returnUrl, needLogin, abandonedInfo} = await checkout["default"].save(this.transProducts(this.products), {
                                stage: this.stage,
                                query: {
                                    spb: true
                                }
                            });
                            if (needLogin) {
                                window.location.href = returnUrl;
                                return {
                                    valid: false
                                };
                            }
                            const {orderFrom} = state_selector.SL_State.get("checkout.otherInfo") || {};
                            return {
                                abandonedOrderInfo: abandonedInfo,
                                orderFrom: (0, dataAccessor.getSyncData)("orderFrom") || orderFrom,
                                returnUrl,
                                dataReportReq: this.getDataReportReq()
                            };
                        } catch (error) {
                            return {
                                valid: false
                            };
                        }
                    },
                    onToast: ({message}) => this.toast.open(message),
                    onDynamicNotify: () => {
                        if (!this.buttonConfig.buyNow) this.extraBuyNow();
                        __SL_$__(`#${this.payPayId}`).remove();
                        __SL_$__(this.buyButton).filter(".product-more-payment-button").remove();
                    },
                    afterInit: () => {
                        if (!this.activeSku) this.setPaypalDisabled();
                        __SL_$__(this.buyButton).filter(".product-more-payment-button").html((0, i18n.t)("productDetail.morePaymentOptions"));
                    }
                });
                await (null === (_this$SmartPaymentCom = this.SmartPaymentComponent) || void 0 === _this$SmartPaymentCom ? void 0 : _this$SmartPaymentCom.init());
            }
            async initPaypal() {
                if (0 === __SL_$__(`#${this.payPayId}`).length) return;
                this.buttonConfig = window.SL_State.get("productSettleButtonConfig");
                setChannel();
                if ((0, utils.isPaypalGrey)()) await this.renderSmartPayment(); else this.renderPaypal();
                __SL_$__(document).on("click", `#${this.payPayId} .product-button-paypal-preview-mask`, (() => {
                    this.toast.open((0, i18n.t)("products.product_details.link_preview_does_not_support"));
                }));
            }
            extraBuyNow() {
                const buyNow = `<button data-ssr-plugin-pdp-button-buy-now class="buy-now shopline-element-buy-now btn btn-primary btn-lg ${this.buyButton.substr(1)} __sl-custom-track-product-detail-buy-now paypalAddBuyNow">\n        <span class="pdp_button_text fw-bold">${(0, 
                i18n.t)("cart.cart.buy_now")}</span>\n      </button>`;
                const buyNowEl = __SL_$__(buyNow);
                __SL_$__(this.addButton).after(buyNowEl);
                this.bindBuyNow();
                this.setTradeButtonHide(this.activeSku ? !this.activeSku.available : this.spu.soldOut);
                paypal_fallback({
                    id: this.id,
                    el: {
                        buyNow: buyNowEl.get(0)
                    },
                    instance: this
                });
                this.buyLoading = new toast["default"]({
                    duration: 0,
                    target: this.buyButton,
                    type: "loading",
                    className: "product_buy_loading"
                });
                this.buyLoading.close();
            }
            setLoading(button, loading) {
                let dom = this.addButton;
                if ("buy" === button) dom = this.buyButton;
                const loadingName = `${button}Loading`;
                if (loading) {
                    __SL_$__(dom).find(".pdp_button_text").addClass("loading");
                    this[loadingName].open();
                    __SL_$__(`.product_${button}_loading`).find(".mp-loading__circular path").css({
                        stroke: __SL_$__(dom).css("color")
                    });
                } else {
                    this[loadingName].close();
                    __SL_$__(dom).find(".pdp_button_text").removeClass("loading");
                }
                this[`${loadingName}Status`] = loading;
            }
            handleATCSuccess() {
                const cartOpenType = window.SL_State.get("theme.settings.cart_open_type");
                const addBtnColor = __SL_$__(this.addButton).css("color");
                if ("cartremain" === cartOpenType) {
                    const addLoadingInstance = this.addLoading;
                    if (addLoadingInstance && addLoadingInstance.showSuccessAni) addLoadingInstance.showSuccessAni({
                        loadingColor: addBtnColor
                    }, (() => {
                        var _this$onAddSuccess;
                        null === (_this$onAddSuccess = this.onAddSuccess) || void 0 === _this$onAddSuccess ? void 0 : _this$onAddSuccess.call(this);
                    })); else console.error(`judgeCartOpenTypeByATCStatus: add loading instance ${addLoadingInstance}`);
                } else {
                    var _this$onAddSuccess2;
                    null === (_this$onAddSuccess2 = this.onAddSuccess) || void 0 === _this$onAddSuccess2 ? void 0 : _this$onAddSuccess2.call(this);
                }
            }
            initEvent() {
                const $this = this;
                __SL_$__(this.addButton).on("click", (0, debounce["default"])(300, (() => {
                    var _window$HdSdk3, _window$HdSdk3$shopTr, _this$activeSku3, _this$sku3, _this$spu3, _this$spu3$sortationL, _this$spu3$sortationL2, _this$spu4, _this$spu4$sortationL, _this$spu4$sortationL2;
                    if ($this.isPreview()) {
                        this.toast.open((0, i18n.t)("products.product_details.link_preview_does_not_support"));
                        return;
                    }
                    if (!this.activeSku) {
                        this.toast.open((0, i18n.t)("products.product_list.select_product_all_options"));
                        return;
                    }
                    if (this.addLoadingStatus) return;
                    this.setLoading("add", true);
                    const {spuSeq: spuId, skuSeq: skuId, name, price} = this.activeSku;
                    const {num} = this;
                    const dataId = null === (_window$HdSdk3 = window.HdSdk) || void 0 === _window$HdSdk3 ? void 0 : null === (_window$HdSdk3$shopTr = _window$HdSdk3.shopTracker) || void 0 === _window$HdSdk3$shopTr ? void 0 : _window$HdSdk3$shopTr.getDataId();
                    const eventID = (0, tool.getEventID)();
                    const hdReportData = {
                        page: this.page,
                        spuId,
                        skuId,
                        num,
                        price,
                        name,
                        modalType: this.modalType,
                        variant: getVariant(null === (_this$activeSku3 = this.activeSku) || void 0 === _this$activeSku3 ? void 0 : _this$activeSku3.skuAttributeIds, null === (_this$sku3 = this.sku) || void 0 === _this$sku3 ? void 0 : _this$sku3.skuAttributeMap),
                        collectionId: null === (_this$spu3 = this.spu) || void 0 === _this$spu3 ? void 0 : null === (_this$spu3$sortationL = _this$spu3.sortationList) || void 0 === _this$spu3$sortationL ? void 0 : null === (_this$spu3$sortationL2 = _this$spu3$sortationL[0]) || void 0 === _this$spu3$sortationL2 ? void 0 : _this$spu3$sortationL2.sortationId,
                        collectionName: null === (_this$spu4 = this.spu) || void 0 === _this$spu4 ? void 0 : null === (_this$spu4$sortationL = _this$spu4.sortationList) || void 0 === _this$spu4$sortationL ? void 0 : null === (_this$spu4$sortationL2 = _this$spu4$sortationL[0]) || void 0 === _this$spu4$sortationL2 ? void 0 : _this$spu4$sortationL2.sortationName,
                        position: this.position,
                        dataId,
                        eventID,
                        cartId: this.cartId
                    };
                    window.SL_EventBus.emit(globalEvent.ADD_TO_CART, {
                        spuId,
                        skuId,
                        num,
                        price,
                        name,
                        eventID: `addToCart${eventID}`,
                        reportParamsExt: {
                            dataId,
                            eventName: "AddToCart"
                        },
                        error: (...e) => {
                            (0, product_button_report.addToCartHdReport)({
                                ...hdReportData,
                                event_status: 0
                            });
                            this.onAddError(...e);
                        },
                        success: () => {
                            var _this$activeSku4, _this$sku4;
                            setChannel();
                            (0, product_button_report.addToCartHdReport)({
                                ...hdReportData,
                                event_status: 1
                            });
                            (0, product_button_report.addToCartThirdReport)({
                                spuId,
                                name,
                                price,
                                skuId,
                                num,
                                eventID,
                                variant: getVariant(null === (_this$activeSku4 = this.activeSku) || void 0 === _this$activeSku4 ? void 0 : _this$activeSku4.skuAttributeIds, null === (_this$sku4 = this.sku) || void 0 === _this$sku4 ? void 0 : _this$sku4.skuAttributeMap)
                            });
                            this.handleATCSuccess();
                        },
                        complete: () => {
                            this.setLoading("add", false);
                        }
                    });
                })));
                $this.bindBuyNow();
            }
            bindBuyNow() {
                let dataId;
                let eventID;
                const stage = checkoutEnd.getUuidAndMonitorCheckoutEnd("trade:goToCheckout:report", (status => {
                    var _this$activeSku5, _this$sku5, _this$spu5, _this$spu5$sortationL, _this$spu5$sortationL2, _this$spu6, _this$spu6$sortationL, _this$spu6$sortationL2;
                    const {name, price, spuSeq: spuId, skuSeq: skuId} = this.activeSku;
                    const {num} = this;
                    const hdReportData = {
                        page: this.page,
                        spuId,
                        skuId,
                        num,
                        price,
                        name,
                        modalType: this.modalType,
                        variant: getVariant(null === (_this$activeSku5 = this.activeSku) || void 0 === _this$activeSku5 ? void 0 : _this$activeSku5.skuAttributeIds, null === (_this$sku5 = this.sku) || void 0 === _this$sku5 ? void 0 : _this$sku5.skuAttributeMap),
                        collectionId: null === (_this$spu5 = this.spu) || void 0 === _this$spu5 ? void 0 : null === (_this$spu5$sortationL = _this$spu5.sortationList) || void 0 === _this$spu5$sortationL ? void 0 : null === (_this$spu5$sortationL2 = _this$spu5$sortationL[0]) || void 0 === _this$spu5$sortationL2 ? void 0 : _this$spu5$sortationL2.sortationId,
                        collectionName: null === (_this$spu6 = this.spu) || void 0 === _this$spu6 ? void 0 : null === (_this$spu6$sortationL = _this$spu6.sortationList) || void 0 === _this$spu6$sortationL ? void 0 : null === (_this$spu6$sortationL2 = _this$spu6$sortationL[0]) || void 0 === _this$spu6$sortationL2 ? void 0 : _this$spu6$sortationL2.sortationName,
                        isMorePay: __SL_$__(this.addButton).hasClass("product-more-payment-button"),
                        position: this.position,
                        dataId,
                        eventID,
                        cartId: this.cartId
                    };
                    (0, product_button_report.buyNowHdReport)({
                        ...hdReportData,
                        event_status: status
                    });
                }));
                const $this = this;
                __SL_$__(this.buyButton).on("click", (0, debounce["default"])(300, (() => {
                    var _window$HdSdk4, _window$HdSdk4$shopTr;
                    if ($this.isPreview()) {
                        this.toast.open((0, i18n.t)("products.product_details.link_preview_does_not_support"));
                        return;
                    }
                    if (!this.activeSku) {
                        this.toast.open((0, i18n.t)("products.product_list.select_product_all_options"));
                        return;
                    }
                    this.setLoading("buy", true);
                    const product = [ {
                        productSeq: this.activeSku.spuSeq,
                        productSku: this.activeSku.skuSeq,
                        productNum: this.num,
                        productPrice: this.activeSku.price,
                        productName: this.activeSku.name
                    } ];
                    const {name, price, spuSeq: spuId, skuSeq: skuId} = this.activeSku;
                    const {num} = this;
                    setChannel();
                    dataId = null === (_window$HdSdk4 = window.HdSdk) || void 0 === _window$HdSdk4 ? void 0 : null === (_window$HdSdk4$shopTr = _window$HdSdk4.shopTracker) || void 0 === _window$HdSdk4$shopTr ? void 0 : _window$HdSdk4$shopTr.getDataId();
                    eventID = (0, tool.getEventID)();
                    checkout["default"].jump(product, {
                        stage,
                        reportParamsExt: {
                            dataId,
                            eventId: `addToCart${eventID}`,
                            eventName: "AddToCart"
                        },
                        needReport: () => {
                            var _this$activeSku6, _this$sku6;
                            return (0, product_button_report.addToCartThirdReport)({
                                eventID,
                                spuId,
                                name,
                                price,
                                skuId,
                                num,
                                variant: getVariant(null === (_this$activeSku6 = this.activeSku) || void 0 === _this$activeSku6 ? void 0 : _this$activeSku6.skuAttributeIds, null === (_this$sku6 = this.sku) || void 0 === _this$sku6 ? void 0 : _this$sku6.skuAttributeMap)
                            });
                        }
                    }).catch((() => {
                        this.setLoading("buy", false);
                    }));
                })));
            }
            setActiveSku(sku) {
                this.activeSku = sku ? {
                    ...sku,
                    name: this.spu.title
                } : null;
                this.setPayPalProduct();
                this.setPaypalDisabled();
                if (sku) this.setTradeButtonHide(sku.soldOut);
            }
            setActiveSkuNum(num) {
                this.num = num;
                if (!this.activeSku) return;
                this.setPayPalProduct();
            }
            setPaypalDisabled() {
                var _this$PayPalButton3, _this$SmartPaymentCom3;
                if (!this.activeSku) {
                    var _this$PayPalButton2, _this$SmartPaymentCom2;
                    null === (_this$PayPalButton2 = this.PayPalButton) || void 0 === _this$PayPalButton2 ? void 0 : _this$PayPalButton2.setDisabled(true);
                    null === (_this$SmartPaymentCom2 = this.SmartPaymentComponent) || void 0 === _this$SmartPaymentCom2 ? void 0 : _this$SmartPaymentCom2.setDisabled(true);
                    return;
                }
                null === (_this$PayPalButton3 = this.PayPalButton) || void 0 === _this$PayPalButton3 ? void 0 : _this$PayPalButton3.setDisabled(false);
                null === (_this$SmartPaymentCom3 = this.SmartPaymentComponent) || void 0 === _this$SmartPaymentCom3 ? void 0 : _this$SmartPaymentCom3.setDisabled(false);
            }
            get products() {
                var _this$activeSku7, _this$activeSku8, _this$spu7, _this$activeSku9;
                return [ {
                    spuId: null === (_this$activeSku7 = this.activeSku) || void 0 === _this$activeSku7 ? void 0 : _this$activeSku7.spuSeq,
                    skuId: null === (_this$activeSku8 = this.activeSku) || void 0 === _this$activeSku8 ? void 0 : _this$activeSku8.skuSeq,
                    num: this.num,
                    name: null === (_this$spu7 = this.spu) || void 0 === _this$spu7 ? void 0 : _this$spu7.title,
                    price: null === (_this$activeSku9 = this.activeSku) || void 0 === _this$activeSku9 ? void 0 : _this$activeSku9.price
                } ];
            }
            setPayPalProduct() {
                var _this$PayPalButton4;
                if (0 === __SL_$__(`#${this.payPayId}`).length || !this.activeSku) return;
                null === (_this$PayPalButton4 = this.PayPalButton) || void 0 === _this$PayPalButton4 ? void 0 : _this$PayPalButton4.setProducts(this.products);
            }
            setTradeButtonHide(show) {
                var _SL_$__2, _SL_$__$filter2;
                if (!show) {
                    var _SL_$__, _SL_$__$filter;
                    __SL_$__(this.addButton).removeClass("hide");
                    __SL_$__(this.buyButton).removeClass("hide");
                    null === (_SL_$__ = __SL_$__(`#${this.payPayId}`)) || void 0 === _SL_$__ ? void 0 : _SL_$__.removeClass("hide");
                    null === (_SL_$__$filter = __SL_$__(this.buyButton).filter(".product-more-payment-button")) || void 0 === _SL_$__$filter ? void 0 : _SL_$__$filter.removeClass("hide");
                    __SL_$__(this.soldOutRoot).addClass("hide");
                    return;
                }
                __SL_$__(this.addButton).addClass("hide");
                __SL_$__(this.buyButton).addClass("hide");
                null === (_SL_$__2 = __SL_$__(`#${this.payPayId}`)) || void 0 === _SL_$__2 ? void 0 : _SL_$__2.addClass("hide");
                null === (_SL_$__$filter2 = __SL_$__(this.buyButton).filter(".product-more-payment-button")) || void 0 === _SL_$__$filter2 ? void 0 : _SL_$__$filter2.addClass("hide");
                __SL_$__(this.soldOutRoot).removeClass("hide");
            }
            isPreview() {
                const currentUrl = window.location.pathname;
                return /^[/（]preview[/）].*/.test(currentUrl);
            }
        }
        const product_button = ButtonEvent;
    },
    "./src/assets/product/detail/js/product-preview.js": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
        "use strict";
        __webpack_require__.d(__webpack_exports__, {
            default: () => initPreview
        });
        var DataWatcher = __webpack_require__("../shared/browser/utils/sku/DataWatcher.js");
        var sku_change = __webpack_require__("../shared/browser/events/product/sku-change/index.js");
        var api_logger = __webpack_require__("../shared/browser/events/utils/api-logger.js");
        const EVENT_NAME = "Product::SkuChanged";
        const logger = (0, api_logger["default"])(EVENT_NAME);
        const external = window.Shopline && window.Shopline.event;
        const skuChanged = data => {
            if (external) {
                logger.info(`[emit]`, data);
                return external.emit(EVENT_NAME, {
                    data,
                    onSuccess: result => {
                        logger.info("success", result);
                    },
                    onError: error => {
                        logger.error(error);
                    }
                });
            }
        };
        skuChanged.apiName = EVENT_NAME;
        const sku_changed = skuChanged;
        var preview_init = __webpack_require__("../shared/browser/events/product/preview-init/index.js");
        var view_content = __webpack_require__("../shared/browser/events/data-report/view-content/index.js");
        var newCurrency = __webpack_require__("../shared/browser/utils/newCurrency/index.js");
        var product_quantity = __webpack_require__("./src/assets/product/detail/js/product-quantity.js");
        var product_button = __webpack_require__("./src/assets/product/detail/js/product-button.js");
        var product_info = __webpack_require__("./src/assets/product/commons/js/product-info.js");
        var js = __webpack_require__("../shared/browser/components/hbs/productImages/js/index.js");
        var getYouTubeCover = __webpack_require__("../shared/browser/components/hbs/shared/utils/getYouTubeCover.js");
        var img_size = __webpack_require__("../shared/browser/utils/img-size.js");
        var imgUrl = __webpack_require__("../shared/browser/components/hbs/shared/utils/imgUrl.js");
        class ProductImagesWithFlattenAndMobileThumb extends js["default"] {
            constructor(...args) {
                const {selectorId} = args[0] || {};
                const mobilePrefixCls = `.execute_productImages_mobile_${selectorId}`;
                const productMobileHideThumbnailImage = "hide" === __SL_$__(`.product_productMobileThumbnailImageHide_${selectorId}`).val();
                const config = {
                    ...args[0],
                    swiperConfig: {
                        mobile: {
                            loop: false
                        }
                    }
                };
                if (!productMobileHideThumbnailImage) config.swiperConfig = {
                    mobile: {
                        loop: false,
                        thumbs: {
                            swiper: {
                                el: `${mobilePrefixCls} .product_mobile_thumbnail_container .swiper-container`,
                                spaceBetween: 10,
                                slidesPerView: 3,
                                watchSlidesVisibility: true,
                                slidesPerGroup: 3,
                                navigation: {
                                    nextEl: `.thumbnail_button_next_${selectorId}`,
                                    prevEl: `.thumbnail_button_prev_${selectorId}`
                                }
                            }
                        }
                    }
                };
                super(config);
                this.productImageIsFlatten = "flatten" === __SL_$__(`.product_productImageShowStyle_${selectorId}`).val();
                this.productPcSkuImageFlatten = __SL_$__(this.id).find(".product_pc_skuImage_flatten");
                this.productPcNormalItemFlatten = __SL_$__(this.id).find(".normalItem");
                this.productMobileHideThumbnailImage = productMobileHideThumbnailImage;
                if (this.productMobileHideThumbnailImage && this.mobileSwiper) {
                    var _this$mobileSwiper, _this$mobileSwiper$sl;
                    const index = __SL_$__(`${this.mobileId}`).data("initial-slide") || 0;
                    const total = null === (_this$mobileSwiper = this.mobileSwiper) || void 0 === _this$mobileSwiper ? void 0 : null === (_this$mobileSwiper$sl = _this$mobileSwiper.slidesGrid) || void 0 === _this$mobileSwiper$sl ? void 0 : _this$mobileSwiper$sl.length;
                    this.updatePagination(index, total);
                    this.initMobileNormalPagination();
                }
                if (!this.productMobileHideThumbnailImage && this.mobileSwiper) this.handleInitThumbnailImageBySkuImage();
                if (this.productImageIsFlatten && !this.mobileSwiper && this.productImageScale) {
                    this.initFlattenPcPhotoSwipe();
                    this.initFlattenPcSkuPhotoSwiper();
                }
                if (this.productImageIsFlatten && !this.mobileSwiper) this.handleVideoAutoPlay();
            }
            handleInitThumbnailImageBySkuImage() {
                var _this$mobileSwiper2, _SL_$__$find;
                const index = null === (_this$mobileSwiper2 = this.mobileSwiper) || void 0 === _this$mobileSwiper2 ? void 0 : _this$mobileSwiper2.activeIndex;
                const firstThumbnail = null === (_SL_$__$find = __SL_$__(`${this.mobileId} .product_mobile_thumbnail_container`).find(".swiper-slide")) || void 0 === _SL_$__$find ? void 0 : _SL_$__$find.eq(index);
                const activeCls = "noShowActive";
                if (__SL_$__(`${this.mobileId}`).find(".product_m_skuImageBox").length > 0) {
                    firstThumbnail.addClass(activeCls);
                    firstThumbnail.one("click", (() => {
                        firstThumbnail.removeClass(activeCls);
                        super.handleMobileSkuImage(false);
                    }));
                } else firstThumbnail.removeClass(activeCls);
            }
            updatePagination(currentIndex, total) {
                const {mobileId} = this;
                const prevDom = __SL_$__(`${mobileId} .normal-thumbnail-button-prev`);
                const nextDom = __SL_$__(`${mobileId} .normal-thumbnail-button-next`);
                const content = __SL_$__(`${mobileId} .pagination-content`);
                content.html(`${currentIndex + 1}/${total}`);
                prevDom.removeClass("disabled");
                nextDom.removeClass("disabled");
                if (0 === currentIndex) {
                    prevDom.addClass("disabled");
                    return;
                }
                if (currentIndex === total - 1) nextDom.addClass("disabled");
            }
            initMobileNormalPagination() {
                const {mobileId, mobileSwiper} = this;
                null === mobileSwiper || void 0 === mobileSwiper ? void 0 : mobileSwiper.on("slideChange", (swiper => {
                    var _swiper$slidesGrid;
                    const index = null === swiper || void 0 === swiper ? void 0 : swiper.realIndex;
                    const total = null === swiper || void 0 === swiper ? void 0 : null === (_swiper$slidesGrid = swiper.slidesGrid) || void 0 === _swiper$slidesGrid ? void 0 : _swiper$slidesGrid.length;
                    this.updatePagination(index, total);
                }));
                __SL_$__(`${mobileId}`).on("click", ".normal-thumbnail-button-prev", (() => {
                    mobileSwiper.slidePrev(200);
                })).on("click", ".normal-thumbnail-button-next", (() => {
                    mobileSwiper.slideNext(200);
                }));
            }
            initFlattenPcPhotoSwipe() {
                const self = this;
                this.updateFlattenPhotoSwipeItems();
                __SL_$__(`${this.id}`).on("click", ".imageItem", (function() {
                    const realIndex = __SL_$__(this).data("index");
                    self.handlePhotoSwiper(self.slideItems, realIndex);
                }));
            }
            initFlattenPcSkuPhotoSwiper() {
                const self = this;
                __SL_$__(`${this.id}`).on("click", ".product_pc_skuImage_flatten", (function() {
                    const items = [ {
                        src: __SL_$__(this).find(".product_photoSwipe_image").attr("data-photoswipe-src"),
                        w: 0,
                        h: 0,
                        el: __SL_$__(this)[0]
                    } ];
                    self.handlePhotoSwiper(items, 0, false);
                }));
            }
            toggleFlattenPcSkuImage(isShow, skuImageUrl) {
                const skuImageDom = this.productPcSkuImageFlatten;
                const parentShowEmptyImageEle = skuImageDom.parent(".product-detail-empty-image");
                if (skuImageDom.hasClass("imageItemError")) skuImageDom.removeClass("imageItemError");
                if (isShow && skuImageUrl) {
                    var _imgSize;
                    this.handleVideoPause(skuImageUrl);
                    const ratio = (null === (_imgSize = (0, img_size["default"])(skuImageUrl)) || void 0 === _imgSize ? void 0 : _imgSize.ratio) || "100%";
                    const imgDom = skuImageDom.find("img");
                    if (imgDom.length > 0) imgDom.remove();
                    skuImageDom.css("paddingBottom", ratio).html(`<img ${window.__PRELOAD_STATE__.imgNoReferrerSwitch ? 'referrerpolicy="same-origin"' : ""}  onerror="this.onerror=null;this.parentElement.className+=' imageItemError';" class="product_photoSwipe_image" data-photoswipe-src=${(0, 
                    imgUrl["default"])(skuImageUrl, {
                        width: 1800
                    })} src=${skuImageUrl} />`);
                    if (parentShowEmptyImageEle.length) parentShowEmptyImageEle.css({
                        paddingBottom: ratio
                    });
                    skuImageDom.show();
                    this.productPcNormalItemFlatten.hide();
                    this.productShowSkuCover = true;
                    this.handleVideoAutoPlay();
                } else if (!isShow) {
                    if (parentShowEmptyImageEle.length) parentShowEmptyImageEle.css({
                        paddingBottom: ""
                    });
                    this.productShowSkuCover = false;
                    this.handleVideoAutoPlay();
                    skuImageDom.hide().empty();
                    this.productPcNormalItemFlatten.show();
                }
            }
            skuImageChange(img, source) {
                if (!this.verifySource(null === source || void 0 === source ? void 0 : source.app)) return;
                const {url} = img || {};
                if (this.productImageIsFlatten && !this.mobileSwiper) {
                    if (url) this.toggleFlattenPcSkuImage(true, url); else this.toggleFlattenPcSkuImage(false);
                    return;
                }
                super.skuImageChange(img, source);
                if (this.mobileSwiper) this.handleInitThumbnailImageBySkuImage();
            }
            handleMobileThumbArrow(thumbnailContainer, list) {
                if (list.length > 3) {
                    thumbnailContainer.find(".thumbnail-button-prev").css("visibility", "visible");
                    thumbnailContainer.find(".thumbnail-button-next").css("visibility", "visible");
                } else {
                    thumbnailContainer.find(".thumbnail-button-prev").css("visibility", "hidden");
                    thumbnailContainer.find(".thumbnail-button-next").css("visibility", "hidden");
                }
            }
            updateMobileThumbsImage(list) {
                const thumbnailContainer = __SL_$__(`${this.mobileId} .product_mobile_thumbnail_container`);
                if (!(null !== list && void 0 !== list && list.length) || list.length <= 1) {
                    thumbnailContainer.hide();
                    return;
                }
                thumbnailContainer.show();
                thumbnailContainer.find(".swiper-wrapper").empty().append(list.map((item => {
                    var _imgSize2;
                    const ratio = (null === (_imgSize2 = (0, img_size["default"])(item.resource)) || void 0 === _imgSize2 ? void 0 : _imgSize2.ratio) || "100%";
                    let videoCover;
                    let videoRatio;
                    if ("VIDEO" === item.type) {
                        var _imgSize3;
                        const isYoutubeVideo = (0, js.isYoutube)(item.resource);
                        const {middle: cover} = (0, getYouTubeCover["default"])(item.resource);
                        videoRatio = isYoutubeVideo ? "56.25%" : (null === (_imgSize3 = (0, img_size["default"])(item.cover)) || void 0 === _imgSize3 ? void 0 : _imgSize3.ratio) || "56.25%";
                        videoCover = isYoutubeVideo ? cover : item.cover;
                    }
                    const boxPb = "VIDEO" === item.type ? videoRatio : ratio;
                    const domItem = "VIDEO" === item.type ? `<img ${window.__PRELOAD_STATE__.imgNoReferrerSwitch ? 'referrerpolicy="same-origin"' : ""}  class="lozad" data-sizes="auto" data-src="${videoCover}" alt="">` : `<img ${window.__PRELOAD_STATE__.imgNoReferrerSwitch ? 'referrerpolicy="same-origin"' : ""}  class="lozad" data-sizes="auto" data-src="${item.resource}" alt="">`;
                    return `\n          <div class="swiper-slide">\n            <div class="swiper-slide-item" style="padding-bottom:${boxPb}">${domItem}</div>\n          </div>`;
                })));
                this.handleMobileThumbArrow(thumbnailContainer, list);
            }
            updateMobileThumbArrow(list) {
                const paginationContainer = __SL_$__(`${this.mobileId} .product_mobile_thumbnail_pagination`);
                if (list.length > 1) paginationContainer.show(); else paginationContainer.hide();
            }
            updateImageList(list, activeIndex, source) {
                if (!this.verifySource(null === source || void 0 === source ? void 0 : source.app)) return;
                if (this.productImageIsFlatten) {
                    this.updateFlattenImageList(list);
                    if (!this.mobileSwiper) this.updateFlattenPhotoSwipeItems();
                }
                if (!this.productMobileHideThumbnailImage && this.mobileSwiper) this.updateMobileThumbsImage(list);
                super.updateImageList(list, activeIndex, source);
                if (this.productMobileHideThumbnailImage && this.mobileSwiper) {
                    this.updateMobileThumbArrow(list);
                    this.updatePagination(0, null === list || void 0 === list ? void 0 : list.length);
                    this.initMobileNormalPagination();
                }
            }
            updateFlattenPhotoSwipeItems() {
                const items = [];
                __SL_$__(`${this.id}`).find(".imageItem,.videoItem").each(((index, item) => {
                    const realIndex = __SL_$__(item).data("index");
                    const imgEl = __SL_$__(item).find(".product_photoSwipe_image");
                    const size = __SL_$__(item).attr("data-natural-size");
                    const transSize = size ? size.split("x") : null;
                    items[realIndex] = {
                        src: imgEl.attr("data-photoswipe-src"),
                        w: transSize ? parseInt(transSize[0], 10) : imgEl.innerWidth(),
                        h: transSize ? parseInt(transSize[1], 10) : imgEl.innerHeight(),
                        el: item
                    };
                }));
                this.slideItems = items;
            }
            galleryAfterChange(...args) {
                if (this.productImageIsFlatten && !this.mobileSwiper) {
                    const {currItem, getCurrentIndex} = args[0];
                    const currentIndex = getCurrentIndex();
                    if (0 === currentIndex && "none" === this.productPcNormalItemFlatten.css("display")) {
                        this.productPcNormalItemFlatten.show();
                        this.productPcSkuImageFlatten.hide();
                    }
                    currItem.el.scrollIntoView({
                        behavior: "smooth",
                        block: "nearest",
                        inline: "nearest"
                    });
                }
                super.galleryAfterChange(...args);
            }
            updateFlattenDom() {
                this.productPcSkuImageFlatten = __SL_$__(this.id).find(".product_pc_skuImage_flatten");
                this.productPcNormalItemFlatten = __SL_$__(this.id).find(".normalItem");
            }
            updateFlattenImageList(list) {
                const container = __SL_$__(`${this.id}.product_productImages_tile`).empty();
                if (null !== list && void 0 !== list && list.length) {
                    container.removeClass("product-detail-empty-image");
                    const flattenFirstItem = __SL_$__(`<div class="row row-cols-md-1 gx-md-4 flattenFirstItem">\n          <div class="flattenFirstItemWrapper">\n            <div class="normalItem"></div>\n            <div class="product_pc_skuImage_flatten"></div>\n          </div>\n        </div>`);
                    const exceptFlattenItemList = __SL_$__(`<div class="exceptFirstMediaList row row-cols-md-2 gx-md-4"></div>`);
                    const firstCol = __SL_$__(`<div class="product_images_firstCol"></div>`);
                    const secondCol = __SL_$__(`<div class="product_images_secondCol"></div>`);
                    list.forEach(((item, index) => {
                        let dom;
                        if ("VIDEO" === item.type) {
                            var _imgSize4;
                            const {middle: cover, videoId} = (0, getYouTubeCover["default"])(item.resource);
                            const isYoutubeVideo = (0, js.isYoutube)(item.resource);
                            const photoswipeCoverSrc = isYoutubeVideo ? cover : item.cover;
                            dom = `<div class="videoItem" data-index="${index}" style="padding-bottom: ${isYoutubeVideo ? "56.25%" : (null === (_imgSize4 = (0, 
                            img_size["default"])(item.cover)) || void 0 === _imgSize4 ? void 0 : _imgSize4.ratio) || "56.25%"}">\n          ${isYoutubeVideo ? `<div class="product_youTubeVideoBox" data-video-id="${videoId}"></div>` : `<video class="product_slVideoContainer" disablepictureinpicture controls webkit-playsinline playsinline controlslist="nodownload nofullscreen" poster="${item.cover}">\n                  <source src="${item.resource}" type="video/mp4">\n                </video>`}\n          <img ${window.__PRELOAD_STATE__.imgNoReferrerSwitch ? 'referrerpolicy="same-origin"' : ""}  class="product_photoSwipe_image" data-photoswipe-src="${photoswipeCoverSrc}" src="${photoswipeCoverSrc}" alt="">\n          </div>`;
                        } else {
                            const {ratio} = (0, img_size["default"])(item.resource);
                            dom = `<div class="imageItem" style="padding-bottom: ${ratio}" data-index="${index}"><img ${window.__PRELOAD_STATE__.imgNoReferrerSwitch ? 'referrerpolicy="same-origin"' : ""}  onerror="this.onerror=null;this.parentElement.className+=' imageItemError';" data-photoswipe-src="${item.resource}" class="product_photoSwipe_image" src="${item.resource}" alt=""></div>`;
                        }
                        if (0 === index) {
                            flattenFirstItem.find(".normalItem").append(dom);
                            return;
                        }
                        if ((index - 1) % 2) secondCol.append(dom); else firstCol.append(dom);
                    }));
                    exceptFlattenItemList.append(firstCol, secondCol);
                    container.append(flattenFirstItem, exceptFlattenItemList);
                } else {
                    container.addClass("product-detail-empty-image");
                    container.append(`<div class="product_pc_skuImage_flatten" style="width: 100%; position:absolute;"></div>`);
                }
                this.updateFlattenDom();
            }
            handleVideoPause() {
                this.handleUnifyVideoStatus(this.pcVideo, "pc", "pause");
                this.handleUnifyVideoStatus(this.mobileVideo, "mobile", "pause");
            }
            handleVideoAutoPlay(video) {
                if (this.mobileSwiper || !this.productImageIsFlatten) {
                    super.handleVideoAutoPlay(video);
                    return;
                }
                if (Array.isArray(this.mediaList) && this.productVideoAutoplay) if (this.mediaList[0] && "VIDEO" !== this.mediaList[0].type || !this.productShowSkuCover) this.handleUnifyVideoStatus(this.pcVideo, "pc", "play");
            }
        }
        const product_swiper = ProductImagesWithFlattenAndMobileThumb;
        var debounce = __webpack_require__("./src/assets/commons/utils/debounce.js");
        var isMobile = __webpack_require__("./src/assets/commons/utils/isMobile.js");
        function setPosition({id, container = window, offsetTop = 0}) {
            const box = __SL_$__(`#product-detail-sticky_${id}`);
            if (!box.get(0)) return;
            let mainView = box.children(".sticky-main-view");
            mainView = mainView.length ? mainView : box;
            const height = mainView.height();
            const wHeight = __SL_$__(container).outerHeight();
            if (height + offsetTop > wHeight) box.css("top", -(height - wHeight)); else box.css("top", offsetTop);
        }
        function listenPosition({id, container = window, offsetTop = 0}) {
            setPosition({
                id,
                container,
                offsetTop
            });
            const setPositionDebounce = (0, debounce["default"])(300, (() => {
                setPosition({
                    id,
                    container,
                    offsetTop
                });
            }));
            __SL_$__(window).on("resize", setPositionDebounce);
            if (!(0, isMobile["default"])()) __SL_$__(container).one("scroll", setPositionDebounce);
            return function() {
                __SL_$__(window).off("resize", setPositionDebounce);
                __SL_$__(container).off("scroll", setPositionDebounce);
            };
        }
        const layout = setPosition;
        var sku_trade = __webpack_require__("./src/assets/product/detail/js/sku-trade.js");
        var utils_form = __webpack_require__("../shared/browser/utils/form/index.js");
        var i18n = __webpack_require__("../shared/browser/utils/i18n.js");
        var libs = __webpack_require__("./node_modules/@yy/sl-mc/libs/index.js");
        function firstAvailableSku(spu, skuList) {
            if (spu && spu.soldOut) return skuList && skuList[0] || null;
            return skuList.find((sku => sku.available)) || skuList && skuList[0] || null;
        }
        var lodash_debounce = __webpack_require__("../shared/browser/node_modules/lodash/debounce.js");
        var debounce_default = __webpack_require__.n(lodash_debounce);
        var get = __webpack_require__("../shared/browser/node_modules/lodash/get.js");
        var get_default = __webpack_require__.n(get);
        var pageMapping = __webpack_require__("../shared/browser/utils/report/pageMapping.js");
        var page = __webpack_require__("../shared/browser/utils/report/page.js");
        __webpack_require__("../shared/browser/report/customArgs/index.js");
        const {formatCurrency} = newCurrency["default"];
        const alias = window.SL_State.get("templateAlias");
        const eventIdMap = {
            ProductsDetail: "60006253",
            Home: "60006252"
        };
        const unsafeInputMap = {
            email: 101,
            mobile: 110,
            message: 115,
            name: 102,
            region: 104
        };
        const inputMap = {
            email: 102,
            mobile: 105,
            message: 103,
            name: 104,
            region: 106
        };
        const unsafePage = pageMapping["default"][alias];
        const inquiry_modal_report_page = page["default"][alias];
        const eventId = eventIdMap[alias];
        function hdReport(options) {
            window.HdSdk && window.HdSdk.shopTracker.collect({
                page: inquiry_modal_report_page,
                module: 119,
                ...options
            });
        }
        function unsafeHdReport(options) {
            window.HdSdk && window.HdSdk.shopTracker.report(eventId, {
                page: unsafePage,
                custom_component: "167",
                ...options
            });
        }
        function concatVal(obj) {
            return Object.entries(obj || {}).reduce(((prev, cur) => {
                if (cur[1]) return `${prev}${cur[0]}:${cur[1]}\n`;
                return prev;
            }), "");
        }
        function leadReport({spu, sku, email, phone, message, name, region}) {
            const {title, spuSeq: spuId, sortationList} = spu || {};
            const {price, skuSeq: skuId} = sku || {};
            const currency = window.SL_State.get("storeInfo.currency");
            const value = formatCurrency(price);
            window.SL_EventBus.emit("global:thirdPartReport", {
                FBPixel: [ [ "track", "Lead", {
                    content_name: title,
                    content_ids: spuId,
                    content_type: "product_group",
                    currency,
                    value
                } ] ],
                GAAds: [ [ "event", "conversion", {
                    value,
                    currency
                }, "SUBMIT-LEAD-FORM" ] ],
                GARemarketing: [ [ "event", "generate_lead", {
                    ecomm_prodid: window.SL_GetReportArg("GAR", "sku_id", skuId),
                    ecomm_pagetype: "product",
                    ecomm_totalvalue: value,
                    ecomm_category: get_default()(sortationList, "[0].sortationId"),
                    ecomm_pcat: get_default()(sortationList, "[0].sortationName")
                } ] ],
                GAR: [ [ "event", "generate_lead", {
                    value,
                    items: [ {
                        id: window.SL_GetReportArg("GAR", "sku_id", skuId),
                        google_business_vertical: "retail"
                    } ]
                } ] ],
                GA: [ [ "event", "generate_lead", {
                    value,
                    currency
                } ] ],
                GA4: [ [ "event", "generate_lead", {
                    value,
                    currency
                } ] ]
            });
            const inputBoxVal = concatVal({
                Message: message,
                Name: name,
                "Country/Region": region
            });
            hdReport({
                component: 101,
                event_name: "Lead",
                content_name: title,
                content_id: spuId,
                currency,
                value,
                input_box_val: inputBoxVal,
                user_data: {
                    em: email,
                    ph: phone
                }
            });
            unsafeHdReport({
                event_name: "145",
                product_id: spuId,
                product_name: title,
                product_price: value,
                variantion_id: skuId,
                phone,
                email,
                input_box_val: inputBoxVal
            });
        }
        function cancelReport({spu, sku, email, phone, name, message, region}) {
            const {title, spuSeq: spuId} = spu || {};
            const {price, skuSeq: skuId} = sku || {};
            const value = formatCurrency(price);
            const currency = window.SL_State.get("storeInfo.currency");
            const inputBoxVal = concatVal({
                Message: message,
                Name: name,
                "Country/Region": region
            });
            hdReport({
                component: 107,
                action_type: 102,
                content_name: title,
                content_id: spuId,
                currency,
                value,
                input_box_val: inputBoxVal,
                user_data: {
                    em: email,
                    ph: phone
                }
            });
            unsafeHdReport({
                event_name: "146",
                product_id: spuId,
                product_name: title,
                product_price: value,
                variantion_id: skuId,
                phone,
                email,
                input_box_val: inputBoxVal
            });
        }
        function viewReport() {
            hdReport({
                component: -999,
                action_type: 108
            });
            unsafeHdReport({
                event_name: "109"
            });
            unsafeHdReport({
                event_name: "120"
            });
        }
        function inputReport({name, value}) {
            hdReport({
                action_type: 103,
                component: inputMap[name],
                input_box_val: value
            });
            unsafeHdReport({
                event_name: "133",
                input_box: unsafeInputMap[name],
                input_box_val: value
            });
        }
        const debounceInput = {
            email: debounce_default()((value => inputReport({
                value,
                name: "email"
            })), 1e3),
            mobile: debounce_default()((value => inputReport({
                value,
                name: "mobile"
            })), 1e3),
            message: debounce_default()((value => inputReport({
                value,
                name: "message"
            })), 1e3),
            name: debounce_default()((value => inputReport({
                value,
                name: "name"
            })), 1e3),
            region: debounce_default()((value => inputReport({
                value,
                name: "region"
            })), 1e3)
        };
        function listenInputChange({area}) {
            __SL_$__(area).find("[sl-form-item-name]").on("input", "input,textarea", (function() {
                const input = __SL_$__(this);
                const formItem = input.parents("[sl-form-item-name]");
                const name = formItem.attr("sl-form-item-name");
                const value = input.val();
                debounceInput[name] && debounceInput[name](value);
            }));
        }
        var BaseClass = __webpack_require__("./src/assets/commons/base/BaseClass.js");
        var modal = __webpack_require__("./src/assets/commons/components/modal/index.js");
        var toast = __webpack_require__("./src/assets/commons/components/toast/index.js");
        var toast_loading = __webpack_require__("./src/assets/commons/components/toast/loading.js");
        const emailRE = /^[A-Za-z0-9_./;+]+([A-Za-z0-9_./;+]+)*@([A-Za-z0-9]+\.)+[A-Za-z]{2,6}$/;
        const inquiry_price_modal_toast = new toast["default"];
        class InquiryPriceModal extends BaseClass["default"] {
            constructor({id, spu, sku}) {
                super("product:inquiry:price:modal");
                this.$root = __SL_$__(`#JS-inquiry-price-modal_${id}`);
                this.$setPortals(this.$root);
                this.buttonSelector = `#JS-inquiry-price-button_${id}`;
                this.spu = spu;
                this.activeSku = null;
                this.formInstance = null;
                this.modalInstance = null;
                this.firstSku = firstAvailableSku(spu, sku.skuList);
                this.init(id);
                listenInputChange({
                    area: this.$root
                });
            }
            init(id) {
                var _this$spu;
                if (null !== (_this$spu = this.spu) && void 0 !== _this$spu && _this$spu.inquiry) {
                    this.initModal(id);
                    this.initForm(id);
                    this.bindEvents();
                }
            }
            initModal(id) {
                this.modalInstance = new modal["default"]({
                    modalId: `inquiry-price_${id}`
                });
                this.modalInstance.init();
            }
            initForm(id) {
                this.formInstance = utils_form["default"].takeForm(`JS-inquiry-modal-form_${id}`);
                this.formInstance.init();
                this.formInstance.setFields(InquiryPriceModal.getFieldsConfig());
            }
            setActiveSku(activeSku) {
                this.activeSku = activeSku;
            }
            cancelReport() {
                cancelReport({
                    spu: this.spu,
                    sku: this.activeSku || this.firstSku,
                    num: 1,
                    email: this.formInstance.getFieldValue("email"),
                    phone: this.formInstance.getFieldValue("mobile"),
                    name: this.formInstance.getFieldValue("name"),
                    message: this.formInstance.getFieldValue("message"),
                    region: this.formInstance.getFieldValue("region")
                });
            }
            bindEvents() {
                const eventHandlers = {
                    submitClickHandler: async e => {
                        try {
                            if (this.isPreview()) {
                                inquiry_price_modal_toast.open((0, i18n.t)("products.product_details.link_preview_does_not_support"));
                                return;
                            }
                            __SL_$__(e.target).addClass("disabled");
                            await this.validateForm();
                            await this.postForm();
                        } catch (err) {} finally {
                            __SL_$__(e.target).removeClass("disabled");
                        }
                    },
                    cancelClickHandler: () => {
                        this.cancelReport();
                        this.hideModal();
                    },
                    buttonClickHandler: () => {
                        this.showModal();
                        viewReport();
                    }
                };
                this.$onPortals("click", ".JS-inquiry-modal-submit", eventHandlers.submitClickHandler);
                this.$onPortals("click", ".JS-inquiry-modal-cancel", eventHandlers.cancelClickHandler);
                this.$root.parents(".mp-modal__wrapper").on("click", ".mp-modal__mask.mp-modal__closable,.mp-modal__close", (() => this.cancelReport()));
                __SL_$__(this.buttonSelector).on("click", eventHandlers.buttonClickHandler);
            }
            unbindEvents() {
                this.$offAll();
                __SL_$__(this.buttonSelector).off("click");
            }
            async postForm() {
                var _activeSku$imageList, _spuInfo$images;
                const inquiryInfo = this.formInstance.getFieldsValue();
                const {activeSku} = this;
                const spuInfo = this.spu;
                const finalInquiryInfo = {
                    Email: inquiryInfo.email,
                    Message: inquiryInfo.message,
                    Name: inquiryInfo.name,
                    Mobile: inquiryInfo.mobile,
                    "Country/Region": inquiryInfo.region,
                    Product: null === spuInfo || void 0 === spuInfo ? void 0 : spuInfo.title,
                    ProductUrl: `${window.location.origin}/products/${spuInfo.spuSeq}${activeSku ? `?sku=${activeSku.skuSeq}` : ""}`
                };
                const sendContentStr = Object.keys(finalInquiryInfo).reduce(((str, key) => {
                    str += `${key}：${finalInquiryInfo[key]}\n`;
                    return str;
                }), "");
                const sendInfo = {
                    email: inquiryInfo.email,
                    content: sendContentStr,
                    attachmentUrl: (null === activeSku || void 0 === activeSku ? void 0 : null === (_activeSku$imageList = activeSku.imageList) || void 0 === _activeSku$imageList ? void 0 : _activeSku$imageList[0]) || (null === activeSku || void 0 === activeSku ? void 0 : activeSku.image) || (null === spuInfo || void 0 === spuInfo ? void 0 : null === (_spuInfo$images = spuInfo.images) || void 0 === _spuInfo$images ? void 0 : _spuInfo$images[0])
                };
                const loading = new toast_loading["default"]({
                    duration: 0
                });
                loading.open();
                await this.sendInquiryInfoRun(sendInfo, loading, {
                    phone: inquiryInfo.mobile,
                    message: inquiryInfo.message,
                    name: inquiryInfo.name,
                    region: inquiryInfo.region
                });
            }
            async sendInquiryInfoRun(info, loading, extraData) {
                const response = await libs.mcUtil.sendToMerchant(info);
                loading.close();
                if ("SUCCESS" === response.code) {
                    leadReport({
                        spu: this.spu,
                        sku: this.activeSku || this.firstSku,
                        num: 1,
                        email: info.email,
                        ...extraData
                    });
                    this.hideModal();
                    inquiry_price_modal_toast.open((0, i18n.t)("products.product_details.submission_successfully"));
                } else inquiry_price_modal_toast.open((0, i18n.t)("products.product_details.submission_failed"));
            }
            showModal() {
                this.modalInstance.show();
            }
            hideModal() {
                this.modalInstance.hide();
            }
            static getFieldsConfig() {
                const fields = [ {
                    name: "email",
                    value: "",
                    rules: [ {
                        message: (0, i18n.t)("products.product_details.enter_email_address"),
                        required: true
                    }, {
                        message: (0, i18n.t)("products.product_details.enter_valid_email_address"),
                        pattern: emailRE
                    } ]
                }, {
                    name: "message",
                    value: "",
                    rules: [ {
                        message: (0, i18n.t)("products.product_details.leave_us_message"),
                        required: true
                    }, {
                        message: (0, i18n.t)("products.product_details.maximum_length_of_message"),
                        validator(val) {
                            return val.length <= 1500;
                        }
                    } ]
                }, {
                    name: "name",
                    value: ""
                }, {
                    name: "mobile",
                    value: ""
                }, {
                    name: "region",
                    value: ""
                } ];
                return fields;
            }
            validateForm() {
                return new Promise(((resolve, reject) => {
                    this.formInstance.validateFields().then((res => {
                        if (res.pass) resolve(); else reject(res);
                    }));
                }));
            }
            isPreview() {
                const currentUrl = window.location.pathname;
                return /^[/（]preview[/）].*/.test(currentUrl);
            }
        }
        var createShadowDom = __webpack_require__("./src/assets/product/commons/js/createShadowDom.js");
        var request = __webpack_require__("../shared/browser/utils/request.js");
        const CUSTOM_PAGE_TYPE = 3;
        class Tabs {
            constructor({root}) {
                this.root = __SL_$__(root);
                this.lang = "default";
                this.showKey = "tab0";
                this.init();
                this.requestCollapseTitle(this.ids);
                this.bindEvent();
                if (!this.tabs.hasClass("active")) this.openTab(this.tabs.eq(0));
            }
            init() {
                const tabs = this.root.find(".product-tabs-nav").find(".product-tabs-tab");
                this.tabs = tabs;
                this.contents = this.root.children(".product-tabs-content").children(".product-tabs-item");
                this.ids = [];
                tabs.each(((_, el) => {
                    const $el = __SL_$__(el);
                    const id = $el.data("id");
                    if (id) this.ids.push(id);
                    if ($el.hasClass("active")) this.showKey = $el.data("key");
                }));
            }
            requestCollapseTitle(ids) {
                const {lang} = this;
                return (0, request["default"])({
                    url: "merchant/render/page/basic/infos",
                    method: "GET",
                    params: {
                        pageIds: ids.join(",")
                    }
                }).then((res => {
                    if (res && Array.isArray(res.data)) {
                        const data = res.data.reduce(((fin, item) => {
                            const name = item.name ? item.name[lang] : "";
                            return {
                                ...fin,
                                [item.id]: name
                            };
                        }), {});
                        this.setCollapseTitle(data);
                    }
                }));
            }
            setCollapseTitle(data) {
                this.tabs.each(((_, el) => {
                    const title = data[__SL_$__(el).data("id")];
                    if (title) __SL_$__(el).text(title);
                }));
            }
            requestCollapseContent(id, content) {
                if (this.cacheRequest && this.cacheData[id]) return Promise.resolve(this.cacheData[id]);
                return (0, request["default"])({
                    url: `merchant/render/page/${CUSTOM_PAGE_TYPE}/${id}`,
                    method: "GET"
                }).then((res => {
                    if (null !== res && void 0 !== res && res.data) this.setCollapseContent(null === res || void 0 === res ? void 0 : res.data, content);
                }));
            }
            setCollapseContent(data, content) {
                var _shadow$get;
                const html = this.getCustomPageContent(null === data || void 0 === data ? void 0 : data.htmlConfig);
                const shadow = __SL_$__(content).children(".product-tabs-shadow");
                const shadowRoot = null === (_shadow$get = shadow.get(0)) || void 0 === _shadow$get ? void 0 : _shadow$get.attachShadow({
                    mode: "open"
                });
                __SL_$__(shadowRoot).append(createShadowDom.shadowDomStyle.clone());
                __SL_$__(shadowRoot).append(html);
            }
            getCustomPageContent(pageConfig) {
                return `<div class="custom-page-render-container">${pageConfig}</div>`;
            }
            openTab(tab) {
                const key = tab.data("key");
                const id = tab.data("id");
                const {contents, tabs} = this;
                tabs.removeClass("active");
                tab.addClass("active");
                contents.hide();
                let content;
                contents.each(((_, el) => {
                    if (__SL_$__(el).data("key") === key) {
                        __SL_$__(el).show();
                        content = el;
                        return true;
                    }
                }));
                if (!tab.prop("loaded")) {
                    tab.prop("loaded", true);
                    if (id) this.requestCollapseContent(id, content);
                }
                this.showKey = key;
            }
            bindEvent() {
                const that = this;
                const {tabs} = this;
                tabs.on("click", (function() {
                    const tab = __SL_$__(this);
                    const key = tab.data("key");
                    if (that.showKey === key) return;
                    tab.get(0).scrollIntoView({
                        block: "nearest",
                        behavior: "smooth",
                        inline: "center"
                    });
                    that.openTab(tab);
                }));
            }
        }
        const tabs = Tabs;
        function whichTransitionEvent() {
            let t;
            const el = document.createElement("fakeElement");
            const transitions = {
                transition: "transitionend",
                OTransition: "oTransitionEnd",
                MozTransition: "transitionend",
                WebkitTransition: "webkitTransitionEnd",
                MsTransition: "msTransitionEnd"
            };
            for (t in transitions) if (void 0 !== el.style[t]) return transitions[t];
        }
        function openCollapseByHeight(element) {
            const initHeight = __SL_$__(element).innerHeight();
            element.style.height = "auto";
            const targetHeight = __SL_$__(element).innerHeight();
            element.style.height = `${initHeight}px`;
            __SL_$__(element).css("color");
            element.style.height = `${targetHeight}px`;
        }
        function closeCollapseByHeight(element) {
            const initHeight = __SL_$__(element).innerHeight();
            __SL_$__(element).css("height", `${initHeight}px`);
            __SL_$__(element).css("color");
            element.style.height = `0px`;
        }
        const PAGE_ID = "pageid";
        const product_collapse_CUSTOM_PAGE_TYPE = "customize";
        class Collapse {
            constructor({lang = "default", selector, cacheRequest = true}) {
                this.$container = __SL_$__(selector);
                this.$collapseAsyncItems = this.$container.find(".base-collapse-item-async");
                this.$collapseSyncItems = this.$container.find(".base-collapse-item-sync");
                this.lang = lang;
                this.cacheRequest = cacheRequest;
                this.cacheData = {};
                this.$activeItem = null;
                this.transitionEvent = whichTransitionEvent();
                this.init();
            }
            init() {
                const self = this;
                const ids = Array.from(this.$collapseAsyncItems).map((item => __SL_$__(item).data(PAGE_ID))).filter((id => !!id));
                this.$collapseAsyncItems.each(((index, item) => {
                    const $item = __SL_$__(item);
                    $item.find(".base-collapse-item__wrap").on(self.transitionEvent, (function() {
                        if (__SL_$__(this).parent().hasClass("active")) __SL_$__(this).css("height", "auto");
                    }));
                    if ($item.hasClass("active") && $item.data(PAGE_ID)) this.requestCollapseContent($item.data(PAGE_ID)).then((res => {
                        this.setCollapseContent(null === res || void 0 === res ? void 0 : res.data, $item);
                    }));
                }));
                this.$collapseSyncItems.each(((index, item) => {
                    const $item = __SL_$__(item);
                    $item.find(".base-collapse-item__wrap").on(self.transitionEvent, (function() {
                        if (__SL_$__(this).parent().hasClass("active")) __SL_$__(this).css("height", "auto");
                    }));
                    if (!$item.data("isInitShadowDom")) {
                        const html = $item.find(".base-collapse-item__content").html();
                        self.transContentByShadowDom($item, html);
                        $item.data("isInitShadowDom", true);
                    }
                }));
                this.requestCollapseTitle(ids);
                this.bindEvent();
            }
            requestCollapseTitle(ids) {
                const {lang} = this;
                return (0, request["default"])({
                    url: "merchant/render/page/basic/infos",
                    method: "GET",
                    params: {
                        pageIds: ids.join(",")
                    }
                }).then((res => {
                    if (res && Array.isArray(res.data)) {
                        const data = res.data.reduce(((fin, item) => {
                            const name = null !== item && void 0 !== item && item.name ? null === item || void 0 === item ? void 0 : item.name[lang] : "";
                            return {
                                ...fin,
                                [null === item || void 0 === item ? void 0 : item.id]: name
                            };
                        }), {});
                        this.setCollapseTitle(data);
                    }
                }));
            }
            setCollapseTitle(titleMap) {
                this.$collapseAsyncItems.each(((index, item) => {
                    const $item = __SL_$__(item);
                    const title = titleMap[$item.data(PAGE_ID)];
                    if (title) $item.find(".base-collapse-item__title").text(title);
                }));
            }
            bindEvent() {
                const self = this;
                this.$collapseAsyncItems.on("click", ".base-collapse-item__header", (function() {
                    const $item = __SL_$__(this).closest(".base-collapse-item");
                    const id = $item.data(PAGE_ID);
                    const isOpen = $item.hasClass("active");
                    if (isOpen) {
                        self.close($item);
                        return;
                    }
                    self.requestCollapseContent(id).then((res => {
                        self.setCollapseContent(null === res || void 0 === res ? void 0 : res.data, $item);
                        self.$activeItem = $item;
                        self.open($item);
                    }));
                }));
                this.$collapseSyncItems.on("click", ".base-collapse-item__header", (function() {
                    const $item = __SL_$__(this).closest(".base-collapse-item");
                    const isOpen = $item.hasClass("active");
                    if (isOpen) {
                        self.close($item);
                        return;
                    }
                    if (!$item.data("isInitShadowDom")) {
                        const html = $item.find(".base-collapse-item__content").html();
                        self.transContentByShadowDom($item, html);
                        $item.data("isInitShadowDom", true);
                    }
                    self.open($item);
                }));
                window.SL_EventBus.on("stage:locale:change", (() => {
                    if (this.$activeItem) this.calcCollapseContentHeight(this.$activeItem); else this.$collapseAsyncItems.each(((index, item) => {
                        const $item = __SL_$__(item);
                        if ($item.hasClass("active") && $item.data(PAGE_ID)) this.calcCollapseContentHeight($item);
                    }));
                }));
            }
            requestCollapseContent(id) {
                if (this.cacheRequest && this.cacheData[id]) return Promise.resolve(this.cacheData[id]);
                return (0, request["default"])({
                    url: `merchant/render/page/${product_collapse_CUSTOM_PAGE_TYPE}/${id}`,
                    method: "GET"
                }).then((res => {
                    if (this.cacheRequest) this.cacheData[id] = res;
                    return res;
                })).catch((() => {
                    if (this.cacheRequest) this.cacheData[id] = {};
                    return {};
                }));
            }
            getCustomPageContent(pageConfig) {
                return `<div class="custom-page-render-container">${pageConfig}</div>`;
            }
            transContentByShadowDom($item, content) {
                const $content = $item.find(".base-collapse-item__content");
                $content.html(`\n      <div style="overflow: hidden;" data-node="shadow-content">\n        <div class="mce-content-body">\n          ${content}\n        </div>\n      </div>\n      <div data-node="shadow-dom"></div>\n    `);
                (0, createShadowDom["default"])();
            }
            setCollapseContent(data, $item) {
                const content = this.getCustomPageContent(null === data || void 0 === data ? void 0 : data.htmlConfig);
                this.transContentByShadowDom($item, content);
            }
            calcCollapseContentHeight($item) {
                const $content = $item.find(".base-collapse-item__content");
                const images = Array.from($content.find("img")).map((item => new Promise(((resolve, reject) => {
                    const image = new Image;
                    image.src = item.src;
                    image.onload = () => {
                        resolve(image);
                    };
                    image.onerror = () => {
                        reject(image);
                    };
                }))));
                Promise.allSettled(images).then((() => {
                    setTimeout((() => {
                        const height = $content.outerHeight();
                        $content.parent().css({
                            height
                        });
                    }), 0);
                })).catch((() => {
                    $content.parent().css({
                        height: "auto"
                    });
                }));
            }
            open($item) {
                openCollapseByHeight($item.find(".base-collapse-item__wrap").get(0));
                $item.addClass("active");
            }
            close($item) {
                this.$activeItem = null;
                closeCollapseByHeight($item.find(".base-collapse-item__wrap").get(0));
                $item.removeClass("active");
            }
        }
        const product_collapse = Collapse;
        var event_bus = __webpack_require__("../shared/browser/utils/event-bus.js");
        var CurrencyConvert = __webpack_require__("../shared/browser/utils/newCurrency/CurrencyConvert.js");
        var effectFc = __webpack_require__("./src/assets/commons/utils/effectFc.js");
        class Drawer {
            constructor({id, onSwitch}) {
                if (!id) throw new Error("【drawer】id为必传项");
                this.id = id;
                this.isShow = false;
                const drawerDom = this.getDom();
                if (!drawerDom) return;
                document.body.appendChild(drawerDom);
                this.hide = this.hide.bind(this);
                this.onSwitch = onSwitch;
            }
            getDom() {
                const dom = document.getElementById(this.id);
                return dom || false;
            }
            show() {
                var _this$onSwitch;
                const drawerDom = this.getDom();
                if (!drawerDom) return;
                this.isShow = true;
                drawerDom.style.display = "block";
                const $body = __SL_$__("body");
                $body.addClass("sales-common-drawer__root-open");
                const mask = drawerDom.querySelector(".sales-common-drawer__mask-hook");
                if (mask) {
                    setTimeout((() => {
                        __SL_$__(mask).addClass("sales-common-drawer__mask--append");
                    }), 20);
                    mask.addEventListener("click", this.hide);
                }
                const closeBtn = drawerDom.querySelector(".sales-common-drawer-hook");
                if (closeBtn) closeBtn.addEventListener("click", this.hide);
                null === (_this$onSwitch = this.onSwitch) || void 0 === _this$onSwitch ? void 0 : _this$onSwitch.call(this, true);
            }
            hide() {
                var _this$onSwitch2;
                const drawerDom = this.getDom();
                if (!drawerDom) return;
                this.isShow = false;
                drawerDom.style.display = "none";
                const $body = __SL_$__("body");
                $body.removeClass("sales-common-drawer__root-open");
                const mask = drawerDom.querySelector(".sales-common-drawer__mask-hook");
                if (mask) {
                    __SL_$__(mask).removeClass("sales-common-drawer__mask--append");
                    mask.removeEventListener("click", this.hide);
                }
                const closeBtn = drawerDom.querySelector(".sales-common-drawer-hook");
                if (closeBtn) closeBtn.removeEventListener("click", this.hide);
                null === (_this$onSwitch2 = this.onSwitch) || void 0 === _this$onSwitch2 ? void 0 : _this$onSwitch2.call(this, false);
            }
            getShowStatus() {
                return this.isShow;
            }
        }
        const drawer_Drawer = Drawer;
        const vars = {
            containerSel: ".sales__autoCouponBanner-container-hook",
            tagsSel: ".sales__autoCouponBanner-couponItem-hook",
            downIconSel: ".sales__autoCouponBanner-downIcon-hook",
            clickAreaSel: ".sales__autoCouponBanner-left",
            modalSel: ".sales__autoCouponModal-container",
            modalPopupClassName: "sales__autoCouponModal-container--show",
            containerShowStateClassName: "sales__autoCouponBanner-container--popup",
            drawerId: "salesAutoCouponDrawer",
            modelListItemsSel: ".sales__autoCouponModal-listItem",
            shopMoreText: ".sales__autoCouponBanner-shopMoreText-hook"
        };
        function isAllowPopupFn(parentDom) {
            const $tags = __SL_$__(parentDom).find(vars.modelListItemsSel);
            const isMob = (0, isMobile["default"])();
            return $tags.length > 2 || isMob && $tags.length > 1;
        }
        function handlePlatformChange() {
            const containerDoms = __SL_$__(vars.containerSel);
            const isMob = (0, isMobile["default"])();
            Array.prototype.slice.call(containerDoms).forEach((containerDom => {
                const tagsChildren = __SL_$__(containerDom).find(vars.tagsSel);
                if (tagsChildren.length) {
                    const $tags = __SL_$__(tagsChildren);
                    if ($tags) if (isMob) $tags.css("display", "none").eq(0).css("display", "inline-block"); else $tags.css("display", "inline-block");
                    const downIconDom = __SL_$__(containerDom).find(vars.downIconSel);
                    const $downIcon = __SL_$__(downIconDom);
                    const clickArea = __SL_$__(containerDom).find(vars.clickAreaSel);
                    const $clickArea = __SL_$__(clickArea);
                    const isAllowPopup = isAllowPopupFn(containerDom);
                    $downIcon.css("display", isAllowPopup ? "block" : "none");
                    $clickArea.css("cursor", isAllowPopup ? "pointer" : "default");
                    const shopMoreTextDom = __SL_$__(containerDom).find(vars.shopMoreText);
                    if (shopMoreTextDom.length) __SL_$__(shopMoreTextDom).css("display", isMob ? "none" : "block");
                }
            }));
        }
        const auto_coupon_banner = (0, effectFc["default"])((function(parent) {
            const {useEffect} = this;
            const $parent = __SL_$__(parent || document.body);
            const containerDoms = $parent.find(vars.containerSel);
            if (!containerDoms.length) return;
            handlePlatformChange();
            const handlePopup = () => {
                const currentClickObj = {
                    seq: "",
                    isShow: false
                };
                const getSeqMap = () => {
                    const seqMap = {};
                    Array.prototype.slice.call(containerDoms).forEach((containerDom => {
                        const seq = __SL_$__(containerDom).attr("data-seq");
                        const modalDom = __SL_$__(containerDom).find(vars.modalSel);
                        const drawer = new drawer_Drawer({
                            id: `${vars.drawerId}-${seq}`,
                            onSwitch(flag) {
                                if (!flag) seqMap[seq].close();
                            }
                        });
                        seqMap[seq] = {};
                        seqMap[seq].open = () => {
                            if ((0, isMobile["default"])() && __SL_$__(modalDom).hasClass(vars.modalPopupClassName)) __SL_$__(modalDom).removeClass(vars.modalPopupClassName); else if (drawer.isShow) drawer.hide();
                            const isAllowPopup = isAllowPopupFn(containerDom);
                            if (!isAllowPopup) return;
                            if ((0, isMobile["default"])() && !drawer.isShow) drawer.show(); else if (!__SL_$__(modalDom).hasClass(vars.modalPopupClassName)) __SL_$__(modalDom).addClass(vars.modalPopupClassName);
                            if (!__SL_$__(containerDom).hasClass(vars.containerShowStateClassName)) __SL_$__(containerDom).addClass(vars.containerShowStateClassName);
                            currentClickObj.seq = seq;
                            currentClickObj.isShow = true;
                        };
                        seqMap[seq].close = () => {
                            if ((0, isMobile["default"])() && drawer.isShow) drawer.hide(); else if (__SL_$__(modalDom).hasClass(vars.modalPopupClassName)) __SL_$__(modalDom).removeClass(vars.modalPopupClassName);
                            if (__SL_$__(containerDom).hasClass(vars.containerShowStateClassName)) __SL_$__(containerDom).removeClass(vars.containerShowStateClassName);
                            currentClickObj.seq = seq;
                            currentClickObj.isShow = false;
                        };
                    }));
                    return seqMap;
                };
                const seqMap = getSeqMap();
                const openModalBySeq = seq => {
                    if (currentClickObj.seq === seq) if (currentClickObj.isShow) seqMap[seq].close(); else seqMap[seq].open(); else {
                        if (currentClickObj.isShow) seqMap[currentClickObj.seq].close();
                        seqMap[seq].open();
                    }
                };
                const clickAreasDoms = __SL_$__(vars.clickAreaSel);
                if (!clickAreasDoms.length) return;
                Array.prototype.slice.call(clickAreasDoms).forEach((clickAreasDom => {
                    useEffect(__SL_$__(clickAreasDom), "on,off", "click", (() => {
                        const seq = __SL_$__(clickAreasDom).attr("data-seq");
                        openModalBySeq(seq);
                    }));
                }));
                useEffect(event_bus.SL_EventBus, "on,off", "global:platformChange", (() => {
                    if (currentClickObj.isShow) seqMap[currentClickObj.seq].open();
                    handlePlatformChange();
                }));
                useEffect(__SL_$__(vars.modalSel), "on,off", "click", (e => {
                    e.stopPropagation();
                }));
                Object.keys(seqMap).forEach((seq => {
                    useEffect(__SL_$__(`#${vars.drawerId}-${seq}`), "on,off", "click", (e => {
                        e.stopPropagation();
                    }));
                }));
                useEffect(__SL_$__(document.body), "on,off", "click", (e => {
                    const {target} = e;
                    if (currentClickObj.isShow) {
                        const targetDom = Array.prototype.slice.call(clickAreasDoms).find((item => __SL_$__(item).attr("data-seq") === currentClickObj.seq));
                        if (__SL_$__.contains(targetDom, target) || targetDom === target) return;
                        seqMap[currentClickObj.seq].close();
                    }
                }));
            };
            handlePopup();
            window.SL_EventBus.on("global:currency:format", (() => {
                Array.prototype.slice.call(containerDoms).forEach((container => {
                    const $container = __SL_$__(container);
                    const amountNode = $container.find("[data-amount]");
                    amountNode.each((function() {
                        __SL_$__(this).text((0, CurrencyConvert.convertFormat)(__SL_$__(this).data("amount")));
                    }));
                    const seq = $container.attr("data-seq");
                    const drawerAmountNode = __SL_$__(`#${vars.drawerId}-${seq}`).find("[data-amount]");
                    drawerAmountNode.each((function() {
                        __SL_$__(this).text((0, CurrencyConvert.convertFormat)(__SL_$__(this).data("amount")));
                    }));
                }));
            }));
        }));
        var state_selector = __webpack_require__("../shared/browser/utils/state-selector.js");
        var countdown = __webpack_require__("./src/assets/commons/utils/countdown.js");
        class FlashSale {
            constructor() {
                var _SL_State$get;
                this.timeLimitActivityList = null === (_SL_State$get = state_selector.SL_State.get("productActivity")) || void 0 === _SL_State$get ? void 0 : _SL_State$get.timeLimitActivityList;
            }
            init() {
                const flashSales = __SL_$__(".sales__flash-sale-container-hook[data-seq]");
                if (this.timeLimitActivityList && flashSales.length) {
                    const seqList = [ ...new Set([ ...flashSales ].map((ele => ele.dataset.seq))) ];
                    seqList.forEach((seq => {
                        var _activity$salesPlugin, _activity$salesPlugin2, _salesEnvCustomInfo$p;
                        const eles = __SL_$__(".sales__flash-sale-container-hook[data-seq]").filter(`[data-seq=${seq}]`);
                        const activity = this.timeLimitActivityList.find((({activitySeq}) => seq === activitySeq));
                        if (!activity) return;
                        if (null !== activity && void 0 !== activity && null !== (_activity$salesPlugin = activity.salesPlugin) && void 0 !== _activity$salesPlugin && null !== (_activity$salesPlugin2 = _activity$salesPlugin.countDownTimerPlugin) && void 0 !== _activity$salesPlugin2 && _activity$salesPlugin2.showCountDownTime) this.startCountDown(activity, eles);
                        const {activitySeq, seoHandleList, salesEnvCustomInfo} = activity;
                        const {linkType, customLink} = null !== (_salesEnvCustomInfo$p = null === salesEnvCustomInfo || void 0 === salesEnvCustomInfo ? void 0 : salesEnvCustomInfo.productDetailConfig) && void 0 !== _salesEnvCustomInfo$p ? _salesEnvCustomInfo$p : {};
                        if ("activityPage" === linkType || !linkType) eles.on("click", (() => {
                            var _seoHandleList$;
                            window.location.href = `/activity/${null !== (_seoHandleList$ = null === seoHandleList || void 0 === seoHandleList ? void 0 : seoHandleList[0]) && void 0 !== _seoHandleList$ ? _seoHandleList$ : activitySeq}`;
                        })); else if ("custom" === linkType) eles.on("click", (() => {
                            window.location.href = customLink;
                        }));
                    }));
                }
            }
            startCountDown(activity, eles) {
                var _activity$salesPlugin3, _activity$salesPlugin4;
                if (null !== activity && void 0 !== activity && null !== (_activity$salesPlugin3 = activity.salesPlugin) && void 0 !== _activity$salesPlugin3 && null !== (_activity$salesPlugin4 = _activity$salesPlugin3.countDownTimerPlugin) && void 0 !== _activity$salesPlugin4 && _activity$salesPlugin4.showCountDownTime) {
                    var _activity$salesPlugin5;
                    const countdownEles = eles.find(".sales__flash-sale-timeout-container-hook");
                    const daysCon = countdownEles.find(".sales__flash-sale-timeout-first-time-item-hook");
                    const daysEles = countdownEles.find(".sales__flash-sale-timeout-days-hook");
                    const daysDotEles = countdownEles.find(".sales__flash-sale-timeout-first-dot-hook");
                    const hoursEles = countdownEles.find(".sales__flash-sale-timeout-hours-hook");
                    const minutesEles = countdownEles.find(".sales__flash-sale-timeout-minutes-hook");
                    const secondsEles = countdownEles.find(".sales__flash-sale-timeout-seconds-hook");
                    const {startTime, endTime} = null === (_activity$salesPlugin5 = activity.salesPlugin) || void 0 === _activity$salesPlugin5 ? void 0 : _activity$salesPlugin5.countDownTimerPlugin;
                    const now = Date.now();
                    if (now >= startTime && now < endTime) (0, countdown["default"])(endTime, (([d, h, m, s, ms], interval) => {
                        daysEles.html(d);
                        hoursEles.html(h);
                        minutesEles.html(m);
                        secondsEles.html(`${s}.${ms}`);
                        if (d <= 0) {
                            daysCon.hide();
                            daysDotEles.hide();
                        }
                        if (interval <= 0) countdownEles.hide();
                    }), {
                        id: `flashSale_${activity.activitySeq}`,
                        hasDay: true,
                        hasMillisecond: true,
                        interval: 100
                    }); else countdownEles.hide();
                }
            }
            destroy() {
                this.timeLimitActivityList.forEach((({activitySeq}) => {
                    if (countdown.timers[`flashSale_${activitySeq}`]) clearInterval(countdown.timers[`flashSale_${activitySeq}`]);
                }));
            }
        }
        const flash_sale = FlashSale;
        var tool = __webpack_require__("../shared/browser/utils/report/tool.js");
        const get_sku_attribute_names = (skuAttributeIds, skuAttributeMap) => skuAttributeIds && skuAttributeIds.length && skuAttributeMap ? skuAttributeIds.map((({id, valueId}) => ({
            skuAttribute: skuAttributeMap[id],
            valueId
        }))).filter((({skuAttribute}) => !skuAttribute.hidden)).map((({skuAttribute, valueId}) => {
            var _skuAttribute$skuAttr;
            return null === (_skuAttribute$skuAttr = skuAttribute.skuAttributeValueMap) || void 0 === _skuAttribute$skuAttr ? void 0 : _skuAttribute$skuAttr[valueId].defaultValue;
        })) : [];
        function guid() {
            function S4() {
                return (65536 * (1 + Math.random()) | 0).toString(16).substring(1);
            }
            return `${S4() + S4()}-${S4()}-${S4()}-${S4()}-${S4()}${S4()}${S4()}`;
        }
        function getEventID() {
            return `${Date.now()}_${guid().replace(/-/g, "")}`;
        }
        function addToCartReport({products, amount, num = 1, formatCurrency, filter}) {
            var _products$filter, _window$SL_EventBus, _window$Shopline$even;
            const {currency} = window.Shopline;
            const ga4_items = [];
            const ga_items = [];
            const gar_items = [];
            const productList = null === products || void 0 === products ? void 0 : null === (_products$filter = products.filter((item => filter ? !!filter(item) : true))) || void 0 === _products$filter ? void 0 : _products$filter.map((item => {
                var _ref, _skulist$find, _window$SL_GetReportA, _window;
                const {productSeq, productId, spuSeq, spuId, title, defaultTitle, skus, skuList, productSkuList, skuSeq, skuId, skuAttributeMap, num: count} = item;
                const id = productSeq || productId || spuSeq || spuId;
                const name = title || defaultTitle;
                const skulist = productSkuList || skus || skuList;
                let SkuId = filter ? filter(item) || skuSeq || skuId : skuSeq || skuId;
                const sku = null !== (_ref = null !== (_skulist$find = null === skulist || void 0 === skulist ? void 0 : skulist.find((s => (null === s || void 0 === s ? void 0 : s.skuId) && (null === s || void 0 === s ? void 0 : s.skuId) === SkuId || (null === s || void 0 === s ? void 0 : s.skuId) && (null === s || void 0 === s ? void 0 : s.skuSeq) === SkuId))) && void 0 !== _skulist$find ? _skulist$find : null === skulist || void 0 === skulist ? void 0 : skulist[0]) && void 0 !== _ref ? _ref : {};
                const {price, skuAttributeIds} = sku;
                SkuId = sku.skuId || sku.skuSeq || SkuId;
                const variant = sku ? get_sku_attribute_names(skuAttributeIds, skuAttributeMap).join(",") : "";
                const Price = formatCurrency ? formatCurrency(price * num) : Number(price * num) / 100;
                ga_items.push({
                    id,
                    name,
                    price: Price,
                    quantity: 1,
                    variant
                });
                ga4_items.push({
                    item_id: id,
                    item_name: name,
                    price: Price,
                    quantity: 1,
                    item_variant: variant
                });
                gar_items.push({
                    id: window.SL_GetReportArg ? null === (_window$SL_GetReportA = (_window = window).SL_GetReportArg) || void 0 === _window$SL_GetReportA ? void 0 : _window$SL_GetReportA.call(_window, "GAR", "sku_id", SkuId) : SkuId,
                    google_business_vertical: "retail"
                });
                return {
                    spuId: id,
                    skuId: SkuId,
                    title: name,
                    price,
                    num: null !== count && void 0 !== count ? count : num
                };
            }));
            let total = 0;
            if (amount) total = amount; else total = productList.reduce(((a, p) => a + (null === p || void 0 === p ? void 0 : p.price) * (null === p || void 0 === p ? void 0 : p.num)), 0);
            const value = formatCurrency ? formatCurrency(total) : total / 100;
            const content_spu_id = productList.map((({spuId}) => spuId)).join(",");
            const content_sku_id = productList.map((({skuId}) => skuId)).join(",");
            const content_name = productList.map((({title}) => title)).join(",");
            const totalQuantity = productList.reduce(((a, p) => a + (null === p || void 0 === p ? void 0 : p.num)), 0);
            const GA4 = {
                items: ga_items,
                currency,
                value,
                send_to: "GA4"
            };
            const GA = {
                items: ga_items,
                currency,
                value
            };
            const params = {
                GAAds: [ [ "event", "conversion", {
                    value,
                    currency
                } ], "ADD-TO-CART" ],
                GA: [ [ "event", "add_to_cart", GA ] ],
                GA4: [ [ "event", "add_to_cart", GA4 ] ],
                FBPixel: [ [ "track", "AddToCart", {
                    content_ids: content_sku_id,
                    content_name: content_name || "",
                    content_category: "",
                    content_type: "product_group",
                    currency,
                    value
                }, {
                    eventID: `addToCart${getEventID()}`
                } ] ],
                GAR: [ [ "event", "add_to_cart", {
                    value,
                    items: gar_items
                } ] ],
                GARemarketing: [ [ "event", "add_to_cart", {
                    ecomm_prodid: productList.map((({skuId}) => {
                        var _window$SL_GetReportA2, _window2;
                        return window.SL_GetReportArg ? null === (_window$SL_GetReportA2 = (_window2 = window).SL_GetReportArg) || void 0 === _window$SL_GetReportA2 ? void 0 : _window$SL_GetReportA2.call(_window2, "GAR", "sku_id", skuId) : skuId;
                    })).join(","),
                    ecomm_pagetype: "cart",
                    ecomm_totalvalue: value
                } ] ]
            };
            null === (_window$SL_EventBus = window.SL_EventBus) || void 0 === _window$SL_EventBus ? void 0 : _window$SL_EventBus.emit("global:thirdPartReport", params);
            null === (_window$Shopline$even = window.Shopline.event) || void 0 === _window$Shopline$even ? void 0 : _window$Shopline$even.emit("DataReport::AddToCart", {
                data: {
                    content_spu_id,
                    content_sku_id,
                    content_category: "",
                    content_name,
                    currency,
                    price: value,
                    value,
                    quantity: totalQuantity
                },
                interior: "DataReport::AddToCart",
                onSuccess: result => {
                    console.info("success", result);
                },
                onError: error => {
                    console.error(error);
                }
            });
        }
        class AddToCartList {
            constructor(spu, sku) {
                this.spu = {
                    ...spu,
                    ...sku
                };
            }
            setActiveSku(sku) {
                this.activeSku = sku ? {
                    ...sku,
                    name: this.spu.title
                } : null;
            }
            init() {
                const addToCart = this;
                __SL_$__("#page-product-detail .sales__add-to-cart-list-content").on("click", ".sales__add-to-cart-item-btn-hook", (ev => {
                    const {spuSeq: spuId, skuSeq: skuId, name, price} = addToCart.activeSku;
                    const eventID = (0, tool.getEventID)();
                    window.Shopline.event.emit("Cart::AddToCart", {
                        data: {
                            spuId,
                            skuId,
                            num: parseInt(ev.target.dataset.count, 10),
                            price,
                            name,
                            eventID: `addToCart${eventID}`
                        },
                        onSuccess: () => {
                            const quantity = parseInt(ev.target.dataset.count, 10);
                            addToCartReport({
                                products: [ {
                                    ...this.spu,
                                    skuId
                                } ],
                                num: quantity,
                                formatCurrency: newCurrency["default"].formatCurrency
                            });
                        },
                        onError: error => {
                            console.error(error);
                        }
                    });
                }));
            }
        }
        const add_to_cart_list = AddToCartList;
        var url = __webpack_require__("./src/assets/commons/utils/url.js");
        var syntax_patch = __webpack_require__("../shared/browser/utils/syntax-patch.js");
        function hiido_guid() {
            function S4() {
                return (65536 * (1 + Math.random()) | 0).toString(16).substring(1);
            }
            return `${S4() + S4()}-${S4()}-${S4()}-${S4()}-${S4()}${S4()}${S4()}`;
        }
        function Hiido({page, module}, eventMap = {}) {
            this.__default = {
                page,
                module
            };
            this.__eventMap = eventMap;
            this.__observe = {};
            this.__eObserve = {};
            this.exposure(".hiido_exposure[data-event_id]");
            this.exposure(".hiido_exposure_effective[data-event_id]", null, {
                effective: true
            });
        }
        Hiido.prototype.observerStop = function(force) {
            if (!((0, syntax_patch.get)(Object.keys(this.__observe), "length") || (0, syntax_patch.get)(Object.keys(this.__eObserve), "length")) || force) {
                this.__observe = {};
                this.__eObserve = {};
                (0, syntax_patch.get_func)(this, "__observer.disconnect").exec();
                delete this.__observer;
                this.__validityTimer && clearInterval(this.__validityTimer);
            }
        };
        Hiido.prototype.validity = function() {
            Object.entries(this.__observe).forEach((([uuid, {ele}]) => {
                if (false === ele.isConnected || !ele.__HIIDO_UUID__ || ele.__HIIDO_UUID__ !== uuid) {
                    delete this.__observe[uuid];
                    if (!this.__eObserve[uuid]) this.__observer.unobserve(ele);
                }
            }));
            Object.entries(this.__eObserve).forEach((([uuid, {ele}]) => {
                if (false === ele.isConnected || !ele.__HIIDO_UUID__ || ele.__HIIDO_UUID__ !== uuid) {
                    delete this.__eObserve[uuid];
                    if (!this.__observe[uuid]) this.__observer.unobserve(ele);
                }
            }));
            this.observerStop();
        };
        Hiido.prototype.observerStart = function() {
            if (IntersectionObserver && !this.__observer) {
                this.__observer = new IntersectionObserver((changes => {
                    changes.forEach((change => {
                        const uuid = change.target.__HIIDO_UUID__;
                        if (uuid && this.__observe[uuid] && change.intersectionRatio > 0) {
                            const {ele, options, once} = this.__observe[uuid];
                            this.collect(options);
                            if (once) {
                                delete this.__observe[uuid];
                                if (!this.__eObserve[uuid]) this.__observer.unobserve(ele);
                                this.observerStop();
                            }
                        }
                        if (uuid && this.__eObserve[uuid] && change.intersectionRatio > .5) {
                            if ((0, syntax_patch.get)(this.__eObserve[uuid], "timer")) {
                                clearTimeout(this.__eObserve[uuid].timer);
                                delete this.__eObserve[uuid].timer;
                            }
                            this.__eObserve[uuid].timer = setTimeout((() => {
                                const {ele, options, once} = this.__eObserve[uuid];
                                this.collect(options);
                                if (once) {
                                    delete this.__eObserve[uuid];
                                    if (!this.__observe[uuid]) this.__observer.unobserve(ele);
                                    this.observerStop();
                                }
                            }), 500);
                        }
                    }));
                }), {
                    threshold: [ 0, .5 ]
                });
                this.__validityTimer && clearInterval(this.__validityTimer);
                this.__validityTimer = setInterval((() => {
                    this.validity();
                }), 2e4);
                return this;
            }
        };
        Hiido.prototype.collect = function(eventId, options) {
            let obj = options;
            if ("object" === typeof eventId) {
                obj = eventId;
                if ((0, syntax_patch.get)(obj, "event_name") && (0, syntax_patch.get)(this.__eventMap, (0, 
                syntax_patch.get)(obj, "event_name"))) obj.event_id = (0, syntax_patch.get)(this.__eventMap, (0, 
                syntax_patch.get)(obj, "event_name"));
            } else if ("object" === typeof obj) if ((0, syntax_patch.get)(this.__eventMap, eventId)) {
                obj.event_id = (0, syntax_patch.get)(this.__eventMap, eventId);
                obj.event_name = eventId;
            } else obj.event_id = eventId;
            if (obj.event_id) (0, syntax_patch.get_func)(window.HdSdk, "shopTracker.collect").exec({
                module: -999,
                component: -999,
                action_type: 102,
                ...this.__default,
                ...obj
            });
        };
        Hiido.prototype.exposure = function(ele, options, {once = true, effective = false} = {}) {
            setTimeout((() => {
                if (!IntersectionObserver || !ele) return;
                let eles = [];
                if (ele instanceof Array) eles = ele.filter((e => e instanceof HTMLElement)); else if ("string" === typeof ele) eles = [ ...document.querySelectorAll(ele) ]; else if (ele instanceof HTMLElement) eles = [ ele ];
                eles.forEach((ele => {
                    if (false === (0, syntax_patch.get)(ele, "isConnected")) return;
                    let uuid;
                    if (!(Object.values(this.__observe).find((item => item.ele === ele)) || Object.values(this.__eObserve).find((item => item.ele === ele)))) {
                        uuid = hiido_guid();
                        ele.__HIIDO_UUID__ = uuid;
                        this.observerStart();
                    } else if (ele.__HIIDO_UUID__) uuid = ele.__HIIDO_UUID__; else {
                        uuid = hiido_guid();
                        ele.__HIIDO_UUID__ = uuid;
                    }
                    (0, syntax_patch.get_func)(this.__observer, "unobserve").exec(ele);
                    (0, syntax_patch.get_func)(this.__observer, "observe").exec(ele);
                    if (effective) this.__eObserve[uuid] = {
                        ele,
                        options: {
                            action_type: 108,
                            ...ele.dataset,
                            ...options
                        },
                        once
                    }; else this.__observe[uuid] = {
                        ele,
                        options: {
                            action_type: 101,
                            ...ele.dataset,
                            ...options
                        },
                        once
                    };
                }));
            }), 300);
        };
        const hiido = Hiido;
        var _SL_State$get, _SL_State$get2;
        const hd = new hiido({
            page: 105
        });
        const {spu} = null !== (_SL_State$get = state_selector.SL_State.get("product")) && void 0 !== _SL_State$get ? _SL_State$get : {};
        const {discountCodeActivityList} = null !== (_SL_State$get2 = state_selector.SL_State.get("productActivity")) && void 0 !== _SL_State$get2 ? _SL_State$get2 : {};
        const discount_coupon_vars = {
            containerIdSel: ".sales__discountCouponBanner-container-hook",
            tagsSel: ".sales__discountCouponBanner-couponItem-hook",
            modalSel: "#salesCouponModalHook",
            drawerId: "salesDiscountCoupon_DiscountDrawer",
            modalShowClassName: "sales-coupon-modal__container--show",
            couponsSel: ".sales-discount-coupon-hook",
            applyClass: "sales-discount-coupon--apply",
            btnSel: ".sales-discount-coupon-card-btn-hook",
            onlyOneContainerSel: ".sales__discountCouponOnlyOne-container-hook",
            onlyOneClickSel: ".sales__discountCouponOnlyOne-applyBtn-hook",
            onlyOneApplyClass: "sales__discountCouponOnlyOne-container--apply",
            onlyOneBtnSel: ".sales__discountCouponOnlyOne-applyBtn-hook"
        };
        function getCartId() {
            return new Promise(((resolve, reject) => {
                var _window$Shopline, _window$Shopline$even;
                null === (_window$Shopline = window.Shopline) || void 0 === _window$Shopline ? void 0 : null === (_window$Shopline$even = _window$Shopline.event) || void 0 === _window$Shopline$even ? void 0 : _window$Shopline$even.emit("Cart::GetCartId", {
                    onSuccess(res) {
                        if (null !== res && void 0 !== res && res.success) {
                            const ownerId = res.data;
                            resolve(ownerId);
                        }
                        reject(res);
                    },
                    onError(error) {
                        reject(error);
                    }
                });
            }));
        }
        function handleTagsShow() {
            const $tags = __SL_$__(discount_coupon_vars.tagsSel);
            if (!$tags[0]) return;
            if ((0, isMobile["default"])()) $tags.css("display", "none").eq(0).css("display", "inline-block"); else $tags.css("display", "inline-block");
        }
        const initDiscountCoupon = (0, effectFc["default"])((function() {
            const {useEffect} = this;
            const container = __SL_$__(discount_coupon_vars.containerIdSel);
            const onlyOneContainer = __SL_$__(discount_coupon_vars.onlyOneContainerSel);
            const drawer = new drawer_Drawer({
                id: discount_coupon_vars.drawerId,
                onSwitch(isShow) {
                    if (isShow) {
                        var _discountCodeActivity, _discountCodeActivity2;
                        const hdOptions = {
                            module: 129,
                            spu_id: null === spu || void 0 === spu ? void 0 : spu.spuSeq,
                            activity_id: null === discountCodeActivityList || void 0 === discountCodeActivityList ? void 0 : null === (_discountCodeActivity = discountCodeActivityList.map) || void 0 === _discountCodeActivity ? void 0 : null === (_discountCodeActivity2 = _discountCodeActivity.call(discountCodeActivityList, (item => null === item || void 0 === item ? void 0 : item.activitySeq))) || void 0 === _discountCodeActivity2 ? void 0 : _discountCodeActivity2.join(",")
                        };
                        hd.exposure(`#${discount_coupon_vars.drawerId}`, {
                            event_id: 1319,
                            ...hdOptions
                        });
                        hd.exposure(`#${discount_coupon_vars.drawerId}`, {
                            event_id: 1320,
                            ...hdOptions
                        }, {
                            effective: true
                        });
                    }
                }
            });
            const modalShow = () => {
                var _discountCodeActivity3, _discountCodeActivity4;
                const modal = __SL_$__(discount_coupon_vars.modalSel);
                modal.addClass(discount_coupon_vars.modalShowClassName);
                const hdOptions = {
                    module: 129,
                    spu_id: null === spu || void 0 === spu ? void 0 : spu.spuSeq,
                    activity_id: null === discountCodeActivityList || void 0 === discountCodeActivityList ? void 0 : null === (_discountCodeActivity3 = discountCodeActivityList.map) || void 0 === _discountCodeActivity3 ? void 0 : null === (_discountCodeActivity4 = _discountCodeActivity3.call(discountCodeActivityList, (item => null === item || void 0 === item ? void 0 : item.activitySeq))) || void 0 === _discountCodeActivity4 ? void 0 : _discountCodeActivity4.join(",")
                };
                hd.exposure(".sales-coupon-modal__container", {
                    event_id: 1319,
                    ...hdOptions
                });
                hd.exposure(".sales-coupon-modal__container", {
                    event_id: 1320,
                    ...hdOptions
                }, {
                    effective: true
                });
            };
            const modalHide = () => {
                const modal = __SL_$__(discount_coupon_vars.modalSel);
                if (modal.hasClass(discount_coupon_vars.modalShowClassName)) modal.removeClass(discount_coupon_vars.modalShowClassName);
            };
            const modalToggle = () => {
                const modal = __SL_$__(discount_coupon_vars.modalSel);
                if (modal.hasClass(discount_coupon_vars.modalShowClassName)) modalHide(); else modalShow();
            };
            let isStopBtnApply = false;
            const bindCouponApply = ({clickSel, onApplySuccess}) => {
                const $clickEl = __SL_$__(clickSel);
                useEffect($clickEl, "on,off", "click", (e => {
                    var _discountCodeActivity5;
                    if (isStopBtnApply) return;
                    const $el = __SL_$__(e.currentTarget);
                    const discountCode = $el.data("discount-code");
                    if (!discountCode) {
                        toast["default"].init({
                            content: (0, i18n.t)("sales.discount_coupon.coupon_not_found")
                        });
                        return;
                    }
                    const cartIdPromise = getCartId();
                    cartIdPromise.then((ownerId => request["default"].post("/sale/coupon/bind/cart", {
                        ownerId,
                        discountCode
                    }))).then((() => {
                        isStopBtnApply = true;
                        setTimeout((() => {
                            isStopBtnApply = false;
                        }), 500);
                        toast["default"].init({
                            content: (0, i18n.t)("sales.discount_coupon.applied_successfully")
                        });
                        if ("function" === typeof onApplySuccess) onApplySuccess(discountCode);
                    })).catch((() => {
                        toast["default"].init({
                            content: (0, i18n.t)("sales.discount_coupon.failed_to_apply_coupon_code")
                        });
                    }));
                    cartIdPromise.then((() => {
                        window.sessionStorage.setItem("tradeExtraInfo", JSON.stringify({
                            discountCode: {
                                value: discountCode,
                                source: "Activity"
                            }
                        }));
                    }));
                    hd.collect({
                        event_id: 1321,
                        module: 129,
                        component: 101,
                        spu_id: null === spu || void 0 === spu ? void 0 : spu.spuSeq,
                        activity_id: null === discountCodeActivityList || void 0 === discountCodeActivityList ? void 0 : null === (_discountCodeActivity5 = discountCodeActivityList.find((item => (null === item || void 0 === item ? void 0 : item.discountCode) === discountCode))) || void 0 === _discountCodeActivity5 ? void 0 : _discountCodeActivity5.activitySeq
                    });
                }));
            };
            if (container.length) {
                useEffect(container, "on,off", "click", (() => {
                    if ((0, isMobile["default"])()) drawer.show(); else modalToggle();
                    hd.collect({
                        event_id: 1318,
                        module: 128,
                        spu_id: null === spu || void 0 === spu ? void 0 : spu.spuSeq
                    });
                }));
                useEffect(__SL_$__(discount_coupon_vars.modalSel), "on,off", "click", (e => {
                    e.stopPropagation();
                }));
                useEffect(__SL_$__(document.body), "on,off", "click", (e => {
                    const {target} = e;
                    const containerDom = container.get(0);
                    if (containerDom.contains(target) || containerDom === target) return;
                    const drawerContainer = document.querySelector(`#${discount_coupon_vars.drawerId}`);
                    if (drawerContainer && drawerContainer.contains(target) || drawerContainer === target) return;
                    if ((0, isMobile["default"])() && drawer.getShowStatus()) drawer.hide();
                    if (!(0, isMobile["default"])()) modalHide();
                }));
                useEffect(event_bus.SL_EventBus, "on,off", "global:platformChange", (() => {
                    handleTagsShow();
                    if (!(0, isMobile["default"])() && drawer.getShowStatus()) {
                        drawer.hide();
                        modalShow();
                    }
                    if ((0, isMobile["default"])()) {
                        const modal = __SL_$__(discount_coupon_vars.modalSel);
                        if (modal.hasClass(discount_coupon_vars.modalShowClassName)) drawer.show();
                        modalHide();
                    }
                }));
                window.SL_EventBus.on("global:currency:format", (() => {
                    const amountNode = container.find("[data-amount]");
                    amountNode.each((function() {
                        __SL_$__(this).text((0, CurrencyConvert.convertFormat)(__SL_$__(this).data("amount")));
                    }));
                    const drawerAmountNode = __SL_$__(`#${discount_coupon_vars.drawerId}`).find("[data-amount]");
                    drawerAmountNode.each((function() {
                        __SL_$__(this).text((0, CurrencyConvert.convertFormat)(__SL_$__(this).data("amount")));
                    }));
                }));
                bindCouponApply({
                    clickSel: discount_coupon_vars.couponsSel,
                    onApplySuccess: discountCode => {
                        const $coupon = __SL_$__(discount_coupon_vars.couponsSel);
                        const $btns = $coupon.find(discount_coupon_vars.btnSel);
                        const btnData = $btns.data();
                        $coupon.removeClass(discount_coupon_vars.applyClass);
                        $btns.text(btnData.apply || "");
                        $btns.each((function() {
                            const $self = __SL_$__(this);
                            const selfData = $self.data();
                            if (true === selfData.isCustom) $self.css({
                                "background-color": selfData.btnBgColor,
                                color: selfData.btnTextColor,
                                border: "none"
                            });
                        }));
                        $coupon.each((function() {
                            const $self = __SL_$__(this);
                            const $btnItems = $self.find(discount_coupon_vars.btnSel);
                            if ($self.data("discount-code") === discountCode) {
                                $self.addClass(discount_coupon_vars.applyClass);
                                $btnItems.text($btnItems.data("applied"));
                                const btnItemsData = $btnItems.data();
                                if (true === btnItemsData.isCustom) $btnItems.css({
                                    color: btnItemsData.btnBgColor,
                                    "background-color": "transparent",
                                    border: `1px solid ${btnItemsData.btnBgColor}`
                                });
                            }
                        }));
                    }
                });
                handleTagsShow();
            } else if (onlyOneContainer.length) {
                useEffect(onlyOneContainer, "on,off", "click", (() => {
                    hd.collect({
                        event_id: 1318,
                        module: 128,
                        spu_id: null === spu || void 0 === spu ? void 0 : spu.spuSeq
                    });
                }));
                bindCouponApply({
                    clickSel: discount_coupon_vars.onlyOneClickSel,
                    onApplySuccess: discountCode => {
                        const $coupon = __SL_$__(discount_coupon_vars.onlyOneContainerSel);
                        const $btns = $coupon.find(discount_coupon_vars.onlyOneBtnSel);
                        const btnData = $btns.data();
                        $coupon.removeClass(discount_coupon_vars.onlyOneApplyClass);
                        $btns.text(btnData.apply || "");
                        $coupon.each((function() {
                            const $self = __SL_$__(this);
                            const $btnItems = $self.find(discount_coupon_vars.onlyOneBtnSel);
                            if ($self.data("discount-code") === discountCode) {
                                $self.addClass(discount_coupon_vars.onlyOneApplyClass);
                                $btnItems.text($btnItems.data("applied"));
                            }
                        }));
                    }
                });
                window.SL_EventBus.on("global:currency:format", (() => {
                    const amountNode = onlyOneContainer.find("[data-amount]");
                    amountNode.each((function() {
                        __SL_$__(this).text((0, CurrencyConvert.convertFormat)(__SL_$__(this).data("amount")));
                    }));
                }));
            }
            if (null !== discountCodeActivityList && void 0 !== discountCodeActivityList && discountCodeActivityList.length) {
                var _discountCodeActivity6, _discountCodeActivity7;
                hd.exposure(`${discount_coupon_vars.onlyOneContainerSel},${discount_coupon_vars.containerIdSel}`, {
                    event_id: 1317,
                    module: 128,
                    spu_id: null === spu || void 0 === spu ? void 0 : spu.spuSeq,
                    activity_id: null === discountCodeActivityList || void 0 === discountCodeActivityList ? void 0 : null === (_discountCodeActivity6 = discountCodeActivityList.map) || void 0 === _discountCodeActivity6 ? void 0 : null === (_discountCodeActivity7 = _discountCodeActivity6.call(discountCodeActivityList, (({activitySeq}) => activitySeq))) || void 0 === _discountCodeActivity7 ? void 0 : _discountCodeActivity7.join(",")
                });
            }
        }));
        const discount_coupon = initDiscountCoupon;
        var baseReport = __webpack_require__("../shared/browser/report/common/baseReport.js");
        var stage_const = __webpack_require__("../shared/browser/report/stage/const.js");
        class ProductPreviewReport extends baseReport.BaseReport {
            constructor() {
                super();
                this.map = {
                    pdp: {
                        pdpType: 101,
                        module: -999
                    },
                    featuredProduct: {
                        pdpType: 102,
                        module: 900
                    },
                    quickViewModal: {
                        pdpType: 103,
                        module: -999
                    }
                };
            }
            viewContent(params) {
                const {selector, content_spu_id, content_sku_id, title, currency, price} = params;
                if (!selector) {
                    console.warn("viewContent 缺少selector参数", params);
                    return;
                }
                const _params = {
                    content_ids: content_spu_id,
                    sku_id: content_sku_id,
                    content_name: title,
                    currency: state_selector.SL_State.get("storeInfo.currency") || currency,
                    value: price,
                    pdp_type: this.map[params.module] && this.map[params.module].pdpType,
                    module: this.map[params.module] && this.map[params.module].module,
                    component: "featuredProduct" === params.module ? 900 : -999,
                    popup_page_base: this.page,
                    page: "quickViewModal" !== params.module ? this.page : 107
                };
                if ("featuredProduct" === params.module) {
                    _params.module_type = stage_const.sectionTypeEnum["featured-product"];
                    _params.component_ID = (0, baseReport.findSectionId)("[data-ssr-plugin-product-detail-container]");
                }
                super.viewContent({
                    selector,
                    reportOnce: "quickViewModal" !== params.module,
                    customParams: _params
                });
            }
        }
        function hdProductViewContent(params) {
            const report = new ProductPreviewReport;
            report.viewContent(params);
        }
        const product_preview = hdProductViewContent;
        const {formatCurrency: product_preview_formatCurrency} = newCurrency["default"];
        const emitProductSkuChange = data => {
            try {
                var _window, _window$SL_State;
                (0, sku_change["default"])({
                    ...data,
                    currency: null === (_window = window) || void 0 === _window ? void 0 : null === (_window$SL_State = _window.SL_State) || void 0 === _window$SL_State ? void 0 : _window$SL_State.get("storeInfo.currency")
                });
            } catch (e) {
                console.error(e);
            }
        };
        const emitProductSkuChanged = data => {
            try {
                var _window2, _window2$SL_State;
                sku_changed({
                    ...data,
                    currency: null === (_window2 = window) || void 0 === _window2 ? void 0 : null === (_window2$SL_State = _window2.SL_State) || void 0 === _window2$SL_State ? void 0 : _window2$SL_State.get("storeInfo.currency")
                });
            } catch (e) {
                console.error(e);
            }
        };
        const emitViewContent = data => {
            try {
                (0, view_content["default"])(data);
                product_preview({
                    ...data,
                    content_sku_id: data.curSkuId,
                    price: data.curSkuPrice
                });
            } catch (e) {
                console.error(e);
            }
        };
        const getSortationIds = spu => {
            if (spu && spu.sortationList && Array.isArray(spu.sortationList)) return spu.sortationList.map((s => s.sortationId)).join(",");
            return "";
        };
        function thirdPartReport({activeSku, spu, sku}) {
            var _sku$skuList, _spu$sortationList, _spu$sortationList$, _spu$sortationList2, _spu$sortationList2$;
            const newActiveSku = activeSku || (null === sku || void 0 === sku ? void 0 : null === (_sku$skuList = sku.skuList) || void 0 === _sku$skuList ? void 0 : _sku$skuList[0]);
            window.SL_EventBus.emit("global:thirdPartReport", {
                GA: [ [ "event", "view_item", {
                    items: [ {
                        id: null === newActiveSku || void 0 === newActiveSku ? void 0 : newActiveSku.skuSeq,
                        name: null === spu || void 0 === spu ? void 0 : spu.title,
                        price: product_preview_formatCurrency(null === newActiveSku || void 0 === newActiveSku ? void 0 : newActiveSku.price),
                        variant: (0, product_button.getVariant)(null === newActiveSku || void 0 === newActiveSku ? void 0 : newActiveSku.skuAttributeIds, null === sku || void 0 === sku ? void 0 : sku.skuAttributeMap)
                    } ]
                } ] ],
                GA4: [ [ "event", "view_item", {
                    currency: window.SL_State.get("storeInfo.currency"),
                    value: product_preview_formatCurrency(null === newActiveSku || void 0 === newActiveSku ? void 0 : newActiveSku.price),
                    items: [ {
                        item_id: null === newActiveSku || void 0 === newActiveSku ? void 0 : newActiveSku.skuSeq,
                        item_name: null === spu || void 0 === spu ? void 0 : spu.title,
                        item_price: product_preview_formatCurrency(null === newActiveSku || void 0 === newActiveSku ? void 0 : newActiveSku.price),
                        item_variant: (0, product_button.getVariant)(null === newActiveSku || void 0 === newActiveSku ? void 0 : newActiveSku.skuAttributeIds, null === sku || void 0 === sku ? void 0 : sku.skuAttributeMap)
                    } ]
                } ] ],
                GAR: [ [ "event", "view_item", {
                    value: product_preview_formatCurrency(null === newActiveSku || void 0 === newActiveSku ? void 0 : newActiveSku.price),
                    items: [ {
                        id: null === newActiveSku || void 0 === newActiveSku ? void 0 : newActiveSku.skuSeq,
                        google_business_vertical: "retail"
                    } ]
                } ] ],
                GARemarketing: [ [ "event", "view_item", {
                    ecomm_prodid: null === newActiveSku || void 0 === newActiveSku ? void 0 : newActiveSku.skuSeq,
                    ecomm_pagetype: "product",
                    ecomm_category: null === spu || void 0 === spu ? void 0 : null === (_spu$sortationList = spu.sortationList) || void 0 === _spu$sortationList ? void 0 : null === (_spu$sortationList$ = _spu$sortationList[0]) || void 0 === _spu$sortationList$ ? void 0 : _spu$sortationList$.sortationId,
                    ecomm_pcat: null === spu || void 0 === spu ? void 0 : null === (_spu$sortationList2 = spu.sortationList) || void 0 === _spu$sortationList2 ? void 0 : null === (_spu$sortationList2$ = _spu$sortationList2[0]) || void 0 === _spu$sortationList2$ ? void 0 : _spu$sortationList2$.sortationName,
                    ecomm_totalvalue: product_preview_formatCurrency(null === newActiveSku || void 0 === newActiveSku ? void 0 : newActiveSku.price)
                } ] ]
            });
        }
        function initPreview({id, statePath, filterShelves, offsetTop, container, onAddSuccess, modalType, position, module, modalContainer}) {
            const sku = window.SL_State.get(`${statePath}.sku`);
            const spu = window.SL_State.get(`${statePath}.spu`);
            const plugin = window.SL_State.get(`${statePath}.plugin`);
            const viewContentSelector = `.__sl-custom-track-${id}`;
            if (filterShelves && !(null !== spu && void 0 !== spu && spu.shelves)) {
                console.error("no spu data or not shelves, init break");
                return () => {};
            }
            const removePositionListener = listenPosition({
                id,
                offsetTop,
                container
            });
            (0, createShadowDom["default"])();
            let productImagesInstance;
            try {
                productImagesInstance = new product_swiper({
                    mediaList: spu.mediaList,
                    selectorId: id,
                    skuList: null === sku || void 0 === sku ? void 0 : sku.skuList,
                    heightOnChange: () => {
                        layout({
                            id,
                            offsetTop,
                            container
                        });
                    },
                    beforeInit: ({pcWrapperSelector}) => {
                        const $dom = document.querySelector(`${pcWrapperSelector} .swiper-container`);
                        if (!$dom) return;
                        const childHtml = $dom.outerHTML;
                        __SL_$__(`${pcWrapperSelector} .swiper-container`).remove();
                        __SL_$__(`${pcWrapperSelector}`).prepend(`<div class="swiper-border-shadow-container">${childHtml}</div>`);
                    }
                });
            } catch (e) {
                setTimeout((() => {
                    throw e;
                }));
            }
            const inquiryPriceModal = new InquiryPriceModal({
                id,
                spu,
                sku
            });
            const addToCartList = new add_to_cart_list(spu, sku);
            addToCartList.init();
            const ButtonGroup = new product_button["default"]({
                id,
                cartRoot: `.pdp_add_to_cart_${id}`,
                buyNowRoot: `.pdp_buy_now_${id}`,
                payPayId: `pdp_paypal_${id}`,
                soldOutRoot: `.pdp_sold_out_${id}`,
                spu,
                sku,
                modalType,
                position,
                onAddSuccess: () => {
                    if ("function" === typeof onAddSuccess) onAddSuccess();
                }
            });
            const attr = __SL_$__(`#product-in-stock_${id}`).attr("stock-number");
            const isShowTips = "false" === attr || void 0 === attr ? true : false;
            console.log("isShowTips", isShowTips);
            const quantityStepper = new product_quantity["default"]({
                id,
                sku,
                spu,
                dataPool: new DataWatcher["default"],
                isShowTips
            });
            quantityStepper.dataPool.watch([ "quantity" ], (num => {
                ButtonGroup.setActiveSkuNum(num);
                if ("productDetail" === id) {
                    window.productDetailDataBus.set("num", num);
                    window.productDetailDataBus.emit("after:countChange", num);
                }
                window.SL_EventBus.emit("product:count:change", [ num, id ]);
            }));
            new product_collapse({
                selector: `.product-detail-collapse_${id}`
            });
            new tabs({
                root: ".product-tabs-container"
            });
            const getSkuChangeData = (skuInfo = {}) => {
                const {spuSeq, discount, skuSeq, price, originPrice, stock, weight, weightUnit, available, shelves, skuAttributeIds, imageList, soldOut, allowOversold, imageBeanList} = skuInfo || {};
                return {
                    spuSeq,
                    discount,
                    skuSeq,
                    price: product_preview_formatCurrency(price || 0),
                    originPrice: product_preview_formatCurrency(originPrice || 0),
                    stock,
                    weight,
                    weightUnit,
                    available,
                    shelves,
                    skuAttributeIds,
                    imageList,
                    soldOut,
                    allowOversold,
                    imageBeanList
                };
            };
            let activeSkuCache = {};
            const getHdReportViewCurSku = activeSku => {
                var _plugin$bizData$b2b, _plugin$bizData, _b2bData$moqPlan, _sku$skuList2;
                let sku_id = "null";
                let price = "null";
                const b2bData = null !== (_plugin$bizData$b2b = null === plugin || void 0 === plugin ? void 0 : null === (_plugin$bizData = plugin.bizData) || void 0 === _plugin$bizData ? void 0 : _plugin$bizData.b2b) && void 0 !== _plugin$bizData$b2b ? _plugin$bizData$b2b : {};
                const isBatchBuy = (null === b2bData || void 0 === b2bData ? void 0 : null === (_b2bData$moqPlan = b2bData.moqPlan) || void 0 === _b2bData$moqPlan ? void 0 : _b2bData$moqPlan.batchBuy) && 2 === b2bData.moqPlan.applyType;
                const isSoldOut = (null === spu || void 0 === spu ? void 0 : spu.soldOut) || (null === activeSku || void 0 === activeSku ? void 0 : activeSku.soldOut);
                const isSigleSku = (null === sku || void 0 === sku ? void 0 : null === (_sku$skuList2 = sku.skuList) || void 0 === _sku$skuList2 ? void 0 : _sku$skuList2.length) < 2;
                if (isBatchBuy || isSoldOut) {
                    sku_id = "null";
                    price = "null";
                } else if (isSigleSku) {
                    sku_id = null === sku || void 0 === sku ? void 0 : sku.skuList[0].skuSeq;
                    price = product_preview_formatCurrency((null === sku || void 0 === sku ? void 0 : sku.skuList[0].skuPrice) || 0);
                } else if (null !== activeSku && void 0 !== activeSku && activeSku.skuSeq) {
                    sku_id = activeSku.skuSeq;
                    price = product_preview_formatCurrency((null === activeSku || void 0 === activeSku ? void 0 : activeSku.price) || 0);
                } else {
                    sku_id = null === sku || void 0 === sku ? void 0 : sku.skuList.filter((({soldOut}) => !soldOut))[0].skuSeq;
                    price = product_preview_formatCurrency((null === sku || void 0 === sku ? void 0 : sku.skuList.filter((({soldOut}) => !soldOut))[0].skuPrice) || 0);
                }
                return {
                    curSkuId: sku_id,
                    curSkuPrice: price
                };
            };
            const skuDataPool = new DataWatcher["default"];
            const skuTrade = (0, sku_trade["default"])({
                id,
                sku,
                spu,
                mixins: window.skuMixins,
                dataPool: skuDataPool,
                modalContainer,
                onInit: (trade, activeSku) => {
                    var _window3, _window3$SL_State, _quantityStepper$skuS3, _quantityStepper$skuS4;
                    thirdPartReport({
                        activeSku,
                        spu,
                        sku
                    });
                    activeSkuCache = activeSku;
                    let content_sku_id = "";
                    let price = null;
                    console.log("sku Init", activeSku);
                    inquiryPriceModal.setActiveSku(activeSku);
                    if ("productDetail" === id) {
                        window.productDetailDataBus.set("activeSku", activeSku);
                        window.productDetailDataBus.emit("init:sku", activeSku);
                    }
                    if (activeSku) {
                        var _quantityStepper$skuS, _quantityStepper$skuS2;
                        quantityStepper.setActiveSku(activeSku);
                        ButtonGroup.setActiveSku(activeSku);
                        addToCartList.setActiveSku(activeSku);
                        content_sku_id = null === activeSku || void 0 === activeSku ? void 0 : activeSku.skuSeq;
                        price = product_preview_formatCurrency((null === activeSku || void 0 === activeSku ? void 0 : activeSku.price) || 0);
                        emitProductSkuChange({
                            type: "init",
                            quantity: (null === quantityStepper || void 0 === quantityStepper ? void 0 : null === (_quantityStepper$skuS = quantityStepper.skuStepper) || void 0 === _quantityStepper$skuS ? void 0 : null === (_quantityStepper$skuS2 = _quantityStepper$skuS.data) || void 0 === _quantityStepper$skuS2 ? void 0 : _quantityStepper$skuS2.value) || 1,
                            ...getSkuChangeData(activeSku)
                        });
                    }
                    emitViewContent({
                        content_spu_id: spu.spuSeq,
                        content_sku_id,
                        content_category: getSortationIds(spu),
                        currency: null === (_window3 = window) || void 0 === _window3 ? void 0 : null === (_window3$SL_State = _window3.SL_State) || void 0 === _window3$SL_State ? void 0 : _window3$SL_State.get("storeInfo.currency"),
                        value: price,
                        quantity: 1,
                        price,
                        title: spu.title,
                        module,
                        selector: viewContentSelector,
                        ...getHdReportViewCurSku(activeSkuCache)
                    });
                    emitProductSkuChanged({
                        type: "init",
                        id,
                        productId: spu.spuSeq,
                        instances: {
                            productImages: productImagesInstance,
                            buttonGroup: ButtonGroup,
                            skuDataPool,
                            quantityStepper
                        },
                        quantity: (null === quantityStepper || void 0 === quantityStepper ? void 0 : null === (_quantityStepper$skuS3 = quantityStepper.skuStepper) || void 0 === _quantityStepper$skuS3 ? void 0 : null === (_quantityStepper$skuS4 = _quantityStepper$skuS3.data) || void 0 === _quantityStepper$skuS4 ? void 0 : _quantityStepper$skuS4.value) || 1,
                        ...getSkuChangeData(activeSku)
                    });
                    trade.dataPool.watch([ "activeSku" ], (activeSku => {
                        var _productImagesInstanc, _activeSku$imageBeanL;
                        if ("productDetail" === id) {
                            window.productDetailDataBus.set("activeSku", activeSku);
                            window.productDetailDataBus.emit("after:skuChange", activeSku);
                            if (activeSku) window.history.replaceState({}, document.title, (0, url.changeURLArg)(window.location.href, "sku", activeSku.skuSeq)); else window.history.replaceState({}, document.title, (0, 
                            url.delParam)("sku"));
                        }
                        activeSkuCache = activeSku;
                        inquiryPriceModal.setActiveSku(activeSku);
                        null === (_productImagesInstanc = productImagesInstance) || void 0 === _productImagesInstanc ? void 0 : _productImagesInstanc.skuImageChange(null === activeSku || void 0 === activeSku ? void 0 : null === (_activeSku$imageBeanL = activeSku.imageBeanList) || void 0 === _activeSku$imageBeanL ? void 0 : _activeSku$imageBeanL[0]);
                        if (activeSku || quantityStepper.activeSku) {
                            (0, product_info["default"])(id, statePath, activeSku);
                            quantityStepper.setActiveSku(activeSku);
                            ButtonGroup.setActiveSku(activeSku);
                            addToCartList.setActiveSku(activeSku);
                        }
                    }));
                },
                onChange: activeSku => {
                    var _quantityStepper$skuS7, _quantityStepper$skuS8;
                    if (activeSku) {
                        var _quantityStepper$skuS5, _quantityStepper$skuS6;
                        thirdPartReport({
                            activeSku,
                            spu,
                            sku
                        });
                        emitProductSkuChange({
                            type: "change",
                            quantity: (null === quantityStepper || void 0 === quantityStepper ? void 0 : null === (_quantityStepper$skuS5 = quantityStepper.skuStepper) || void 0 === _quantityStepper$skuS5 ? void 0 : null === (_quantityStepper$skuS6 = _quantityStepper$skuS5.data) || void 0 === _quantityStepper$skuS6 ? void 0 : _quantityStepper$skuS6.value) || 1,
                            ...getSkuChangeData(activeSku)
                        });
                    }
                    emitProductSkuChanged({
                        type: "change",
                        id,
                        productId: spu.spuSeq,
                        instances: {
                            productImages: productImagesInstance,
                            buttonGroup: ButtonGroup,
                            quantityStepper
                        },
                        quantity: (null === quantityStepper || void 0 === quantityStepper ? void 0 : null === (_quantityStepper$skuS7 = quantityStepper.skuStepper) || void 0 === _quantityStepper$skuS7 ? void 0 : null === (_quantityStepper$skuS8 = _quantityStepper$skuS7.data) || void 0 === _quantityStepper$skuS8 ? void 0 : _quantityStepper$skuS8.value) || 1,
                        ...getSkuChangeData(activeSku)
                    });
                }
            });
            try {
                (0, preview_init["default"])({
                    id,
                    position,
                    modalType,
                    module,
                    product: window.SL_State.get(`${statePath}`),
                    modalContainer,
                    modalContainerElement: modalContainer && modalContainer[0],
                    instances: {
                        productImages: productImagesInstance,
                        buttonGroup: ButtonGroup,
                        skuDataPool,
                        quantityStepper,
                        skuTrade
                    }
                });
            } catch (e) {
                console.error(e);
            }
            const unmountPromotionTags = auto_coupon_banner(`#product-info_${id}`);
            const unmountedDiscountCoupon = discount_coupon();
            window.SL_EventBus.on("global:currency:format", (() => {
                (0, product_info["default"])(id, statePath, quantityStepper.activeSku);
            }));
            try {
                const flashSale = new flash_sale;
                flashSale.init();
            } catch (e) {
                console.log("初始化限时促销工具出错");
                console.error(e);
            }
            return {
                skuTrade,
                quantityStepper,
                productEventRepeat: () => {
                    var _window4, _window4$SL_State;
                    let content_sku_id = "";
                    let price = null;
                    if (activeSkuCache) {
                        var _activeSkuCache, _activeSkuCache2, _quantityStepper$skuS9, _quantityStepper$skuS10;
                        content_sku_id = null === (_activeSkuCache = activeSkuCache) || void 0 === _activeSkuCache ? void 0 : _activeSkuCache.skuSeq;
                        price = product_preview_formatCurrency((null === (_activeSkuCache2 = activeSkuCache) || void 0 === _activeSkuCache2 ? void 0 : _activeSkuCache2.price) || 0);
                        emitProductSkuChange({
                            type: "init",
                            quantity: (null === quantityStepper || void 0 === quantityStepper ? void 0 : null === (_quantityStepper$skuS9 = quantityStepper.skuStepper) || void 0 === _quantityStepper$skuS9 ? void 0 : null === (_quantityStepper$skuS10 = _quantityStepper$skuS9.data) || void 0 === _quantityStepper$skuS10 ? void 0 : _quantityStepper$skuS10.value) || 1,
                            ...getSkuChangeData(activeSkuCache)
                        });
                    }
                    thirdPartReport({
                        activeSku: activeSkuCache,
                        spu,
                        sku
                    });
                    emitViewContent({
                        content_spu_id: spu.spuSeq,
                        content_sku_id,
                        content_category: getSortationIds(spu),
                        currency: null === (_window4 = window) || void 0 === _window4 ? void 0 : null === (_window4$SL_State = _window4.SL_State) || void 0 === _window4$SL_State ? void 0 : _window4$SL_State.get("storeInfo.currency"),
                        value: price,
                        quantity: 1,
                        price,
                        title: spu.title,
                        module,
                        selector: viewContentSelector,
                        ...getHdReportViewCurSku(activeSkuCache)
                    });
                },
                destroy: () => {
                    inquiryPriceModal.unbindEvents();
                    null === unmountPromotionTags || void 0 === unmountPromotionTags ? void 0 : unmountPromotionTags();
                    null === unmountedDiscountCoupon || void 0 === unmountedDiscountCoupon ? void 0 : unmountedDiscountCoupon();
                    removePositionListener();
                    skuTrade.destory();
                }
            };
        }
    },
    "./src/assets/product/detail/js/product-quantity.js": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
        "use strict";
        __webpack_require__.d(__webpack_exports__, {
            default: () => SkuQuality
        });
        var DataWatcher = __webpack_require__("../shared/browser/utils/sku/DataWatcher.js");
        var i18n = __webpack_require__("../shared/browser/utils/i18n.js");
        var get = __webpack_require__("../shared/browser/node_modules/lodash/get.js");
        var get_default = __webpack_require__.n(get);
        var toast = __webpack_require__("../shared/browser/components/hbs/shared/components/toast/index.js");
        const EVENT_BUS = {
            QUANTITY_ADD_EVENT: "product:quantity:add",
            QUANTITY_MINUS_EVENT: "product:quantity:minus",
            QUANTITY_MODIFY_EVENT: "product:quantity:modify",
            SKU_INIT_EVENT: "product:sku:init",
            SKU_CHANGE_EVENT: "product:sku:change"
        };
        const TOAST_TYPE = {
            ACTIVE_PURCHASE_LIMIITED: 1,
            PRODUCT_PURCHASE_LIMIITED: 2,
            ACTIVE_NOSTOCK: -1
        };
        const template = saleBuyLimitConfig => {
            const {userLimitedType, acquirePerUserLimit} = saleBuyLimitConfig || {};
            switch (userLimitedType) {
              case TOAST_TYPE.ACTIVE_PURCHASE_LIMIITED:
                return (0, i18n.t)("products.product_details.activity_toast_product__limit", {
                    stock: acquirePerUserLimit > 0 ? acquirePerUserLimit : "0"
                });

              case TOAST_TYPE.PRODUCT_PURCHASE_LIMIITED:
                return (0, i18n.t)("products.product_details.activity_toast_price_limit", {
                    num: acquirePerUserLimit > 0 ? acquirePerUserLimit : "0"
                });

              case TOAST_TYPE.ACTIVE_NOSTOCK:
                return (0, i18n.t)("products.product_details.activity_toast_title__limit");

              default:
                return "";
            }
        };
        const defaultOption = {
            id: "",
            productInfo: {}
        };
        class FlashSale {
            constructor(option = {}) {
                this.option = {
                    ...defaultOption,
                    ...option
                };
                this.option.productInfo[this.option.id] = {};
                this.init();
            }
            init() {
                this.toast = new toast["default"];
                this.bindEventListener();
            }
            bindEventListener() {
                window.SL_EventBus.on(EVENT_BUS.QUANTITY_ADD_EVENT, (([value, selector]) => {
                    if (this.checkData({
                        selector
                    })) {
                        this.getProductNum(value);
                        this.showTips(value);
                    }
                }));
                window.SL_EventBus.on(EVENT_BUS.QUANTITY_MINUS_EVENT, (([value, selector]) => {
                    if (this.checkData({
                        selector
                    })) {
                        this.getProductNum(value);
                        this.showTips(value);
                    }
                }));
                window.SL_EventBus.on(EVENT_BUS.QUANTITY_MODIFY_EVENT, (([value, overStockLimit, selector]) => {
                    if (this.checkData({
                        selector
                    })) {
                        this.getProductNum(value);
                        if (!overStockLimit) this.showTips(value);
                    }
                }));
                window.SL_EventBus.on(EVENT_BUS.SKU_INIT_EVENT, (([sku, id]) => {
                    if (this.checkData({
                        id
                    })) this.dataProcess(sku);
                }));
                window.SL_EventBus.on(EVENT_BUS.SKU_CHANGE_EVENT, (([sku, id]) => {
                    if (this.checkData({
                        id
                    })) {
                        this.dataProcess(sku);
                        this.showTips(this.option.productInfo[this.option.id].productNum);
                        this.compareStock(sku);
                    }
                }));
            }
            compareStock(sku) {
                const {stock} = sku || {};
                if (stock <= this.option.productInfo[this.option.id].productNum) this.option.productInfo[this.option.id].productNum = stock;
            }
            checkData(data) {
                const {id, selector} = data || {};
                if (id === this.option.id || selector && selector.attr("id") && selector.attr("id").indexOf(this.option.id) > -1) return true;
                return false;
            }
            getProductNum(value) {
                this.option.productInfo[this.option.id].productNum = value;
            }
            dataProcess(sku) {
                const prdInfo = this.option.productInfo[this.option.id];
                const {saleActivityResponseList, stock} = sku || {};
                if (!saleActivityResponseList) {
                    this.option.productInfo[this.option.id] = {};
                    return;
                }
                Array.isArray(saleActivityResponseList) && saleActivityResponseList.forEach((item => {
                    const {promotionType, promotionSubType, saleBuyLimitConfig} = item || {};
                    if (1 === promotionType && 1 === promotionSubType) {
                        this.option.productInfo[this.option.id].activeTip = !get_default()(item, "saleBuyLimitConfig.allowBuyOverLimit") ? template(saleBuyLimitConfig) : "";
                        prdInfo.promotionRemainStock = get_default()(item, "skuPromotionProduct.promotionRemainStock");
                        prdInfo.userRemainBuyCount = get_default()(item, "skuPromotionProduct.userRemainBuyCount");
                    }
                }));
                prdInfo.stock = stock;
            }
            showTips(value) {
                const prdInfo = this.option.productInfo[this.option.id] || {};
                if (prdInfo.activeTip && -1 !== prdInfo.promotionRemainStock && prdInfo.promotionRemainStock < value) this.toast.open(template({
                    userLimitedType: -1
                })); else if (prdInfo.activeTip && prdInfo.userRemainBuyCount < value) this.toast.open(prdInfo.activeTip);
            }
        }
        const flashSale = FlashSale;
        var components_toast = __webpack_require__("./src/assets/commons/components/toast/index.js");
        class SkuStepper {
            constructor({root, value, min, max, domReady, disabled, onChange, step = 1, showOverStockToast = true}) {
                this.root = root;
                this.data = {
                    min,
                    max,
                    step,
                    disabled,
                    value,
                    showOverStockToast
                };
                this.onChange = onChange;
                this.init(domReady);
            }
            init(domReady) {
                if (domReady) {
                    this.$stepper = __SL_$__(this.root);
                    this.initEvent();
                } else this.createAndInitDom();
                this.toast = new components_toast["default"];
            }
            initEvent() {
                if (this.data.disabled) return;
                this.$stepper.children(".stepper-before").on("click", (() => {
                    if (this.data.min < this.data.value) {
                        this.data.value -= this.data.step;
                        if (this.data.value < this.data.min) this.data.value = this.data.min;
                        this.render();
                        window.SL_EventBus.emit("product:quantity:minus", [ this.data.value, this.root ]);
                    }
                }));
                this.$stepper.children(".stepper-after").on("click", (() => {
                    if (this.data.value < this.data.max) {
                        this.data.value += this.data.step;
                        if (this.data.value > this.data.max) this.data.value = this.data.max;
                        this.render();
                        window.SL_EventBus.emit("product:quantity:add", [ this.data.value, this.root ]);
                    }
                }));
                this.$stepper.children(".stepper-input").on("input", (e => {
                    const filerValue = e.target.value.replace(/[^\d]/g, "");
                    const value = filerValue ? Number(filerValue) : filerValue;
                    this.data.value = value;
                    this.render();
                }));
                this.$stepper.children(".stepper-input").on("blur", (e => {
                    const value = Number(e.target.value);
                    let overStockLimit = 0;
                    let isReset = 1;
                    if (value > this.data.max) {
                        this.data.value = this.data.max;
                        if (!this.data.disabled) {
                            overStockLimit = 1;
                            if (this.data.showOverStockToast) this.toast.open((0, i18n.t)("cart.stock.limit", {
                                stock: this.data.max
                            }), 1e3);
                        }
                    } else if (this.data.min > value) this.data.value = this.data.min; else isReset = 0;
                    window.SL_EventBus.emit("product:quantity:modify", [ this.data.value, overStockLimit, this.root ]);
                    if (isReset) this.render();
                }));
            }
            createAndInitDom() {
                __SL_$__(this.root).html(`<div>stepper</div>`);
            }
            setSingleDisabled(position, disabled) {
                if (disabled) this.$stepper.children(`.stepper-${position}`).addClass("disabled"); else this.$stepper.children(`.stepper-${position}`).removeClass("disabled");
            }
            setStepperDisabled() {
                if (this.data.disabled) this.$stepper.addClass("disabled"); else this.$stepper.removeClass("disabled");
            }
            setStepperData(obj) {
                this.data = {
                    ...this.data,
                    ...obj
                };
                this.render();
            }
            render() {
                if (this.data.value) {
                    this.setSingleDisabled("before", this.data.min >= this.data.value);
                    this.setSingleDisabled("after", this.data.max <= this.data.value);
                }
                this.$stepper.children(".stepper-input").val(this.data.value);
                this.onChange(this.data.value);
            }
        }
        const sku_stepper = SkuStepper;
        const initValue = 1;
        class SkuQuality {
            constructor({sku, spu, activeSku, id, onChange, dataPool, isCheckStock = true, isOpenFlashSale, fixedMax = 0, isShowTips = true}) {
                this.activeSku = activeSku;
                this.sku = sku;
                this.spu = spu;
                this.id = id;
                this.root = `#product-detail-sku-quantity_${id}`;
                this.isOpenFlashSale = isOpenFlashSale || __SL_$__(`#has-b2b-plugin-${id}`).length <= 0;
                this.dataPool = dataPool || new DataWatcher["default"];
                this.onChange = onChange;
                this.isCheckStock = isCheckStock;
                this.fixedMax = fixedMax;
                this.isShowTips = isShowTips;
                this.init();
            }
            getMax() {
                if (this.fixedMax) return this.fixedMax;
                if (!this.activeSku) return 99999;
                if (this.isTrackStock() && this.isCheckStock) {
                    var _this$activeSku;
                    return (null === (_this$activeSku = this.activeSku) || void 0 === _this$activeSku ? void 0 : _this$activeSku.stock) > 0 ? Math.min(99999, this.activeSku.stock) : 1;
                }
                return 99999;
            }
            isTrackStock() {
                var _this$activeSku2, _this$activeSku3;
                return !(null !== (_this$activeSku2 = this.activeSku) && void 0 !== _this$activeSku2 && _this$activeSku2.infiniteStock) && !(null !== (_this$activeSku3 = this.activeSku) && void 0 !== _this$activeSku3 && _this$activeSku3.allowOversold);
            }
            init() {
                var _this$spu, _this$activeSku4;
                this.skuStepper = new sku_stepper({
                    domReady: true,
                    root: __SL_$__(`#product-detail-sku-stepper_${this.id}`),
                    max: this.getMax(),
                    value: initValue,
                    min: 1,
                    disabled: (null === (_this$spu = this.spu) || void 0 === _this$spu ? void 0 : _this$spu.soldOut) || this.isTrackStock() && this.activeSku && (null === (_this$activeSku4 = this.activeSku) || void 0 === _this$activeSku4 ? void 0 : _this$activeSku4.stock) < 1,
                    showOverStockToast: this.isShowTips,
                    onChange: num => {
                        var _this$onChange;
                        if (num !== this.dataPool.quantity) this.dataPool.quantity = num;
                        null === (_this$onChange = this.onChange) || void 0 === _this$onChange ? void 0 : _this$onChange.call(this, num);
                    }
                });
                if (this.isOpenFlashSale) new flashSale({
                    id: `${this.id}`
                }).init();
                this.dataPool.quantity = initValue;
                this.dataPool.watch([ "quantity" ], (() => {
                    this.setCurrentNum(this.dataPool.quantity);
                }));
            }
            render() {
                console.log(this.activeSku);
                if (this.isShowTips) {
                    var _this$activeSku5, _this$activeSku6;
                    const showTips = this.isTrackStock() && this.activeSku && (null === (_this$activeSku5 = this.activeSku) || void 0 === _this$activeSku5 ? void 0 : _this$activeSku5.stock) < 10 && (null === (_this$activeSku6 = this.activeSku) || void 0 === _this$activeSku6 ? void 0 : _this$activeSku6.stock) > 0;
                    if (showTips) {
                        const content = (0, i18n.t)(`cart.stock.limit`, {
                            stock: this.activeSku.stock
                        });
                        this.setErrorTips(showTips, content);
                    } else this.setErrorTips(showTips);
                } else {
                    let content = "";
                    if (!this.activeSku) {
                        content = "0";
                        __SL_$__(`#product-in-stock_${this.id} .stock-num`).html(content);
                        __SL_$__(`#product-in-stock_${this.id}`).addClass("stock-hide");
                    } else {
                        if (this.activeSku.infiniteStock) content = (0, i18n.t)("products.product_details.in_stock"); else if (!this.activeSku.infiniteStock && !this.activeSku.allowOversold) if (this.activeSku.stock >= 0) content = this.activeSku.stock > 99999 ? 99999 : this.activeSku.stock; else content = 0; else if (!this.activeSku.infiniteStock && this.activeSku.allowOversold) content = (0, 
                        i18n.t)("products.product_details.in_stock");
                        __SL_$__(`#product-in-stock_${this.id} .stock-num`).html(content);
                        __SL_$__(`#product-in-stock_${this.id}`).removeClass("stock-hide");
                    }
                }
            }
            setErrorTips(show, content) {
                if (show) __SL_$__(this.root).children(".stepper-tip").html(content).removeClass("hide"); else __SL_$__(this.root).children(".stepper-tip").addClass("hide");
            }
            setCurrentNum(num) {
                const data = {
                    ...this.skuStepper.data,
                    value: num
                };
                this.skuStepper.setStepperData(data);
            }
            setActiveSku(sku) {
                var _this$activeSku7;
                let current = this.skuStepper.data.value < 0 ? 1 : this.skuStepper.data.value;
                if (!sku) {
                    this.activeSku = null;
                    const stepperData = {
                        value: current,
                        max: this.fixedMax || 99999,
                        disabled: false
                    };
                    this.skuStepper.setStepperData(stepperData);
                    this.render();
                    return;
                }
                this.activeSku = sku;
                if (current > this.getMax()) {
                    current = this.getMax();
                    if (!sku.soldOut && this.isShowTips) this.skuStepper.toast.open((0, i18n.t)(`cart.stock.limit`, {
                        stock: current
                    }), 1e3);
                }
                const stepperData = {
                    value: current,
                    max: this.getMax(),
                    disabled: this.spu.soldOut || this.isTrackStock() && this.activeSku && (null === (_this$activeSku7 = this.activeSku) || void 0 === _this$activeSku7 ? void 0 : _this$activeSku7.stock) < 1
                };
                this.skuStepper.setStepperData(stepperData);
                this.render();
            }
        }
    },
    "./src/assets/product/detail/js/sku-trade.js": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
        "use strict";
        __webpack_require__.d(__webpack_exports__, {
            default: () => initSku
        });
        var DataWatcher = __webpack_require__("../shared/browser/utils/sku/DataWatcher.js");
        class SkuUtil {
            constructor() {
                this.skuResult = {};
            }
            initSku(data) {
                if (!data) return {};
                const skuKeys = Object.keys(data);
                skuKeys.forEach((skuKey => {
                    const sku = data[skuKey];
                    const skuKeyAttrs = skuKey.split(";");
                    const combArr = SkuUtil.combInFlags(skuKeyAttrs);
                    combArr.forEach((item => {
                        this.skuOptionAttrResult(item, sku);
                    }));
                }));
                return this.skuResult;
            }
            static combInFlags(skuKeyAttrs) {
                if (!skuKeyAttrs || skuKeyAttrs.length <= 0) return [];
                const len = skuKeyAttrs.length;
                const result = [];
                for (let n = 1; n <= len; n++) {
                    const flags = SkuUtil.getCombFlags(len, n);
                    flags.forEach((flag => {
                        const comb = [];
                        flag.forEach(((item, index) => {
                            if (1 === item) comb.push(skuKeyAttrs[index]);
                        }));
                        result.push(comb);
                    }));
                }
                return result;
            }
            static getCombFlags(m, n) {
                const flagArrs = [];
                const flagArr = [];
                let isEnd = false;
                for (let i = 0; i < m; i += 1) flagArr[i] = i < n ? 1 : 0;
                flagArrs.push(flagArr.concat());
                if (n && m > n) while (!isEnd) {
                    let leftCnt = 0;
                    for (let i = 0; i < m - 1; i++) {
                        if (1 === flagArr[i] && 0 === flagArr[i + 1]) {
                            for (let j = 0; j < i; j++) flagArr[j] = j < leftCnt ? 1 : 0;
                            flagArr[i] = 0;
                            flagArr[i + 1] = 1;
                            const aTmp = flagArr.concat();
                            flagArrs.push(aTmp);
                            if (-1 === aTmp.slice(-n).join("").indexOf("0")) isEnd = true;
                            break;
                        }
                        1 === flagArr[i] && leftCnt++;
                    }
                }
                return flagArrs;
            }
            skuOptionAttrResult(combArrItem, sku) {
                const key = combArrItem.join(";");
                if (this.skuResult[key]) {
                    const prevPrice = this.skuResult[key].price;
                    const curPrice = [ sku.price ];
                    this.skuResult[key] = {
                        ...sku,
                        price: prevPrice.concat(curPrice).sort(),
                        stock: this.skuResult[key].stock + sku.stock
                    };
                } else this.skuResult[key] = {
                    ...sku,
                    price: [ sku.price ]
                };
            }
            static filterValidArr(arr) {
                return arr.filter((item => item)).map((item => item.id));
            }
            checkSpecAttrDisabled(selectSpecList, id, index) {
                if (!this.skuResult[id]) return true;
                const newSelectList = selectSpecList.map((item => item && {
                    id: item
                }));
                newSelectList[index] = {
                    id: "",
                    ...newSelectList[index]
                };
                if (Number(newSelectList[index].id) !== Number(id)) {
                    newSelectList[index].id = id;
                    const hitAttrKey = SkuUtil.filterValidArr(newSelectList).join(";");
                    return !this.skuResult[hitAttrKey];
                }
            }
            checkSpecAttrActive(selectSpecList, name) {
                const newSelectList = selectSpecList.map((item => ({
                    id: item
                })));
                return -1 !== SkuUtil.filterValidArr(newSelectList).indexOf(name) || -1 !== SkuUtil.filterValidArr(newSelectList).indexOf(Number(name));
            }
            getActionSpecList(selectSpecList, item, index) {
                if (selectSpecList[index] && selectSpecList[index] === item.id) selectSpecList[index] = null; else selectSpecList[index] = item.id;
                if (selectSpecList.length) return selectSpecList.slice();
                return [];
            }
            getPrice(selectSpecList) {
                const skukey = SkuUtil.filterValidArr(selectSpecList).join(";");
                const hitSpecObj = this.skuResult[skukey];
                if (!hitSpecObj) return null;
                const priceArr = hitSpecObj.price;
                const maxPrice = Math.max(...priceArr);
                const minPrice = Math.min(...priceArr);
                return {
                    minPrice,
                    maxPrice
                };
            }
            getStock(selectSpecList) {
                const skukey = SkuUtil.filterValidArr(selectSpecList).join(";");
                const hitSpecObj = this.skuResult[skukey];
                if (!hitSpecObj) return null;
                return hitSpecObj.stock;
            }
        }
        function getSkuComMap(skuList) {
            const validSkuMap = {};
            const invalidSkuMap = {};
            if (!skuList) return {
                validSkuMap,
                invalidSkuMap
            };
            skuList.forEach((sku => {
                if (sku.skuAttributeIds) {
                    const skuKey = sku.skuAttributeIds.sort(((a, b) => (a.attributeWeight || 0) - (b.attributeWeight || 0))).map((item => `${item.id}:${item.valueId}`)).join(";");
                    if (!sku.available) invalidSkuMap[skuKey] = {
                        ...sku
                    }; else validSkuMap[skuKey] = {
                        price: sku.price,
                        stock: sku.stock,
                        skuSeq: sku.skuSeq,
                        spuSeq: sku.spuSeq
                    };
                }
            }));
            return {
                validSkuMap,
                invalidSkuMap
            };
        }
        function getSku(selectSkuArr, skuList, sourceSkuList) {
            const skuKey = selectSkuArr.map((item => item)).join(";");
            if (!skuKey) return null;
            const hitSku = sourceSkuList.find((item => {
                var _skuList$skuKey;
                return item.skuSeq === (null === (_skuList$skuKey = skuList[skuKey]) || void 0 === _skuList$skuKey ? void 0 : _skuList$skuKey.skuSeq);
            }));
            return hitSku || null;
        }
        function transSkuSpecList(skuAttributeMap) {
            const resultArr = [];
            if (!skuAttributeMap) return resultArr;
            Object.entries(skuAttributeMap).sort((([, a], [, b]) => (a.attributeWeight || 0) - (b.attributeWeight || 0))).forEach((([nameId, item]) => {
                const specAttrListResult = [];
                Object.entries(item.skuAttributeValueMap).sort((([, a], [, b]) => (a.attributeValueWeight || 0) - (b.attributeValueWeight || 0))).forEach((([attrId, attr]) => {
                    const id = `${nameId}:${attrId}`;
                    const name = attr.defaultValue;
                    const imgUrl = attr.imgUrl || "";
                    specAttrListResult.push({
                        id,
                        name,
                        imgUrl
                    });
                }));
                const skuSpecObj = {
                    hidden: item.hidden,
                    nameId,
                    specName: item.defaultName,
                    specAttrList: specAttrListResult,
                    onlyShowAttrImg: specAttrListResult.every((item => item.imgUrl))
                };
                resultArr.push(skuSpecObj);
            }));
            return resultArr;
        }
        function getAttrValue(specList, currentAttrId, index) {
            var _specList$index, _specList$index$specA;
            if (!Array.isArray(specList)) return "";
            return (null === (_specList$index = specList[index]) || void 0 === _specList$index ? void 0 : null === (_specList$index$specA = _specList$index.specAttrList) || void 0 === _specList$index$specA ? void 0 : _specList$index$specA.find((item => item.id === currentAttrId))) || null;
        }
        class BaseSkuTrade {
            constructor({sku, spu, initialSkuSeq, dataPool, modalContainer, root, domReady, onInit, onChange, onDestory, mixins}) {
                this.mixins = mixins;
                this.root = __SL_$__(root);
                const quickViewModal = modalContainer ? modalContainer.find(".product-preview-modal-content") : null;
                const quickAddModal = modalContainer ? modalContainer.find(".quick-add-modal__container .mp-modal__body") : null;
                const isExistQuickViewModal = quickViewModal && quickViewModal.length > 0;
                this.targetContainer = isExistQuickViewModal ? quickViewModal : quickAddModal;
                if (dataPool) this.dataPool = dataPool; else this.dataPool = new DataWatcher["default"];
                if (!this.dataPool.inited) {
                    this.dataPool.sku = sku || {};
                    this.dataPool.spu = spu || {};
                    this.dataPool.attrArray = [];
                    this.dataPool.currentSpecList = [];
                    this.dataPool.skuType = "";
                    this.dataPool.validSkuMap = {};
                    this.dataPool.invalidSkuMap = {};
                    this.dataPool.activeSku = null;
                    this.dataPool.initialSkuSeq = initialSkuSeq;
                }
                this.onInit = onInit;
                this.onChange = onChange;
                this.onDestory = onDestory;
                this.init(domReady);
            }
            beforeInitDom() {
                var _this$mixins, _this$mixins$forEach;
                null === (_this$mixins = this.mixins) || void 0 === _this$mixins ? void 0 : null === (_this$mixins$forEach = _this$mixins.forEach) || void 0 === _this$mixins$forEach ? void 0 : _this$mixins$forEach.call(_this$mixins, (item => {
                    var _item$beforeInitDom, _item$beforeInitDom$c;
                    null === item || void 0 === item ? void 0 : null === (_item$beforeInitDom = item.beforeInitDom) || void 0 === _item$beforeInitDom ? void 0 : null === (_item$beforeInitDom$c = _item$beforeInitDom.call) || void 0 === _item$beforeInitDom$c ? void 0 : _item$beforeInitDom$c.call(_item$beforeInitDom, this, this);
                }));
            }
            afterInitDom() {
                var _this$mixins2, _this$mixins2$forEach;
                null === (_this$mixins2 = this.mixins) || void 0 === _this$mixins2 ? void 0 : null === (_this$mixins2$forEach = _this$mixins2.forEach) || void 0 === _this$mixins2$forEach ? void 0 : _this$mixins2$forEach.call(_this$mixins2, (item => {
                    var _item$afterInitDom, _item$afterInitDom$ca;
                    null === item || void 0 === item ? void 0 : null === (_item$afterInitDom = item.afterInitDom) || void 0 === _item$afterInitDom ? void 0 : null === (_item$afterInitDom$ca = _item$afterInitDom.call) || void 0 === _item$afterInitDom$ca ? void 0 : _item$afterInitDom$ca.call(_item$afterInitDom, this, this);
                }));
            }
            beforeUpdate() {
                var _this$mixins3, _this$mixins3$forEach;
                null === (_this$mixins3 = this.mixins) || void 0 === _this$mixins3 ? void 0 : null === (_this$mixins3$forEach = _this$mixins3.forEach) || void 0 === _this$mixins3$forEach ? void 0 : _this$mixins3$forEach.call(_this$mixins3, (item => {
                    var _item$beforeUpdate, _item$beforeUpdate$ca;
                    null === item || void 0 === item ? void 0 : null === (_item$beforeUpdate = item.beforeUpdate) || void 0 === _item$beforeUpdate ? void 0 : null === (_item$beforeUpdate$ca = _item$beforeUpdate.call) || void 0 === _item$beforeUpdate$ca ? void 0 : _item$beforeUpdate$ca.call(_item$beforeUpdate, this, this);
                }));
            }
            afterUpdate() {
                var _this$mixins4, _this$mixins4$forEach;
                null === (_this$mixins4 = this.mixins) || void 0 === _this$mixins4 ? void 0 : null === (_this$mixins4$forEach = _this$mixins4.forEach) || void 0 === _this$mixins4$forEach ? void 0 : _this$mixins4$forEach.call(_this$mixins4, (item => {
                    var _item$afterUpdate, _item$afterUpdate$cal;
                    null === item || void 0 === item ? void 0 : null === (_item$afterUpdate = item.afterUpdate) || void 0 === _item$afterUpdate ? void 0 : null === (_item$afterUpdate$cal = _item$afterUpdate.call) || void 0 === _item$afterUpdate$cal ? void 0 : _item$afterUpdate$cal.call(_item$afterUpdate, this, this);
                }));
            }
            init(domReady) {
                if (!this.dataPool.inited) {
                    this.dataPool.skuUtil = new SkuUtil;
                    this.initAttrArray();
                    this.initSkuComMap();
                    this.initFirstChecked();
                }
                this.dataPool.watch([ "currentSpecList" ], (() => {
                    this.render();
                }));
                this.beforeInitDom();
                if (domReady) this.initDom(); else this.createAndInitDom();
                this.afterInitDom();
                this.render();
                this.dataPool.inited = true;
                try {
                    var _this$onInit;
                    null === (_this$onInit = this.onInit) || void 0 === _this$onInit ? void 0 : _this$onInit.call(this, this, this.dataPool.activeSku, this.root);
                } catch (e) {
                    setTimeout((() => {
                        throw e;
                    }));
                }
            }
            initSkuComMap() {
                const {validSkuMap, invalidSkuMap} = getSkuComMap(this.dataPool.sku.skuList);
                this.dataPool.validSkuMap = this.dataPool.skuUtil.initSku(validSkuMap);
                this.dataPool.invalidSkuMap = invalidSkuMap;
            }
            initAttrArray() {
                this.dataPool.attrArray = transSkuSpecList(this.dataPool.sku.skuAttributeMap);
                if (this.dataPool.attrArray.length) this.dataPool.skuType = "multi"; else this.dataPool.skuType = "single";
            }
            isPreview() {
                const currentUrl = window.location.pathname;
                return /^[/（]preview[/）].*/.test(currentUrl);
            }
            initFirstChecked(allowNotAvailable) {
                if ("single" === this.dataPool.skuType) [this.dataPool.activeSku] = this.dataPool.sku.skuList; else {
                    const {initialSkuSeq} = this.dataPool;
                    if (initialSkuSeq) {
                        const filterSkuList = this.dataPool.sku.skuList;
                        const validSkuList = allowNotAvailable ? this.dataPool.sku.skuList : filterSkuList;
                        if (validSkuList) {
                            const hitSku = validSkuList.find((item => item.skuSeq === initialSkuSeq));
                            if (hitSku) {
                                var _hitSku$skuAttributeI;
                                this.dataPool.activeSku = hitSku;
                                this.dataPool.currentSpecList = null === hitSku || void 0 === hitSku ? void 0 : null === (_hitSku$skuAttributeI = hitSku.skuAttributeIds) || void 0 === _hitSku$skuAttributeI ? void 0 : _hitSku$skuAttributeI.map((item => `${item.id}:${item.valueId}`));
                            }
                        }
                    }
                    this.dataPool.attrArray.forEach(((spec, index) => {
                        if (spec.hidden) this.dataPool.currentSpecList[index] = spec.specAttrList[0].id;
                    }));
                }
            }
            clearRoot() {
                if (this.root) this.root.empty();
            }
            getActiveSku() {
                if ("single" === this.dataPool.skuType) {
                    var _this$dataPool$sku$sk;
                    return (null === (_this$dataPool$sku$sk = this.dataPool.sku.skuList) || void 0 === _this$dataPool$sku$sk ? void 0 : _this$dataPool$sku$sk[0]) || null;
                }
                if ("multi" === this.dataPool.skuType) if (this.dataPool.currentSpecList.filter(Boolean).length === this.dataPool.attrArray.length) return getSku(this.dataPool.currentSpecList, this.dataPool.validSkuMap, this.dataPool.sku.skuList) || getSku(this.dataPool.currentSpecList, this.dataPool.invalidSkuMap, this.dataPool.sku.skuList) || null;
                return null;
            }
            clickAttr(specIndex, attrIndex) {
                var _this$dataPool$attrAr;
                const item = null === (_this$dataPool$attrAr = this.dataPool.attrArray[specIndex]) || void 0 === _this$dataPool$attrAr ? void 0 : _this$dataPool$attrAr.specAttrList[attrIndex];
                this.dataPool.currentSpecList = this.dataPool.skuUtil.getActionSpecList(this.dataPool.currentSpecList, item, specIndex);
                const activeSku = this.getActiveSku();
                if (activeSku !== this.dataPool.activeSku) this.dataPool.activeSku = activeSku;
                try {
                    var _this$onChange;
                    null === (_this$onChange = this.onChange) || void 0 === _this$onChange ? void 0 : _this$onChange.call(this, activeSku);
                } catch (e) {
                    setTimeout((() => {
                        throw e;
                    }));
                }
            }
            getAttrValue(index) {
                return getAttrValue(this.dataPool.attrArray, this.dataPool.currentSpecList[index], index);
            }
            destory() {
                var _this$onDestory;
                this.clearRoot();
                this.dataPool = null;
                this.root = null;
                this.onInit = null;
                this.onChange = null;
                null === (_this$onDestory = this.onDestory) || void 0 === _this$onDestory ? void 0 : _this$onDestory.call(this);
                this.onDestory = null;
            }
        }
        var isMobile = __webpack_require__("./src/assets/commons/utils/isMobile.js");
        class SkuTrade extends BaseSkuTrade {
            getAttrValueName(index) {
                var _this$getAttrValue;
                return null === (_this$getAttrValue = this.getAttrValue(index)) || void 0 === _this$getAttrValue ? void 0 : _this$getAttrValue.name;
            }
            initDom() {
                const isInMobile = (0, isMobile["default"])();
                this.root.children(".spec-box").each(((_, el) => {
                    const box = __SL_$__(el);
                    const index = box.data("index");
                    box.children(".attr-box").children(".attr-value").each(((__, valueEl) => {
                        const valueJQ = __SL_$__(valueEl);
                        const i = valueJQ.data("index");
                        valueJQ.on("click", (() => {
                            this.clickAttr(index, i);
                        }));
                        const specItem = this.dataPool.attrArray[index];
                        if (!isInMobile && null !== specItem && void 0 !== specItem && specItem.onlyShowAttrImg) {
                            var _specItem$specAttrLis;
                            valueJQ.tooltip({
                                targetContainer: this.targetContainer,
                                title: null === (_specItem$specAttrLis = specItem.specAttrList[i]) || void 0 === _specItem$specAttrLis ? void 0 : _specItem$specAttrLis.name
                            });
                        }
                    }));
                }));
            }
            createAndInitDom() {
                this.clearRoot();
                const isInMobile = (0, isMobile["default"])();
                const root = this.root.addClass("product-sku-trade");
                this.dataPool.attrArray.forEach(((spec, index) => {
                    if (!spec.hidden) {
                        const specBox = __SL_$__('<div class="spec-box"></div>');
                        specBox.data("index", index);
                        specBox.append(`<div class="spec-name body6 ls-30p text-uppercase">${spec.specName}</div>`);
                        const attrBox = __SL_$__('<div class="attr-box body3"></div>');
                        specBox.append(attrBox);
                        spec.specAttrList.forEach(((value, i) => {
                            const {imgUrl} = value;
                            let valueJQ;
                            if (imgUrl) {
                                valueJQ = __SL_$__(`<div class="attr-value with-img"><img ${window.__PRELOAD_STATE__.imgNoReferrerSwitch ? 'referrerpolicy="same-origin"' : ""}  class="value-img" src="${imgUrl}"></div>`);
                                if (!isInMobile && spec.onlyShowAttrImg) valueJQ.tooltip({
                                    targetContainer: this.targetContainer,
                                    title: value.name
                                }); else valueJQ.append(`<span class="value-text">${value.name}</span>`);
                            } else valueJQ = __SL_$__(`<div class="attr-value"><span>${value.name}</span></div>`);
                            valueJQ.data("index", i);
                            attrBox.append(valueJQ);
                            valueJQ.on("click", (() => {
                                this.clickAttr(index, i);
                            }));
                        }));
                        root.append(specBox);
                    }
                }));
            }
            isPreview() {
                const currentUrl = window.location.pathname;
                return /^[/（]preview[/）].*/.test(currentUrl);
            }
            render() {
                super.beforeUpdate();
                this.root.children(".spec-box").each(((_, el) => {
                    const boxEl = __SL_$__(el);
                    const valueEls = boxEl.children(".attr-box").children(".attr-value");
                    const index = boxEl.data("index");
                    const nameItem = this.dataPool.attrArray[index];
                    if (nameItem.onlyShowAttrImg) {
                        const attrValue = this.getAttrValueName(index);
                        if (attrValue) boxEl.find(".spec-name").text(`${nameItem.specName}：${attrValue}`); else boxEl.find(".spec-name").text(nameItem.specName);
                    }
                    valueEls.each(((__, el_) => {
                        const valueEl = __SL_$__(el_);
                        const i = valueEl.data("index");
                        const valueItem = nameItem.specAttrList[i];
                        const disabled = !this.isPreview() ? this.dataPool.skuUtil.checkSpecAttrDisabled(this.dataPool.currentSpecList, valueItem.id, index) : false;
                        const active = this.dataPool.skuUtil.checkSpecAttrActive(this.dataPool.currentSpecList, valueItem.id);
                        if (disabled) valueEl.addClass("disabled").prop("disabled", true); else valueEl.removeClass("disabled").prop("disabled", false);
                        if (active) valueEl.addClass("active"); else valueEl.removeClass("active");
                    }));
                }));
                super.afterUpdate();
            }
        }
        const sku_trade_flatten = SkuTrade;
        var i18n = __webpack_require__("../shared/browser/utils/i18n.js");
        var photoswipe_min = __webpack_require__("../shared/browser/node_modules/photoswipe/dist/photoswipe.min.js");
        var photoswipe_min_default = __webpack_require__.n(photoswipe_min);
        var photoswipe_ui_default_min = __webpack_require__("../shared/browser/node_modules/photoswipe/dist/photoswipe-ui-default.min.js");
        var photoswipe_ui_default_min_default = __webpack_require__.n(photoswipe_ui_default_min);
        var product_photoSwipeHtml = __webpack_require__("../shared/browser/components/hbs/productImages/js/product-photoSwipeHtml.js");
        __webpack_require__("./node_modules/swiper/swiper-bundle.css");
        class ImagesModal {
            static openModal(items, index, cacheNaturalSize) {
                let pswpElement = document.querySelectorAll(".pswp")[0];
                if (!pswpElement) {
                    __SL_$__("body").append(product_photoSwipeHtml["default"]);
                    pswpElement = document.querySelectorAll(".pswp")[0];
                }
                this.openPhotoSwipe(pswpElement, items, index, cacheNaturalSize);
            }
            static openPhotoSwipe(pswpElement, items, index = 0) {
                if (items && items.length > 1) __SL_$__(".pswp__button--arrow--left, .pswp__button--arrow--right").show(); else __SL_$__(".pswp__button--arrow--left, .pswp__button--arrow--right").hide();
                __SL_$__(".pswp__button--arrow--left, .pswp__button--arrow--right, .pswp__button--close").on("click", (function(e) {
                    e.stopPropagation();
                }));
                const photoSwipeOptions = {
                    allowPanToNext: false,
                    captionEl: false,
                    closeOnScroll: false,
                    counterEl: false,
                    history: false,
                    index,
                    pinchToClose: false,
                    preloaderEl: false,
                    shareEl: false,
                    tapToToggleControls: false,
                    barsSize: {
                        top: 20,
                        bottom: 20
                    }
                };
                const gallery = new (photoswipe_min_default())(pswpElement, photoswipe_ui_default_min_default(), items, photoSwipeOptions);
                gallery.listen("gettingData", (function(_index, item) {
                    const img = new Image;
                    if (window.__PRELOAD_STATE__.imgNoReferrerSwitch) img.setAttribute("referrerpolicy", "same-origin");
                    img.src = item.src;
                    img.onload = () => {
                        item.w = img.naturalWidth;
                        item.h = img.naturalHeight;
                        gallery.updateSize(true);
                    };
                }));
                gallery.listen("");
                gallery.init();
            }
        }
        const modal = ImagesModal;
        var common = __webpack_require__("./src/assets/commons/components/modal/common.js");
        class SkuTradeSelect extends BaseSkuTrade {
            constructor(...args) {
                super(...args);
                this.currentIndex = null;
                this.currentEntry = null;
                this.currentDropdown = null;
                this.closeItem = () => {
                    var _this$currentEntry, _this$currentDropdown;
                    null === (_this$currentEntry = this.currentEntry) || void 0 === _this$currentEntry ? void 0 : _this$currentEntry.removeClass("open");
                    null === (_this$currentDropdown = this.currentDropdown) || void 0 === _this$currentDropdown ? void 0 : _this$currentDropdown.fadeOut(200);
                    this.hidePopup();
                    console.log("closeItem");
                    this.currentEntry = null;
                    this.currentDropdown = null;
                    this.currentIndex = null;
                    __SL_$__(window).off("click", this.closeItem);
                };
                this.openItem = (entry, dropdown) => {
                    const currentIndex = entry.data("index");
                    if (null !== this.currentIndex) if (this.currentIndex !== currentIndex) this.closeItem(); else if (this.currentIndex === currentIndex) {
                        this.closeItem();
                        return;
                    }
                    this.currentEntry = entry.addClass("open");
                    this.currentIndex = currentIndex;
                    this.currentDropdown = dropdown;
                    dropdown.fadeIn(200);
                    this.showPopup();
                    console.log("openItem");
                    __SL_$__(window).on("click", this.closeItem);
                };
            }
            initFirstChecked() {
                super.initFirstChecked(true);
            }
            createPopupDom() {
                const that = this;
                const popupId = `skutradeselectpopup_${Date.now()}`;
                this.popup = __SL_$__(`<div id="${popupId}" class="product-sku-trade-select-popup"><div class="select-options body-font select-popup"><div><div>`).on("click", (e => {
                    if (e.target.classList.contains("product-sku-trade-select-popup")) this.closeItem();
                    e.stopPropagation();
                }));
                const dropdown = this.popup.children(".select-popup");
                dropdown.on("click", ".select-item .select-img", (function(e) {
                    e.stopPropagation();
                    const items = [ {
                        src: __SL_$__(this).attr("src"),
                        w: 0,
                        h: 0
                    } ];
                    modal.openModal(items, 0, false);
                }));
                dropdown.on("click", ".select-item", (function(e) {
                    e.stopPropagation();
                    const i = __SL_$__(this).data("index");
                    const active = __SL_$__(this).prop("active");
                    if (!active) that.clickAttr(that.currentIndex, i);
                    that.closeItem();
                }));
                __SL_$__(document.body).append(this.popup);
            }
            showPopup() {
                var _this$dataPool$attrAr, _this$dataPool$attrAr2;
                if (!this.popup) this.createPopupDom();
                const index = this.currentIndex;
                const popupBody = this.popup.show().animate({
                    opacity: 1
                }, 200).children(".select-popup").addClass("open");
                if ((0, isMobile["default"])()) (0, common.disablePageScroll)(popupBody.get(0));
                null === (_this$dataPool$attrAr = this.dataPool.attrArray[index]) || void 0 === _this$dataPool$attrAr ? void 0 : null === (_this$dataPool$attrAr2 = _this$dataPool$attrAr.specAttrList) || void 0 === _this$dataPool$attrAr2 ? void 0 : _this$dataPool$attrAr2.forEach(((valueItem, i) => {
                    const disabled = this.dataPool.skuUtil.checkSpecAttrDisabled(this.dataPool.currentSpecList, valueItem.id, index);
                    const active = this.dataPool.skuUtil.checkSpecAttrActive(this.dataPool.currentSpecList, valueItem.id);
                    const valueEl = __SL_$__(`<div class="select-item ${disabled ? "disabled" : ""} ${active ? "active" : ""}">${valueItem.imgUrl ? `<img ${window.__PRELOAD_STATE__.imgNoReferrerSwitch ? 'referrerpolicy="same-origin"' : ""}  class="select-img" src="${valueItem.imgUrl}" />` : ""}<span class="select-text">${valueItem.name}</span><span class="select-checked"></span></div>`);
                    valueEl.data("index", i);
                    valueEl.prop("active", active);
                    popupBody.append(valueEl);
                }));
            }
            hidePopup() {
                if (!this.popup) return;
                if ((0, isMobile["default"])()) (0, common.enablePageScroll)(this.popup.children(".select-popup").get(0));
                this.popup.animate({
                    opacity: 0
                }, 200, (function() {
                    __SL_$__(this).hide().children(".select-popup").empty();
                })).children(".select-popup").removeClass("open");
            }
            initDom() {
                const that = this;
                this.root.children(".spec-box").each(((_, el) => {
                    const box = __SL_$__(el);
                    const index = box.data("index");
                    const selectBox = box.children(".select-box");
                    const entry = selectBox.children(".select-entry");
                    const dropdown = selectBox.children(".select-dropdown");
                    entry.on("click", (e => {
                        e.stopPropagation();
                        this.openItem(entry, dropdown);
                    }));
                    dropdown.on("click", ".select-item", (function() {
                        const i = __SL_$__(this).data("index");
                        const active = __SL_$__(this).prop("active");
                        that.closeItem();
                        if (!active) that.clickAttr(index, i);
                    }));
                }));
            }
            createAndInitDom() {
                this.clearRoot();
                const that = this;
                this.root.addClass("product-sku-trade-select");
                this.dataPool.attrArray.forEach(((spec, index) => {
                    if (!spec.hidden) {
                        const specBox = __SL_$__('<div class="spec-box"></div>').data("index", index);
                        this.root.append(specBox);
                        const selectBox = __SL_$__(`<div class="select-box"></div>`);
                        specBox.append(`<div class="spec-name body6 ls-30p text-uppercase">${spec.specName}</div>`, selectBox);
                        const entry = __SL_$__(`<div class="select-entry"><img ${window.__PRELOAD_STATE__.imgNoReferrerSwitch ? 'referrerpolicy="same-origin"' : ""}  style="display: none" class="entry-img" src=""><span class="entry-text body3"></span><span class="entry-arrow"></span></div>`).data("index", index);
                        const dropdown = __SL_$__('<div class="select-options body-font select-dropdown"></div>');
                        selectBox.append(entry, dropdown);
                        spec.specAttrList.forEach(((value, i) => {
                            const {imgUrl, name} = value;
                            dropdown.append(__SL_$__(`<div class="select-item">${imgUrl ? `<img ${window.__PRELOAD_STATE__.imgNoReferrerSwitch ? 'referrerpolicy="same-origin"' : ""}  class="select-img" src="${imgUrl}" >` : ""}<span class="select-text">${name}</span><span class="select-checked"></span></div>\n              `).data("index", i));
                        }));
                        entry.on("click", (e => {
                            e.stopPropagation();
                            this.openItem(entry, dropdown);
                        }));
                        dropdown.on("click", ".select-item", (function() {
                            const i = __SL_$__(this).data("index");
                            const active = __SL_$__(this).prop("active");
                            that.closeItem();
                            if (!active) that.clickAttr(index, i);
                        }));
                    }
                }));
            }
            render() {
                super.beforeUpdate();
                this.root.children(".spec-box").each(((_, el) => {
                    const boxEl = __SL_$__(el);
                    const index = boxEl.data("index");
                    const currentValue = this.getAttrValue(index);
                    const seletBox = boxEl.children(".select-box").children(".select-entry");
                    const {name, imgUrl} = currentValue || {};
                    const img = seletBox.children(".entry-img");
                    const text = seletBox.children(".entry-text");
                    if (imgUrl) img.show().prop("src", imgUrl); else img.hide().prop("src", "");
                    if (name) text.text(name); else if (currentValue) text.text(""); else text.text((0, 
                    i18n.t)("products.product_details.default_placeholder", {
                        attrName: this.dataPool.attrArray[index].specName
                    }));
                    boxEl.children(".select-box").children(".select-options").children(".select-item").each(((__, el_) => {
                        const valueEl = __SL_$__(el_);
                        const i = valueEl.data("index");
                        const valueItem = this.dataPool.attrArray[index].specAttrList[i];
                        const disabled = this.dataPool.skuUtil.checkSpecAttrDisabled(this.dataPool.currentSpecList, valueItem.id, index);
                        const active = this.dataPool.skuUtil.checkSpecAttrActive(this.dataPool.currentSpecList, valueItem.id);
                        if (disabled) valueEl.addClass("disabled"); else valueEl.removeClass("disabled");
                        if (active) valueEl.addClass("active").prop("active", true); else valueEl.removeClass("active").prop("active", false);
                    }));
                }));
                super.afterUpdate();
            }
            destory() {
                super.destory();
                this.closeItem();
                if (this.popup) this.popup.remove();
                this.popup = null;
            }
        }
        const sku_trade_select = SkuTradeSelect;
        function initSku({id, sku, spu, mixins, onInit, onChange, dataPool, modalContainer}) {
            const dataDom = __SL_$__(`#product-sku-trade-data_${id}`);
            const skuStyle = dataDom.data("skustyle");
            const selectSku = dataDom.data("selectsku");
            const SkuClass = "flatten" === skuStyle ? sku_trade_flatten : sku_trade_select;
            const trade = new SkuClass({
                domReady: true,
                root: `#product-detail-sku-trade_${id}`,
                sku,
                spu,
                dataPool,
                mixins,
                initialSkuSeq: selectSku,
                modalContainer,
                onInit: (tradeData, activeSku, root) => {
                    null === onInit || void 0 === onInit ? void 0 : onInit(tradeData, activeSku, root);
                    window.SL_EventBus.emit("product:sku:init", [ activeSku, id ]);
                },
                onChange: activeSku => {
                    window.SL_EventBus.emit("product:sku:change", [ activeSku, id, dataPool ]);
                    null === onChange || void 0 === onChange ? void 0 : onChange(activeSku);
                }
            });
            return trade;
        }
    },
    "./src/assets/shared/logger/index.js": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
        "use strict";
        __webpack_require__.d(__webpack_exports__, {
            Status: () => _sl_logger__WEBPACK_IMPORTED_MODULE_0__.LogStatus,
            default: () => __WEBPACK_DEFAULT_EXPORT__
        });
        var _sl_logger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/@sl/logger/lib/index.es.js");
        var _yy_sl_theme_shared_utils_logger_sentry__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("../shared/browser/utils/logger/sentry.js");
        const newLogger = _yy_sl_theme_shared_utils_logger_sentry__WEBPACK_IMPORTED_MODULE_1__["default"].pipeOwner("trade");
        const __WEBPACK_DEFAULT_EXPORT__ = newLogger;
    },
    "./src/assets/stage/announcement-bar/index.js": (__unused_webpack_module, __unused_webpack___webpack_exports__, __webpack_require__) => {
        "use strict";
        var _yy_sl_theme_shared_utils_sectionsLoad__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("../shared/browser/utils/sectionsLoad/index.js");
        function _defineProperty(obj, key, value) {
            if (key in obj) Object.defineProperty(obj, key, {
                value,
                enumerable: true,
                configurable: true,
                writable: true
            }); else obj[key] = value;
            return obj;
        }
        class AnnouncementBar {
            onUnload() {}
        }
        _defineProperty(AnnouncementBar, "type", "announcement-bar");
        (0, _yy_sl_theme_shared_utils_sectionsLoad__WEBPACK_IMPORTED_MODULE_0__.registrySectionConstructor)(AnnouncementBar.type, AnnouncementBar);
    },
    "./src/assets/stage/header/scripts/desktop-site-nav.js": () => {
        var _window$__PRELOAD_STA, _window$__PRELOAD_STA2;
        const isPad = (null === (_window$__PRELOAD_STA = window.__PRELOAD_STATE__) || void 0 === _window$__PRELOAD_STA ? void 0 : null === (_window$__PRELOAD_STA2 = _window$__PRELOAD_STA.request) || void 0 === _window$__PRELOAD_STA2 ? void 0 : _window$__PRELOAD_STA2.is_mobile) || void 0 !== document.ontouchmove;
        const firstNavItem = ".site-nav--has-dropdown";
        const firstNavItemLink = ".site-nav__link--has-dropdown";
        const registryNavMouseenterHandler = () => {
            document.querySelectorAll(firstNavItem).forEach((element => {
                element.addEventListener("mouseenter", (function(e) {
                    element.classList.add("actived");
                    setSecondMenuMaxHeight(e);
                }));
                element.addEventListener("mouseleave", (function() {
                    element.classList.remove("actived");
                }));
            }));
        };
        function setSecondMenuMaxHeight(e) {
            const windowHeight = window.innerHeight;
            const {target} = e;
            const maxHeight = windowHeight - target.getBoundingClientRect().bottom - 50;
            const megamenuList = target.getElementsByClassName("megamenu");
            const unmegamenuList = target.getElementsByClassName("unmegamenu-container");
            [ ...unmegamenuList, ...megamenuList ].forEach((el => {
                el.style.maxHeight = `${maxHeight}px`;
            }));
        }
        if (isPad) {
            __SL_$__(document).on("click", firstNavItemLink, (function(e) {
                e.preventDefault();
                e.stopPropagation();
                const $parent = __SL_$__(this).parent();
                if ($parent.hasClass("actived")) {
                    window.location.href = e.target.href;
                    $parent.removeClass("actived");
                } else {
                    $parent.addClass("actived");
                    __SL_$__(firstNavItem).not($parent).removeClass("actived");
                }
            }));
            __SL_$__(document).on("click", "body", (function(e) {
                const that = __SL_$__(e.target).parents(firstNavItem);
                if (!that.hasClass("site-nav--has-dropdown")) __SL_$__(firstNavItem).removeClass("actived");
            }));
        } else {
            registryNavMouseenterHandler();
            __SL_$__(document).on("shopline:section:load", (async e => {
                if ("header" === e.detail.sectionId) registryNavMouseenterHandler();
            }));
        }
    },
    "./src/assets/vendor/global.js": (__unused_webpack_module, __unused_webpack___webpack_exports__, __webpack_require__) => {
        "use strict";
        __webpack_require__("./src/assets/commons/jquery.js");
        __webpack_require__("../shared/browser/utils/report/index.js");
        var event_bus = __webpack_require__("../shared/browser/utils/event-bus.js");
        var state_selector = __webpack_require__("../shared/browser/utils/state-selector.js");
        var checkout = __webpack_require__("../shared/browser/utils/checkout.js");
        var api_logger = __webpack_require__("../shared/browser/events/utils/api-logger.js");
        const EVENT_NAME = "Checkout::NavigateCheckout";
        const logger = (0, api_logger["default"])(EVENT_NAME);
        const external = window && window.Shopline.event;
        const navigateCheckoutHandler = async arg => {
            logger.info(JSON.stringify(arg));
            const {data, onSuccess, onError} = arg;
            const {products, ...rest} = data;
            try {
                const result = await checkout["default"].save(products, rest);
                logger.info(JSON.stringify(result, null, 4));
                onSuccess && onSuccess(result);
            } catch (error) {
                logger.info(error);
                onError && onError(error);
            }
        };
        const navigateCheckout = () => external && external.on(EVENT_NAME, navigateCheckoutHandler);
        navigateCheckout.apiName = EVENT_NAME;
        const navigate_checkout = navigateCheckout;
        var request = __webpack_require__("../shared/browser/utils/request.js");
        const services = {
            getCartOwnerId: async () => request["default"].get("/carts/cart/owner-id"),
            getCartId: async () => request["default"].get("/carts/cart/cart-id")
        };
        const getNewCartId = async data => services.getCartId(data);
        const get_cart_id_EVENT_NAME = "Cart::GetCartId";
        const get_cart_id_logger = (0, api_logger["default"])(get_cart_id_EVENT_NAME);
        const interior = window && window.Shopline.event;
        const getCartId = () => interior && interior.on(get_cart_id_EVENT_NAME, (async argument => {
            const {data, onSuccess = () => {}, onError = () => {}} = argument;
            try {
                const result = await getNewCartId(data);
                get_cart_id_logger.info(result);
                onSuccess && onSuccess(result);
            } catch (error) {
                get_cart_id_logger.error(error);
                onError && onError(error);
            }
        }));
        getCartId.apiName = get_cart_id_EVENT_NAME;
        const get_cart_id = getCartId;
        var components_paypal = __webpack_require__("../shared/browser/components/paypal/index.js");
        const render_paypal_EVENT_NAME = "Paypal::Spb::Render";
        const render_paypal_logger = (0, api_logger["default"])(render_paypal_EVENT_NAME);
        const render_paypal_external = window && window.Shopline.event;
        const paypalRenderHandler = async argument => {
            const {data = {}, onSuccess, onError} = argument;
            try {
                const paypal = new components_paypal["default"](data);
                render_paypal_logger.info(paypal);
                onSuccess && onSuccess(paypal);
            } catch (error) {
                render_paypal_logger.error(error);
                onError && onError(error);
            }
        };
        const renderPayPal = () => render_paypal_external && render_paypal_external.on(render_paypal_EVENT_NAME, paypalRenderHandler);
        renderPayPal.apiName = render_paypal_EVENT_NAME;
        const render_paypal = renderPayPal;
        var interior_event = __webpack_require__("../shared/browser/events/trade/interior-event/index.js");
        const navigate_cart_EVENT_NAME = "Cart::NavigateCart";
        const navigate_cart_logger = (0, api_logger["default"])(navigate_cart_EVENT_NAME);
        const navigate_cart_interior = window && window.SL_EventBus;
        const navigate_cart_external = window && window.Shopline.event;
        const navigateCartHandler = argument => {
            const noop = () => {};
            const data = argument && argument.data || {};
            const onSuccess = argument && argument.onSuccess || noop;
            const onError = argument && argument.onError || noop;
            try {
                navigate_cart_interior.emit(interior_event.OPEN_MINI_CART, {
                    data,
                    onSuccess
                });
                navigate_cart_logger.log(data);
                if ("function" === typeof onSuccess) onSuccess();
            } catch (error) {
                if ("function" === typeof onError) onError(error);
            }
        };
        const navigateCart = () => navigate_cart_external && navigate_cart_external.on(navigate_cart_EVENT_NAME, navigateCartHandler);
        navigateCart.apiName = navigate_cart_EVENT_NAME;
        const navigate_cart = navigateCart;
        const ADD_TO_CART = "Cart::AddToCart";
        const CONTROL_CART_BASIS = "Cart::ControlCartBasis";
        const UPDATE_CHECKOUT_DETAIL = "Checkout::UpdateCheckoutDetail";
        const CHECKOUT_DETAIL_INIT = "Checkout::CheckoutDetailInit";
        const CHECKOUT_DETAIL_UPDATE = "Checkout::CheckoutDetailUpdate";
        const CART_DETAIL_UPDATE = "Cart::CartDetailUpdate";
        const LINE_ITEM_UPDATE = "Cart::LineItemUpdate";
        const add_to_cart_logger = (0, api_logger["default"])(ADD_TO_CART);
        const add_to_cart_interior = window && window.SL_EventBus;
        const add_to_cart_external = window && window.Shopline.event;
        const addToCart = () => add_to_cart_external && add_to_cart_external.on(ADD_TO_CART, (async argument => {
            const {data, onSuccess, onError} = argument;
            try {
                add_to_cart_logger.info(`[emit]`, data);
                add_to_cart_interior.emit(interior_event.ADD_TO_CART, {
                    ...data,
                    success: onSuccess,
                    error: onError
                });
            } catch (error) {
                onError(error);
            }
        }));
        addToCart.apiName = ADD_TO_CART;
        const add_to_cart = addToCart;
        const update_checkout_detail_logger = (0, api_logger["default"])(UPDATE_CHECKOUT_DETAIL);
        const update_checkout_detail_interior = window && window.SL_EventBus;
        const update_checkout_detail_external = window && window.Shopline.event;
        const updateCheckoutDetailDebounceHandle = () => {
            let requesting = false;
            let emitDataList = [];
            let tempEmitDataList = [];
            function reset() {
                requesting = false;
                emitDataList = [ ...tempEmitDataList ];
                tempEmitDataList = [];
                if (emitDataList.length) emitFunc();
            }
            function successFunc(res) {
                emitDataList.map((cb => cb && cb.onSuccess && cb.onSuccess(res)));
                reset();
            }
            function errorFunc(e) {
                emitDataList.map((cb => cb && cb.onError && cb.onError(e)));
                reset();
            }
            function emitFunc() {
                try {
                    update_checkout_detail_interior.emit(interior_event.INTERIOR_TRADE_UPDATE_DETAIL, {
                        onSuccess: successFunc,
                        onError: errorFunc
                    });
                } catch (e) {
                    errorFunc(e);
                }
            }
            return function({data, onSuccess, onError} = {}) {
                update_checkout_detail_logger.info("[emit]", JSON.stringify(data));
                if (requesting) tempEmitDataList.push({
                    onSuccess,
                    onError
                }); else {
                    requesting = true;
                    emitDataList.push({
                        onSuccess,
                        onError
                    });
                    emitFunc();
                }
            };
        };
        const updateCheckoutDetail = () => update_checkout_detail_external && update_checkout_detail_external.on(UPDATE_CHECKOUT_DETAIL, updateCheckoutDetailDebounceHandle());
        updateCheckoutDetail.apiName = UPDATE_CHECKOUT_DETAIL;
        const update_checkout_detail = updateCheckoutDetail;
        const control_cart_basis_logger = (0, api_logger["default"])(CONTROL_CART_BASIS);
        const control_cart_basis_interior = window && window.SL_EventBus;
        const control_cart_basis_external = window && window.Shopline.event;
        const controlCartBasis = () => control_cart_basis_external && control_cart_basis_external.on(CONTROL_CART_BASIS, (async argument => {
            const options = argument && argument.data || null;
            const onSuccess = argument && argument.onSuccess || (() => {});
            const onError = argument && argument.onError || (() => {});
            try {
                control_cart_basis_logger.info(`[emit]`, interior_event.CONTROL_CART_BASIS);
                control_cart_basis_interior.emit(interior_event.CONTROL_CART_BASIS, {
                    options,
                    success: onSuccess,
                    error: onError
                });
            } catch (error) {
                onError(error);
            }
        }));
        controlCartBasis.apiName = CONTROL_CART_BASIS;
        const control_cart_basis = controlCartBasis;
        const cart_line_item_update_interior = window && window.SL_EventBus;
        const cart_line_item_update_external = window && window.Shopline.event;
        const cartLineItemUpdateHandler = () => {
            cart_line_item_update_interior.emit(interior_event.LINE_ITEM_UPDATE);
        };
        const cartLineItemUpdate = () => cart_line_item_update_external && cart_line_item_update_external.on(LINE_ITEM_UPDATE, cartLineItemUpdateHandler);
        cartLineItemUpdate.apiName = LINE_ITEM_UPDATE;
        const cart_line_item_update = cartLineItemUpdate;
        const cart_detail_update_logger = (0, api_logger["default"])(`${CART_DETAIL_UPDATE} - EMIT`);
        const cart_detail_update_external = window && window.Shopline.event;
        const cart_detail_update_interior = window && window.SL_EventBus;
        const cartDetailUpdate = () => {
            cart_detail_update_interior && cart_detail_update_interior.on("cart:update", (data => {
                cart_detail_update_logger.info(data);
                cart_detail_update_external.emit(CART_DETAIL_UPDATE, {
                    ...data
                });
            }));
        };
        cartDetailUpdate.apiName = CART_DETAIL_UPDATE;
        const cart_detail_update = cartDetailUpdate;
        const checkout_detail_init_logger = (0, api_logger["default"])(`${CHECKOUT_DETAIL_INIT} - EMIT`);
        const checkout_detail_init_external = window && window.Shopline.event;
        const checkout_detail_init_interior = window && window.SL_EventBus;
        const checkoutDetailInit = () => {
            checkout_detail_init_interior && checkout_detail_init_interior.on("trade:billingDetailInit", (data => {
                checkout_detail_init_logger.info(data);
                checkout_detail_init_external.emit(CHECKOUT_DETAIL_INIT, {
                    ...data
                });
            }));
        };
        checkoutDetailInit.apiName = CHECKOUT_DETAIL_INIT;
        const checkout_detail_init = checkoutDetailInit;
        const checkout_detail_update_logger = (0, api_logger["default"])(`${CHECKOUT_DETAIL_UPDATE} - EMIT`);
        const checkout_detail_update_external = window && window.Shopline.event;
        const checkout_detail_update_interior = window && window.SL_EventBus;
        const checkoutDetailUpdate = () => {
            checkout_detail_update_interior && checkout_detail_update_interior.on("trade:billingDetailUpdate", (data => {
                checkout_detail_update_logger.info(data);
                checkout_detail_update_external.emit(CHECKOUT_DETAIL_UPDATE, {
                    ...data
                });
            }));
        };
        checkoutDetailUpdate.apiName = CHECKOUT_DETAIL_UPDATE;
        const checkout_detail_update = checkoutDetailUpdate;
        const developer_api_logger = (0, api_logger["default"])("register");
        const events = [ navigate_checkout, get_cart_id, render_paypal, navigate_cart, add_to_cart, control_cart_basis, update_checkout_detail, cart_detail_update, checkout_detail_init, checkout_detail_update, cart_line_item_update ];
        const developer_api = (...activateApiNames) => {
            const executedEvents = [];
            activateApiNames.forEach((activateApiName => {
                events.forEach((event => {
                    if (event && event.apiName === activateApiName) {
                        executedEvents.push(activateApiName);
                        event();
                    }
                }));
            }));
            developer_api_logger.info("executed events", executedEvents);
            return executedEvents;
        };
        const LOGIN_MODAL = "Customer::LoginModal";
        const LOGIN_MODAL_RENDER = "Customer::LoginModalRender";
        const REGISTER = "Customer::Register";
        const interior_event_LOGIN_MODAL = Symbol("LOGIN_MODAL");
        var axios = __webpack_require__("../shared/browser/node_modules/axios/index.js");
        var axios_default = __webpack_require__.n(axios);
        var components_modal = __webpack_require__("../shared/browser/components/hbs/shared/components/modal/index.js");
        function baseGet(object, path) {
            path = path.split(".");
            let index = 0;
            const {length} = path;
            while (null != object && index < length) object = object[path[index++]];
            return index && index === length ? object : void 0;
        }
        const CONTAINER_CLASS = "login-modal__container";
        const BODY_CLASS = "login-modal__body";
        const loadingTemplate = `\n  <div class="login-modal--loading">\n    <svg width="20" height="20" viewBox="0 0 20 20" fill="none" xmlns="http://www.w3.org/2000/svg">\n      <path d="M18.3333 9.99999C18.3333 14.6024 14.6024 18.3333 10 18.3333C5.39762 18.3333 1.66666 14.6024 1.66666 9.99999C1.66666 5.39762 5.39762 1.66666 10 1.66666" stroke="currentColor" stroke-width="2.5" stroke-linecap="round"/>\n    </svg>\n  </div>\n`;
        async function initLoginModalChunk(containerId) {
            return new Promise(((resolve, reject) => {
                let container = document.getElementById("customerLoginModalScriptUrl");
                let jsUrls = [];
                if (container && "script" === container.tagName.toLocaleLowerCase()) jsUrls.push(baseGet(container, "attributes.src.nodeValue", "")); else {
                    container = document.getElementById(containerId);
                    jsUrls = Array.from(container.querySelectorAll("script")).map((ele => baseGet(ele, "attributes.src.nodeValue", ""))).filter((url => !!url));
                }
                if (!jsUrls || !jsUrls.length) {
                    reject(new Error(`failed to get login-modal js chunk url`));
                    return;
                }
                const promiseList = jsUrls.map((url => new Promise(((resolve, reject) => {
                    const scriptEle = document.createElement("script");
                    document.body.appendChild(scriptEle);
                    scriptEle.onload = () => {
                        resolve();
                    };
                    scriptEle.async = false;
                    scriptEle.onerror = reject;
                    scriptEle.src = url;
                }))));
                Promise.all(promiseList).then(resolve).catch(reject);
            }));
        }
        const renderModal = async (options = {}, lifeCycle = {}) => {
            const modal = new components_modal.ModalWithHtml({
                id: "loginModal",
                ...options,
                bodyClassName: BODY_CLASS,
                containerClassName: CONTAINER_CLASS
            });
            modal.setContent(loadingTemplate);
            modal.show();
            lifeCycle && lifeCycle.onShow && lifeCycle.onShow(modal);
            const {data} = await axios_default().get(`/user/signIn?view=ajax&fromTemplateAlias=${state_selector.SL_State.get("templateAlias")}`);
            modal.setContent(data || "");
            const sl_$ = window.__SL_$__;
            if (!sl_$ || !sl_$._evalUrl || !sl_$.ajaxSettings || !sl_$.ajaxSettings.xhr) await initLoginModalChunk(modal.modalId);
            if (!!Array.from(document.getElementById(modal.modalId).querySelectorAll("script")).find((item => "text/sl-javascript" === item.type)) && "Checkout" === state_selector.SL_State.get("templateAlias")) await initLoginModalChunk(modal.modalId);
            return modal;
        };
        const login_modal_logger = (0, api_logger["default"])(LOGIN_MODAL);
        const login_modal_interior = window && window.SL_EventBus;
        const login_modal_external = window && window.Shopline.event;
        const isMobile = window && window.SL_State && window.SL_State.get("request.is_mobile");
        let modal;
        const bindResizeEvent = (() => {
            let hasBindEvent = false;
            return modal => {
                if (hasBindEvent) return;
                hasBindEvent = true;
                const container = document.querySelector(`#${modal.modalId} .login-modal__container`);
                const setHeight = () => {
                    const vh = .01 * window.innerHeight;
                    container.style.maxHeight = `${90 * vh}px`;
                };
                setHeight();
                document.addEventListener("visibilitychange", (() => {
                    if ("visible" === document.visibilityState) setHeight();
                }));
                window.addEventListener("resize", setHeight);
            };
        })();
        login_modal_interior.on(interior_event_LOGIN_MODAL, (async (options = {}) => {
            const {data = {}, onSuccess, onError} = options;
            const lifeCycle = {
                onShow: modal => {
                    if (isMobile) bindResizeEvent(modal);
                }
            };
            try {
                if (modal) {
                    if ("visible" !== modal.visibleState) {
                        modal.show();
                        lifeCycle && lifeCycle.onShow(modal);
                    }
                    login_modal_external.emit(LOGIN_MODAL_RENDER);
                    onSuccess && onSuccess(modal);
                    return;
                }
                modal = await renderModal(data, lifeCycle);
                login_modal_external.emit(LOGIN_MODAL_RENDER);
                onSuccess && onSuccess(modal);
            } catch (e) {
                onError && onError(e);
            }
        }));
        const loginModal = () => login_modal_external && login_modal_external.on(LOGIN_MODAL, (async (options = {}) => {
            const {onError, data} = options;
            try {
                login_modal_logger.info(`[emit]`, data);
                login_modal_interior.emit(interior_event_LOGIN_MODAL, options);
            } catch (error) {
                onError && onError(error);
            }
        }));
        loginModal.apiName = LOGIN_MODAL;
        const login_modal = loginModal;
        const register_logger = (0, api_logger["default"])(`${REGISTER} - EMIT`);
        const register_interior = window.SL_EventBus;
        const register_external = window.Shopline.event;
        const register = () => register_interior.on("customer:register", ((data = {}) => {
            register_logger.info(data);
            register_external.emit(REGISTER, {
                ...data
            });
        }));
        register.apiName = REGISTER;
        const developer_api_register = register;
        const customer_developer_api_logger = (0, api_logger["default"])("register");
        const developer_api_events = [ login_modal, developer_api_register ];
        const customer_developer_api = (...activateApiNames) => {
            const executedEvents = [];
            activateApiNames.forEach((activateApiName => {
                developer_api_events.forEach((event => {
                    if (event && event.apiName === activateApiName) {
                        executedEvents.push(activateApiName);
                        event && event();
                    }
                }));
            }));
            customer_developer_api_logger.info("executed events", executedEvents);
            return executedEvents;
        };
        var js_cookie = __webpack_require__("../shared/browser/node_modules/js-cookie/src/js.cookie.js");
        var ga = __webpack_require__("../shared/browser/utils/dataReport/ga.js");
        var ads = __webpack_require__("../shared/browser/utils/dataReport/ads.js");
        var fb = __webpack_require__("../shared/browser/utils/dataReport/fb.js");
        var report_const = __webpack_require__("../shared/browser/utils/report/const.js");
        function addToCartHdReport({spuId, skuId, num, price, name, page, event_name, event_category, product_type, event_id}) {
            window.HdSdk && window.HdSdk.shopTracker.report(event_id, {
                page,
                event_name,
                event_category,
                product_type,
                product_id: spuId,
                variantion_id: skuId,
                quantity: `${num}`,
                price: `${price}`,
                product_name: name
            });
        }
        function reportHd(page, type, data) {
            if (page === report_const.PageType.ProductDetail) switch (type) {
              case report_const.ClickType.AddToCart:
              case report_const.ClickType.BeginCheckout:
                addToCartHdReport(data);
            }
        }
        var tool = __webpack_require__("../shared/browser/utils/report/tool.js");
        var data_report_enum = __webpack_require__("../shared/browser/events/data-report/enum/index.js");
        const third_part_external = window && window.Shopline.event;
        const third_part_interior = window && window.SL_EventBus;
        let initialized = false;
        function onThirdPartReport(data) {
            third_part_interior.emit("global:thirdPartReport", {
                ...data || {}
            });
        }
        function on() {
            if (!third_part_external) {
                console.error(`failed to init ${data_report_enum.ThirdPartReport} listener: window?.Shopline.event not found`);
                return;
            }
            if (!third_part_interior) {
                console.error(`failed to init ${data_report_enum.ThirdPartReport} listener: window?.SL_EventBus not found`);
                return;
            }
            if (initialized) return;
            third_part_external.on(data_report_enum.ThirdPartReport, onThirdPartReport);
            initialized = true;
        }
        const third_part = {
            on
        };
        const hiido_external = window && window.Shopline.event;
        let hiido_initialized = false;
        function onHiidoReport(data) {
            if (!data || !data.event_id) {
                console.error(`failed to report to hiido without data and event_id`);
                return;
            }
            const {event_id, ...params} = data;
            window.HdSdk && window.HdSdk.shopTracker.report(event_id, params);
        }
        function hiido_on() {
            if (!hiido_external) {
                console.error(`failed to init ${data_report_enum.HiidoReport} listener: window?.Shopline.event not found`);
                return;
            }
            if (hiido_initialized) return;
            hiido_external.on(data_report_enum.HiidoReport, onHiidoReport);
            hiido_initialized = true;
        }
        const hiido = {
            on: hiido_on
        };
        function adapters_on() {
            third_part.on();
            hiido.on();
        }
        const adapters = {
            on: adapters_on
        };
        const excludedDataReportEvents = new Set(Object.keys(data_report_enum).map((key => data_report_enum[key])));
        const dataReport_logger = (0, api_logger["default"])("DataReport:Instance - ON");
        class DataReport {
            constructor() {
                this.eventBus = event_bus.SL_EventBus;
                this.rpEvent = window.Shopline && window.Shopline.event;
            }
            load(data) {
                const {pageType, value} = data;
                const val = {
                    ...value,
                    currency: this.storeCurrency
                };
                const gaParam = ga["default"].load(pageType, val);
                const adsParams = (0, ads.loadAdsData)(pageType, val);
                const fbParams = (0, fb.loadFbData)(pageType, val);
                const params = {
                    GAAds: adsParams,
                    GA: gaParam,
                    FBPixel: fbParams
                };
                this.eventBus && this.eventBus.emit("global:thirdPartReport", params);
            }
            touch(data) {
                const {pageType, actionType, value} = data;
                const {content_spu_id, content_sku_id, content_category, content_name, currency, quantity, price, hdProducts, extra} = value || {};
                const spu_ids = [ content_spu_id ];
                if (Array.isArray(hdProducts)) hdProducts.forEach((item => {
                    if (item && item.spuId) spu_ids.push(item && item.spuId);
                    reportHd(pageType, actionType, item);
                }));
                const eid = (0, tool.getEventID)();
                const tpParams = {
                    skuId: spu_ids,
                    category: content_category,
                    name: content_name,
                    currency,
                    quantity,
                    price,
                    eventId: `addToCart${eid}`
                };
                if (extra && extra.abandonedOrderSeq && "buy_now" === extra.event_scenes) js_cookie.set(`${extra.abandonedOrderSeq}_fb_data`, {
                    tp: 2,
                    et: Date.now(),
                    ed: eid
                });
                const hdParams = {
                    spuId: content_spu_id,
                    skuId: content_sku_id,
                    name: content_name,
                    num: quantity,
                    price,
                    ...extra
                };
                const gaParam = ga["default"].click(pageType, actionType, tpParams);
                const adsParams = (0, ads.clickAdsData)(pageType, actionType, tpParams);
                const fbParams = (0, fb.clickFbData)(actionType, tpParams);
                const params = {
                    GAAds: adsParams,
                    GA: gaParam,
                    FBPixel: fbParams
                };
                this.eventBus && this.eventBus.emit("global:thirdPartReport", params);
                if (extra && extra.event_name) reportHd(pageType, actionType, hdParams);
            }
            listen(eventName) {
                this.rpEvent && this.rpEvent.on(eventName, (data => {
                    dataReport_logger.info(data);
                    if (data.interior && excludedDataReportEvents.has(data.interior)) {
                        dataReport_logger.error("not in access events", {
                            interior: data.interior,
                            excludedDataReportEvents
                        });
                        return;
                    }
                    const params = {
                        actionType: report_const.ClickType.AddToCart,
                        pageType: report_const.PageType.ProductDetail,
                        value: data && data.data
                    };
                    this.touch(params);
                }));
            }
        }
        const dataReport = new DataReport;
        adapters.on();
        const utils_dataReport = dataReport;
        var dataAccessor = __webpack_require__("../shared/browser/utils/dataAccessor.js");
        var api_cart = __webpack_require__("./node_modules/@sl/cart/lib/api-cart/index.js");
        var BaseClass = __webpack_require__("../shared/browser/components/hbs/shared/base/BaseClass.js");
        const DRAWER_EVENT_NAME = "stage:drawer";
        const DRAWER_CALLBACK_EVENT_NAME = "stage:drawer:callback";
        function getEventRealElem(event) {
            const isJqueryEvent = event instanceof __SL_$__.Event;
            const oEvent = isJqueryEvent ? event.originalEvent : event;
            const eventPath = oEvent.composedPath && oEvent.composedPath() || oEvent.path;
            let index = 0;
            let currentEl;
            while (currentEl = eventPath[index]) {
                if (currentEl && currentEl.nodeName && "font" !== currentEl.nodeName.toLowerCase()) break;
                index++;
            }
            return currentEl || event.target;
        }
        class GlobalDrawer extends BaseClass["default"] {
            constructor() {
                super();
                this.config = {
                    namespace: "stage:global-drawer"
                };
                this.classes = {
                    drawerOpenRoot: "stage-drawer-root-open",
                    drawerClosingRoot: "stage-drawer-root-closing",
                    activeDrawer: "stage-drawer--is-open"
                };
                this.selector = {
                    drawerContainer: ".stage-drawer",
                    closeButton: ".j-drawer-close",
                    backButton: ".j-drawer-back"
                };
                this.hub = {};
                this.jq = {
                    root: __SL_$__("body")
                };
                this.jq.root.removeClass(this.classes.drawerClosingRoot);
                this.jq.root.removeClass(this.classes.drawerOpenRoot);
                this.$setNamespace(this.config.namespace);
                this.init();
            }
            init() {
                window.SL_EventBus.on(DRAWER_EVENT_NAME, (({id, status, onOpen}) => {
                    if (!id) return;
                    const $drawer = __SL_$__(`#${id}`);
                    const isSubDrawer = $drawer.data("level") > 1;
                    this.hub[id] = "open" === status;
                    if ("open" === status) {
                        if ($drawer.hasClass(this.classes.activeDrawer)) {
                            "function" === typeof onOpen && onOpen({
                                id,
                                status
                            });
                            return;
                        }
                        this.prepareTransition($drawer, (() => {
                            this.jq.root.addClass(this.classes.drawerOpenRoot);
                            $drawer.addClass(this.classes.activeDrawer);
                            "function" === typeof onOpen && onOpen({
                                id,
                                status
                            });
                        }));
                        this.bindHandleClick(id);
                    }
                    if ("close" === status) {
                        if (isSubDrawer) {
                            const parentDrawer = $drawer.parents(`${this.selector.drawerContainer}.${this.classes.activeDrawer}`).eq(0);
                            if (parentDrawer) this.closeDrawer(parentDrawer, true);
                        }
                        this.closeDrawer($drawer, true);
                    }
                    if ("close_self" === status) {
                        if (!isSubDrawer) return;
                        this.closeDrawer($drawer);
                    }
                    window.SL_EventBus.emit(DRAWER_CALLBACK_EVENT_NAME, {
                        status,
                        id
                    });
                }));
            }
            bindHandleClick(id) {
                this.$on("click", (e => {
                    const realTarget = getEventRealElem(e);
                    if (!realTarget.closest(this.selector.drawerContainer)) window.SL_EventBus.emit(DRAWER_EVENT_NAME, {
                        id,
                        status: "close"
                    });
                }));
                this.$on("click", this.selector.closeButton, (e => {
                    const container = e.target.closest(this.selector.drawerContainer);
                    if (container) window.SL_EventBus.emit(DRAWER_EVENT_NAME, {
                        id: container.id,
                        status: "close"
                    });
                }));
                this.$on("click", this.selector.backButton, (e => {
                    const container = e.target.closest(this.selector.drawerContainer);
                    if (container) window.SL_EventBus.emit(DRAWER_EVENT_NAME, {
                        id: container.id,
                        status: "close_self"
                    });
                }));
            }
            closeDrawer($drawer, removeMask) {
                if (!$drawer.hasClass(this.classes.activeDrawer)) return;
                this.prepareTransition($drawer, (() => {
                    if (removeMask) {
                        this.jq.root.removeClass(this.classes.drawerOpenRoot);
                        this.jq.root.addClass(this.classes.drawerClosingRoot);
                    }
                    $drawer.removeClass(this.classes.activeDrawer);
                }), (() => {
                    if (removeMask) this.jq.root.removeClass(this.classes.drawerClosingRoot);
                }));
                if (removeMask) this.offHandleClick();
            }
            offHandleClick() {
                this.$off("click");
            }
            off() {
                this.$offAll();
                window.SL_EventBus.off(DRAWER_EVENT_NAME);
            }
        }
        let instance = new GlobalDrawer;
        __SL_$__(document).on("shopline:section:load", (() => {
            Object.keys(instance.hub).filter((id => !!instance.hub[id])).forEach((id => {
                window.SL_EventBus.emit(DRAWER_EVENT_NAME, {
                    status: "close",
                    id
                });
            }));
            instance.off();
            instance = new GlobalDrawer;
        }));
        const defaultOptions = {
            triggerClass: "global-dropdown-list__head",
            dropdownListClass: "global-dropdown-list__main",
            opendClass: "is-open",
            closedClass: "is-close"
        };
        function getTargetElement(container, options) {
            const {triggerClass, dropdownListClass} = options;
            const trigger = container.find(`.${triggerClass}`);
            const dropdownList = container.find(`.${dropdownListClass}`);
            return {
                container,
                trigger,
                dropdownList
            };
        }
        function toggle(options, flag) {
            const {container, dropdownList, opendClass, closedClass} = options;
            const isDisabled = "true" === container.attr("data-disabled");
            const isOpen = null == flag ? !container.hasClass(opendClass) : flag;
            if (isDisabled) return;
            dropdownList.css("height", isOpen ? dropdownList.prop("scrollHeight") : "");
            if (isOpen) container.addClass(opendClass).removeClass(closedClass); else container.addClass(closedClass).removeClass(opendClass);
        }
        function closeOtherReleased(options) {
            const {container} = options;
            const attr = "global-dropdown-list-related-id";
            const relatedId = container.data(attr);
            if (relatedId) __SL_$__(`[data-${attr}=${relatedId}]`).each(((_idx, element) => {
                if (element === container[0]) return;
                toggle({
                    ...options,
                    ...getTargetElement(__SL_$__(element), options)
                }, false);
            }));
        }
        __SL_$__((function() {
            function openHandler(event) {
                const trigger = __SL_$__(event.currentTarget);
                const container = trigger.parent(".global-dropdown-list");
                const dropdownList = trigger.siblings(".global-dropdown-list__main");
                const options = {
                    ...defaultOptions,
                    relatedId: container.data("global-dropdown-list-related-id"),
                    container,
                    trigger,
                    dropdownList
                };
                closeOtherReleased(options);
                toggle(options);
            }
            __SL_$__("body").on("click", `.global-dropdown-list .${defaultOptions.triggerClass}`, openHandler);
        }));
        var debounce = __webpack_require__("./node_modules/lodash/debounce.js");
        var debounce_default = __webpack_require__.n(debounce);
        var throttle = __webpack_require__("./node_modules/lodash/throttle.js");
        var throttle_default = __webpack_require__.n(throttle);
        var lodash_escape = __webpack_require__("./node_modules/lodash/escape.js");
        var escape_default = __webpack_require__.n(lodash_escape);
        var base_BaseClass = __webpack_require__("./src/assets/commons/base/BaseClass.js");
        var stage = __webpack_require__("../shared/browser/report/stage/index.js");
        var stage_const = __webpack_require__("../shared/browser/report/stage/const.js");
        class VirtualReport extends stage.StageReport {
            constructor() {
                super();
                this.defaultParams = {
                    ...this.defaultParams,
                    module: -999,
                    component: -999,
                    page: stage_const.virtualPageEnum.fixedSction
                };
                this.headerElementSelector = {
                    header: ".__sl-custom-track-stage-header",
                    btnUser: ".__sl-custom-track-stage-header-user",
                    btnCart: ".__sl-custom-track-stage-header-cart",
                    announcementItem: ".__sl-custom-track-stage-header-announcementItem",
                    newsletter: ".__sl-custom-track-stage-header-newsletter",
                    btnNewsletter: ".__sl-custom-track-stage-header-newsletter-button",
                    inputNewsletter: ".__sl-custom-track-stage-header-newsletter-input"
                };
                this.footerElementSelector = {
                    footer: ".__sl-custom-track-stage-footer",
                    newsletter: ".__sl-custom-track-stage-footer-newsletter",
                    btnNewsletter: ".__sl-custom-track-stage-footer-newsletter-button",
                    inputNewsletter: ".__sl-custom-track-stage-footer-newsletter-input"
                };
                this.footerPromotionSelector = {
                    footerPromotion: ".__sl-custom-track-stage-footerPromotion"
                };
                this.socialElementSelectorPrefix = "__sl-custom-track-stage-social-";
                this.commonElementSelector = {
                    navItem: ".__sl-custom-track-stage-navItem",
                    locale: ".__sl-custom-track-stage-locale",
                    currency: ".__sl-custom-track-stage-currency"
                };
            }
            inFooter(e) {
                const $target = __SL_$__(e.target);
                const $footer = $target.closest(this.footerElementSelector.footer);
                const flag = $footer.length > 0;
                return flag;
            }
            bindHeaderReport() {
                const selMap = this.headerElementSelector;
                this.expose({
                    selector: selMap.header,
                    moreInfo: {
                        module_type: stage_const.sectionTypeEnum.header
                    }
                });
                this.bindClick({
                    selector: selMap.btnUser,
                    moreInfo: {
                        component: stage_const.virtualComponentEnum.user
                    }
                });
                this.bindClick({
                    selector: selMap.btnCart,
                    moreInfo: {
                        component: stage_const.virtualComponentEnum.cart
                    }
                });
                this.bindClick({
                    selector: selMap.announcementItem,
                    moreInfo: {
                        component: stage_const.virtualComponentEnum.announcement
                    }
                });
            }
            bindSocialReport() {
                const prefix = this.socialElementSelectorPrefix;
                this.bindClick({
                    selector: "a[href]",
                    customHandler: (e, params) => {
                        const $socialItem = __SL_$__(e.currentTarget);
                        const cls = $socialItem && $socialItem.attr("class") || "";
                        const hasClass = cls.indexOf(prefix) >= 0;
                        if (!$socialItem.length || !hasClass) return;
                        const {classList} = $socialItem[0];
                        const sel = Array.prototype.find.call(classList, (cls => cls.startsWith(prefix)));
                        const social_media_type = sel.replace(prefix, "");
                        const data = {
                            ...params,
                            social_media_type,
                            component: stage_const.virtualComponentEnum.socialItem,
                            module_type: this.inFooter(e) ? stage_const.sectionTypeEnum.footer : stage_const.sectionTypeEnum.header
                        };
                        this.click(data);
                    }
                });
            }
            bindNavReport() {
                this.bindClick({
                    selector: this.commonElementSelector.navItem,
                    customHandler: (e, params) => {
                        const data = {
                            ...params,
                            component: stage_const.virtualComponentEnum.navItem,
                            module_type: this.inFooter(e) ? stage_const.sectionTypeEnum.footer : stage_const.sectionTypeEnum.header
                        };
                        this.click(data);
                    }
                });
            }
            bindLocaleCurrencyReport() {
                this.bindClick({
                    selector: this.commonElementSelector.locale,
                    customHandler: (e, params) => {
                        const data = {
                            ...params,
                            component: stage_const.virtualComponentEnum.locale,
                            module_type: this.inFooter(e) ? stage_const.sectionTypeEnum.footer : stage_const.sectionTypeEnum.header
                        };
                        this.click(data);
                    }
                });
                this.bindClick({
                    selector: this.commonElementSelector.currency,
                    customHandler: (e, params) => {
                        const data = {
                            ...params,
                            component: stage_const.virtualComponentEnum.currency,
                            module_type: this.inFooter(e) ? stage_const.sectionTypeEnum.footer : stage_const.sectionTypeEnum.header
                        };
                        this.click(data);
                    }
                });
            }
            bindFooterReport() {
                this.expose({
                    selector: this.footerElementSelector.footer,
                    moreInfo: {
                        module_type: stage_const.sectionTypeEnum.footer
                    }
                });
                this.bindFooterNewsLetter();
            }
            bindFooterPromotionReport() {
                this.expose({
                    selector: this.footerPromotionSelector.footerPromotion,
                    moreInfo: {
                        module_type: stage_const.sectionTypeEnum["footer-promotion"]
                    }
                });
            }
            bindFooterNewsLetter() {
                const component = stage_const.virtualComponentEnum.newsletter;
                this.expose({
                    selector: this.footerElementSelector.newsletter,
                    moreInfo: {
                        component
                    }
                });
                this.bindClick({
                    selector: this.footerElementSelector.btnNewsletter,
                    moreInfo: {
                        component
                    }
                });
                this.bindInput({
                    selector: this.footerElementSelector.inputNewsletter,
                    moreInfo: {
                        component
                    }
                });
            }
            bindHeaderNewsLetter() {
                const component = stage_const.virtualComponentEnum.newsletter;
                this.expose({
                    selector: this.headerElementSelector.newsletter,
                    moreInfo: {
                        component
                    }
                });
                this.bindClick({
                    selector: this.headerElementSelector.btnNewsletter,
                    moreInfo: {
                        component
                    }
                });
                this.bindInput({
                    selector: this.headerElementSelector.inputNewsletter,
                    moreInfo: {
                        component
                    }
                });
            }
            reportSelectLang(e, lang) {
                const params = {
                    module_type: this.inFooter(e) ? stage_const.sectionTypeEnum.footer : stage_const.sectionTypeEnum.header,
                    component: stage_const.virtualComponentEnum.localeItem,
                    language_type: lang
                };
                this.click(params);
            }
            reportSelectCurrency(e, currency) {
                const params = {
                    module_type: this.inFooter(e) ? stage_const.sectionTypeEnum.footer : stage_const.sectionTypeEnum.header,
                    component: stage_const.virtualComponentEnum.currencyItem,
                    currency_type: currency
                };
                this.click(params);
            }
            reportSearch(searchWord) {
                this.collect({
                    component: stage_const.virtualComponentEnum.search,
                    event_name: "Search",
                    search_term: searchWord
                });
            }
        }
        const virtualReport = new VirtualReport;
        function initVirtualReport() {
            __SL_$__((() => {
                virtualReport.bindHeaderReport();
                virtualReport.bindFooterReport();
                virtualReport.bindFooterPromotionReport();
                virtualReport.bindSocialReport();
                virtualReport.bindNavReport();
                virtualReport.bindLocaleCurrencyReport();
            }));
        }
        const report_virtualReport = virtualReport;
        function _defineProperty(obj, key, value) {
            if (key in obj) Object.defineProperty(obj, key, {
                value,
                enumerable: true,
                configurable: true,
                writable: true
            }); else obj[key] = value;
            return obj;
        }
        const SEARCH_PAGE_MAP = {
            index: 101,
            "products/search": 106,
            "products/detail": 102,
            collection: 107
        };
        const NOT_FOUND_PAGE = 120;
        const HEADER_SEARCH_EVENT = "stage-header-search";
        const SEARCH_API = "/product/list/query/suggest";
        const SEARCH_TYPE = {
            0: "suggest_search",
            1: "suggest_ai",
            2: "user_search"
        };
        const getSearchResultUrl = (key, type) => `/products/search?keyword=${encodeURIComponent(key.trim())}&type=${SEARCH_TYPE[type]}`;
        const renderSearchResultItem = (item, searchKey) => {
            const {title, src} = item;
            const url = getSearchResultUrl(title, src);
            if (title.toLocaleLowerCase() === searchKey.toLocaleLowerCase().trim()) return "";
            if (title.toLocaleLowerCase().startsWith(searchKey.toLocaleLowerCase())) return `<li>\n\t\t<a class="body3" href="${url}" data-type="${src}" data-match=true >\n\t\t\t<span>${escape_default()(title.substring(0, searchKey.length)).replaceAll(" ", "&nbsp;")}</span>${escape_default()(title.substring(searchKey.length, title.length)).replaceAll(" ", "&nbsp;")}\n\t\t</a>\n\t</li>`;
            return `<li>\n\t\t<a class="body3" href="${url}" data-type="${src}" data-match="true" >\n${escape_default()(title)}\n\t\t</a>\n\t</li>`;
        };
        const renderFirstKey = key => {
            const url = getSearchResultUrl(key, 2);
            return `<li>\n\t<a class="body3" href="${url}" data-type="2" data-match="true" >\n<span>${escape_default()(key)}</span>\n\t\t\t</a>\n\t</li>`;
        };
        const renderDynamicItem = (data, searchKey) => data.map((item => renderSearchResultItem(item, searchKey))).join("");
        const renderSearchResult = (data, searchKey) => renderFirstKey(searchKey) + renderDynamicItem(data, searchKey);
        class HeaderSearch extends base_BaseClass["default"] {
            constructor() {
                super();
                _defineProperty(this, "config", {
                    namespace: "stage:headerSearch"
                });
                _defineProperty(this, "cacheResult", {});
                _defineProperty(this, "classes", {
                    activeClass: "is-active",
                    drawerOpenRoot: "stage-drawer-root-open",
                    drawerClosingRoot: "stage-drawer-root-closing",
                    drawerOpenRootSearch: "stage-drawer-root-open-search"
                });
                _defineProperty(this, "selectors", {
                    searchContainer: ".header__search--container",
                    searchBtn: ".j-stage-header-search",
                    searchCloseBtn: ".j-stage-search-close",
                    suggestList: ".header__suggest--list",
                    suggestLink: ".header__search--predicate li a",
                    input: ".header__search--input",
                    forceSearchBtn: ".j-stage-force-search",
                    searchBarInput: ".searchbar--input",
                    searchBarSuggestList: ".searchbar__suggest--list"
                });
                _defineProperty(this, "jq", {
                    root: __SL_$__("body")
                });
                _defineProperty(this, "searchResultReport", debounce_default()(((data, searchKey) => {
                    var _data$filter, _data$filter2, _window$HdSdk;
                    const template = window.SL_State.get("template");
                    const page = SEARCH_PAGE_MAP[template] || NOT_FOUND_PAGE;
                    const suggest_ai_count = null === data || void 0 === data ? void 0 : null === (_data$filter = data.filter((item => 1 === item.src))) || void 0 === _data$filter ? void 0 : _data$filter.length;
                    const suggest_search_count = null === data || void 0 === data ? void 0 : null === (_data$filter2 = data.filter((item => 0 === item.src))) || void 0 === _data$filter2 ? void 0 : _data$filter2.length;
                    null === (_window$HdSdk = window.HdSdk) || void 0 === _window$HdSdk ? void 0 : _window$HdSdk.shopTracker.report(60080059, {
                        page,
                        iframe_id: 1,
                        event_name: 131,
                        user_search: searchKey,
                        suggest_ai: suggest_ai_count || 0,
                        suggest_search: suggest_search_count || 0
                    });
                }), 400));
                _defineProperty(this, "tempEventType", `click.tempWrapperClick-${this.namespace}-mask`);
                _defineProperty(this, "updateDom", ((data, counter, resultList) => {
                    var _list$children$;
                    if (counter !== this.counter) return;
                    const html = renderDynamicItem(data, this.tempSearchKey);
                    const list = __SL_$__(resultList)[0];
                    const firstItem = null === list || void 0 === list ? void 0 : null === (_list$children$ = list.children[0]) || void 0 === _list$children$ ? void 0 : _list$children$.outerHTML;
                    if (firstItem) __SL_$__(resultList).html(firstItem + html);
                }));
                _defineProperty(this, "counter", 0);
                _defineProperty(this, "tempSearchKey", "");
                this.$setNamespace(this.config.namespace);
                this.init();
            }
            bindClickEvent() {
                this.$on("click", this.selectors.searchBtn, (() => {
                    window.SL_EventBus.emit(HEADER_SEARCH_EVENT, "open", "btn");
                }));
                this.$on("click", this.selectors.searchCloseBtn, (() => {
                    window.SL_EventBus.emit(HEADER_SEARCH_EVENT, "close");
                }));
                this.$on("click", this.selectors.suggestLink, (e => {
                    this.doSearchReport(e.target.innerText);
                }));
            }
            init() {
                this.bindClickEvent();
                this.bindInput(this.selectors.searchBarInput);
                this.bindSearchBarFocustAndBlur();
                this.bindForceSearchEvent();
                window.SL_EventBus.on(HEADER_SEARCH_EVENT, ((status, caller) => {
                    if (void 0 === status) return;
                    if ("open" === status) {
                        window.SL_EventBus.emit("force-header-intoView");
                        this.openSearch(caller);
                    } else this.closeSearch();
                }));
            }
            searchViewReport(caller) {
                var _window$HdSdk2, _window$HdSdk3;
                const template = window.SL_State.get("template");
                const page = SEARCH_PAGE_MAP[template] || NOT_FOUND_PAGE;
                null === (_window$HdSdk2 = window.HdSdk) || void 0 === _window$HdSdk2 ? void 0 : _window$HdSdk2.shopTracker.report(60080059, {
                    page,
                    iframe_id: 1,
                    event_name: 101,
                    general_component: 128
                });
                null === (_window$HdSdk3 = window.HdSdk) || void 0 === _window$HdSdk3 ? void 0 : _window$HdSdk3.shopTracker.report(60080059, {
                    page,
                    iframe_id: 1,
                    event_name: 109,
                    general_component: "btn" === caller ? 103 : 129
                });
            }
            searchExitReport() {
                var _window$HdSdk4;
                const template = window.SL_State.get("template");
                const page = SEARCH_PAGE_MAP[template] || NOT_FOUND_PAGE;
                null === (_window$HdSdk4 = window.HdSdk) || void 0 === _window$HdSdk4 ? void 0 : _window$HdSdk4.shopTracker.report(60080059, {
                    page,
                    iframe_id: 1,
                    event_name: 999,
                    page_dest: window.location.origin + window.location.pathname
                });
            }
            openSearch(caller) {
                const $container = __SL_$__(this.selectors.searchContainer);
                if ($container.hasClass(this.classes.activeClass)) return;
                this.searchViewReport(caller);
                this.prepareTransition($container, (() => {
                    this.jq.root.addClass([ this.classes.drawerOpenRoot, this.classes.drawerOpenRootSearch ]);
                    $container.addClass(this.classes.activeClass);
                }), (() => {}));
                const $input = __SL_$__(this.selectors.input);
                $input.trigger("focus");
                this.bindInput(this.selectors.input);
                this.bindMaskClick();
            }
            closeSearch() {
                const $container = __SL_$__(this.selectors.searchContainer);
                if (!$container.hasClass(this.classes.activeClass)) return;
                this.searchExitReport();
                __SL_$__(this.selectors.input).trigger("blur").val("");
                __SL_$__(this.selectors.suggestList).html("");
                this.prepareTransition($container, (() => {
                    this.jq.root.removeClass([ this.classes.drawerOpenRoot, this.classes.drawerOpenRootSearch ]);
                    this.jq.root.addClass(this.classes.drawerClosingRoot);
                    $container.removeClass(this.classes.activeClass);
                }), (() => {
                    this.jq.root.removeClass(this.classes.drawerClosingRoot);
                    this.counter = 0;
                    this.tempSearchKey = "";
                    this.$off(this.tempEventType);
                }));
                this.$off("input", this.selectors.input);
            }
            bindMaskClick() {
                this.$on(this.tempEventType, (({target}) => {
                    const container = __SL_$__(this.selectors.searchContainer)[0];
                    if (!container) return;
                    if (!container.contains(target)) window.SL_EventBus.emit(HEADER_SEARCH_EVENT, "close");
                }));
            }
            doSearchReport(value) {
                report_virtualReport.reportSearch(value);
                window.SL_EventBus.emit("global:thirdPartReport", {
                    GA: [ [ "event", "search", {
                        search_term: value || ""
                    } ] ],
                    GA4: [ [ "event", "search", {
                        search_term: value || ""
                    } ] ]
                });
            }
            doSearch(e) {
                const id = __SL_$__(e.currentTarget).data("id");
                const value = __SL_$__(`#${id}__input`).val();
                if (!value) return;
                this.doSearchReport(value);
                window.location.href = getSearchResultUrl(value, 2);
            }
            bindForceSearchEvent() {
                this.$on("keydown", this.selectors.input, (e => {
                    if (13 === e.keyCode) this.doSearch(e);
                }));
                this.$on("focus", this.selectors.input, (() => {
                    const $target = __SL_$__("#suggest-menu-list");
                    __SL_$__(this.selectors.suggestList).html($target.html());
                }));
                this.$on("blur", this.selectors.input, (() => {
                    setTimeout((() => {
                        __SL_$__(this.selectors.suggestList).html("");
                    }), 500);
                }));
                this.$on("click", this.selectors.forceSearchBtn, this.doSearch.bind(this));
            }
            offForceSearchEvent() {
                this.$off("keydown", this.selectors.searchBarInput);
                this.$off("click", this.selectors.forceSearchBtn);
            }
            bindInput(selector) {
                this.$on("input", selector, debounce_default()((async e => {
                    const resultList = `#${__SL_$__(e.target).data("id")}__suggest-list`;
                    const $list = __SL_$__(resultList);
                    const {value: searchValue} = e.target;
                    if (!searchValue) {
                        $list.html("");
                        return;
                    }
                    if (this.cacheResult[searchValue]) {
                        const html = renderSearchResult(this.cacheResult[searchValue], searchValue);
                        $list.html(html);
                        return;
                    }
                    if ($list[0].children.length > 0) $list[0].children[0].outerHTML = renderFirstKey(searchValue); else $list.html(renderFirstKey(searchValue));
                    this.counter += 1;
                    this.tempSearchKey = searchValue;
                    const ret = await request["default"].get(SEARCH_API, {
                        params: {
                            word: searchValue,
                            num: 10
                        }
                    });
                    if ("SUCCESS" === ret.code) {
                        this.cacheResult[searchValue] = ret.data;
                        this.updateDom(ret.data, this.counter, resultList);
                        this.searchResultReport(ret.data, searchValue);
                    }
                }), 100));
            }
            bindSearchBarFocustAndBlur() {
                this.$on("keypress", this.selectors.searchBarInput, (e => {
                    if (13 === e.keyCode) {
                        this.doSearch(e);
                        return false;
                    }
                }));
                this.$on("focus", this.selectors.searchBarInput, (e => {
                    const resultList = `#${__SL_$__(e.target).data("id")}__suggest-list`;
                    const $target = __SL_$__("#suggest-menu-list");
                    __SL_$__(resultList).html($target.html());
                }));
                this.$on("blur", this.selectors.searchBarInput, (e => {
                    const resultList = `#${__SL_$__(e.target).data("id")}__suggest-list`;
                    setTimeout((() => {
                        __SL_$__(resultList).html("");
                    }), 500);
                }));
            }
            off() {
                this.$offAll();
            }
        }
        let header_search_instance = new HeaderSearch;
        __SL_$__(document).on("shopline:section:load", (() => {
            header_search_instance.off();
            header_search_instance = new HeaderSearch;
        }));
        function drawer_menu_defineProperty(obj, key, value) {
            if (key in obj) Object.defineProperty(obj, key, {
                value,
                enumerable: true,
                configurable: true,
                writable: true
            }); else obj[key] = value;
            return obj;
        }
        class DrawerMenu extends base_BaseClass["default"] {
            constructor() {
                super();
                drawer_menu_defineProperty(this, "config", {
                    namespace: "stage:drawerMenu"
                });
                drawer_menu_defineProperty(this, "classes", {
                    openClass: "is-open"
                });
                drawer_menu_defineProperty(this, "selector", {
                    trigger: ".nav-collapsible-trigger ",
                    inner: ".collapsible-content__inner",
                    sublist: ".mobile-nav__sublist",
                    drawer: ".stage-drawer-nested.stage-drawer--is-open",
                    localeCurrency: ".locale-currency.mobile-nav__link",
                    localeCurrencyContainer: ".drawer-menu-locale-currency"
                });
                this.$setNamespace(this.config.namespace);
                this.bindEvent();
                this.bindDrawer();
                this.bindLocaleCurrencyChange();
            }
            modifyParent($button, addHeight, isOpen) {
                const parent = $button.parents(`div${this.selector.sublist}`);
                if (!parent.length) return;
                parent.height(parent.height());
                if (isOpen) parent.height(parent.height() + addHeight); else parent.height(parent.height() - addHeight);
            }
            bindEvent() {
                this.$on("click", this.selector.trigger, (e => {
                    const $button = __SL_$__(e.currentTarget);
                    const controlsId = $button.attr("aria-controls");
                    const $controls = __SL_$__(`#${controlsId}`);
                    const $inner = $controls.find(this.selector.inner);
                    const height = $inner.height();
                    if ($button.hasClass(this.classes.openClass)) {
                        $controls.height(height);
                        $button.removeClass(this.classes.openClass);
                        this.modifyParent($button, height, false);
                        this.prepareTransition($controls, (() => {
                            $controls.height(0);
                            $controls.removeClass(this.classes.openClass);
                        }));
                    } else {
                        this.modifyParent($button, height, true);
                        this.prepareTransition($controls, (() => {
                            $controls.height(height);
                            $controls.addClass(this.classes.openClass);
                        }));
                        $button.addClass(this.classes.openClass);
                    }
                }));
            }
            bindDrawer() {
                this.$on("click", this.selector.localeCurrency, (e => {
                    const $target = __SL_$__(e.currentTarget);
                    const drawerId = $target.data("drawer");
                    window.SL_EventBus.emit("stage:drawer", {
                        id: drawerId,
                        status: "open"
                    });
                }));
            }
            bindLocaleCurrencyChange() {
                this.$on("click", `${this.selector.localeCurrencyContainer} li`, (e => {
                    const $target = __SL_$__(e.currentTarget);
                    const drawerId = $target.parents(this.selector.drawer).eq(0).attr("id");
                    window.SL_EventBus.emit("stage:drawer", {
                        id: drawerId,
                        status: "close_self"
                    });
                }));
            }
            off() {
                this.$offAll();
            }
        }
        let drawer_menu_instance = new DrawerMenu;
        __SL_$__(document).on("shopline:section:load", (() => {
            drawer_menu_instance.off();
            drawer_menu_instance = new DrawerMenu;
        }));
        var topDrawer = __webpack_require__("./src/assets/commons/components/topDrawer/index.js");
        function mobile_locale_currency_drawer_defineProperty(obj, key, value) {
            if (key in obj) Object.defineProperty(obj, key, {
                value,
                enumerable: true,
                configurable: true,
                writable: true
            }); else obj[key] = value;
            return obj;
        }
        class mobile_locale_currency_drawer_DrawerMenu extends base_BaseClass["default"] {
            constructor() {
                super();
                mobile_locale_currency_drawer_defineProperty(this, "config", {
                    namespace: "stage:mobileLocaleCurrencyDrawer"
                });
                mobile_locale_currency_drawer_defineProperty(this, "classes", {});
                mobile_locale_currency_drawer_defineProperty(this, "selector", {
                    drawer: ".stage-top-drawer.top-drawer--open",
                    localeCurrencyContainer: ".drawer-menu-locale-currency",
                    currencyBtn: ".j-currency-drawer-btn",
                    localeBtn: ".j-locale-drawer-btn"
                });
                mobile_locale_currency_drawer_defineProperty(this, "drawers", {
                    localeDrawer: null,
                    currencyDrawer: null
                });
                this.$setNamespace(this.config.namespace);
                this.init();
                this.bindEvent();
                this.bindLocaleCurrencyChange();
            }
            init() {
                this.drawers.currencyDrawer = new topDrawer["default"]("global-currency-drawer", {
                    fullScreen: true
                });
                this.drawers.localeDrawer = new topDrawer["default"]("global-locale-drawer", {
                    fullScreen: true
                });
            }
            bindEvent() {
                this.$on("click", this.selector.localeBtn, (() => {
                    this.drawers.localeDrawer.open();
                }));
                this.$on("click", this.selector.currencyBtn, (e => {
                    const $btn = __SL_$__(e.currentTarget);
                    this.setupCurrencyList($btn);
                    this.drawers.currencyDrawer.open();
                }));
            }
            setupCurrencyList($btn) {
                const hasSymbol = $btn.find(".currency-symbol").hasClass("show");
                const $drawerCurrencyList = __SL_$__(".drawer-menu-locale-currency[data-currency] .currency-list");
                if (hasSymbol) $drawerCurrencyList.addClass("show-symbol"); else $drawerCurrencyList.removeClass("show-symbol");
            }
            bindLocaleCurrencyChange() {
                this.$on("click", `${this.selector.localeCurrencyContainer} li`, (e => {
                    const $target = __SL_$__(e.currentTarget);
                    const drawerId = $target.parents(this.selector.drawer).eq(0).attr("id");
                    Object.keys(this.drawers).forEach((key => {
                        const drawer = this.drawers[key];
                        if (drawer.id === drawerId) drawer.close();
                    }));
                }));
            }
            off() {
                this.$offAll();
            }
        }
        let mobile_locale_currency_drawer_instance = new mobile_locale_currency_drawer_DrawerMenu;
        __SL_$__(document).on("shopline:section:load", (() => {
            mobile_locale_currency_drawer_instance.off();
            mobile_locale_currency_drawer_instance = new mobile_locale_currency_drawer_DrawerMenu;
        }));
        var lodash_debounce = __webpack_require__("../shared/browser/node_modules/lodash/debounce.js");
        var lodash_debounce_default = __webpack_require__.n(lodash_debounce);
        const EVENT_STICKY_ELEMENT_HEIGHT = "stage:header:stickyElementHeight";
        function getStickyElementHeight(headerSectionSelector = "#shopline-section-header") {
            let top = 0;
            __SL_$__(headerSectionSelector).prevAll().each(((_, el) => {
                const $el = __SL_$__(el);
                if ("sticky" === $el.css("position")) top += $el.height();
            }));
            return top;
        }
        function emitStickyElementHeight() {
            const stickyElementHeight = getStickyElementHeight();
            window.SL_EventBus.emit(EVENT_STICKY_ELEMENT_HEIGHT, {
                stickyElementHeight
            });
        }
        class StickyElementManager {
            constructor() {
                this.namespace = "stage:stickyElementManager";
                this.bindLoaded();
            }
            bindLoaded() {
                if ("loading" !== document.readyState) this.initAfterLoaded(); else document.addEventListener("DOMContentLoaded", (() => {
                    this.initAfterLoaded();
                }));
            }
            initAfterLoaded() {
                this.initStickyJob();
            }
            initStickyJob() {
                emitStickyElementHeight();
                setTimeout((() => {
                    requestAnimationFrame(emitStickyElementHeight);
                }), 2500);
                this.onEvent();
            }
            onEvent() {
                __SL_$__(window).on(`scroll.${this.namespace}`, lodash_debounce_default()(emitStickyElementHeight, 1e3, {
                    leading: true
                }));
            }
            offEvent() {
                __SL_$__(window).off(`scroll.${this.namespace}`);
            }
        }
        var query_string = __webpack_require__("../shared/browser/node_modules/query-string/index.js");
        const HEADER_STICKY = "Stage::HeaderSticky";
        const header_sticky_EVENT_NAME = HEADER_STICKY;
        const header_sticky_logger = (0, api_logger["default"])(header_sticky_EVENT_NAME);
        const header_sticky_external = window.Shopline.event;
        const headerSticky = data => {
            header_sticky_logger.info(`[emit]`, data);
            return header_sticky_external.emit(header_sticky_EVENT_NAME, {
                data,
                onSuccess: result => {
                    header_sticky_logger.info("success", result);
                },
                onError: error => {
                    header_sticky_logger.error(error);
                }
            });
        };
        headerSticky.apiName = header_sticky_EVENT_NAME;
        const header_sticky = headerSticky;
        class HeaderStickyEvent {
            constructor() {
                this.headerSectionId = "shopline-section-header";
                this.headerWrapperSelector = "#stage-header";
                this.aboveElementHeight = 0;
                this.isSticky = false;
                this.namespace = "stage:stickyElementManager";
                this.isDebug = false;
                this.mutationTimer = null;
                this.bindLoaded();
            }
            bindLoaded() {
                if ("loading" !== document.readyState) this.initAfterLoaded(); else document.addEventListener("DOMContentLoaded", (() => {
                    this.initAfterLoaded();
                }));
            }
            initAfterLoaded() {
                this.initDebugMode();
                this.initMutationObserver();
            }
            initDebugMode() {
                const params = query_string.parse(window.location.search);
                this.isDebug = "1" === params.ssr_debug;
            }
            emitSticky(stickyActive) {
                if (stickyActive) this.sticky(); else this.unSticky();
            }
            sticky() {
                if (this.isSticky) return;
                this.isSticky = true;
                this.emitEvent();
            }
            unSticky() {
                if (!this.isSticky) return;
                this.isSticky = false;
                this.emitEvent();
            }
            getAboveElementHeight(headerSectionSelector) {
                const that = this;
                let height = 0;
                __SL_$__(headerSectionSelector).prevAll().each(((_, el) => {
                    const $el = __SL_$__(el);
                    if ("sticky" === $el.css("position")) {
                        const h = $el.height();
                        if (that.isDebug) {
                            console.log("header sticky event debug element", $el);
                            console.log("header sticky event debug element height", h);
                        }
                        height = Math.max(height, h);
                    }
                }));
                return height;
            }
            onMutation(mutationList) {
                const nodesChangedMutation = mutationList.find((mutation => {
                    const {type, addedNodes = [], removedNodes = []} = mutation;
                    const nodesChanged = addedNodes.length || removedNodes.length;
                    return "childList" === type && nodesChanged;
                }));
                if (!nodesChangedMutation) return;
                if (this.mutationTimer) clearTimeout(this.mutationTimer);
                this.mutationTimer = setTimeout((() => {
                    const height = this.getAboveElementHeight(`#${this.headerSectionId}`);
                    if (height !== this.aboveElementHeight) {
                        this.aboveElementHeight = height;
                        this.emitEvent();
                    }
                }), 200);
            }
            initMutationObserver() {
                const targetNode = document.querySelector("body");
                const observerOptions = {
                    childList: true
                };
                const observer = new MutationObserver((mutationList => {
                    this.onMutation(mutationList);
                }));
                observer.observe(targetNode, observerOptions);
            }
            emitEvent() {
                const that = this;
                const headerElement = document.querySelector(that.headerWrapperSelector);
                const headerHeight = headerElement ? headerElement.getBoundingClientRect().height : 0;
                const aboveElementHeight = this.getAboveElementHeight(`#${this.headerSectionId}`);
                that.aboveElementHeight = aboveElementHeight;
                const data = {
                    header_sticky: that.isSticky,
                    header_height: headerHeight,
                    above_element_height: that.aboveElementHeight
                };
                if (that.isDebug) {
                    console.groupCollapsed(`[Offical Event]${header_sticky.apiName}`);
                    console.table(data);
                    console.groupEnd();
                }
                header_sticky(data);
            }
        }
        const headerStickyEvent = new HeaderStickyEvent;
        var globalEvent = __webpack_require__("./src/assets/commons/cart/globalEvent.js");
        __webpack_require__("./src/assets/stage/header/scripts/desktop-site-nav.js");
        function header_defineProperty(obj, key, value) {
            if (key in obj) Object.defineProperty(obj, key, {
                value,
                enumerable: true,
                configurable: true,
                writable: true
            }); else obj[key] = value;
            return obj;
        }
        class Header extends base_BaseClass["default"] {
            constructor() {
                super();
                header_defineProperty(this, "config", {
                    namespace: "satge:header",
                    wrapperOverlayed: false,
                    stickyEnabled: false,
                    stickyActive: false,
                    stickyHeader: false,
                    lastScroll: 0,
                    forceStopSticky: false,
                    stickyHeaderWrapper: "StickyHeaderWrap",
                    swiperBreakpoint: 750,
                    lastStickOffsetTop: 0
                });
                header_defineProperty(this, "classes", {
                    overlayedClass: "header--is-light",
                    stickyClass: "header__main--sticky",
                    openTransitionClass: "header__main--opening",
                    activateSwiperClass: "swiper-wrapper",
                    activateSwiperContainer: "swiper-container",
                    activeCartClass: "header__cart--active",
                    outerWrapperSticky: "is-sticky",
                    wrapperSticky: "header-wrapper--sticky",
                    activeNavClass: "show-nav",
                    headerBtnLink: "header__btn--link",
                    headerBtnActive: "header__btn--on",
                    headerBtnWrapperActive: "header__btn--active"
                });
                header_defineProperty(this, "selectors", {
                    wrapper: "#stage-headerWrapper",
                    header: "#stage-header",
                    drawerBtn: ".j-header-drawer-btn",
                    miniCart: ".header__cart",
                    cartBtn: "#stage-header-cart",
                    cartPoint: ".header__cart-point",
                    logoImage: ".header__logo--link img",
                    outerWrapper: ".header-sticky-wrapper",
                    logoImag: ".header__logo--link img",
                    notOverlayId: "#CollectionHeaderSection",
                    navBtn: ".j-header-nav-btn",
                    headerBtn: ".header__btn",
                    headerBtnWrapper: ".header__item--buttons",
                    menuBtn: ".header__btn--menu",
                    layoutContainer: ".header__layout-container",
                    sectionOuterHeaderWrapper: "#shopline-section-header"
                });
                header_defineProperty(this, "jq", {
                    header: __SL_$__(),
                    wrapper: __SL_$__(),
                    stickyHeaderWrapper: __SL_$__()
                });
                header_defineProperty(this, "menuDrawer", null);
                this.$setNamespace(this.config.namespace);
                this.jq.header = __SL_$__(this.selectors.header);
                this.jq.wrapper = __SL_$__(this.selectors.wrapper);
                this.stickyElementManager = new StickyElementManager;
                this.bindCartEvent();
                this.initAfterLoaded();
                this.bindHeaderNav();
                const $img = __SL_$__(this.selectors.logoImag);
                let waitForImg = null;
                if ($img.length) waitForImg = null === $img || void 0 === $img ? void 0 : $img.toArray().find((img => null !== img.offsetParent));
                if (waitForImg) if (waitForImg.complete && 0 !== waitForImg.naturalHeight) this.initHeader(); else waitForImg.onload = () => {
                    this.initHeader();
                }; else __SL_$__((() => {
                    this.initHeader();
                }));
            }
            initAfterLoaded() {
                if ("loading" !== document.readyState) this.bindCartCount(); else document.addEventListener("DOMContentLoaded", (() => {
                    this.bindCartCount();
                }));
            }
            initHeader() {
                this.config.stickyEnabled = this.jq.header.data("sticky");
                if (this.config.stickyEnabled) {
                    const notOverlay = __SL_$__(this.selectors.notOverlayId);
                    if (notOverlay.length) {
                        this.config.wrapperOverlayed = false;
                        this.jq.wrapper.removeClass(this.classes.overlayedClass);
                        this.jq.wrapper.removeClass(this.classes.wrapperSticky);
                    } else this.config.wrapperOverlayed = this.jq.wrapper.data("overlay");
                    this.stickyHeaderCheck();
                }
                window.SL_EventBus.on("force-header-intoView", (() => {
                    if (window.scrollY < 250 && window.scrollY > 0) __SL_$__(this.selectors.header)[0].scrollIntoView();
                }));
                window.SL_EventBus.on("stage:locale:change", (() => {
                    var _this$jq, _this$jq$stickyHeader, _this$jq$stickyHeader2;
                    if (null !== this && void 0 !== this && null !== (_this$jq = this.jq) && void 0 !== _this$jq && null !== (_this$jq$stickyHeader = _this$jq.stickyHeaderWrapper[0]) && void 0 !== _this$jq$stickyHeader && null !== (_this$jq$stickyHeader2 = _this$jq$stickyHeader.style) && void 0 !== _this$jq$stickyHeader2 && _this$jq$stickyHeader2.height) {
                        this.jq.stickyHeaderWrapper[0].style.height = "auto";
                        this.stickyHeaderHeight();
                    }
                }));
            }
            stickyHeaderCheck() {
                this.config.stickyHeader = true;
                if (this.config.stickyHeader) {
                    this.config.forceStopSticky = false;
                    this.stickyHeader();
                } else this.config.forceStopSticky = true;
            }
            stickyHeader() {
                this.config.lastScroll = 0;
                const wrapWith = document.createElement("div");
                wrapWith.id = this.config.stickyHeaderWrapper;
                this.jq.header.wrap(wrapWith);
                this.jq.stickyHeaderWrapper = __SL_$__(`#${wrapWith.id}`);
                this.stickyHeaderHeight();
                this.stickyHeaderScroll();
                setTimeout((() => {
                    requestAnimationFrame(this.scrollWorker.bind(this));
                }), 2500);
                this.$onWin("resize", debounce_default()(this.stickyHeaderHeight.bind(this), 50));
                this.$onWin("scroll", throttle_default()(this.stickyHeaderScroll.bind(this), 20));
                if (window.Shopline.designMode) {
                    const $logoImage = __SL_$__(this.selectors.logoImage);
                    const onLoadHandler = () => {
                        setTimeout((() => {
                            this.stickyHeaderHeight();
                        }), 1e3);
                        $logoImage.off("load");
                    };
                    $logoImage.on("load", onLoadHandler);
                }
            }
            stickyHeaderScroll() {
                if (!this.config.stickyEnabled) return;
                if (this.config.forceStopSticky) return;
                requestAnimationFrame(this.scrollWorker.bind(this));
                this.config.lastScroll = window.scrollY;
            }
            scrollWorker() {
                if (window.scrollY > 250) this.doSticky(); else this.undoSticky();
            }
            emitSticky(stickyActive) {
                headerStickyEvent.emitSticky(stickyActive);
                const headerHeight = __SL_$__(this.selectors.header).height();
                const stickOffsetTop = this.getStickHeaderOffsetTop();
                this.config.lastStickOffsetTop = stickOffsetTop;
                window.SL_EventBus.emit("stage:header:sticky", {
                    stickyActive,
                    headerHeight
                });
                window.SL_EventBus.emit("stage:header:stickOffsetTopUpdate", {
                    stickOffsetTop,
                    stickyActive
                });
            }
            undoSticky() {
                if (false === this.config.stickyActive) return;
                this.config.stickyActive = false;
                this.jq.header.removeClass([ this.classes.openTransitionClass, this.classes.stickyClass ]);
                __SL_$__(this.selectors.outerWrapper).removeClass(this.classes.outerWrapperSticky);
                this.jq.header.css({
                    top: 0
                });
                this.jq.stickyHeaderWrapper.eq(0).height("auto");
                if (this.config.wrapperOverlayed) this.jq.wrapper.addClass(this.classes.overlayedClass);
                this.emitSticky(false);
            }
            doSticky() {
                const stickOffsetTop = this.getStickHeaderOffsetTop();
                const isNeedRerender = !this.config.stickyActive || this.config.lastStickOffsetTop !== stickOffsetTop;
                if (!isNeedRerender) return;
                this.config.stickyActive = true;
                const height = __SL_$__(this.selectors.header).innerHeight();
                this.jq.header.addClass(this.classes.stickyClass);
                this.jq.stickyHeaderWrapper.eq(0).height(height);
                this.jq.header.addClass(this.classes.stickyClass);
                if (this.config.wrapperOverlayed) this.jq.wrapper.removeClass(this.classes.overlayedClass);
                setTimeout((() => {
                    this.jq.header.addClass(this.classes.openTransitionClass);
                    __SL_$__(this.selectors.outerWrapper).addClass(this.classes.outerWrapperSticky);
                    this.emitSticky(true);
                    this.jq.header.css({
                        top: stickOffsetTop
                    });
                }), 100);
            }
            stickyHeaderHeight() {
                if (!this.config.stickyEnabled) return;
                const headerLayoutBackgroundHeight = __SL_$__(".header__layout-background").css("height") || 0;
                const h = headerLayoutBackgroundHeight;
                this.jq.stickyHeaderWrapper[0].style.height = this.config.wrapperOverlayed ? "auto" : `${h}px`;
            }
            getStickHeaderOffsetTop() {
                let top = 0;
                __SL_$__(this.selectors.sectionOuterHeaderWrapper).prevAll().each(((_, el) => {
                    const $el = __SL_$__(el);
                    if ("sticky" === $el.css("position")) top += $el.height();
                }));
                return top;
            }
            bindCartEvent() {
                this.$on("click", this.selectors.miniCart, (e => {
                    const $btn = __SL_$__(e.currentTarget);
                    if ($btn.hasClass("header__btn--on")) window.SL_EventBus.emit(globalEvent.CLOSE_MINI_CART); else window.SL_EventBus.emit(globalEvent.OPEN_MINI_CART);
                }));
            }
            bindHeaderNav() {
                this.$on("click", this.selectors.navBtn, (() => {
                    __SL_$__(this.selectors.layoutContainer).toggleClass(this.classes.activeNavClass);
                }));
                this.$on("click", this.selectors.drawerBtn, (() => {
                    window.SL_EventBus.emit(DRAWER_EVENT_NAME, {
                        id: "menu-drawer",
                        status: "open"
                    });
                }));
            }
            swiperResizeHandler() {
                this.disableSwiper();
                this.activateSwiper();
            }
            fetchCartInfo() {
                return (0, request["default"])({
                    url: "carts/cart/count",
                    method: "GET"
                }).then((res => {
                    if (res.success) return Promise.resolve(res.data);
                }));
            }
            bindCartCount() {
                window.SL_State.on("cartInfo", (() => {
                    this.activeCart();
                }));
                this.fetchCartInfo().then((num => {
                    this.activeCart(num);
                }));
            }
            activeCart(num = 0) {
                const cartBtn = __SL_$__(this.selectors.cartBtn);
                if (!cartBtn.length) return;
                const cartNum = window.SL_State.get("cartInfo.count") || num;
                if (cartNum) {
                    cartBtn.removeClass(this.classes.activeCartClass).addClass(this.classes.activeCartClass);
                    __SL_$__(this.selectors.cartPoint).html(cartNum);
                } else cartBtn.removeClass(this.classes.activeCartClass);
            }
            offEventBus() {
                window.SL_EventBus.off("force-header-intoView");
            }
            off() {
                this.$offAll();
                this.stickyElementManager.offEvent();
                this.offEventBus();
            }
        }
        let header_instance = new Header;
        __SL_$__(document).on("shopline:section:load", (() => {
            header_instance.off();
            header_instance = null;
            header_instance = new Header;
        }));
        var src_js_cookie = __webpack_require__("./node_modules/js-cookie/src/js.cookie.js");
        var src_js_cookie_default = __webpack_require__.n(src_js_cookie);
        function locale_currency_defineProperty(obj, key, value) {
            if (key in obj) Object.defineProperty(obj, key, {
                value,
                enumerable: true,
                configurable: true,
                writable: true
            }); else obj[key] = value;
            return obj;
        }
        const createCurrencyItemTemplate = (code, symbol, showSymbol) => `<li data-currency-code="${code}" data-show-symbol="${showSymbol}" data-currency-symbol="${symbol}">\n\t<span class="click">\n\t\t<span class="body5 notranslate">${showSymbol ? symbol : ""} ${code}</span>\n\t</span>\n</li>`;
        const createCurrencyListTemplate = (list, showSymbol) => list.map((({currencyCode, currencySymbol}) => createCurrencyItemTemplate(currencyCode, currencySymbol, showSymbol))).join("");
        const googleLangKeyTransform = alias => {
            var _hardLandKey$alias;
            const hardLandKey = {
                "zh-hans-cn": "zh-CN",
                "zh-hant-tw": "zh-TW",
                "zh-hant-hk": "zh-TW",
                nb: "no",
                "pt-pt": "pt"
            };
            return null !== (_hardLandKey$alias = hardLandKey[alias]) && void 0 !== _hardLandKey$alias ? _hardLandKey$alias : alias;
        };
        class LocaleCurrency extends base_BaseClass["default"] {
            constructor() {
                super();
                locale_currency_defineProperty(this, "config", {
                    namespace: "stage:localeCurrency"
                });
                locale_currency_defineProperty(this, "classes", {
                    dropdownClass: "dropdown__list",
                    dropdownVisibleClass: "dropdown__list--visible"
                });
                locale_currency_defineProperty(this, "selectors", {
                    localeButton: ".j-stage-locale",
                    currencyButton: ".j-stage-currency",
                    localeDrawerButton: ".j-locale-drawer-btn",
                    currencyDrawerButton: ".j-currency-drawer-btn",
                    container: ".locale-currency",
                    dropdownList: `.${this.classes.dropdownClass}`,
                    localeContainer: ".locale-currency[data-locale]",
                    mobileLocaleBtn: ".j-locale-drawer-btn",
                    currencyContainer: ".locale-currency[data-currency]",
                    currencySearchInput: ".j-stage-currency-search",
                    currencyList: ".currency-list",
                    noCurrencyFallback: ".stage-no-currency",
                    gteTag: ".goog-te-spinner-pos"
                });
                locale_currency_defineProperty(this, "gteObserver", null);
                this.$setNamespace(this.config.namespace);
                if (__SL_$__(this.selectors.localeButton).length > 0) this.initLocaleDropdown();
                if (__SL_$__(this.selectors.currencyButton).length > 0) this.initCurrencyDropdown();
                this.bindLanguageChange();
                this.bindCurrencySearch();
                this.bindCurrencyChange();
                this.createGTEObserver();
            }
            createGTEObserver() {
                window.Shopline.event.on("googleInitComplete", (() => {
                    const node = __SL_$__(this.selectors.gteTag)[0];
                    if (node) {
                        this.gteObserver = new MutationObserver((() => {
                            window.SL_EventBus.emit("stage:locale:change");
                        }));
                        this.gteObserver.observe(node, {
                            attributes: true
                        });
                    }
                }));
            }
            bindDropdownClick(selector) {
                this.$on("click", selector, (e => {
                    const $dropdownContainer = __SL_$__(e.target).parents(".locale-currency");
                    const $dropdownList = $dropdownContainer.find(this.selectors.dropdownList);
                    if ($dropdownList.hasClass(this.classes.dropdownVisibleClass)) {
                        $dropdownList.removeClass(this.classes.dropdownVisibleClass);
                        return;
                    }
                    $dropdownList.addClass(this.classes.dropdownVisibleClass);
                    const tempEventType = `click.tempWrapperClick-${this.namespace}-${selector}`;
                    this.$on(tempEventType, (({target}) => {
                        if (!$dropdownContainer[0]) return this.$off(tempEventType);
                        if (target !== $dropdownContainer[0] && !$dropdownContainer[0].contains(target)) {
                            $dropdownList.removeClass(this.classes.dropdownVisibleClass);
                            this.$off(tempEventType);
                        }
                    }));
                }));
            }
            initLocaleDropdown() {
                this.bindDropdownClick(this.selectors.localeButton);
                window.Shopline.event.on("googleInitComplete", (() => {
                    this.showLocaleBtn();
                }));
            }
            showLocaleBtn() {
                __SL_$__(this.selectors.localeContainer).show();
                __SL_$__(this.selectors.mobileLocaleBtn).removeClass("d-none");
            }
            bindLanguageChange() {
                this.$on("click", `${this.selectors.localeContainer} li`, (e => {
                    var _SL_$__, _SL_$__$parents, _SL_$__$find, _SL_$__$find2;
                    const storeLanguage = window.SL_State.get("storeInfo.languageSetting.storeLanguage");
                    const $target = __SL_$__(e.currentTarget);
                    const alias = $target.data("alias");
                    const text = $target.data("name");
                    report_virtualReport.reportSelectLang(e, alias);
                    if (alias === storeLanguage) {
                        const restoreEvent = "clk_restore";
                        window.__GOOGLE_TRANSLATE_INSTANCE.h.dispatchEvent(restoreEvent);
                    } else {
                        var _googleLangKeyTransfo;
                        const el = document.querySelector(".goog-te-combo");
                        const changeLang = null !== (_googleLangKeyTransfo = googleLangKeyTransform(alias)) && void 0 !== _googleLangKeyTransfo ? _googleLangKeyTransfo : alias;
                        el.value = changeLang;
                        const event = document.createEvent("HTMLEvents");
                        event.initEvent("change", true, false);
                        el.dispatchEvent(event);
                    }
                    src_js_cookie_default().set("lang", storeLanguage);
                    src_js_cookie_default().set("addressLang", alias);
                    src_js_cookie_default().set("userSelectLocale", alias);
                    null === (_SL_$__ = __SL_$__(e.target)) || void 0 === _SL_$__ ? void 0 : null === (_SL_$__$parents = _SL_$__.parents(this.selectors.dropdownList)) || void 0 === _SL_$__$parents ? void 0 : _SL_$__$parents.removeClass(this.classes.dropdownVisibleClass);
                    null === (_SL_$__$find = __SL_$__(this.selectors.localeButton).find("span")) || void 0 === _SL_$__$find ? void 0 : _SL_$__$find.text(text);
                    null === (_SL_$__$find2 = __SL_$__(this.selectors.localeDrawerButton).find("span")) || void 0 === _SL_$__$find2 ? void 0 : _SL_$__$find2.text(text);
                    window.SL_State.set("request.locale", alias);
                    window.SL_EventBus.emit("global:currency:format", {
                        lang: alias,
                        currencyCode: window.SL_State.get("currencyCode")
                    });
                    window.Shopline.event.emit("Currency::Format", {
                        lang: alias,
                        currencyCode: window.SL_State.get("currencyCode")
                    });
                }));
            }
            initCurrencyDropdown() {
                this.bindDropdownClick(this.selectors.currencyButton);
            }
            bindCurrencyChange() {
                this.$on("click", `${this.selectors.currencyContainer} li`, (e => {
                    const $target = __SL_$__(e.currentTarget);
                    const code = $target.data("currency-code");
                    const symbol = $target.data("currency-symbol");
                    const showSymbol = $target.parents(this.selectors.currencyList).data("show-symbol");
                    const currencyText = `${showSymbol ? symbol : ""} ${code}`;
                    report_virtualReport.reportSelectCurrency(e, code);
                    src_js_cookie_default().set("currency_code_userSetting", code);
                    window.SL_State.set("currencyCode", code);
                    window.SL_EventBus.emit("global:currency:format", {
                        lang: window.SL_State.get("request.locale"),
                        currencyCode: code
                    });
                    window.Shopline.event.emit("Currency::Format", {
                        lang: window.SL_State.get("request.locale"),
                        currencyCode: code
                    });
                    __SL_$__(e.target).parents(this.selectors.dropdownList).removeClass(this.classes.dropdownVisibleClass);
                    __SL_$__(this.selectors.currencyButton).find("span").text(currencyText);
                    __SL_$__(this.selectors.currencyDrawerButton).find(".currency-symbol").text(symbol);
                    __SL_$__(this.selectors.currencyDrawerButton).find(".currency-code").text(code);
                }));
            }
            bindCurrencySearch() {
                this.$on("input", this.selectors.currencySearchInput, (e => {
                    const {value: searchValue} = e.target;
                    const allCurrencies = window.SL_State.get("currencyConfig.referenceCurrencies");
                    let str = "";
                    const container = __SL_$__(e.target).parents(this.selectors.currencyContainer).find(this.selectors.currencyList);
                    const showSymbol = container.data("show-symbol");
                    if (!searchValue) str = createCurrencyListTemplate(allCurrencies, showSymbol); else {
                        const filterList = allCurrencies.filter((item => {
                            const val = item.currencyCode.toLowerCase();
                            if (val.toLowerCase().includes(searchValue.toLowerCase())) return true;
                            return false;
                        }));
                        if (filterList.length) str = createCurrencyListTemplate(filterList, showSymbol);
                    }
                    if (!str) {
                        container.hide();
                        container.siblings(this.selectors.noCurrencyFallback).show();
                        return;
                    }
                    container.show();
                    container.html(str);
                    container.siblings(this.selectors.noCurrencyFallback).hide();
                }));
            }
            off() {
                this.$offAll();
            }
        }
        let locale_currency_instance = new LocaleCurrency;
        __SL_$__(document).on("shopline:section:load", (() => {
            locale_currency_instance.off();
            locale_currency_instance = new LocaleCurrency;
            locale_currency_instance.showLocaleBtn();
        }));
        var i18n = __webpack_require__("../shared/browser/utils/i18n.js");
        var utils = __webpack_require__("./src/assets/commons/utils/index.js");
        var checkEmail = __webpack_require__("./src/assets/commons/utils/checkEmail.js");
        var utils_debounce = __webpack_require__("./src/assets/commons/utils/debounce.js");
        var toast = __webpack_require__("./src/assets/commons/components/toast/index.js");
        function footer_defineProperty(obj, key, value) {
            if (key in obj) Object.defineProperty(obj, key, {
                value,
                enumerable: true,
                configurable: true,
                writable: true
            }); else obj[key] = value;
            return obj;
        }
        const {listenPlatform} = utils["default"].helper;
        class Footer extends base_BaseClass["default"] {
            constructor() {
                super();
                footer_defineProperty(this, "config", {
                    namespace: "satge:footer"
                });
                this.$setNamespace(this.config.namespace);
                this.init();
                listenPlatform((() => {
                    this.reset();
                }));
            }
            init() {
                this.bindEvent();
                this.initMobileToolkit();
            }
            initMobileToolkit() {
                const $item = __SL_$__("#stage-footer .j-locale-currency-flag");
                const $root = __SL_$__("#stage-footer");
                const $localeBtn = $root.find(".j-locale-drawer-btn");
                const $currencyBtn = $root.find(".j-currency-drawer-btn");
                const currency_selector = $item.data("currency");
                const locale_selector = $item.data("locale");
                const show_currency_symbol = $item.data("currency-symbol");
                if (locale_selector) $localeBtn.addClass("show");
                if (currency_selector) {
                    $currencyBtn.addClass("show");
                    if (show_currency_symbol) $currencyBtn.find(".currency-symbol").addClass("show");
                }
            }
            reset() {
                this.offEvent();
                this.init();
            }
            offEvent() {
                this.$off("click");
            }
            bindEvent() {
                this.bindSubscription();
            }
            bindSubscription() {
                const post = (0, utils_debounce["default"])(300, (val => {
                    var _window, _window$SLMemberPlugi, _window$SLMemberPlugi2;
                    const params = {
                        subscribeAccountType: "email",
                        subscribeAccount: val
                    };
                    const referralCode = (null === (_window = window) || void 0 === _window ? void 0 : null === (_window$SLMemberPlugi = _window.SLMemberPlugin) || void 0 === _window$SLMemberPlugi ? void 0 : null === (_window$SLMemberPlugi2 = _window$SLMemberPlugi.memberReferralCode) || void 0 === _window$SLMemberPlugi2 ? void 0 : _window$SLMemberPlugi2.value) || null;
                    if (referralCode) params.referralCode = referralCode;
                    request["default"].post("/user/front/users/footersub", params).then((res => {
                        if (res.success) toast["default"].init({
                            content: (0, i18n.t)("general.footer.subscribe_success")
                        }); else toast["default"].init({
                            content: (0, i18n.t)("general.footer.subscribe_reg_exp_error")
                        });
                    })).catch((err => {
                        console.log("subscribe error", err);
                        toast["default"].init({
                            content: (0, i18n.t)("general.footer.subscribe_reg_exp_error")
                        });
                    }));
                }));
                this.$on("click", ".footer__newsletter-btn", (e => {
                    const $input = __SL_$__(e.currentTarget).parent().find("input");
                    const value = $input.val();
                    if (true !== (0, checkEmail["default"])(value)) {
                        toast["default"].init({
                            content: (0, i18n.t)("general.footer.subscribe_reg_exp_error")
                        });
                        return;
                    }
                    post(value);
                }));
            }
        }
        const footer_instance = new Footer;
        __SL_$__(document).on("shopline:section:load", (() => {
            footer_instance.reset();
        }));
        __webpack_require__("./src/assets/stage/announcement-bar/index.js");
        __webpack_require__("./src/assets/product/commons/js/product-item.js");
        var quick_add_modal = __webpack_require__("./src/assets/product/commons/js/quick-add-modal.js");
        function addListenerQuickViewATC() {
            if (window.Shopline && window.Shopline.event) window.Shopline.event.on("Product::ShowQuickView::AddToCart", (data => {
                const {productId, handle, buttonTarget = {}, buttonLoadingCls} = data || {};
                if (productId && handle) (0, quick_add_modal["default"])({
                    spuSeq: productId,
                    uniqueKey: handle,
                    $button: __SL_$__(buttonTarget),
                    buttonLoadingCls
                }); else console.error(`addListenerQuickViewATC参数缺失 productId: ${productId}, handle: ${handle}`);
            }));
        }
        addListenerQuickViewATC();
        __webpack_require__("./src/assets/commons/components/breadcrumb/index.js");
        developer_api("Cart::GetCartId", "Cart::NavigateCart", "Checkout::NavigateCheckout", "Cart::AddToCart", "Cart::ControlCartBasis", "Cart::CartDetailUpdate", "Cart::LineItemUpdate");
        customer_developer_api("Customer::LoginModal", "Customer::Register");
        null === utils_dataReport || void 0 === utils_dataReport ? void 0 : utils_dataReport.listen("DataReport::AddToCart");
        (0, dataAccessor.setSyncData)({
            orderFrom: "web"
        });
        window.ApiCartAddV2 = api_cart.ApiCart.ApiCartAddV2;
        api_cart.ApiCart.initInterceptorAjaxAddToCart();
        var core_class = __webpack_require__("./node_modules/swiper/esm/components/core/core-class.js");
        __webpack_require__("../shared/browser/utils/sectionsLoad/index.js");
        __webpack_require__("./src/assets/vendor/mod/a-nested.js");
        __webpack_require__("./src/assets/vendor/mod/parallax.js");
        window.__Swiper__ = core_class["default"];
        initVirtualReport();
    },
    "./src/assets/vendor/mod/a-nested.js": () => {
        const registerLink = element => {
            const $element = __SL_$__(element);
            const href = $element.attr("href");
            const target = $element.attr("target") || "_self";
            if (!href) return;
            $element.on("click", (e => {
                e.stopPropagation();
                window.open(href, target);
            }));
        };
        __SL_$__(".global-a-nested").each(((_, element) => {
            registerLink(element);
        }));
        __SL_$__(document).on("shopline:section:load", (e => {
            const {sectionId} = e.detail;
            __SL_$__(`#shopline-section-${sectionId} .global-a-nested`).each(((_, element) => {
                registerLink(element);
            }));
        }));
    },
    "./src/assets/vendor/mod/parallax.js": () => {
        let parallaxContainers = __SL_$__(".parallax-container");
        let parallaxListener;
        function onScroll() {
            requestAnimationFrame(scrollHandler.bind(this));
        }
        function scrollHandler() {
            const viewPortHeight = __SL_$__(window).height();
            parallaxContainers.each(((index, el) => {
                const parallaxImage = __SL_$__(el).find(".parallax");
                const hasClass = __SL_$__(el).hasClass("large-image-with-text-box--loaded");
                const isLargeImageText = __SL_$__(el).hasClass("large-image-with-text-box");
                if (0 === parallaxImage.length) {
                    if (!isLargeImageText) return;
                    if (!hasClass) __SL_$__(el).addClass("large-image-with-text-box--loaded");
                    return;
                }
                const {top, height} = el.getBoundingClientRect();
                if (top > viewPortHeight || top <= -height) return;
                const speed = 2;
                const movableDistance = viewPortHeight + height;
                const currentDistance = viewPortHeight - top;
                const percent = (currentDistance / movableDistance * speed * 38).toFixed(2);
                const num = 38 - Number(percent);
                __SL_$__(parallaxImage).css("transform", `translate3d(0 , ${-num}% , 0)`);
                if (!isLargeImageText) return;
                if (!hasClass) __SL_$__(el).addClass("large-image-with-text-box--loaded");
            }));
        }
        function init() {
            parallaxContainers = __SL_$__(".parallax-container");
            if (!parallaxListener) parallaxListener = __SL_$__(window).on("scroll", onScroll);
            scrollHandler();
        }
        window.SL_EventBus.on("parallax", (() => {
            init();
        }));
        window.document.addEventListener("shopline:section:load", (() => {
            init();
        }));
        window.document.addEventListener("shopline:section:reorder", (() => {
            init();
        }));
    },
    "../shared/browser/biz-com/trade/optimize-modal/cartChangeItem.js": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
        "use strict";
        __webpack_require__.d(__webpack_exports__, {
            default: () => __WEBPACK_DEFAULT_EXPORT__
        });
        var _constant__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("../shared/browser/biz-com/trade/optimize-modal/constant.js");
        function getSkuId(model) {
            if (!model) return "";
            return model.skuId || "";
        }
        function getGroupId(model) {
            if (!model) return "";
            return model.groupId || "";
        }
        function getStock(model) {
            if (!model) return 0;
            return model.stock || 0;
        }
        function getVerifyType(model) {
            if (!model) return _constant__WEBPACK_IMPORTED_MODULE_0__.verifyType.NIL;
            switch (model.errorInfo.errorType) {
              case _constant__WEBPACK_IMPORTED_MODULE_0__.ErrorTypeEnum.SOLD_OUT:
                return _constant__WEBPACK_IMPORTED_MODULE_0__.verifyType.SOLD_OUT;

              case _constant__WEBPACK_IMPORTED_MODULE_0__.ErrorTypeEnum.STOCK_OVER:
                return _constant__WEBPACK_IMPORTED_MODULE_0__.verifyType.UNDER_STOCK;

              case _constant__WEBPACK_IMPORTED_MODULE_0__.ErrorTypeEnum.SHELF_OFF:
              case _constant__WEBPACK_IMPORTED_MODULE_0__.ErrorTypeEnum.GIFT_INVALID:
                return _constant__WEBPACK_IMPORTED_MODULE_0__.verifyType.OFF_SHELVED;

              case _constant__WEBPACK_IMPORTED_MODULE_0__.ErrorTypeEnum.DELETE:
                return _constant__WEBPACK_IMPORTED_MODULE_0__.verifyType.DELETED;

              case _constant__WEBPACK_IMPORTED_MODULE_0__.ErrorTypeEnum.LIMITED_ACTIVE_SKU_OVER:
                return _constant__WEBPACK_IMPORTED_MODULE_0__.verifyType.PRODUCT_LIMIT;

              case _constant__WEBPACK_IMPORTED_MODULE_0__.ErrorTypeEnum.LIMITED_ACTIVE_OVER:
                return _constant__WEBPACK_IMPORTED_MODULE_0__.verifyType.USER_LIMIT;

              case _constant__WEBPACK_IMPORTED_MODULE_0__.ErrorTypeEnum.LIMITED_ACTIVE_STOCK_OVER:
                return _constant__WEBPACK_IMPORTED_MODULE_0__.verifyType.PRODUCT_UNDER_STOCK;

              default:
                return _constant__WEBPACK_IMPORTED_MODULE_0__.verifyType.NIL;
            }
        }
        const __WEBPACK_DEFAULT_EXPORT__ = {
            getSkuId,
            getStock,
            getVerifyType,
            getGroupId
        };
    },
    "../shared/browser/biz-com/trade/optimize-modal/constant.js": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
        "use strict";
        __webpack_require__.d(__webpack_exports__, {
            verifyType: () => verifyType,
            ErrorTypeEnum: () => ErrorTypeEnum
        });
        const verifyType = {
            NIL: 0,
            SOLD_OUT: 1,
            UNDER_STOCK: 2,
            OFF_SHELVED: 3,
            DELETED: 4,
            PRODUCT_LIMIT: 5,
            USER_LIMIT: 6,
            PRODUCT_UNDER_STOCK: 7
        };
        const ErrorTypeEnum = {
            SOLD_OUT: "SOLD_OUT",
            STOCK_OVER: "STOCK_OVER",
            SHELF_OFF: "SHELF_OFF",
            DELETE: "DELETE",
            LIMITED_ACTIVE_SKU_OVER: "LIMITED_ACTIVE_SKU_OVER",
            LIMITED_ACTIVE_OVER: "LIMITED_ACTIVE_OVER",
            LIMITED_ACTIVE_STOCK_OVER: "LIMITED_ACTIVE_STOCK_OVER",
            MAIN_PRODUCT_ERROR: "MAIN_PRODUCT_ERROR",
            PURCHASE_LESS_MOQ: "PURCHASE_LESS_MOQ",
            GIFT_INVALID: "GIFT_INVALID"
        };
    },
    "../shared/browser/components/hbs/productImages/js/index.js": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
        "use strict";
        __webpack_require__.d(__webpack_exports__, {
            default: () => js,
            isYoutube: () => isYoutube
        });
        var ssr_window_esm = __webpack_require__("./node_modules/ssr-window/ssr-window.esm.js");
        var dom = __webpack_require__("./node_modules/swiper/esm/utils/dom.js");
        var utils = __webpack_require__("./node_modules/swiper/esm/utils/utils.js");
        function _extends() {
            _extends = Object.assign || function(target) {
                for (var i = 1; i < arguments.length; i++) {
                    var source = arguments[i];
                    for (var key in source) if (Object.prototype.hasOwnProperty.call(source, key)) target[key] = source[key];
                }
                return target;
            };
            return _extends.apply(this, arguments);
        }
        var Lazy = {
            loadInSlide: function(index, loadInDuplicate) {
                if (void 0 === loadInDuplicate) loadInDuplicate = true;
                var swiper = this;
                var params = swiper.params.lazy;
                if ("undefined" === typeof index) return;
                if (0 === swiper.slides.length) return;
                var isVirtual = swiper.virtual && swiper.params.virtual.enabled;
                var $slideEl = isVirtual ? swiper.$wrapperEl.children("." + swiper.params.slideClass + '[data-swiper-slide-index="' + index + '"]') : swiper.slides.eq(index);
                var $images = $slideEl.find("." + params.elementClass + ":not(." + params.loadedClass + "):not(." + params.loadingClass + ")");
                if ($slideEl.hasClass(params.elementClass) && !$slideEl.hasClass(params.loadedClass) && !$slideEl.hasClass(params.loadingClass)) $images.push($slideEl[0]);
                if (0 === $images.length) return;
                $images.each((function(imageEl) {
                    var $imageEl = (0, dom["default"])(imageEl);
                    $imageEl.addClass(params.loadingClass);
                    var background = $imageEl.attr("data-background");
                    var src = $imageEl.attr("data-src");
                    var srcset = $imageEl.attr("data-srcset");
                    var sizes = $imageEl.attr("data-sizes");
                    var $pictureEl = $imageEl.parent("picture");
                    swiper.loadImage($imageEl[0], src || background, srcset, sizes, false, (function() {
                        if ("undefined" === typeof swiper || null === swiper || !swiper || swiper && !swiper.params || swiper.destroyed) return;
                        if (background) {
                            $imageEl.css("background-image", 'url("' + background + '")');
                            $imageEl.removeAttr("data-background");
                        } else {
                            if (srcset) {
                                $imageEl.attr("srcset", srcset);
                                $imageEl.removeAttr("data-srcset");
                            }
                            if (sizes) {
                                $imageEl.attr("sizes", sizes);
                                $imageEl.removeAttr("data-sizes");
                            }
                            if ($pictureEl.length) $pictureEl.children("source").each((function(sourceEl) {
                                var $source = (0, dom["default"])(sourceEl);
                                if ($source.attr("data-srcset")) {
                                    $source.attr("srcset", $source.attr("data-srcset"));
                                    $source.removeAttr("data-srcset");
                                }
                            }));
                            if (src) {
                                $imageEl.attr("src", src);
                                $imageEl.removeAttr("data-src");
                            }
                        }
                        $imageEl.addClass(params.loadedClass).removeClass(params.loadingClass);
                        $slideEl.find("." + params.preloaderClass).remove();
                        if (swiper.params.loop && loadInDuplicate) {
                            var slideOriginalIndex = $slideEl.attr("data-swiper-slide-index");
                            if ($slideEl.hasClass(swiper.params.slideDuplicateClass)) {
                                var originalSlide = swiper.$wrapperEl.children('[data-swiper-slide-index="' + slideOriginalIndex + '"]:not(.' + swiper.params.slideDuplicateClass + ")");
                                swiper.lazy.loadInSlide(originalSlide.index(), false);
                            } else {
                                var duplicatedSlide = swiper.$wrapperEl.children("." + swiper.params.slideDuplicateClass + '[data-swiper-slide-index="' + slideOriginalIndex + '"]');
                                swiper.lazy.loadInSlide(duplicatedSlide.index(), false);
                            }
                        }
                        swiper.emit("lazyImageReady", $slideEl[0], $imageEl[0]);
                        if (swiper.params.autoHeight) swiper.updateAutoHeight();
                    }));
                    swiper.emit("lazyImageLoad", $slideEl[0], $imageEl[0]);
                }));
            },
            load: function() {
                var swiper = this;
                var $wrapperEl = swiper.$wrapperEl, swiperParams = swiper.params, slides = swiper.slides, activeIndex = swiper.activeIndex;
                var isVirtual = swiper.virtual && swiperParams.virtual.enabled;
                var params = swiperParams.lazy;
                var slidesPerView = swiperParams.slidesPerView;
                if ("auto" === slidesPerView) slidesPerView = 0;
                function slideExist(index) {
                    if (isVirtual) {
                        if ($wrapperEl.children("." + swiperParams.slideClass + '[data-swiper-slide-index="' + index + '"]').length) return true;
                    } else if (slides[index]) return true;
                    return false;
                }
                function slideIndex(slideEl) {
                    if (isVirtual) return (0, dom["default"])(slideEl).attr("data-swiper-slide-index");
                    return (0, dom["default"])(slideEl).index();
                }
                if (!swiper.lazy.initialImageLoaded) swiper.lazy.initialImageLoaded = true;
                if (swiper.params.watchSlidesVisibility) $wrapperEl.children("." + swiperParams.slideVisibleClass).each((function(slideEl) {
                    var index = isVirtual ? (0, dom["default"])(slideEl).attr("data-swiper-slide-index") : (0, 
                    dom["default"])(slideEl).index();
                    swiper.lazy.loadInSlide(index);
                })); else if (slidesPerView > 1) {
                    for (var i = activeIndex; i < activeIndex + slidesPerView; i += 1) if (slideExist(i)) swiper.lazy.loadInSlide(i);
                } else swiper.lazy.loadInSlide(activeIndex);
                if (params.loadPrevNext) if (slidesPerView > 1 || params.loadPrevNextAmount && params.loadPrevNextAmount > 1) {
                    var amount = params.loadPrevNextAmount;
                    var spv = slidesPerView;
                    var maxIndex = Math.min(activeIndex + spv + Math.max(amount, spv), slides.length);
                    var minIndex = Math.max(activeIndex - Math.max(spv, amount), 0);
                    for (var _i = activeIndex + slidesPerView; _i < maxIndex; _i += 1) if (slideExist(_i)) swiper.lazy.loadInSlide(_i);
                    for (var _i2 = minIndex; _i2 < activeIndex; _i2 += 1) if (slideExist(_i2)) swiper.lazy.loadInSlide(_i2);
                } else {
                    var nextSlide = $wrapperEl.children("." + swiperParams.slideNextClass);
                    if (nextSlide.length > 0) swiper.lazy.loadInSlide(slideIndex(nextSlide));
                    var prevSlide = $wrapperEl.children("." + swiperParams.slidePrevClass);
                    if (prevSlide.length > 0) swiper.lazy.loadInSlide(slideIndex(prevSlide));
                }
            },
            checkInViewOnLoad: function() {
                var window = (0, ssr_window_esm.getWindow)();
                var swiper = this;
                if (!swiper || swiper.destroyed) return;
                var $scrollElement = swiper.params.lazy.scrollingElement ? (0, dom["default"])(swiper.params.lazy.scrollingElement) : (0, 
                dom["default"])(window);
                var isWindow = $scrollElement[0] === window;
                var scrollElementWidth = isWindow ? window.innerWidth : $scrollElement[0].offsetWidth;
                var scrollElementHeight = isWindow ? window.innerHeight : $scrollElement[0].offsetHeight;
                var swiperOffset = swiper.$el.offset();
                var rtl = swiper.rtlTranslate;
                var inView = false;
                if (rtl) swiperOffset.left -= swiper.$el[0].scrollLeft;
                var swiperCoord = [ [ swiperOffset.left, swiperOffset.top ], [ swiperOffset.left + swiper.width, swiperOffset.top ], [ swiperOffset.left, swiperOffset.top + swiper.height ], [ swiperOffset.left + swiper.width, swiperOffset.top + swiper.height ] ];
                for (var i = 0; i < swiperCoord.length; i += 1) {
                    var point = swiperCoord[i];
                    if (point[0] >= 0 && point[0] <= scrollElementWidth && point[1] >= 0 && point[1] <= scrollElementHeight) {
                        if (0 === point[0] && 0 === point[1]) continue;
                        inView = true;
                    }
                }
                var passiveListener = "touchstart" === swiper.touchEvents.start && swiper.support.passiveListener && swiper.params.passiveListeners ? {
                    passive: true,
                    capture: false
                } : false;
                if (inView) {
                    swiper.lazy.load();
                    $scrollElement.off("scroll", swiper.lazy.checkInViewOnLoad, passiveListener);
                } else if (!swiper.lazy.scrollHandlerAttached) {
                    swiper.lazy.scrollHandlerAttached = true;
                    $scrollElement.on("scroll", swiper.lazy.checkInViewOnLoad, passiveListener);
                }
            }
        };
        const lazy = {
            name: "lazy",
            params: {
                lazy: {
                    checkInView: false,
                    enabled: false,
                    loadPrevNext: false,
                    loadPrevNextAmount: 1,
                    loadOnTransitionStart: false,
                    scrollingElement: "",
                    elementClass: "swiper-lazy",
                    loadingClass: "swiper-lazy-loading",
                    loadedClass: "swiper-lazy-loaded",
                    preloaderClass: "swiper-lazy-preloader"
                }
            },
            create: function() {
                var swiper = this;
                (0, utils.bindModuleMethods)(swiper, {
                    lazy: _extends({
                        initialImageLoaded: false
                    }, Lazy)
                });
            },
            on: {
                beforeInit: function(swiper) {
                    if (swiper.params.lazy.enabled && swiper.params.preloadImages) swiper.params.preloadImages = false;
                },
                init: function(swiper) {
                    if (swiper.params.lazy.enabled && !swiper.params.loop && 0 === swiper.params.initialSlide) if (swiper.params.lazy.checkInView) swiper.lazy.checkInViewOnLoad(); else swiper.lazy.load();
                },
                scroll: function(swiper) {
                    if (swiper.params.freeMode && !swiper.params.freeModeSticky) swiper.lazy.load();
                },
                "scrollbarDragMove resize _freeModeNoMomentumRelease": function(swiper) {
                    if (swiper.params.lazy.enabled) swiper.lazy.load();
                },
                transitionStart: function(swiper) {
                    if (swiper.params.lazy.enabled) if (swiper.params.lazy.loadOnTransitionStart || !swiper.params.lazy.loadOnTransitionStart && !swiper.lazy.initialImageLoaded) swiper.lazy.load();
                },
                transitionEnd: function(swiper) {
                    if (swiper.params.lazy.enabled && !swiper.params.lazy.loadOnTransitionStart) swiper.lazy.load();
                },
                slideChange: function(swiper) {
                    var _swiper$params = swiper.params, lazy = _swiper$params.lazy, cssMode = _swiper$params.cssMode, watchSlidesVisibility = _swiper$params.watchSlidesVisibility, watchSlidesProgress = _swiper$params.watchSlidesProgress, touchReleaseOnEdges = _swiper$params.touchReleaseOnEdges, resistanceRatio = _swiper$params.resistanceRatio;
                    if (lazy.enabled && (cssMode || (watchSlidesVisibility || watchSlidesProgress) && (touchReleaseOnEdges || 0 === resistanceRatio))) swiper.lazy.load();
                }
            }
        };
        function thumbs_extends() {
            thumbs_extends = Object.assign || function(target) {
                for (var i = 1; i < arguments.length; i++) {
                    var source = arguments[i];
                    for (var key in source) if (Object.prototype.hasOwnProperty.call(source, key)) target[key] = source[key];
                }
                return target;
            };
            return thumbs_extends.apply(this, arguments);
        }
        var Thumbs = {
            init: function() {
                var swiper = this;
                var thumbsParams = swiper.params.thumbs;
                if (swiper.thumbs.initialized) return false;
                swiper.thumbs.initialized = true;
                var SwiperClass = swiper.constructor;
                if (thumbsParams.swiper instanceof SwiperClass) {
                    swiper.thumbs.swiper = thumbsParams.swiper;
                    (0, utils.extend)(swiper.thumbs.swiper.originalParams, {
                        watchSlidesProgress: true,
                        slideToClickedSlide: false
                    });
                    (0, utils.extend)(swiper.thumbs.swiper.params, {
                        watchSlidesProgress: true,
                        slideToClickedSlide: false
                    });
                } else if ((0, utils.isObject)(thumbsParams.swiper)) {
                    swiper.thumbs.swiper = new SwiperClass((0, utils.extend)({}, thumbsParams.swiper, {
                        watchSlidesVisibility: true,
                        watchSlidesProgress: true,
                        slideToClickedSlide: false
                    }));
                    swiper.thumbs.swiperCreated = true;
                }
                swiper.thumbs.swiper.$el.addClass(swiper.params.thumbs.thumbsContainerClass);
                swiper.thumbs.swiper.on("tap", swiper.thumbs.onThumbClick);
                return true;
            },
            onThumbClick: function() {
                var swiper = this;
                var thumbsSwiper = swiper.thumbs.swiper;
                if (!thumbsSwiper) return;
                var clickedIndex = thumbsSwiper.clickedIndex;
                var clickedSlide = thumbsSwiper.clickedSlide;
                if (clickedSlide && (0, dom["default"])(clickedSlide).hasClass(swiper.params.thumbs.slideThumbActiveClass)) return;
                if ("undefined" === typeof clickedIndex || null === clickedIndex) return;
                var slideToIndex;
                if (thumbsSwiper.params.loop) slideToIndex = parseInt((0, dom["default"])(thumbsSwiper.clickedSlide).attr("data-swiper-slide-index"), 10); else slideToIndex = clickedIndex;
                if (swiper.params.loop) {
                    var currentIndex = swiper.activeIndex;
                    if (swiper.slides.eq(currentIndex).hasClass(swiper.params.slideDuplicateClass)) {
                        swiper.loopFix();
                        swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;
                        currentIndex = swiper.activeIndex;
                    }
                    var prevIndex = swiper.slides.eq(currentIndex).prevAll('[data-swiper-slide-index="' + slideToIndex + '"]').eq(0).index();
                    var nextIndex = swiper.slides.eq(currentIndex).nextAll('[data-swiper-slide-index="' + slideToIndex + '"]').eq(0).index();
                    if ("undefined" === typeof prevIndex) slideToIndex = nextIndex; else if ("undefined" === typeof nextIndex) slideToIndex = prevIndex; else if (nextIndex - currentIndex < currentIndex - prevIndex) slideToIndex = nextIndex; else slideToIndex = prevIndex;
                }
                swiper.slideTo(slideToIndex);
            },
            update: function(initial) {
                var swiper = this;
                var thumbsSwiper = swiper.thumbs.swiper;
                if (!thumbsSwiper) return;
                var slidesPerView = "auto" === thumbsSwiper.params.slidesPerView ? thumbsSwiper.slidesPerViewDynamic() : thumbsSwiper.params.slidesPerView;
                var autoScrollOffset = swiper.params.thumbs.autoScrollOffset;
                var useOffset = autoScrollOffset && !thumbsSwiper.params.loop;
                if (swiper.realIndex !== thumbsSwiper.realIndex || useOffset) {
                    var currentThumbsIndex = thumbsSwiper.activeIndex;
                    var newThumbsIndex;
                    var direction;
                    if (thumbsSwiper.params.loop) {
                        if (thumbsSwiper.slides.eq(currentThumbsIndex).hasClass(thumbsSwiper.params.slideDuplicateClass)) {
                            thumbsSwiper.loopFix();
                            thumbsSwiper._clientLeft = thumbsSwiper.$wrapperEl[0].clientLeft;
                            currentThumbsIndex = thumbsSwiper.activeIndex;
                        }
                        var prevThumbsIndex = thumbsSwiper.slides.eq(currentThumbsIndex).prevAll('[data-swiper-slide-index="' + swiper.realIndex + '"]').eq(0).index();
                        var nextThumbsIndex = thumbsSwiper.slides.eq(currentThumbsIndex).nextAll('[data-swiper-slide-index="' + swiper.realIndex + '"]').eq(0).index();
                        if ("undefined" === typeof prevThumbsIndex) newThumbsIndex = nextThumbsIndex; else if ("undefined" === typeof nextThumbsIndex) newThumbsIndex = prevThumbsIndex; else if (nextThumbsIndex - currentThumbsIndex === currentThumbsIndex - prevThumbsIndex) newThumbsIndex = thumbsSwiper.params.slidesPerGroup > 1 ? nextThumbsIndex : currentThumbsIndex; else if (nextThumbsIndex - currentThumbsIndex < currentThumbsIndex - prevThumbsIndex) newThumbsIndex = nextThumbsIndex; else newThumbsIndex = prevThumbsIndex;
                        direction = swiper.activeIndex > swiper.previousIndex ? "next" : "prev";
                    } else {
                        newThumbsIndex = swiper.realIndex;
                        direction = newThumbsIndex > swiper.previousIndex ? "next" : "prev";
                    }
                    if (useOffset) newThumbsIndex += "next" === direction ? autoScrollOffset : -1 * autoScrollOffset;
                    if (thumbsSwiper.visibleSlidesIndexes && thumbsSwiper.visibleSlidesIndexes.indexOf(newThumbsIndex) < 0) {
                        if (thumbsSwiper.params.centeredSlides) if (newThumbsIndex > currentThumbsIndex) newThumbsIndex = newThumbsIndex - Math.floor(slidesPerView / 2) + 1; else newThumbsIndex = newThumbsIndex + Math.floor(slidesPerView / 2) - 1; else if (newThumbsIndex > currentThumbsIndex && 1 === thumbsSwiper.params.slidesPerGroup) ;
                        thumbsSwiper.slideTo(newThumbsIndex, initial ? 0 : void 0);
                    }
                }
                var thumbsToActivate = 1;
                var thumbActiveClass = swiper.params.thumbs.slideThumbActiveClass;
                if (swiper.params.slidesPerView > 1 && !swiper.params.centeredSlides) thumbsToActivate = swiper.params.slidesPerView;
                if (!swiper.params.thumbs.multipleActiveThumbs) thumbsToActivate = 1;
                thumbsToActivate = Math.floor(thumbsToActivate);
                thumbsSwiper.slides.removeClass(thumbActiveClass);
                if (thumbsSwiper.params.loop || thumbsSwiper.params.virtual && thumbsSwiper.params.virtual.enabled) for (var i = 0; i < thumbsToActivate; i += 1) thumbsSwiper.$wrapperEl.children('[data-swiper-slide-index="' + (swiper.realIndex + i) + '"]').addClass(thumbActiveClass); else for (var _i = 0; _i < thumbsToActivate; _i += 1) thumbsSwiper.slides.eq(swiper.realIndex + _i).addClass(thumbActiveClass);
            }
        };
        const thumbs = {
            name: "thumbs",
            params: {
                thumbs: {
                    swiper: null,
                    multipleActiveThumbs: true,
                    autoScrollOffset: 0,
                    slideThumbActiveClass: "swiper-slide-thumb-active",
                    thumbsContainerClass: "swiper-container-thumbs"
                }
            },
            create: function() {
                var swiper = this;
                (0, utils.bindModuleMethods)(swiper, {
                    thumbs: thumbs_extends({
                        swiper: null,
                        initialized: false
                    }, Thumbs)
                });
            },
            on: {
                beforeInit: function(swiper) {
                    var thumbs = swiper.params.thumbs;
                    if (!thumbs || !thumbs.swiper) return;
                    swiper.thumbs.init();
                    swiper.thumbs.update(true);
                },
                slideChange: function(swiper) {
                    if (!swiper.thumbs.swiper) return;
                    swiper.thumbs.update();
                },
                update: function(swiper) {
                    if (!swiper.thumbs.swiper) return;
                    swiper.thumbs.update();
                },
                resize: function(swiper) {
                    if (!swiper.thumbs.swiper) return;
                    swiper.thumbs.update();
                },
                observerUpdate: function(swiper) {
                    if (!swiper.thumbs.swiper) return;
                    swiper.thumbs.update();
                },
                setTransition: function(swiper, duration) {
                    var thumbsSwiper = swiper.thumbs.swiper;
                    if (!thumbsSwiper) return;
                    thumbsSwiper.setTransition(duration);
                },
                beforeDestroy: function(swiper) {
                    var thumbsSwiper = swiper.thumbs.swiper;
                    if (!thumbsSwiper) return;
                    if (swiper.thumbs.swiperCreated && thumbsSwiper) thumbsSwiper.destroy();
                }
            }
        };
        var core_class = __webpack_require__("./node_modules/swiper/esm/components/core/core-class.js");
        var effect_fade = __webpack_require__("./node_modules/swiper/esm/components/effect-fade/effect-fade.js");
        var navigation = __webpack_require__("./node_modules/swiper/esm/components/navigation/navigation.js");
        var url = __webpack_require__("./node_modules/url/url.js");
        var get = __webpack_require__("../shared/browser/node_modules/lodash/get.js");
        var get_default = __webpack_require__.n(get);
        var photoswipe_min = __webpack_require__("../shared/browser/node_modules/photoswipe/dist/photoswipe.min.js");
        var photoswipe_min_default = __webpack_require__.n(photoswipe_min);
        var photoswipe_ui_default_min = __webpack_require__("../shared/browser/node_modules/photoswipe/dist/photoswipe-ui-default.min.js");
        var photoswipe_ui_default_min_default = __webpack_require__.n(photoswipe_ui_default_min);
        var yt_player = __webpack_require__("../shared/browser/node_modules/yt-player/index.js");
        var yt_player_default = __webpack_require__.n(yt_player);
        var img_size = __webpack_require__("../shared/browser/utils/img-size.js");
        var product_photoSwipeHtml = __webpack_require__("../shared/browser/components/hbs/productImages/js/product-photoSwipeHtml.js");
        var imgUrl = __webpack_require__("../shared/browser/components/hbs/shared/utils/imgUrl.js");
        __webpack_require__("./node_modules/swiper/swiper-bundle.css");
        var getYouTubeCover = __webpack_require__("../shared/browser/components/hbs/shared/utils/getYouTubeCover.js");
        const isIE = "undefined" !== typeof document && document.documentMode;
        const isElementType = (element, type) => element.nodeName.toLowerCase() === type;
        const isGif = url => /^.+\.gif(\?.*){0,1}$/.test(url);
        const isS3FileUrl = url => /\.cloudfront\./.test(url) || /img\.myshopline\.com/.test(url) || /img-.*\.myshopline\.com/.test(url);
        const makeIsLoaded = element => element.setAttribute("data-loaded", true);
        const concatStr = (strs, symbol) => strs.filter(Boolean).join(symbol);
        const transformSrcset = (srcset, transformer) => srcset.split(",").filter((str => "" !== str)).map((str => concatStr(transformer(...str.trim().split(" ")), " "))).join(",");
        class SLFile {
            constructor(url, base) {
                const uri = new URL(url, base);
                const paths = uri.pathname.split("/");
                const filename = paths[paths.length - 1];
                const [name, suffix] = filename.split(".");
                const [originName, ...modifiers] = name.split("_");
                this.uri = uri;
                this.paths = paths;
                this.name = originName;
                this.suffix = suffix;
                this.querys = this.uri.searchParams;
                this.modifiers = modifiers;
            }
            toString() {
                this.uri.pathname = concatStr([ ...this.paths.slice(0, -1), concatStr([ [ this.name, ...this.modifiers ].join("_"), this.suffix ], ".") ], "/");
                return this.uri.toString();
            }
        }
        const EnumAttributes = {
            Iesrc: "data-iesrc",
            Alt: "data-alt",
            Src: "data-src",
            Srcset: "data-srcset",
            Poster: "data-poster",
            ToggleClass: "data-toggle-class",
            BackgroundImage: "data-background-image",
            BackgroundImageSet: "data-background-image-set",
            PlaceholderBackground: "data-placeholder-background"
        };
        EnumAttributes.Alt, EnumAttributes.Src, EnumAttributes.Iesrc, EnumAttributes.Srcset, 
        EnumAttributes.Poster, EnumAttributes.ToggleClass, EnumAttributes.BackgroundImage, 
        EnumAttributes.BackgroundImageSet;
        function getPosterUrl(url) {
            if (!isGif(url) || !isS3FileUrl(url)) return;
            const file = new SLFile(url, window.location.href);
            if ("1" !== file.querys.get("_f")) return;
            if ("poster" === file.modifiers[0]) return;
            file.modifiers.unshift("poster");
            file.suffix = "png";
            return file.toString();
        }
        function getPosterData({src, srcset}) {
            const data = {};
            if (src) data.src = getPosterUrl(src);
            if (srcset) {
                let srcsetHasPoster = false;
                data.srcset = transformSrcset(srcset, ((url, breakpoint) => {
                    const posterUrl = getPosterUrl(url);
                    if (posterUrl) {
                        srcsetHasPoster = true;
                        return [ posterUrl, breakpoint ];
                    }
                    return [ url, breakpoint ];
                }));
                if (!srcsetHasPoster) delete data.srcset;
            }
            if (data.src || data.srcset) return data;
        }
        const image_gif_poster = {
            attributes: [],
            load(element) {
                if (isElementType(element, "img")) {
                    const src = element.getAttribute(EnumAttributes.Src);
                    const srcset = element.getAttribute(EnumAttributes.Srcset);
                    const sizes = element.getAttribute("sizes");
                    let isSeted = false;
                    const setImageData = ({src, srcset}, img = new Image) => {
                        if (sizes) img.sizes = sizes;
                        if (srcset) img.srcset = srcset;
                        if (window.__PRELOAD_STATE__.imgNoReferrerSwitch) img.setAttribute("referrerpolicy", "same-origin");
                        if (src) img.src = src;
                        return img;
                    };
                    const setImageSrc = () => {
                        if (isSeted) return;
                        setImageData({
                            src,
                            srcset
                        }, element);
                        isSeted = true;
                    };
                    const posterData = getPosterData({
                        src,
                        srcset
                    });
                    if (posterData) {
                        const bgImg = setImageData({
                            src,
                            srcset
                        });
                        const posterBgImage = setImageData(posterData);
                        bgImg.onload = setImageSrc;
                        posterBgImage.onerror = setImageSrc;
                        setImageData(posterData, element);
                    } else setImageSrc();
                }
            }
        };
        core_class["default"].use([ effect_fade["default"], lazy, thumbs, navigation["default"] ]);
        const COLUMN = "column";
        const ROW = "row";
        const WRAP_PC_ID = ".product_pc_productImageContainer";
        const WRAP_M_ID = ".product_mobile_productImageContainer";
        function imgOnload(src, cb, failCb) {
            if (!src) return;
            const img = new Image;
            img.onload = () => {
                cb(img);
            };
            img.onerror = () => {
                console.warn("imgOnError...", img);
                failCb(img);
            };
            img.src = src;
        }
        function isYoutube(_url) {
            const urlParse = url.parse(_url);
            return "www.youtube.com" === urlParse.hostname;
        }
        class ProductImages {
            constructor(options) {
                const {selectorId, heightOnChange, swiperConfig, mediaList, beforeInit, skuList} = options || {};
                this.mediaList = mediaList || [];
                this._allMediaList = mediaList;
                this.config = {};
                this.skuList = skuList || [];
                this.swiperConfig = swiperConfig || {};
                this.heightChangedCount = 0;
                this.heightOnChange = heightOnChange || null;
                this.slideItems = [];
                if (!selectorId) {
                    console.error(`初始化productImages组件失败，selectorId为空，请输入唯一id`);
                    __SL_$__(WRAP_PC_ID).hide();
                    __SL_$__(WRAP_M_ID).hide();
                    return;
                }
                const pcWrapperSelector = `.${ProductImages.pcSelectorPrefix}_${selectorId}`;
                const mobileWrapperSelector = `.${ProductImages.mobileSelectorPrefix}_${selectorId}`;
                if (0 === __SL_$__(`${pcWrapperSelector}`).length || 0 === __SL_$__(`${mobileWrapperSelector}`).length) {
                    console.error(`初始化productImages组件失败，请检查selectorId是否输错，应存在html上`);
                    __SL_$__(pcWrapperSelector).hide();
                    __SL_$__(mobileWrapperSelector).hide();
                    return;
                }
                const pcWrapper = __SL_$__(`${pcWrapperSelector}`);
                this.thumbsDirection = "aside" === pcWrapper.data("thumbs-direction") ? COLUMN : ROW;
                this.showThumbsArrow = "true" === String(pcWrapper.data("show-thumbnail-arrow"));
                this.productImageScale = "true" === String(__SL_$__(`.product_productImageScale_${selectorId}`).val());
                this.productVideoMute = "true" === String(__SL_$__(`.product_productVideoMute_${selectorId}`).val());
                this.productVideoLoop = "true" === String(__SL_$__(`.product_productVideoLoop_${selectorId}`).val());
                this.productVideoAutoplay = "true" === String(__SL_$__(`.product_productVideoAutoplay_${selectorId}`).val());
                this.productImageShowSkuImg = "true" === String(__SL_$__(`.product_productImageShowSkuImg_${selectorId}`).val());
                this.productShowSwiperArrow = "true" === String(__SL_$__(`.product_productImageShowSwiperArrow_${selectorId}`).val());
                this.productShowSkuCover = "true" === String(__SL_$__(`.product_productImageNeedSkuCover_${selectorId}`).val());
                this.mobileWidthRatio = __SL_$__(mobileWrapperSelector).hasClass("middleWidth") ? .75 : 1;
                this.productImageLength = __SL_$__(".product_productImageLength").val();
                this.id = pcWrapperSelector;
                this.selectorId = selectorId;
                this.mobileId = mobileWrapperSelector;
                if (!this.productImageShowSkuImg) this.mediaList = this.findMainMediaList();
                beforeInit && beforeInit({
                    pcWrapperSelector
                });
                this.mobileSwiper = this.initMobileProductImages(true);
                this.swiper = this.initPcProductImages(true);
                this.swiper && this.swiper.init();
                this.pcVideo = this.initPcVideo();
                this.mobileVideo = this.initMobileVideo();
            }
            setConfig(config) {
                if (!this.config.app) this.config.app = [];
                this.config.app.push(config.app);
            }
            verifySource(app) {
                if (!get_default()(this, "config.app.length") || this.config.app.includes(app)) return true;
                return false;
            }
            handleVideoPlayPause(player, type) {
                if ("play" === type && player) player.play();
                if ("pause" === type && player) player.pause();
            }
            handleUnifyVideoStatus(video, device, status) {
                if (video && video.ytbVideo) {
                    this.handleVideoPlayPause(video.ytbVideo.player, status);
                    if ("mobile" === device) video.ytbVideo.playerStatus = status;
                }
                if (video && video.slVideo) {
                    this.handleVideoPlayPause(video.slVideo.player, status);
                    if ("mobile" === device) video.slVideo.playerStatus = status;
                }
            }
            floatVideoDiff(video, platform) {
                const {player} = video;
                if ("youtube" === platform) {
                    player.on("playing", (() => {
                        window.SL_EventBus.emit("product:product-play-video");
                    }));
                    if (this.productVideoMute || this.productVideoAutoplay) player.mute();
                    player.on("cued", (() => {
                        this.handleVideoAutoPlay();
                    }));
                    if (this.productVideoLoop) player.on("ended", (() => {
                        player.play();
                    }));
                } else if ("sl" === platform) {
                    player.addEventListener("playing", (() => {
                        window.SL_EventBus.emit("product:product-play-video");
                    }));
                    if (this.productVideoMute || this.productVideoAutoplay) player.muted = true;
                    player.addEventListener("canplay", (() => {
                        this.handleVideoAutoPlay();
                    }));
                    if (this.productVideoLoop) player.addEventListener("ended", (() => {
                        player.play();
                    }));
                }
                window.SL_EventBus.on("global:popup:close", (() => {
                    this.handleVideoPlayPause(player, "pause");
                }));
            }
            initPcVideo() {
                const ytbVideoPcSelector = `${this.id} .product_youTubeVideoBox`;
                const ytbVideoDom = __SL_$__(ytbVideoPcSelector);
                const slVideoDom = __SL_$__(`${this.id} .product_slVideoContainer`);
                const ytbVideo = {
                    player: null,
                    playerStatus: "pause"
                };
                const slVideo = {
                    player: null,
                    playerStatus: "pause"
                };
                if (ytbVideoDom.length > 0) {
                    ytbVideo.player = new (yt_player_default())(ytbVideoPcSelector, {
                        modestBranding: true,
                        controls: false
                    });
                    const videoId = ytbVideoDom.data("video-id");
                    ytbVideo.player.load(videoId);
                    this.floatVideoDiff(ytbVideo, "youtube");
                }
                if (slVideoDom.length > 0) {
                    slVideo.player = slVideoDom.get(0);
                    this.floatVideoDiff(slVideo, "sl");
                }
                const videos = {
                    ytbVideo,
                    slVideo
                };
                this.handleVideoAutoPlay(videos);
                return videos;
            }
            initMobileVideoCoverClick(dom, video) {
                dom.on("click", (() => {
                    const shouldExecutePlayStatus = "pause" === video.playerStatus ? "play" : "pause";
                    this.handleVideoPlayPause(video.player, shouldExecutePlayStatus);
                    video.playerStatus = shouldExecutePlayStatus;
                }));
            }
            initMobileVideo() {
                const ytbVideoMDom = __SL_$__(`${this.mobileId} .swiper-slide`).not(".swiper-slide-duplicate").find(".product_youTubeVideoBox").addClass("product_youTubeMobileVideoBox");
                const ytbVideoMSelector = `${this.mobileId} .product_youTubeMobileVideoBox`;
                const slVideoMDom = __SL_$__(`${this.mobileId} .swiper-slide`).not(".swiper-slide-duplicate").find(".product_slVideoContainer");
                const ytbVideoCoverDom = __SL_$__(`${this.mobileId} [data-video-platform="youtube"]`).not(".swiper-slide-duplicate").find(".product_photoSwipe_image");
                const slVideoCoverDom = __SL_$__(`${this.mobileId} [data-video-platform="sl"]`).not(".swiper-slide-duplicate").find(".product_photoSwipe_image");
                const ytbVideo = {
                    player: null,
                    playerStatus: "pause"
                };
                const slVideo = {
                    player: null,
                    playerStatus: "pause"
                };
                if (ytbVideoMDom.length > 0) {
                    ytbVideo.player = new (yt_player_default())(ytbVideoMSelector, {
                        modestBranding: true,
                        controls: false
                    });
                    const videoId = ytbVideoMDom.data("video-id");
                    ytbVideo.player.load(videoId);
                    this.floatVideoDiff(ytbVideo, "youtube");
                    this.initMobileVideoCoverClick(ytbVideoCoverDom, ytbVideo);
                }
                if (slVideoMDom.length > 0) {
                    slVideo.player = slVideoMDom.get(0);
                    this.floatVideoDiff(slVideo, "sl");
                    this.initMobileVideoCoverClick(slVideoCoverDom, slVideo);
                }
                const videos = {
                    ytbVideo,
                    slVideo
                };
                this.handleVideoAutoPlay(videos);
                return videos;
            }
            initPhotoSwipe(slidesWrapID, platform) {
                if (0 === Number(this.productImageLength)) return;
                const slidesSelector = `${slidesWrapID} .product_productImages`;
                const triggerDom = __SL_$__(slidesSelector);
                const eventDom = "mobile" === platform ? ".scaleImageIcon" : ".swiper-slide";
                const self = this;
                self.updatePhotoSwipeItems(slidesWrapID);
                triggerDom.on("click", eventDom, (function() {
                    if (__SL_$__(this).hasClass("swiper-slide-duplicate") || !get_default()(self, "slideItems.length")) return;
                    const triggerThis = "mobile" === platform ? __SL_$__(this).closest(".imageItem") : __SL_$__(this);
                    const isMobileHasActiveSkuImage = triggerThis.find(".product_m_skuImage").length > 0;
                    const isVideoSlide = triggerThis.hasClass("videoItem");
                    if (isMobileHasActiveSkuImage || isVideoSlide) return;
                    const {activeIndex} = "mobile" === platform ? self.mobileSwiper : self.swiper;
                    const mobileIndexByLoop = self.getSwiperIsLoop() ? triggerThis.data("swiper-slide-index") : activeIndex;
                    const index = "mobile" === platform ? mobileIndexByLoop : activeIndex;
                    self.handlePhotoSwiper(self.slideItems, index);
                }));
            }
            initPcSkuPhotoSwiper() {
                const self = this;
                __SL_$__(`${this.id} .product_pc_skuImage`).on("click", (function() {
                    const items = [ {
                        src: __SL_$__(this).find(".product_photoSwipe_image").attr("data-photoswipe-src"),
                        w: 0,
                        h: 0,
                        el: __SL_$__(this)[0]
                    } ];
                    self.handlePhotoSwiper(items, 0, false);
                }));
            }
            handlePhotoSwiper(items, index, cacheNaturalSize) {
                let pswpElement = document.querySelectorAll(".pswp")[0];
                if (!pswpElement) {
                    __SL_$__("body").append(product_photoSwipeHtml["default"]);
                    pswpElement = document.querySelectorAll(".pswp")[0];
                }
                this.openPhotoSwipe(pswpElement, items, index, cacheNaturalSize);
            }
            initMobileSkuPhotoSwiper() {
                const self = this;
                __SL_$__(`${this.mobileId} .product_m_skuImageBox .scaleSkuImageIcon`).on("click", (function() {
                    const items = [ {
                        src: __SL_$__(this).parent().find(".product_photoSwipe_image").attr("data-photoswipe-src"),
                        w: 0,
                        h: 0,
                        el: __SL_$__(this).parent()[0]
                    } ];
                    self.handlePhotoSwiper(items, 0, false);
                }));
            }
            updatePhotoSwipeItems(slidesWrapID) {
                const slidesDom = __SL_$__(`${slidesWrapID} .product_productImages`).find(".swiper-slide").not(".swiper-slide-duplicate").filter((function() {
                    return !__SL_$__(this).children(".product-detail-empty-image").length;
                }));
                const items = [];
                slidesDom.each(((index, item) => {
                    const imgEl = __SL_$__(item).find(".product_photoSwipe_image");
                    const size = __SL_$__(item).attr("data-natural-size");
                    const transSize = size ? size.split("x") : null;
                    items.push({
                        src: imgEl.attr("data-photoswipe-src"),
                        w: transSize ? parseInt(transSize[0], 10) : imgEl.innerWidth(),
                        h: transSize ? parseInt(transSize[1], 10) : imgEl.innerHeight(),
                        el: item
                    });
                }));
                this.slideItems = items;
            }
            openPhotoSwipe(pswpElement, items, index = 0, cacheNaturalSize = true) {
                const self = this;
                if (items && items.length > 1) __SL_$__(".pswp__button--arrow--left, .pswp__button--arrow--right").show(); else __SL_$__(".pswp__button--arrow--left, .pswp__button--arrow--right").hide();
                const photoSwipeOptions = {
                    allowPanToNext: false,
                    captionEl: false,
                    closeOnScroll: false,
                    counterEl: false,
                    history: false,
                    index,
                    pinchToClose: false,
                    preloaderEl: false,
                    shareEl: false,
                    tapToToggleControls: false,
                    barsSize: {
                        top: 20,
                        bottom: 20
                    },
                    getThumbBoundsFn(_index) {
                        let thumbnailParent;
                        if (items[_index].el && -1 !== items[_index].el.className.indexOf("swiper-slide-duplicate")) thumbnailParent = __SL_$__(`${self.mobileId} .swiper-slide`).eq(self.mobileSwiper.activeIndex).get(0); else thumbnailParent = items[_index].el;
                        const thumbnail = thumbnailParent.getElementsByClassName("product_photoSwipe_image")[0];
                        const pageYScroll = window.pageYOffset || document.documentElement.scrollTop;
                        const rect = thumbnail.getBoundingClientRect();
                        return {
                            x: rect.left,
                            y: rect.top + pageYScroll,
                            w: rect.width
                        };
                    }
                };
                const gallery = new (photoswipe_min_default())(pswpElement, photoswipe_ui_default_min_default(), items, photoSwipeOptions);
                gallery.listen("gettingData", (function(_index, item) {
                    const imgWrapEl = item.el;
                    const img = new Image;
                    if (!imgWrapEl.getAttribute("data-natural-size")) {
                        if (!window.__PRELOAD_STATE__.imgNoReferrerSwitch) img.src = item.src;
                        img.onload = () => {
                            const _img = (0, img_size["default"])(img.src);
                            const hasWH = _img && _img.ratio;
                            if (cacheNaturalSize) {
                                const naturalSize = hasWH ? `${img.naturalWidth}x${img.naturalHeight}` : `100x100`;
                                imgWrapEl.setAttribute("data-natural-size", naturalSize);
                            }
                            item.w = img.naturalWidth;
                            item.h = img.naturalHeight;
                            gallery.updateSize(true);
                        };
                    }
                    if (window.__PRELOAD_STATE__.imgNoReferrerSwitch) {
                        img.setAttribute("referrerpolicy", "same-origin");
                        img.src = item.src;
                    }
                }));
                gallery.init();
                gallery.listen("afterChange", (() => {
                    this.galleryAfterChange(gallery);
                }));
            }
            galleryAfterChange(gallery) {
                const currentIndex = gallery.getCurrentIndex();
                this.swiper && this.swiper.slideTo(currentIndex);
                this.mobileSwiper && this.mobileSwiper.slideToLoop(currentIndex);
            }
            heightOnChangeCb(height) {
                setTimeout((() => {
                    this.heightOnChange && this.heightOnChange(height);
                }), 200);
            }
            handleProductImagesHeight(swiperSelector, activeIndex, ratio = 1, targetImgSrc) {
                const self = this;
                const selector = swiperSelector;
                this.heightChangedCount++;
                const count = this.heightChangedCount;
                const promise = new Promise(((resolve, reject) => {
                    if (count !== this.heightChangedCount) {
                        resolve();
                        return;
                    }
                    if (void 0 !== activeIndex) {
                        const currentSlide = __SL_$__(`${selector} .swiper-slide`).eq(activeIndex);
                        if (!targetImgSrc && currentSlide.find(".product-detail-empty-image").length > 0) {
                            const mobileWidthRatio = "block" === __SL_$__(`${self.mobileId}`).css("display") ? self.mobileWidthRatio : 1;
                            const boxWidth = parseInt(__SL_$__(`${selector}`).width() * mobileWidthRatio, 10);
                            __SL_$__(`${selector}`).css("height", boxWidth);
                            self.heightOnChangeCb(boxWidth);
                            resolve(boxWidth);
                            return;
                        }
                        if (currentSlide.hasClass("videoItem") && !targetImgSrc) {
                            const videoBoxHeight = parseInt(currentSlide.children().innerHeight(), 10);
                            __SL_$__(`${selector}`).css("height", videoBoxHeight);
                            self.heightOnChangeCb(videoBoxHeight);
                            window.SL_EventBus.emit("product:expose-product-video", currentSlide);
                            resolve(videoBoxHeight);
                        } else if (currentSlide.hasClass("imageItem") || targetImgSrc) {
                            const currentSlideImgNaturalSize = currentSlide.attr("data-natural-size");
                            if (currentSlideImgNaturalSize && !targetImgSrc) {
                                const [imgNaturalWidth, imgNaturalHeight] = currentSlideImgNaturalSize.split("x");
                                const wrapperHeight = parseInt(String(__SL_$__(`${selector}`)[0].offsetWidth * ratio * imgNaturalHeight / imgNaturalWidth), 10);
                                __SL_$__(`${selector}`).css("height", wrapperHeight);
                                self.heightOnChangeCb(wrapperHeight);
                                resolve(wrapperHeight);
                                return;
                            }
                            const currentSlideImg = currentSlide.find("img");
                            const imgSrc = targetImgSrc || currentSlideImg.attr("src") || currentSlideImg.attr("data-src");
                            if (!targetImgSrc && "none" !== __SL_$__(`${self.id}`).css("display")) {
                                const slideHeight = parseInt(currentSlide.innerHeight(), 10);
                                __SL_$__(`${selector}`).css("height", slideHeight);
                                self.heightOnChangeCb(slideHeight);
                                resolve(slideHeight);
                                return;
                            }
                            imgOnload(imgSrc, (img => {
                                if (count !== this.heightChangedCount) {
                                    resolve();
                                    return;
                                }
                                if (!img) {
                                    reject(new Error("不是img对象"));
                                    return;
                                }
                                const height = parseInt(String(__SL_$__(`${selector}`)[0].offsetWidth * ratio * img.height / img.width), 10);
                                __SL_$__(`${selector}`).css("height", height);
                                self.heightOnChangeCb(height);
                                resolve(height);
                            }), (() => {
                                if (count !== this.heightChangedCount) {
                                    resolve();
                                    return;
                                }
                                const mobileWidthRatio = "block" === __SL_$__(`${self.mobileId}`).css("display") ? self.mobileWidthRatio : 1;
                                const boxWidth = parseInt(__SL_$__(`${selector}`).width() * mobileWidthRatio, 10);
                                __SL_$__(`${selector}`).css("height", boxWidth);
                                if (targetImgSrc && -1 !== selector.indexOf(ProductImages.pcSelectorPrefix)) __SL_$__(`${this.id} .product_pc_skuImage`).addClass("imageItemError"); else if (targetImgSrc && -1 !== selector.indexOf(ProductImages.mobileSelectorPrefix)) {
                                    const currentSlideDom = self.getMobileCurrentSlideDom();
                                    currentSlideDom.find(".product_m_skuImageBox").addClass("imageItemError");
                                } else currentSlide.addClass("imageItemError");
                                self.heightOnChangeCb(boxWidth);
                                resolve(boxWidth);
                            }));
                        } else reject(new Error(`当前滑动slide子节点内容异常,currentSlide:${currentSlide},activeIndex:${activeIndex}`));
                    } else reject(new Error(`activeIndex异常：${activeIndex}`));
                }));
                return promise;
            }
            setColumnThumbsSwiperHeight(height) {
                __SL_$__(`${this.id} .product_thumbsColumnContainer .productImageThumbs`).css({
                    maxHeight: `${height}px`
                });
            }
            handleThumbsArrow(activeIndex, slideLen, wrapperHeight) {
                const selectorPrefix = this.id;
                const {thumbsDirection: direction, showThumbsArrow} = this;
                if (!showThumbsArrow) {
                    this.setColumnThumbsSwiperHeight(wrapperHeight);
                    return;
                }
                __SL_$__(`${selectorPrefix} .thumbsArrowTop,${selectorPrefix} .thumbsArrowBottom`).show();
                if (0 === activeIndex) {
                    __SL_$__(`${selectorPrefix} .thumbsArrowTop`).hide();
                    if (direction === COLUMN) this.setColumnThumbsSwiperHeight(`${wrapperHeight - 25}`);
                }
                if (activeIndex + 1 === slideLen) {
                    __SL_$__(`${selectorPrefix} .thumbsArrowBottom`).hide();
                    if (direction === COLUMN) this.setColumnThumbsSwiperHeight(`${wrapperHeight - 25}`);
                } else if (direction === COLUMN) this.setColumnThumbsSwiperHeight(`${wrapperHeight - 50}`);
            }
            async handleEffectSwiperHeight(targetImageUrl) {
                const {swiper} = this;
                const {slides, activeIndex} = swiper || {};
                const height = await this.handleProductImagesHeight(`${this.id} .product_productImages`, activeIndex, 1, targetImageUrl);
                if (height) this.handleThumbsArrow(activeIndex, slides.length, height);
            }
            togglePcSkuImage(isShow, skuImageUrl) {
                const skuImageDom = __SL_$__(`${this.id} .product_pc_skuImage`);
                const currentIndex = __SL_$__(`${this.id}`).attr("data-index") || 0;
                if (skuImageDom.hasClass("imageItemError")) skuImageDom.removeClass("imageItemError");
                if (isShow && skuImageUrl) {
                    skuImageDom.show().html(`<img class="product_photoSwipe_image" ${window.__PRELOAD_STATE__.imgNoReferrerSwitch ? 'referrerpolicy="same-origin"' : ""} data-photoswipe-src=${(0, 
                    imgUrl["default"])(skuImageUrl, {
                        width: 1800
                    })} src=${skuImageUrl} />`);
                    __SL_$__(`${this.id} .productImageThumbsWrapper .thumbsImageItem`).eq(currentIndex).removeClass("active");
                    this.productShowSkuCover = true;
                } else if (!isShow) {
                    skuImageDom.hide().empty();
                    __SL_$__(`${this.id} .productImageThumbsWrapper .thumbsImageItem`).eq(currentIndex).addClass("active");
                    this.productShowSkuCover = false;
                }
            }
            handlePcSkuImage(isShow, skuImage) {
                if (!this.swiper) return;
                if (isShow) {
                    this.handleEffectSwiperHeight(skuImage);
                    this.togglePcSkuImage(true, skuImage);
                } else {
                    this.togglePcSkuImage(false);
                    this.handleEffectSwiperHeight();
                }
            }
            handleThumbsScroll(type, distance, smooth = true, timeout = 200) {
                if ("scrollTop" === type) setTimeout((() => {
                    const productImageThumbs = __SL_$__(`${this.id} .product_thumbsColumnContainer .productImageThumbs`);
                    if (smooth) productImageThumbs.addClass("smooth-animate"); else productImageThumbs.removeClass("smooth-animate");
                    productImageThumbs.scrollTop(distance);
                }), timeout); else if ("scrollLeft" === type) setTimeout((() => {
                    const productImageThumbs = __SL_$__(`${this.id} .product_thumbsRowContainer .productImageThumbs`);
                    if (smooth) productImageThumbs.addClass("smooth-animate"); else productImageThumbs.removeClass("smooth-animate");
                    productImageThumbs.scrollLeft(distance);
                }), timeout);
            }
            getThumbsPosition(type, index) {
                const columnThumbsListDom = __SL_$__(`${this.id} .product_thumbsColumnContainer .thumbsImageItem`);
                const rowThumbsListDom = __SL_$__(`${this.id} .product_thumbsRowContainer .thumbsImageItem`);
                if ("top" === type) {
                    if (!columnThumbsListDom.length) return 0;
                    const prevThumbsItem = columnThumbsListDom.eq(index > 0 ? index - 1 : 0);
                    const prevThumbsItemHalfHeight = parseInt(prevThumbsItem.innerHeight() / 2, 10);
                    return columnThumbsListDom.eq(index).position().top - prevThumbsItemHalfHeight - 20;
                }
                if ("left" === type) {
                    if (!rowThumbsListDom.length) return 0;
                    const prevThumbsItem = rowThumbsListDom.eq(index > 0 ? index - 1 : 0);
                    const prevThumbsItemHalfWidth = parseInt(prevThumbsItem.innerWidth() / 2, 10);
                    return rowThumbsListDom.eq(index).position().left - prevThumbsItemHalfWidth - 20;
                }
            }
            initHandleProductImagesArrow() {
                if (!this.showThumbsArrow) return;
                const {thumbsDirection: direction} = this;
                __SL_$__(`${this.id} .arrowTop`).on("click", (() => {
                    const {activeIndex} = this.swiper;
                    this.swiper.slidePrev();
                    if (direction === COLUMN) {
                        const scrollTopDistance = this.getThumbsPosition("top", activeIndex - 1);
                        this.handleThumbsScroll("scrollTop", scrollTopDistance);
                    } else if (direction === ROW) {
                        const scrollLeftDistance = this.getThumbsPosition("left", activeIndex - 1);
                        this.handleThumbsScroll("scrollLeft", scrollLeftDistance);
                    }
                }));
                __SL_$__(`${this.id} .arrowBottom`).on("click", (() => {
                    const {activeIndex} = this.swiper;
                    this.swiper.slideNext();
                    if (direction === COLUMN) {
                        const scrollTopDistance = this.getThumbsPosition("top", activeIndex + 1);
                        this.handleThumbsScroll("scrollTop", scrollTopDistance);
                    } else if (direction === ROW) {
                        const scrollLeftDistance = this.getThumbsPosition("left", activeIndex + 1);
                        this.handleThumbsScroll("scrollLeft", scrollLeftDistance);
                    }
                }));
            }
            handlePcThumbsActive(index) {
                __SL_$__(`${this.id} .productImageThumbsWrapper .thumbsImageItem`).removeClass("active").eq(index).addClass("active");
                __SL_$__(`${this.id}`).attr("data-index", index);
            }
            async initThumbsSwiper(firstInit) {
                const {thumbsDirection} = this;
                const self = this;
                const bindClickDom = __SL_$__(`${this.id} .product_thumbs${thumbsDirection === COLUMN ? "Column" : "Row"}Container `);
                bindClickDom.on("click", ".thumbsImageItem", (function() {
                    const index = __SL_$__(this).index();
                    self.swiper.slideTo(index);
                    if ("block" === __SL_$__(`${self.id} .product_pc_skuImage`).css("display")) {
                        self.handlePcSkuImage(false);
                        __SL_$__(this).addClass("active");
                    }
                }));
                const skuImageDom = __SL_$__(`${this.id} .product_pc_skuImage`).find("img");
                const skuImage = skuImageDom.attr("data-src") || skuImageDom.attr("src");
                if (!skuImage) this.handlePcThumbsActive(self.swiper.activeIndex);
                await this.handleEffectSwiperHeight(skuImage ? skuImage : null);
                if (skuImage && firstInit) {
                    const firstActiveImg = __SL_$__(`${this.id}`).find(".swiper-slide-active img");
                    if (firstActiveImg.length > 0) {
                        const src = firstActiveImg.attr("src") || firstActiveImg.attr("data-src");
                        const _img = (0, img_size["default"])(src);
                        const ratio = _img && _img.ratio || "100%";
                        firstActiveImg.parent().css("paddingBottom", ratio);
                    }
                    const emptyDom = __SL_$__(`${this.id}`).find(".product-detail-empty-image");
                    console.log("emptyDom", emptyDom.length);
                    if (emptyDom.length > 0) emptyDom.css("paddingBottom", "100%");
                }
                if (firstInit) __SL_$__(`${this.id}`).find(".swiper-slide").removeClass("firstInit");
                __SL_$__(`${this.id} .product_thumbsColumnContainer`).height("auto");
                __SL_$__(`${this.id} .product_thumbsRowContainer`).height("auto");
                this.initHandleProductImagesArrow();
            }
            initPcProductImages(firstInit) {
                const pcProductImagesDom = __SL_$__(`${this.id}`);
                if (0 == pcProductImagesDom.find(".product_productImages").length || "none" === pcProductImagesDom.css("display")) return null;
                const mainSwiper = new core_class["default"](`${this.id} .product_productImages`, {
                    initialSlide: __SL_$__(`${this.id}`).data("initial-slide") || 0,
                    effect: "fade",
                    fadeEffect: {
                        crossFade: true
                    },
                    navigation: {
                        nextEl: `${this.id} .swiper-button-next_pc_${this.selectorId}`,
                        prevEl: `${this.id} .swiper-button-prev_pc_${this.selectorId}`,
                        enabled: this.mediaList && this.mediaList.length > 1 && this.productShowSwiperArrow
                    },
                    init: firstInit ? false : true,
                    lazy: {
                        loadOnTransitionStart: true
                    },
                    allowTouchMove: false,
                    on: {
                        init: () => {
                            if (firstInit) {
                                this.initThumbsSwiper(firstInit);
                                if (this.productImageScale) {
                                    this.initPhotoSwipe(this.id, "pc");
                                    this.initPcSkuPhotoSwiper();
                                }
                            }
                            if (this.mediaList && this.mediaList.length > 1 && this.productShowSwiperArrow) {
                                __SL_$__(`${this.id} .swiper-button-next_pc_${this.selectorId}`).show();
                                __SL_$__(`${this.id} .swiper-button-prev_pc_${this.selectorId}`).show();
                            } else {
                                __SL_$__(`${this.id} .swiper-button-next_pc_${this.selectorId}`).hide();
                                __SL_$__(`${this.id} .swiper-button-prev_pc_${this.selectorId}`).hide();
                            }
                        },
                        slideChange: () => {
                            this.handleUnifyVideoStatus(this.pcVideo, "pc", "pause");
                            if (this.swiper.destroyed) return;
                            const {activeIndex, previousIndex} = this.swiper;
                            this.handlePcThumbsActive(activeIndex);
                            this.handlePcSkuImage(false);
                            if (this.thumbsDirection === COLUMN) {
                                const scrollTopDistance = this.getThumbsPosition("top", activeIndex);
                                this.handleThumbsScroll("scrollTop", scrollTopDistance, Math.abs(activeIndex - previousIndex) < 10);
                            } else {
                                const scrollLeftDistance = this.getThumbsPosition("left", activeIndex);
                                this.handleThumbsScroll("scrollLeft", scrollLeftDistance, Math.abs(activeIndex - previousIndex) < 10);
                            }
                            this.handleVideoAutoPlay();
                        },
                        lazyImageLoad: (_swiper, _slideEl, imageEl) => {
                            image_gif_poster.load(imageEl);
                        }
                    }
                });
                return mainSwiper;
            }
            getActivePaginationList(activeIndex, activePointer) {
                const list = [];
                for (let i = 0; i < 5; i++) {
                    const offset = i - activePointer;
                    list.push(activeIndex + offset);
                }
                return list;
            }
            handleMActivePagination(activeIndex) {
                const previousIndex = this.mobileRealPreviewIndex || 0;
                this.mobileRealPreviewIndex = activeIndex;
                const listContainer = __SL_$__(`${this.mobileId} .paginationList`);
                const scrollWrapper = listContainer.children(".paginationListWrapper");
                const bullets = scrollWrapper.children("span");
                const length = bullets.length;
                if (bullets.length < 6) {
                    scrollWrapper.addClass("noTransition");
                    scrollWrapper.css("transform", "");
                    bullets.removeClass("active");
                    bullets.eq(activeIndex).addClass("active");
                    return;
                }
                if (!this.mobilePaginationList) this.mobilePaginationList = [ 0, 1, 2, 3, 4 ];
                let resultMobilePaginationList = this.mobilePaginationList;
                const previousPointer = this.mobilePaginationList.indexOf(previousIndex);
                const offsetIndex = previousIndex - activeIndex;
                if (offsetIndex < 0) {
                    let activePointer = Math.min(3, previousPointer - offsetIndex);
                    if (activeIndex === length - 1) activePointer = 4;
                    resultMobilePaginationList = this.getActivePaginationList(activeIndex, activePointer);
                } else {
                    let activePointer = Math.max(1, previousPointer - offsetIndex);
                    if (0 === activeIndex) activePointer = 0;
                    resultMobilePaginationList = this.getActivePaginationList(activeIndex, activePointer);
                }
                if (Math.abs(offsetIndex) > 1) scrollWrapper.addClass("noTransition"); else scrollWrapper.removeClass("noTransition");
                if (this.mobilePaginationList[0] - 1 > -1) bullets.eq(this.mobilePaginationList[0] - 1).removeClass([ "active", "next" ]);
                if (this.mobilePaginationList[this.mobilePaginationList.length - 1] + 1 < length) bullets.eq(this.mobilePaginationList[this.mobilePaginationList.length - 1] + 1).removeClass([ "active", "next" ]);
                this.mobilePaginationList.forEach(((index, i) => {
                    bullets.eq(index).removeClass([ "active", "next" ]);
                }));
                bullets.eq(activeIndex).addClass("active");
                if (resultMobilePaginationList[0] - 1 > 0) {
                    bullets.eq(resultMobilePaginationList[0] - 1).addClass("next");
                    bullets.eq(resultMobilePaginationList[0]).addClass("next");
                } else if (resultMobilePaginationList[0] > 0) bullets.eq(resultMobilePaginationList[0]).addClass("next");
                if (resultMobilePaginationList[resultMobilePaginationList.length - 1] + 1 < length - 1) {
                    bullets.eq(resultMobilePaginationList[resultMobilePaginationList.length - 1] + 1).addClass("next");
                    bullets.eq(resultMobilePaginationList[resultMobilePaginationList.length - 1]).addClass("next");
                } else if (resultMobilePaginationList[resultMobilePaginationList.length - 1] < length - 1) bullets.eq(resultMobilePaginationList[resultMobilePaginationList.length - 1]).addClass("next");
                if (resultMobilePaginationList[0] !== this.mobilePaginationList[0]) scrollWrapper.css("transform", `translate3d(-${resultMobilePaginationList[0] / length * 100}%, 0, 0)`);
                this.mobilePaginationList = resultMobilePaginationList;
            }
            handleMobileSkuImage(isShow, skuImageUrl) {
                const selector = `${this.mobileId} .product_productImages`;
                const mainSwiperDom = __SL_$__(selector);
                if (!this.mobileSwiper) return;
                if (0 === mainSwiperDom.length) {
                    console.error("m端切换sku图片失败，请检查selectorId是否输错，应存在html上");
                    return;
                }
                const {realIndex} = this.mobileSwiper;
                if (isShow) this.toggleMSkuImage(realIndex, true, skuImageUrl); else this.toggleMSkuImage(realIndex, false);
            }
            getSwiperIsLoop() {
                return __SL_$__(`${this.mobileId} .product_productImages .swiper-slide-duplicate`).length > 0;
            }
            bindMobileSkuImageScaleDom() {
                const self = this;
                __SL_$__(".product_m_skuImageBox .scaleSkuImageIcon").on("click", (function() {
                    const items = [ {
                        src: __SL_$__(this).parent().find(".product_photoSwipe_image").attr("data-photoswipe-src"),
                        w: 0,
                        h: 0,
                        el: __SL_$__(this).parent()[0]
                    } ];
                    self.handlePhotoSwiper(items, 0, false);
                }));
            }
            getMobileCurrentSlideDom(index) {
                const {realIndex} = this.mobileSwiper || {};
                const _index = index || realIndex;
                const swiperIsLoop = this.getSwiperIsLoop();
                const currentSlideDom = swiperIsLoop ? __SL_$__(`${this.mobileId} .product_productImages .swiper-slide[data-swiper-slide-index="${_index}"]`) : __SL_$__(`${this.mobileId} .product_productImages .swiper-slide`).eq(_index);
                return currentSlideDom;
            }
            setCurrentSlidePB($dom, imageUrl) {
                const ratio = (0, img_size["default"])(imageUrl).ratio || "100%";
                $dom.css("paddingBottom", ratio).attr("data-sku-image-ratio", ratio);
            }
            toggleMSkuImage(index, isShow, skuImageUrl) {
                const self = this;
                if (void 0 === index || null === index) {
                    console.error(`toggleMSkuImage: index异常${index}`);
                    return;
                }
                const currentSlideDom = self.getMobileCurrentSlideDom(index);
                const currentSkuImageBox = currentSlideDom.find(".product_m_skuImageBox");
                const currentSlideBox = currentSlideDom.find(".swiper-slide-box");
                const currentSkuImageIsError = currentSkuImageBox.hasClass("imageItemError");
                if (currentSkuImageIsError) currentSkuImageBox.removeClass("imageItemError");
                const skuImageDom = `\n    <div class="product_m_skuImageBox">\n      <img ${window.__PRELOAD_STATE__.imgNoReferrerSwitch ? 'referrerpolicy="same-origin"' : ""} onerror="this.onerror=null;this.parentElement.className+=' imageItemError';" class="product_m_skuImage product_photoSwipe_image" data-photoswipe-src=${(0, 
                imgUrl["default"])(skuImageUrl, {
                    width: 1800
                })} src=${skuImageUrl} />\n      ${self.productImageScale ? `<div class="scaleSkuImageIcon">\n      <svg width="28" height="28" viewBox="0 0 28 28" fill="none" xmlns="http://www.w3.org/2000/svg">\n      <circle cx="13" cy="12" r="7.5" stroke="black"/>\n      <path d="M18.5 17.5L23 22.5" stroke="black" stroke-linecap="round"/>\n      </svg>\n      </div>` : ""}\n    </div>`;
                if (isShow && void 0 !== index && skuImageUrl) {
                    currentSlideDom.find("img").hide();
                    if (0 === currentSkuImageBox.length) {
                        currentSlideDom.append(skuImageDom);
                        self.setCurrentSlidePB(currentSlideBox, skuImageUrl);
                        self.bindMobileSkuImageScaleDom();
                    } else {
                        currentSkuImageBox.find(".product_m_skuImage").removeAttr("srcset data-srcset").attr({
                            src: skuImageUrl,
                            "data-photoswipe-src": (0, imgUrl["default"])(skuImageUrl, {
                                width: 1800
                            }),
                            onerror: "this.onerror=null;this.parentElement.className+=' imageItemError';"
                        }).show();
                        self.setCurrentSlidePB(currentSlideBox, skuImageUrl);
                    }
                    this.mobileSwiper.updateAutoHeight();
                    __SL_$__(`${this.mobileId} .product_productImages`).attr("sku-image-index", index);
                    this.productShowSkuCover = true;
                } else if (!isShow && void 0 !== index && currentSkuImageBox.length > 0) {
                    const slideImg = currentSlideDom.find("img");
                    if (currentSlideBox.attr("data-image-ratio")) currentSlideBox.css("paddingBottom", currentSlideBox.attr("data-image-ratio")).removeAttr("data-sku-image-ratio");
                    currentSkuImageBox.remove();
                    slideImg.show();
                    this.mobileSwiper.updateAutoHeight();
                    __SL_$__(`${this.mobileId} .product_productImages`).attr("sku-image-index", null);
                    this.productShowSkuCover = false;
                }
            }
            handleMobileScaleImage() {
                __SL_$__(`${this.mobileId} .paginationList div`).removeClass("active").eq(activeIndex).addClass("active");
            }
            initMobileProductImages(firstInit) {
                const mobileProductImagesDom = __SL_$__(`${this.mobileId}`);
                const selector = `${this.mobileId} .product_productImages`;
                const mainSwiperDom = __SL_$__(selector);
                const slidesLength = mainSwiperDom.find(".swiper-slide").length;
                const videoDom = mainSwiperDom.find(".videoItem");
                const videoIndex = videoDom.data("index");
                const videoIsStartOrEndPos = 0 === videoIndex || videoIndex === videoDom.data("length") - 1 || 1 === slidesLength;
                if (0 === mainSwiperDom.length || "none" === mobileProductImagesDom.css("display")) return null;
                const mainSwiper = new core_class["default"](selector, {
                    loop: videoIsStartOrEndPos ? false : true,
                    initialSlide: __SL_$__(`${this.mobileId}`).data("initial-slide") || 0,
                    slidesPerView: "auto",
                    centeredSlides: true,
                    spaceBetween: 5,
                    autoHeight: true,
                    lazy: {
                        loadOnTransitionStart: true,
                        loadPrevNext: .75 === this.mobileWidthRatio ? true : false
                    },
                    on: {
                        init: swiper => {
                            if (firstInit) {
                                if (this.productImageScale) {
                                    this.initPhotoSwipe(this.mobileId, "mobile");
                                    this.initMobileSkuPhotoSwiper();
                                }
                                this.handleMActivePagination(swiper.realIndex);
                                __SL_$__(`${this.mobileId} .product_productImages`).attr("sku-image-index", swiper.realIndex);
                                if (videoIsStartOrEndPos) {
                                    const skuImageDom = __SL_$__(`${this.mobileId} .product_productImages .swiper-slide`).eq(swiper.realIndex).find(".product_m_skuImage");
                                    skuImageDom.attr("src") || skuImageDom.attr("data-src");
                                }
                                __SL_$__(`${this.mobileId} .product_productImages .swiper-slide`).css("height", "auto");
                                swiper.updateAutoHeight();
                                window.lozadObserver && window.lozadObserver.observe();
                            }
                        },
                        slideChange: swiper => {
                            this.handleUnifyVideoStatus(this.mobileVideo, "mobile", "pause");
                            this.handleMActivePagination(swiper.realIndex);
                            const skuImageDom = __SL_$__(`${this.mobileId} .product_productImages .swiper-slide`).eq(swiper.realIndex).find(".product_m_skuImage");
                            skuImageDom.attr("src") || skuImageDom.attr("data-src");
                        },
                        slideChangeTransitionEnd: () => {
                            const skuImageIndex = __SL_$__(`${this.mobileId} .product_productImages`).attr("sku-image-index");
                            if (void 0 !== skuImageIndex) this.toggleMSkuImage(skuImageIndex, false);
                            this.handleVideoAutoPlay();
                        }
                    },
                    ...this.swiperConfig.mobile
                });
                return mainSwiper;
            }
            renderVideoItem(item, index) {
                const {middle: cover, videoId} = (0, getYouTubeCover["default"])(item.resource);
                const isYoutubeVideo = isYoutube(item.resource);
                const photoswipeCoverSrc = isYoutubeVideo ? cover : (0, imgUrl["default"])(item.cover, {
                    width: 1800
                });
                return `${isYoutubeVideo ? `<div class="product_youTubeVideoContainer">\n        <div class="product_youTubeVideoBox" data-video-id="${videoId}"></div>\n      </div>` : `<video class="product_slVideoContainer" disablepictureinpicture controls webkit-playsinline playsinline controlslist="nodownload nofullscreen" poster="${item.cover}">\n        <source src="${item.resource}" type="video/mp4">\n      </video>`}\n    <img ${window.__PRELOAD_STATE__.imgNoReferrerSwitch ? 'referrerpolicy="same-origin"' : ""} onerror="this.onerror=null;this.parentElement.className+=' videoCoverError';" \n    class="product_photoSwipe_image swiper-lazy"\n    data-photoswipe-src="${photoswipeCoverSrc}" ${0 !== index ? "data-" : ""}src="${photoswipeCoverSrc}" alt="">`;
            }
            updateSlides(list) {
                __SL_$__(`${this.id} .product_productImages`).children(".swiper-wrapper").empty().append(Array.isArray(list) ? list.map(((item, index) => {
                    const imgRatio = (0, img_size["default"])(item.resource).ratio || "100%";
                    const isYoutubeVideo = isYoutube(item.resource);
                    if ("VIDEO" === item.type) return `<div class="swiper-slide videoItem" data-video-platform="${isYoutubeVideo ? "youtube" : "sl"}" style="padding-bottom: ${isYoutubeVideo ? "56.25%" : (0, 
                    img_size["default"])(item.cover).ratio || "56.25%"}">${this.renderVideoItem(item, index)};</div>`;
                    return `<div class="swiper-slide imageItem" style="height: 0; padding-bottom:${imgRatio}"><img ${window.__PRELOAD_STATE__.imgNoReferrerSwitch ? 'referrerpolicy="same-origin"' : ""} onerror="this.onerror=null;this.parentElement.className+=' imageItemError';" data-photoswipe-src="${item.resource}" ${0 !== index ? "data-" : ""}src="${item.resource}" alt="" class="swiper-lazy product_photoSwipe_image"></div>`;
                })) : `<div class="swiper-slide"><div class="product-detail-empty-image"></div></div>`);
                const slidesLength = list.length;
                const mobileWrapper = __SL_$__(`${this.mobileId} .product_productImages`).children(".swiper-wrapper");
                if (1 === get_default()(list, "length") || "VIDEO" === get_default()(list, "[0].type") || "VIDEO" === get_default()(list, `[${get_default()(list, "length") - 1}].type`)) mobileWrapper.addClass("hasVideoFl"); else mobileWrapper.removeClass("hasVideoFl");
                mobileWrapper.empty().append(Array.isArray(list) ? list.map(((item, index) => {
                    if ("VIDEO" === item.type) {
                        const isYoutubeVideo = isYoutube(item.resource);
                        const ratio = isYoutubeVideo ? "56.25%" : (0, img_size["default"])(item.cover).ratio || "56.25%";
                        return `<div class="swiper-slide videoItem" data-video-platform="${isYoutubeVideo ? "youtube" : "sl"}" style="height: auto" data-index="${index}" data-length="${slidesLength}">\n                <div class="swiper-slide-box" data-image-ratio="${ratio}" style="padding-bottom: ${ratio}">\n                  ${this.renderVideoItem(item, index)}\n                </div>\n              </div>`;
                    }
                    const ratio = (0, img_size["default"])(item.resource).ratio || "100%";
                    return `<div class="swiper-slide imageItem" style="height: auto">\n<div class="swiper-slide-box" data-image-ratio="${ratio}" data-sku-image-ratio="100%" style="padding-bottom: ${ratio}">\n<img ${window.__PRELOAD_STATE__.imgNoReferrerSwitch ? 'referrerpolicy="same-origin"' : ""}  onerror="this.onerror=null;this.parentElement.className+=' imageItemError';" data-photoswipe-src="${item.resource}" ${0 !== index ? "data-" : ""}src="${item.resource}" alt="" class="swiper-lazy product_photoSwipe_image">${this.productImageScale ? `<div class="scaleImageIcon"><div class="scaleImageIconSvg"><svg width="28" height="28" viewBox="0 0 28 28" fill="none" xmlns="http://www.w3.org/2000/svg"><circle cx="13" cy="12" r="7.5" /><path d="M18.5 17.5L23 22.5" stroke-linecap="round" /></svg></div></div>` : ""}</div>\n</div>`;
                })) : `<div class="swiper-slide"><div class="swiper-slide-box" data-image-ratio="100%" style="padding-bottom: 100%"><div class="product-detail-empty-image product-noImages"></div></div></div>`);
            }
            updateImageList(list, activeIndex, source) {
                if (!this.verifySource(source && source.app)) return;
                this.mediaList = list;
                this.handleUnifyVideoStatus(this.pcVideo, "pc", "pause");
                this.handleUnifyVideoStatus(this.mobileVideo, "mobile", "pause");
                this.replaceThubsSwiper(list, activeIndex);
                this.swiper && this.swiper.destroy();
                this.mobileSwiper && this.mobileSwiper.destroy();
                this.updateSlides(list);
                if (this.swiper) {
                    __SL_$__(`${this.id}`).data("initial-slide", activeIndex);
                    this.swiper = this.initPcProductImages();
                    this.updatePhotoSwipeItems(this.id);
                    this.handleEffectSwiperHeight();
                    if (this.thumbsDirection === COLUMN) {
                        const scrollTopDistance = this.getThumbsPosition("top", activeIndex);
                        this.handleThumbsScroll("scrollTop", scrollTopDistance, false, 0);
                    } else {
                        const scrollLeftDistance = this.getThumbsPosition("left", activeIndex);
                        this.handleThumbsScroll("scrollLeft", scrollLeftDistance, false, 0);
                    }
                }
                if (this.mobileSwiper) {
                    __SL_$__(`${this.mobileId}`).data("initial-slide", activeIndex);
                    this.mobileSwiper = this.initMobileProductImages();
                    this.updatePhotoSwipeItems(this.mobileId);
                }
                this.pcVideo = this.initPcVideo();
                this.mobileVideo = this.initMobileVideo();
                __SL_$__(`${this.id}`).attr("data-index", activeIndex || 0);
            }
            replaceThubsSwiper(list, activeIndex) {
                const wrapper = __SL_$__(`${this.id} .product_thumbs${this.thumbsDirection === COLUMN ? "Column" : "Row"}Container .productImageThumbsWrapper`);
                const mBox = __SL_$__(`${this.mobileId} .paginationBox`);
                const mWrapper = mBox.find(".paginationListWrapper");
                wrapper.empty();
                mWrapper.empty();
                if (!get_default()(list, "length") || list.length <= 1) {
                    __SL_$__(`${this.id} .product_thumbs${this.thumbsDirection === COLUMN ? "Column" : "Row"}Container`).hide();
                    mBox.hide();
                } else {
                    __SL_$__(`${this.id} .product_thumbs${this.thumbsDirection === COLUMN ? "Column" : "Row"}Container`).show();
                    mBox.show();
                    list.forEach(((item, index) => {
                        const ratio = (0, img_size["default"])(item.resource).ratio || "100%";
                        if ("VIDEO" === item.type) {
                            const isYoutubeVideo = isYoutube(item.resource);
                            wrapper.append(`<div class="swiper-slide thumbsImageItem ${activeIndex === index ? "active" : ""}"><figure style="padding-bottom: ${ratio}"><img ${window.__PRELOAD_STATE__.imgNoReferrerSwitch ? 'referrerpolicy="same-origin"' : ""} onerror="this.onerror=null;this.parentElement.className+=' videoCoverError';" src="${isYoutubeVideo ? (0, 
                            getYouTubeCover["default"])(item.resource).middle : item.cover}" alt=""><svg width="20" height="20" viewBox="0 0 20 20" fill="none" xmlns="http://www.w3.org/2000/svg">\n          <circle cx="10" cy="10" r="10" fill="black" fill-opacity="0.6"/>\n          <path d="M13.6256 10.2496L8.46641 13.6891C8.26704 13.822 8 13.6791 8 13.4394V6.56056C8 6.32095 8.26704 6.17803 8.46641 6.31094L13.6256 9.75039C13.8037 9.86913 13.8037 10.1309 13.6256 10.2496Z" fill="white"/>\n          </svg></figure>\n          </div>`);
                        } else wrapper.append(__SL_$__(`<div class="swiper-slide thumbsImageItem ${activeIndex === index ? "active" : ""}"><figure style="padding-bottom: ${ratio}"><img ${window.__PRELOAD_STATE__.imgNoReferrerSwitch ? 'referrerpolicy="same-origin"' : ""} onerror="this.onerror=null;this.parentElement.className+=' imageItemError';" src="${(0, 
                        imgUrl["default"])(item.resource, {
                            width: 152
                        })}" alt=""></figure></div>`));
                        mWrapper.append(`<span class="${activeIndex === index ? "active" : ""}" />`);
                    }));
                }
            }
            skuImageChange(img, source) {
                if (!this.verifySource(source && source.app)) return;
                const {url} = img || {};
                if (url) {
                    this.handleUnifyVideoStatus(this.pcVideo, "pc", "pause");
                    this.handleUnifyVideoStatus(this.mobileVideo, "mobile", "pause");
                    const index = this.mediaList.findIndex((item => item.resource === url));
                    if (index > -1) {
                        this.swiper && this.swiper.slideTo(index);
                        this.mobileSwiper && this.mobileSwiper.slideToLoop(index, 0);
                        this.handlePcSkuImage(false);
                        this.handleMobileSkuImage(false);
                    } else {
                        this.handlePcSkuImage(true, url);
                        this.handleMobileSkuImage(true, url);
                    }
                } else {
                    this.handlePcSkuImage(false);
                    this.handleMobileSkuImage(false);
                    this.handleVideoAutoPlay();
                }
            }
            handleVideoAutoPlay(video) {
                if (this.productShowSkuCover) return;
                if (Array.isArray(this.mediaList)) if (this.mobileSwiper) {
                    const media = this.mediaList[this.mobileSwiper.realIndex] || {};
                    if ("VIDEO" === media.type) if (this.productVideoAutoplay) this.handleUnifyVideoStatus(video || this.mobileVideo, "mobile", "play");
                } else if (this.swiper) {
                    const media = this.mediaList[this.swiper.realIndex] || {};
                    if ("VIDEO" === media.type) if (this.productVideoAutoplay) this.handleUnifyVideoStatus(video || this.pcVideo, "pc", "play");
                }
            }
            findMainMediaList() {
                const skuImageList = {};
                if (Array.isArray(this.skuList)) this.skuList.forEach((item => {
                    if (Array.isArray(item.imageList)) item.imageList.forEach((img => {
                        skuImageList[img] = true;
                    }));
                }));
                const mainImageList = [];
                if (Array.isArray(this._allMediaList)) this._allMediaList.forEach((item => {
                    if (item && !skuImageList[item.resource]) mainImageList.push(item);
                }));
                return mainImageList;
            }
        }
        ProductImages.pcSelectorPrefix = "execute_productImages_pc";
        ProductImages.mobileSelectorPrefix = "execute_productImages_mobile";
        const js = ProductImages;
    },
    "../shared/browser/components/hbs/productImages/js/product-photoSwipeHtml.js": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
        "use strict";
        __webpack_require__.d(__webpack_exports__, {
            default: () => __WEBPACK_DEFAULT_EXPORT__
        });
        const __WEBPACK_DEFAULT_EXPORT__ = `\n  <div class="pswp" tabindex="-1" role="dialog" aria-hidden="true">\n  <div class="pswp__bg"></div>\n    <div class="pswp__scroll-wrap">\n      <div class="pswp__container">\n          <div class="pswp__item"></div>\n          <div class="pswp__item"></div>\n          <div class="pswp__item"></div>\n      </div>\n      <div class="pswp__ui pswp__ui--hidden">\n        <button class="pswp__button pswp__button--arrow--left" title="Previous">\n          <svg width="12" height="12" viewBox="0 0 12 12" fill="none" xmlns="http://www.w3.org/2000/svg">\n            <path d="M8 1L3 6L8 11" stroke-width="1.5" stroke-linecap="round"/>\n          </svg>        \n        </button>\n        <button class="pswp__button pswp__button--close" title="Close (Esc)">\n          <svg width="12" height="12" viewBox="0 0 12 12" fill="none" xmlns="http://www.w3.org/2000/svg">\n            <path d="M10.8002 1.19999L1.2002 10.8" stroke-width="1.2" stroke-linecap="round"/>\n            <path d="M1.1998 1.19999L10.7998 10.8" stroke-width="1.2" stroke-linecap="round"/>\n          </svg>\n        </button>\n        <button class="pswp__button pswp__button--arrow--right" title="Next">\n          <svg width="12" height="12" viewBox="0 0 12 12" fill="none" xmlns="http://www.w3.org/2000/svg">\n            <path d="M4 11L9 6L4 1" stroke-width="1.5" stroke-linecap="round"/>\n          </svg>\n        </button>\n      </div>\n    </div>\n  </div>\n  </div>\n`;
    },
    "../shared/browser/components/hbs/shared/base/BaseClass.js": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
        "use strict";
        __webpack_require__.d(__webpack_exports__, {
            default: () => EventManager
        });
        function isInvalid(param) {
            return !param || "string" !== typeof param;
        }
        function isJqueryInstance(dom) {
            return dom && dom instanceof __SL_$__ && dom.length > 0;
        }
        function getEventHandlerName(event, selector, namepsace) {
            if (!selector) return [ event, namepsace ].join("-");
            if (isJqueryInstance(selector)) return selector;
            return [ selector, event, namepsace ].join("-");
        }
        function getNamespace(event, namespace) {
            if (isInvalid(event) && isInvalid(namespace)) throw new Error("one of these two parameters must be provided!");
            if (isInvalid(event)) return `.${namespace}`;
            return [ event, namespace ].join(".");
        }
        const eventInvalidErrorMessage = "event param must be provided and it must be a string type";
        function on({eventName, handler, selector, scope} = {}) {
            if (isInvalid(eventName)) throw new Error(eventInvalidErrorMessage);
            if (!isJqueryInstance(scope)) throw new Error("scope must be a jQuery Object");
            if ("function" !== typeof handler) throw new TypeError("handler must be a function");
            if (selector) {
                if (isInvalid(selector)) throw new TypeError("selector must be a string!");
                scope.on(eventName, selector, handler);
            } else scope.on(eventName, handler);
        }
        function off({eventName, selector, handler, scope} = {}) {
            if (isInvalid(eventName)) throw new Error(eventInvalidErrorMessage);
            if (!isJqueryInstance(scope)) throw new Error("scope must be a jQuery Object");
            if (selector) {
                if (isInvalid(selector)) throw new TypeError("selector must be a string!");
                if ("function" === typeof handler) scope.off(eventName, selector, handler); else scope.off(eventName, selector);
            } else scope.off(eventName);
        }
        function onConsistent(event, selector, handler) {
            if (isInvalid(event)) throw new Error(eventInvalidErrorMessage);
            if (!handler) {
                handler = selector;
                selector = null;
            }
            const eventHandlerKey = this.getEventHandlerName(event, selector);
            const ns = this.getEventNamespace(event);
            this.$eventHandlers.set(eventHandlerKey, handler);
            return scope => {
                on({
                    eventName: ns,
                    selector,
                    handler,
                    scope
                });
            };
        }
        function offConsistent(event, selector) {
            if (isInvalid(event)) throw new Error(eventInvalidErrorMessage);
            const eventHandlerName = this.getEventHandlerName(event, selector);
            const handler = this.$eventHandlers.get(eventHandlerName);
            const ns = this.getEventNamespace(event);
            return scope => {
                off({
                    eventName: ns,
                    selector,
                    handler,
                    scope
                });
                if (handler) this.$eventHandlers.delete(eventHandlerName);
            };
        }
        class EventManager {
            constructor(namespace = "", portals) {
                this.$win = __SL_$__(window);
                this.$doc = __SL_$__(document);
                this.$portals = portals ? __SL_$__(portals) : null;
                this.namespace = "string" === typeof namespace ? namespace : "";
                this.$eventHandlers = new Map;
                this.$winEventHandlers = new Map;
            }
            getEventNamespace(event) {
                return getNamespace(event, this.namespace);
            }
            getEventHandlerName(event, selector) {
                return getEventHandlerName(event, selector, this.namespace);
            }
            getPortals() {
                return isJqueryInstance(this.$portals) ? this.$portals : this.$doc;
            }
            $setNamespace(namespace) {
                this.namespace = namespace;
            }
            $setPortals(portals) {
                this.$portals = portals ? __SL_$__(portals) : null;
            }
            $on(event, selector, handler) {
                const onEvent = onConsistent.call(this, event, selector, handler);
                onEvent(this.$doc);
            }
            $onPortals(event, selector, handler) {
                const $dom = this.getPortals();
                const onEvent = onConsistent.call(this, event, selector, handler);
                onEvent($dom);
            }
            $onWin(event, handler) {
                this.$winEventHandlers.set(this.getEventHandlerName(event), handler);
                this.$win.on(this.getEventNamespace(event), handler);
            }
            $off(event, selector) {
                const offEvent = offConsistent.call(this, event, selector);
                offEvent(this.$doc);
            }
            $offPortals(event, selector) {
                const $dom = this.getPortals();
                const offEvent = offConsistent.call(this, event, selector);
                offEvent($dom);
            }
            $offWin(event) {
                const eventHandlerName = this.getEventHandlerName(event);
                const handler = this.$winEventHandlers.get(eventHandlerName);
                this.$win.off(this.getEventNamespace(event));
                if (handler) this.$winEventHandlers.delete(eventHandlerName);
            }
            $offAll() {
                const ns = this.getEventNamespace();
                this.$win.off(ns);
                this.$doc.off(ns);
                if (isJqueryInstance(this.$portals)) this.$portals.off(ns);
                this.$eventHandlers.clear();
                this.$winEventHandlers.clear();
            }
            prepareTransition($el, callback, endCallback) {
                function removeClass() {
                    $el.removeClass("is-transitioning");
                    $el.off("transitionend", removeClass);
                    if (endCallback) endCallback();
                }
                $el.on("transitionend", removeClass);
                $el.addClass("is-transitioning");
                $el.width();
                if ("function" === typeof callback) callback();
            }
        }
    },
    "../shared/browser/components/hbs/shared/components/modal/common.js": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
        "use strict";
        __webpack_require__.d(__webpack_exports__, {
            disablePageScroll: () => scroll_lock__WEBPACK_IMPORTED_MODULE_0__.disablePageScroll,
            enablePageScroll: () => scroll_lock__WEBPACK_IMPORTED_MODULE_0__.enablePageScroll,
            addLockableTarget: () => scroll_lock__WEBPACK_IMPORTED_MODULE_0__.addLockableTarget,
            bem: () => bem,
            DEFAULT_MODAL_ID_PRE: () => DEFAULT_MODAL_ID_PRE,
            VISIBLE: () => VISIBLE,
            HIDDEN: () => HIDDEN,
            animationClassMap: () => animationClassMap,
            visibleClassName: () => visibleClassName,
            maskClosableClass: () => maskClosableClass
        });
        var _utils_bem__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("../shared/browser/components/hbs/shared/utils/bem.js");
        var scroll_lock__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("../shared/browser/node_modules/scroll-lock/dist/scroll-lock.js");
        const bem = (0, _utils_bem__WEBPACK_IMPORTED_MODULE_1__["default"])("mp", "modal");
        const DEFAULT_MODAL_ID_PRE = "MpModal";
        const VISIBLE = "visible";
        const HIDDEN = "hidden";
        const animationClassMap = {
            visible: bem("visibleAnimation"),
            hidden: bem("notVisibleAnimation")
        };
        const visibleClassName = bem("visible");
        const maskClosableClass = bem("closable");
    },
    "../shared/browser/components/hbs/shared/components/modal/full.js": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
        "use strict";
        __webpack_require__.d(__webpack_exports__, {
            default: () => ModalWithHtml
        });
        var _base_BaseClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("../shared/browser/components/hbs/shared/base/BaseClass.js");
        var _common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("../shared/browser/components/hbs/shared/components/modal/common.js");
        let uuid = 0;
        class ModalWithHtml extends _base_BaseClass__WEBPACK_IMPORTED_MODULE_1__["default"] {
            constructor(options = {}) {
                super("mp:modal:full");
                const config = {
                    zIndex: 1e3,
                    containerClassName: "",
                    closable: true,
                    maskClosable: true,
                    bodyClassName: "",
                    content: "",
                    destroyedOnClosed: false,
                    afterClose: () => {},
                    closeCallback: () => {},
                    ...options
                };
                this.modalId = config.id || `${_common__WEBPACK_IMPORTED_MODULE_0__.DEFAULT_MODAL_ID_PRE}${++uuid}`;
                this.zIndex = config.zIndex;
                this.config = config;
                this.destroyed = false;
                this.init();
            }
            init() {
                const $modal = __SL_$__(`#${this.modalId}`);
                if ($modal.length > 0) {
                    this.$modal = $modal;
                    this.$setPortals($modal);
                    return;
                }
                this.$modal = this.buildModalHtml();
                this.$setPortals(this.$modal);
                this.bindEvents();
            }
            buildModalHtml() {
                const {zIndex, closable, containerClassName, bodyClassName, content, children} = this.config;
                const modalHtml = `\n      <div id="${this.modalId}" class="${(0, _common__WEBPACK_IMPORTED_MODULE_0__.bem)("wrapper")}">\n        <div class="${(0, 
                _common__WEBPACK_IMPORTED_MODULE_0__.bem)("mask")}"></div>\n        <div class="${(0, 
                _common__WEBPACK_IMPORTED_MODULE_0__.bem)("container")}">\n          ${closable ? `<span class="${(0, 
                _common__WEBPACK_IMPORTED_MODULE_0__.bem)("close")}">\n            <svg viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">\n              <path d="M19.1998 4.80005L4.7998 19.2" stroke="currentColor" stroke-width="2"/>\n              <path d="M4.7998 4.79995L19.1998 19.2" stroke="currentColor" stroke-width="2"/>\n            </svg>          \n          </span>` : ""}\n          <div class="${(0, 
                _common__WEBPACK_IMPORTED_MODULE_0__.bem)("body")} ${bodyClassName}">\n            ${content}\n          </div>\n        </div>\n      </div>\n    `;
                const $modal = __SL_$__(modalHtml);
                if (containerClassName) $modal.find(`.${(0, _common__WEBPACK_IMPORTED_MODULE_0__.bem)("container")}`).addClass(containerClassName);
                if (bodyClassName) $modal.find(`.${(0, _common__WEBPACK_IMPORTED_MODULE_0__.bem)("body")}`).addClass(bodyClassName);
                if (children) $modal.find(`.${(0, _common__WEBPACK_IMPORTED_MODULE_0__.bem)("body")}`).append(children);
                if (("number" === typeof zIndex || "string" === typeof zIndex) && "" !== zIndex) $modal.css("z-index", zIndex);
                return $modal;
            }
            setContent(content) {
                this.config.content = content;
                this.$modal.find(`.${(0, _common__WEBPACK_IMPORTED_MODULE_0__.bem)("body")}`).html(content);
            }
            show() {
                if (this.destroyed) {
                    this.destroyed = false;
                    this.unBindEvents = this.bindEvents();
                }
                const $modalBody = this.$modal.find(`.${(0, _common__WEBPACK_IMPORTED_MODULE_0__.bem)("body")}`);
                this.$modal.appendTo(document.body);
                (0, _common__WEBPACK_IMPORTED_MODULE_0__.disablePageScroll)($modalBody.get(0));
                this.visibleState = _common__WEBPACK_IMPORTED_MODULE_0__.VISIBLE;
                this.$modal.addClass([ _common__WEBPACK_IMPORTED_MODULE_0__.visibleClassName, _common__WEBPACK_IMPORTED_MODULE_0__.animationClassMap.visible ]).removeClass(_common__WEBPACK_IMPORTED_MODULE_0__.animationClassMap.hidden);
                this.toggleMaskClassName();
            }
            hide(force) {
                const $modalBody = this.$modal.find(`.${(0, _common__WEBPACK_IMPORTED_MODULE_0__.bem)("body")}`);
                this.visibleState = _common__WEBPACK_IMPORTED_MODULE_0__.HIDDEN;
                (0, _common__WEBPACK_IMPORTED_MODULE_0__.enablePageScroll)($modalBody.get(0));
                window.SL_EventBus.emit("global:popup:close");
                this.toggleMaskClassName();
                this.$modal.addClass(_common__WEBPACK_IMPORTED_MODULE_0__.animationClassMap.hidden).removeClass(_common__WEBPACK_IMPORTED_MODULE_0__.animationClassMap.visible);
                if (force) this.afterAnimation();
                if ("function" === typeof this.config.closeCallback) this.config.closeCallback(this.$modal);
            }
            toggleMaskClassName() {
                if (this.config.maskClosable) this.$modal.find(`.${(0, _common__WEBPACK_IMPORTED_MODULE_0__.bem)("mask")}`).toggleClass(_common__WEBPACK_IMPORTED_MODULE_0__.maskClosableClass, this.visibleState === _common__WEBPACK_IMPORTED_MODULE_0__.VISIBLE);
            }
            afterAnimation() {
                this.$modal.toggleClass(_common__WEBPACK_IMPORTED_MODULE_0__.visibleClassName, this.visibleState === _common__WEBPACK_IMPORTED_MODULE_0__.VISIBLE);
                if ("function" === typeof this.config.afterClose) this.config.afterClose(this.$modal);
                this.destroy();
            }
            destroy() {
                if (this.config.destroyedOnClosed && this.visibleState === _common__WEBPACK_IMPORTED_MODULE_0__.HIDDEN) {
                    this.$modal.remove();
                    this.detachEvents();
                    this.destroyed = true;
                }
            }
            bindEvents() {
                this.$onPortals("click", `.${(0, _common__WEBPACK_IMPORTED_MODULE_0__.bem)("close")}`, this.hide.bind(this, false));
                if (this.config.maskClosable) this.$onPortals("click", `.${(0, _common__WEBPACK_IMPORTED_MODULE_0__.bem)("mask")}`, this.hide.bind(this, false));
                this.$onPortals("animationend", `.${(0, _common__WEBPACK_IMPORTED_MODULE_0__.bem)("container")}`, this.afterAnimation.bind(this));
            }
            detachEvents() {
                this.$offAll();
            }
        }
    },
    "../shared/browser/components/hbs/shared/components/modal/index.js": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
        "use strict";
        __webpack_require__.d(__webpack_exports__, {
            ModalWithHtml: () => _full__WEBPACK_IMPORTED_MODULE_1__["default"]
        });
        __webpack_require__("../shared/browser/components/hbs/shared/components/modal/lite.js");
        var _full__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("../shared/browser/components/hbs/shared/components/modal/full.js");
    },
    "../shared/browser/components/hbs/shared/components/modal/lite.js": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
        "use strict";
        __webpack_require__.d(__webpack_exports__, {
            default: () => Modal
        });
        var _utils_state_selector__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("../shared/browser/utils/state-selector.js");
        var _common__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("../shared/browser/components/hbs/shared/components/modal/common.js");
        class Modal {
            constructor({modalId = ""} = {}) {
                this.modalId = `${_common__WEBPACK_IMPORTED_MODULE_1__.DEFAULT_MODAL_ID_PRE}${modalId}`;
                this.$modal = __SL_$__(`#${this.modalId}`);
                this.$modalBody = this.$modal.find(`.${(0, _common__WEBPACK_IMPORTED_MODULE_1__.bem)("body")}`);
                this.$modalContainer = this.$modal.find(`.${(0, _common__WEBPACK_IMPORTED_MODULE_1__.bem)("container")}`);
                this.isMobile = _utils_state_selector__WEBPACK_IMPORTED_MODULE_0__.SL_State.get("request.is_mobile");
                this.maskClosable = this.$modal.data("maskclosable");
                this.visibleState = _common__WEBPACK_IMPORTED_MODULE_1__.HIDDEN;
                this.eventsBinded = false;
                this.init();
            }
            init() {
                if (!this.eventsBinded) {
                    this.bindEvents();
                    this.eventsBinded = true;
                }
            }
            show() {
                this.visibleState = _common__WEBPACK_IMPORTED_MODULE_1__.VISIBLE;
                (0, _common__WEBPACK_IMPORTED_MODULE_1__.disablePageScroll)(this.$modalBody.get(0));
                this.$modal.addClass([ _common__WEBPACK_IMPORTED_MODULE_1__.visibleClassName, _common__WEBPACK_IMPORTED_MODULE_1__.animationClassMap.visible ]).removeClass(_common__WEBPACK_IMPORTED_MODULE_1__.animationClassMap.hidden);
                this.toggleMaskClassName();
            }
            hide(force) {
                this.visibleState = _common__WEBPACK_IMPORTED_MODULE_1__.HIDDEN;
                (0, _common__WEBPACK_IMPORTED_MODULE_1__.enablePageScroll)(this.$modalBody.get(0));
                this.toggleMaskClassName();
                this.$modal.addClass(_common__WEBPACK_IMPORTED_MODULE_1__.animationClassMap.hidden).removeClass(_common__WEBPACK_IMPORTED_MODULE_1__.animationClassMap.visible);
                if (force) this.afterAnimation();
            }
            toggleMaskClassName() {
                if (this.maskClosable) this.$modal.find(`.${(0, _common__WEBPACK_IMPORTED_MODULE_1__.bem)("mask")}`).toggleClass(_common__WEBPACK_IMPORTED_MODULE_1__.maskClosableClass, this.visibleState === _common__WEBPACK_IMPORTED_MODULE_1__.VISIBLE);
            }
            afterAnimation() {
                this.$modal.toggleClass(_common__WEBPACK_IMPORTED_MODULE_1__.visibleClassName, this.visibleState === _common__WEBPACK_IMPORTED_MODULE_1__.VISIBLE);
            }
            bindEvents() {
                this.$modal.on("click", `.${(0, _common__WEBPACK_IMPORTED_MODULE_1__.bem)("close")}`, this.hide.bind(this, false));
                if (this.isMobile) this.$modal.on("touchstart", `.${(0, _common__WEBPACK_IMPORTED_MODULE_1__.bem)("close")}`, this.hide.bind(this, false));
                if (this.maskClosable) this.$modal.on("click", `.${(0, _common__WEBPACK_IMPORTED_MODULE_1__.bem)("mask")}`, this.hide.bind(this, false));
                this.$modalContainer.on("animationend", this.afterAnimation.bind(this));
            }
        }
    },
    "../shared/browser/components/hbs/shared/components/toast/index.js": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
        "use strict";
        __webpack_require__.d(__webpack_exports__, {
            default: () => _yy_sl_theme_shared_components_hbs_shared_components_toast_toast__WEBPACK_IMPORTED_MODULE_0__["default"]
        });
        var _yy_sl_theme_shared_components_hbs_shared_components_toast_toast__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("../shared/browser/components/hbs/shared/components/toast/toast.js");
        __webpack_require__("../shared/browser/components/hbs/shared/components/toast/loading.js");
    },
    "../shared/browser/components/hbs/shared/components/toast/loading.js": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
        "use strict";
        __webpack_require__.d(__webpack_exports__, {
            default: () => Loading
        });
        var _yy_sl_theme_shared_components_hbs_shared_components_toast_toast__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("../shared/browser/components/hbs/shared/components/toast/toast.js");
        const OPTION_TARGET = "body";
        class Loading {
            constructor(options = {}) {
                this.options = {
                    duration: 1500,
                    fullscreen: !options.target || options.target === OPTION_TARGET,
                    ...options
                };
                this.$loading = null;
                this.$target = null;
                this.timer = null;
                this.init();
            }
            init() {
                const template = (0, _yy_sl_theme_shared_components_hbs_shared_components_toast_toast__WEBPACK_IMPORTED_MODULE_0__.getTemplate)(this.options, _yy_sl_theme_shared_components_hbs_shared_components_toast_toast__WEBPACK_IMPORTED_MODULE_0__.LOADING);
                this.$target = __SL_$__(this.options.target || document.body);
                this.$loading = __SL_$__(template);
            }
            open() {
                const {$target} = this;
                const originPosition = $target.css("position");
                if ("static" === originPosition) $target.css("position", "relative");
                this.$loading.appendTo($target).removeClass(_yy_sl_theme_shared_components_hbs_shared_components_toast_toast__WEBPACK_IMPORTED_MODULE_0__.HIDDEN_CLASSNAME);
                if (this.options.duration > 0) this.timer = setTimeout(this.close.bind(this), this.options.duration);
            }
            close() {
                if (this.timer) {
                    clearTimeout(this.timer);
                    this.timer = null;
                }
                this.$loading.remove();
                this.$loading = null;
                this.$target.css("position", "");
            }
        }
    },
    "../shared/browser/components/hbs/shared/components/toast/toast.js": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
        "use strict";
        __webpack_require__.d(__webpack_exports__, {
            LOADING: () => LOADING,
            getTemplate: () => getTemplate,
            HIDDEN_CLASSNAME: () => HIDDEN_CLASSNAME,
            default: () => __WEBPACK_DEFAULT_EXPORT__
        });
        const LOADING = "loading";
        function whichAnimationEndEvent() {
            let t, el = document.createElement("fakeelement");
            const animations = {
                animation: "animationend",
                OAnimation: "oAnimationEnd",
                MozAnimation: "animationend",
                WebkitAnimation: "webkitAnimationEnd"
            };
            for (t in animations) if (void 0 !== el.style[t]) {
                console.log("anim...");
                return animations[t];
            }
        }
        const getTemplate = (options, type = "default") => {
            const loadingColor = options.loadingColor || "black";
            const templates = {
                [LOADING]: `\n      <div class="mp-toast mp-toast--loading mp-toast--loading-style2 mp-toast__hidden ${options.fullscreen && "mp-toast__fullscreen"} ${options.className || ""}">\n        <div class="mp-loading mp-loading--circular mp-toast__loading">\n          <span class="mp-loading__spinner mp-loading__spinner--circular">\n            <svg class="mp-loading__circular" width="20" height="20" viewBox="0 0 20 20" fill="none" xmlns="http://www.w3.org/2000/svg">\n              <path d="M18.3333 9.99999C18.3333 14.6024 14.6024 18.3333 10 18.3333C5.39762 18.3333 1.66666 14.6024 1.66666 9.99999C1.66666 5.39762 5.39762 1.66666 10 1.66666" stroke="${loadingColor}" stroke-width="2.5" stroke-linecap="round"/>\n            </svg>\n          </span>\n        </div>\n        <div class="mp-toast__content mp-toast__text">${options.content}</div>\n      </div>\n    `,
                showSuccess: `\n      <div class="mp-toast mp-toast--loading mp-toast--success-container mp-toast--loading-style2 ${options.className || ""}">\n        <div class="mp-loading mp-loading--circular mp-toast__loading">\n          <div class="mp-loading__success-box">\n            <svg class="arrow" width="20" height="20" viewBox="0 0 20 20">\n              <circle cx="10" cy="10" r="8.75" fill="none" stroke="${loadingColor}" stroke-width="2.5" class="circle"></circle>\n              <polyline points="4.5,10 9,14 14.5,6.5" fill="none" stroke="${loadingColor}" stroke-width="2.5" class="hookmark" stroke-linecap="round" stroke-linejoin="round"\n              ></polyline>\n            </svg>\n          </div>\n        </div>\n      </div>\n    `,
                default: `\n      <div class="comment-toast mp-toast mp-toast__hidden ${options.fullscreen && "mp-toast__fullscreen"} ${options.className || ""}">\n        <div class="mp-toast__content mp-toast__inner">${options.content}</div>\n      </div>\n    `
            };
            return templates[type];
        };
        const OPTION_TARGET = "body";
        const defaultOptions = {
            duration: 1500,
            content: "",
            target: OPTION_TARGET
        };
        const HIDDEN_CLASSNAME = "mp-toast__hidden";
        const CONTENT_CLASSNAME = "mp-toast__content";
        class Toast {
            constructor(options = {}) {
                this.options = {
                    ...defaultOptions,
                    fullscreen: !options.target || options.target === OPTION_TARGET,
                    ...options
                };
                this.$toast = null;
                this.$target = null;
                this.timer = null;
                this.instance = null;
                this.render();
            }
            static init(options) {
                return this.getSingleton(options);
            }
            static loading(options) {
                return this.getSingleton(options, LOADING);
            }
            static getSingleton(options = {}, type) {
                let {instance} = this;
                if (!instance) {
                    instance = new Toast(options);
                    this.instance = instance;
                }
                if (instance.type !== type) {
                    instance.type = type;
                    if (instance.$toast) instance.$toast.remove();
                    instance.render();
                }
                instance.open(options.content || "", options.duration);
                return instance;
            }
            render() {
                const template = getTemplate(this.options, this.type || this.options.type);
                this.$toast = __SL_$__(template);
                this.$target = __SL_$__(this.options.target);
                const {$target} = this;
                if ("static" === $target.css("position")) $target.css("position", "relative");
                $target.append(this.$toast);
            }
            open(content = "", duration) {
                const {options, $target} = this;
                if ("static" === $target.css("position")) $target.css("position", "relative");
                if (this.timer) {
                    clearTimeout(this.timer);
                    this.timer = null;
                }
                const {$toast} = this;
                const $text = $toast.find(`.${CONTENT_CLASSNAME}`);
                $text.html(content || this.options.content || "");
                $toast.removeClass(HIDDEN_CLASSNAME);
                const durationTime = "number" === typeof duration ? duration : options.duration;
                if (0 !== durationTime) this.timer = setTimeout(this.close.bind(this), durationTime);
            }
            close() {
                if (this.timer) {
                    clearTimeout(this.timer);
                    this.timer = null;
                }
                this.$toast.addClass(HIDDEN_CLASSNAME);
                if ("function" === typeof this.options.onClose) this.options.onClose();
                this.$target.css("position", "");
            }
            showSuccessAni(options = {}, callback) {
                const {$target} = this;
                this.close();
                const buttonTxt = $target.find(".pdp_button_text");
                buttonTxt.addClass("showSuccessAni");
                const successAniTemp = getTemplate(options, "showSuccess");
                $target.append(successAniTemp);
                const hookWrapDom = $target.find(".mp-toast--success-container");
                const hookNode = $target.find(".hookmark");
                if (hookNode.length > 0) {
                    const animationEnd = whichAnimationEndEvent();
                    hookNode.one(animationEnd, (function(event) {
                        if (callback && "function" === typeof callback) setTimeout((() => {
                            hookWrapDom.remove();
                            buttonTxt.removeClass("showSuccessAni");
                            callback(event, $target);
                        }), options.delay || 0);
                    }));
                }
            }
        }
        Toast.type = null;
        const __WEBPACK_DEFAULT_EXPORT__ = Toast;
    },
    "../shared/browser/components/hbs/shared/components/topDrawer/const.js": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
        "use strict";
        __webpack_require__.d(__webpack_exports__, {
            DRAWER_EVENT_NAME: () => DRAWER_EVENT_NAME,
            DRAWER_CALLBACK_EVENT_NAME: () => DRAWER_CALLBACK_EVENT_NAME,
            DRAWER_OPERATORS: () => DRAWER_OPERATORS
        });
        const DRAWER_EVENT_NAME = "stage:topDrawer";
        const DRAWER_CALLBACK_EVENT_NAME = "stage:topDrawer:callback";
        const DRAWER_OPERATORS = {
            OPEN: "open",
            CLOSE: "close"
        };
    },
    "../shared/browser/components/hbs/shared/components/topDrawer/index.js": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
        "use strict";
        __webpack_require__.d(__webpack_exports__, {
            default: () => __WEBPACK_DEFAULT_EXPORT__
        });
        var _base_BaseClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("../shared/browser/components/hbs/shared/base/BaseClass.js");
        var _const__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("../shared/browser/components/hbs/shared/components/topDrawer/const.js");
        const animationTime = 300;
        class TopDrawer extends _base_BaseClass__WEBPACK_IMPORTED_MODULE_1__["default"] {
            constructor(id, options = {}) {
                super();
                const {closeBtnSelector = ".j-top-drawer-close"} = options;
                this.config = {
                    namespace: `stage:global-top-drawer_id:${id}`
                };
                this.classes = {
                    active: "top-drawer--open",
                    fullscreen: "top-drawer--full"
                };
                this.selector = {
                    drawerContainer: ".stage-top-drawer",
                    drawerContent: ".top-drawer__container",
                    closeButton: closeBtnSelector
                };
                this.attr = {
                    openDrawer: "data-open_topDrawer"
                };
                this.id = id;
                this.options = options;
                this.closeFlag = true;
                this.$setNamespace(this.config.namespace);
                this.init();
            }
            init() {
                this.openTimer = null;
                this.closeTimer = null;
                this.bindClickMask();
                this.listenEvent();
                this.bindClickClose();
                this.bindClickOutside();
                this.setupFullScreen();
                this.stopPropagation();
            }
            get isOpen() {
                return this.$root.hasClass(this.classes.active);
            }
            get $body() {
                return __SL_$__("body");
            }
            get $root() {
                return __SL_$__(`#${this.id}`);
            }
            setupFullScreen() {
                if (this.options.fullScreen) this.$root.addClass(this.classes.fullscreen);
            }
            open({disablePageScroll = false} = {}) {
                if (this.isOpen) return;
                this.ignoreClickOutside();
                clearTimeout(this.closeTimer);
                this.$root.css("display", "block");
                this.openTimer = setTimeout((() => {
                    if (!this.options.fullScreen) this.$root.find(".top-drawer__mask").hide();
                    this.$root.addClass(this.classes.active);
                    if (this.options.fullScreen || disablePageScroll) this.disablePageScroll();
                }), 0);
            }
            close() {
                this.$root.removeClass(this.classes.active);
                this.enablePageScroll();
                this.closeTimer = setTimeout((() => {
                    this.$root.css("display", "none");
                }), animationTime);
            }
            ignoreClickOutside() {
                this.closeFlag = false;
                setTimeout((() => {
                    this.closeFlag = true;
                }), 0);
            }
            bindClickOutside() {
                this.$on("click", (e => {
                    if (!this.closeFlag) return;
                    const $container = __SL_$__(e.target).closest(`#${this.id}`);
                    const isOutside = 0 === $container.length;
                    if (this.isOpen && isOutside) window.SL_EventBus.emit(_const__WEBPACK_IMPORTED_MODULE_0__.DRAWER_EVENT_NAME, {
                        operator: _const__WEBPACK_IMPORTED_MODULE_0__.DRAWER_OPERATORS.CLOSE,
                        id: this.id
                    });
                }));
            }
            stopPropagation() {
                this.$on("click", `#${this.id}`, (e => {
                    e.stopPropagation();
                }));
            }
            bindClickClose() {
                this.$on("click", `#${this.id} ${this.selector.closeButton}`, (() => {
                    this.close();
                }));
            }
            bindClickMask() {
                this.$on("click", `#${this.id} .top-drawer__mask`, (() => {
                    this.close();
                }));
            }
            listenEvent() {
                window.SL_EventBus.on(_const__WEBPACK_IMPORTED_MODULE_0__.DRAWER_EVENT_NAME, (res => {
                    const {id, operator, option = {}} = res;
                    if (id !== this.id) return;
                    if (operator === _const__WEBPACK_IMPORTED_MODULE_0__.DRAWER_OPERATORS.OPEN) this.open(option);
                    if (operator === _const__WEBPACK_IMPORTED_MODULE_0__.DRAWER_OPERATORS.CLOSE) this.close();
                    window.SL_EventBus.emit(_const__WEBPACK_IMPORTED_MODULE_0__.DRAWER_CALLBACK_EVENT_NAME, {
                        status: operator,
                        id
                    });
                }));
            }
            disablePageScroll() {
                const openDrawers = this.$body.attr(this.attr.openDrawer);
                const list = openDrawers ? openDrawers.split(" ") : [];
                if (!list.includes(this.id)) list.push(this.id);
                this.$body.attr(this.attr.openDrawer, list.join(" "));
            }
            enablePageScroll() {
                const openDrawers = this.$body.attr(this.attr.openDrawer);
                const list = openDrawers ? openDrawers.split(" ") : [];
                const index = list.indexOf(this.id);
                if (index >= 0) list.splice(index, 1);
                if (list.length) this.$body.attr(this.attr.openDrawer, list.join(" ")); else this.$body.removeAttr(this.attr.openDrawer);
            }
            setMaxHeight(height) {
                this.$root.find(this.selector.drawerContent).css("max-height", height);
            }
            setWidth(width) {
                this.$root.find(this.selector.drawerContent).css("width", width);
            }
        }
        const __WEBPACK_DEFAULT_EXPORT__ = TopDrawer;
    },
    "../shared/browser/components/hbs/shared/utils/bem.js": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
        "use strict";
        __webpack_require__.d(__webpack_exports__, {
            default: () => createNamespace
        });
        function gen(name, mods) {
            if (!mods) return "";
            if ("string" === typeof mods) return ` ${name}--${mods}`;
            if (Array.isArray(mods)) return mods.reduce(((ret, item) => ret + gen(name, item)), "");
            return Object.keys(mods).reduce(((ret, key) => ret + (mods[key] ? gen(name, key) : "")), "");
        }
        function createBEM(name) {
            return (el, mods) => {
                if (el && "string" !== typeof el) {
                    mods = el;
                    el = "";
                }
                el = el ? `${name}__${el}` : name;
                return `${el}${gen(el, mods)}`;
            };
        }
        function createNamespace(commonName, name) {
            name = `${commonName}-${name}`;
            return createBEM(name);
        }
    },
    "../shared/browser/components/hbs/shared/utils/getYouTubeCover.js": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
        "use strict";
        __webpack_require__.d(__webpack_exports__, {
            default: () => __WEBPACK_DEFAULT_EXPORT__
        });
        const getYouTubeCover = videoResource => {
            if ("string" !== typeof videoResource) return null;
            const youTubeRegex = /^(?:https?:\/\/)?(?:www\.)?(?:youtu\.be\/|youtube\.com\/(?:embed\/|v\/|watch\?v=|watch\?.+&v=))((\w|-){11})(?:\S+)?$/;
            const getYouTubeIdByVideoUrl = url => {
                const matches = url && url.match(youTubeRegex) || [];
                return matches[1];
            };
            const getVideoCover = videoId => {
                const coverUrlPrefix = `https://i.ytimg.com/vi/${videoId}`;
                return {
                    maxQuality: `${coverUrlPrefix}/maxresdefault.jpg`,
                    aboveMiddle: `${coverUrlPrefix}/sddefault.jpg`,
                    middle: `${coverUrlPrefix}/mqdefault.jpg`,
                    lowerMiddle: `${coverUrlPrefix}/hqdefault.jpg`,
                    minQuality: `${coverUrlPrefix}/default.jpg`,
                    videoId
                };
            };
            if (-1 !== videoResource.indexOf("www.youtube.com")) {
                const videoId = getYouTubeIdByVideoUrl(videoResource);
                return getVideoCover(videoId);
            }
            return getVideoCover(videoResource);
        };
        const __WEBPACK_DEFAULT_EXPORT__ = getYouTubeCover;
    },
    "../shared/browser/components/hbs/shared/utils/imgUrl.js": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
        "use strict";
        __webpack_require__.d(__webpack_exports__, {
            default: () => imgUrl
        });
        function isS3FileUrl(url) {
            return /\.cloudfront\./.test(url) || /https:\/\/img.myshopline.com/.test(url) || /https:\/\/img-preview.myshopline.com/.test(url);
        }
        function imgUrl(url, options) {
            const {width, scale} = options;
            if (!width) return url;
            if (!isS3FileUrl(url)) return url;
            let paramWidth = width;
            if ("number" === typeof scale && scale > 1) paramWidth = width * scale;
            const clipper = `_${paramWidth || ""}x`;
            const slice = url.split("/");
            const filename = slice.pop() || "";
            const dirname = slice.join("/");
            const lastDotIndex = filename.lastIndexOf(".");
            if (-1 === lastDotIndex) return `${dirname}/${filename}${clipper}`;
            return `${dirname}/${filename.slice(0, lastDotIndex)}${clipper}${filename.slice(lastDotIndex)}`;
        }
    },
    "../shared/browser/components/paypal/config.js": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
        "use strict";
        __webpack_require__.d(__webpack_exports__, {
            getPaypalKey: () => getPaypalKey,
            initialData: () => initialData
        });
        var js_cookie__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("../shared/browser/node_modules/js-cookie/src/js.cookie.js");
        var js_cookie__WEBPACK_IMPORTED_MODULE_0___default = __webpack_require__.n(js_cookie__WEBPACK_IMPORTED_MODULE_0__);
        var _utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("../shared/browser/components/paypal/utils/index.js");
        const SLClientKey = {
            DEV: "AZ-NwCL9u55EJ7x0kR61XcKTCZtMuel8VBMG1dx4T_iJzABABfvw13UeXJAYHOscUNHHsIjLNLoh-pYv",
            PROD: "AYVtr8kMzEyRCw725vQM_-hheFyo1FuWeaup4KPSvU1gg44L-NG5e2PNcwGnMo2MLCzGRg4eVHJhuqBP"
        };
        const slPublicKey = _utils__WEBPACK_IMPORTED_MODULE_1__.isProd ? SLClientKey.PROD : SLClientKey.DEV;
        const getPaypalKey = paypalConfig => {
            const merchantKey = (0, _utils__WEBPACK_IMPORTED_MODULE_1__.canTrustedPaypalConfig)(paypalConfig) ? paypalConfig.clientId : null;
            return {
                key: merchantKey || slPublicKey,
                expand: {
                    currency: js_cookie__WEBPACK_IMPORTED_MODULE_0___default().get("currency_code") || "USD"
                }
            };
        };
        const Env = {
            Dev: "dev",
            Prod: "prod"
        };
        const SDKName = {
            paypalSPB: "paypalSPB"
        };
        const initialData = {
            env: _utils__WEBPACK_IMPORTED_MODULE_1__.isProd ? Env.Prod : Env.Dev,
            sdkName: SDKName.paypalSPB,
            domId: "shopline-paypal",
            styleOption: {
                commonStyle: {
                    paypalSPBStyle: {
                        layout: "horizontal",
                        color: "gold",
                        shape: "rect",
                        label: "paypal",
                        tagline: false,
                        height: 55
                    }
                }
            },
            initTimeout: 5e3,
            beforeCreateOrder: async instance => ({
                products: instance.products
            })
        };
    },
    "../shared/browser/components/paypal/index.js": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
        "use strict";
        __webpack_require__.d(__webpack_exports__, {
            default: () => __WEBPACK_DEFAULT_EXPORT__
        });
        var _payment_gateway_sdk__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("../shared/browser/node_modules/@payment/gateway-sdk/dist/index.js");
        var _payment_gateway_sdk__WEBPACK_IMPORTED_MODULE_0___default = __webpack_require__.n(_payment_gateway_sdk__WEBPACK_IMPORTED_MODULE_0__);
        var _yy_sl_theme_shared_utils_url_adaptor__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("../shared/browser/utils/url-adaptor.js");
        var _yy_sl_theme_shared_utils_logger__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("../shared/browser/utils/logger/index.js");
        var lodash_get__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("../shared/browser/node_modules/lodash/get.js");
        var lodash_get__WEBPACK_IMPORTED_MODULE_3___default = __webpack_require__.n(lodash_get__WEBPACK_IMPORTED_MODULE_3__);
        var _utils_syntax_patch__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__("../shared/browser/utils/syntax-patch.js");
        var _config__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__("../shared/browser/components/paypal/config.js");
        var _services__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__("../shared/browser/components/paypal/services.js");
        var _utils__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__("../shared/browser/components/paypal/utils/index.js");
        var _utils_checkout__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__("../shared/browser/utils/checkout.js");
        var _utils_load_script__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__("../shared/browser/utils/load-script.js");
        var _utils_tradeReport__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__("../shared/browser/utils/tradeReport/index.js");
        var _utils_tradeReport_const__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__("../shared/browser/utils/tradeReport/const.js");
        var _utils_event_bus__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__("../shared/browser/utils/event-bus.js");
        var _utils_dataAccessor__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__("../shared/browser/utils/dataAccessor.js");
        const {PAYPAL_CHECKOUT} = _utils_tradeReport_const__WEBPACK_IMPORTED_MODULE_11__.HD_EVENT_NAME;
        const logger = _yy_sl_theme_shared_utils_logger__WEBPACK_IMPORTED_MODULE_2__["default"].pipeOwner({
            owner: "PayPal",
            onTag: key => {
                switch (key) {
                  case "abandonedSeq":
                  case "code":
                    return true;

                  default:
                    return false;
                }
            }
        });
        const splitter = ({k, v}) => v ? `[${k}: ${v}]` : "";
        function getPaypalSDK() {
            return _payment_gateway_sdk__WEBPACK_IMPORTED_MODULE_0___default();
        }
        let PayPalReturnUrl = window.location.href;
        const dynamicCallBackName = "rememberedCb";
        const PayPalRememberedScript = callbackName => `https://www.paypal.com/checkoutnow/remembered?callback=${callbackName}`;
        const noop = () => {};
        const isFn = object => "function" === typeof object;
        const dynamicRemembered = {
            loadingStatus: 0,
            info: {},
            cbFnList: []
        };
        let renderObserver;
        class PayPalSmartPayButton {
            constructor(config) {
                const btnShape = "rounded" === lodash_get__WEBPACK_IMPORTED_MODULE_3___default()(document, "body.dataset.button_style", void 0) ? "pill" : "rect";
                this.loggerPrefix = `[PayPal][当前dom为:${config.domId}]`;
                this.payMode = config.payMode || "continue";
                this.config = {
                    ...this.config,
                    ..._config__WEBPACK_IMPORTED_MODULE_5__.initialData,
                    timeout: {
                        switch: false
                    },
                    commit: (0, _utils__WEBPACK_IMPORTED_MODULE_7__.getConfigCommit)(config),
                    disableFunding: config.disableFunding,
                    domId: config.domId,
                    pageType: config.pageType,
                    stage: config.stage,
                    needReport: config.needReport,
                    reportParamsExt: config.reportParamsExt,
                    styleOption: {
                        commonStyle: {
                            paypalSPBStyle: {
                                ..._config__WEBPACK_IMPORTED_MODULE_5__.initialData.styleOption.commonStyle.paypalSPBStyle,
                                ...config.paypalStyle || {},
                                height: this.getDomHeight(config.height),
                                shape: btnShape
                            }
                        }
                    },
                    paypalScriptParams: config.scriptParams || {}
                };
                const {switch: timeoutSwitch, delay} = (0, _utils_syntax_patch__WEBPACK_IMPORTED_MODULE_4__.nullishCoalescingOperator)(config.timeout, {});
                if (timeoutSwitch) {
                    this.config.timeout.switch = timeoutSwitch;
                    this.config.timeout.delay = delay && "number" === typeof delay ? delay : _config__WEBPACK_IMPORTED_MODULE_5__.initialData.initTimeout;
                }
                this.wrapperClass = config.wrapperClass;
                this.wrapperStyle = config.wrapperStyle;
                this.style = {
                    height: this.getDomHeight(config.height)
                };
                this.products = null;
                this.dynamic = config.dynamic;
                this.jsonpCallback = this.jsonpCallback.bind(this);
                this.onToast = isFn(config.onToast) ? config.onToast : noop;
                this.onDynamicNotify = isFn(config.onDynamicNotify) ? config.onDynamicNotify : noop;
                this.onInit = isFn(config.onInit) ? config.onInit : noop;
                this.beforeCreateOrder = isFn(config.beforeCreateOrder) ? config.beforeCreateOrder : _config__WEBPACK_IMPORTED_MODULE_5__.initialData.beforeCreateOrder;
                this.createOrder = isFn(config.createOrder) ? config.createOrder : noop;
                this.beforeContinue = isFn(config.beforeContinue) ? config.beforeContinue : noop;
                this.onError = isFn(config.onError) ? config.onError : noop;
                this.payNowMode = this.payNowMode.bind(this);
                this.continueMode = this.continueMode.bind(this);
                this.onCancel = isFn(config.onCancel) ? config.onCancel : noop;
                this.configBeforeRender = isFn(config.beforeRender) ? config.beforeRender : noop;
                this.afterRender = isFn(config.afterRender) ? config.afterRender : noop;
                this.preparePayParams = null;
            }
            getDomHeight(height = 45) {
                if (height > 55) {
                    logger.error(`${this.loggerPrefix}[按钮高度传入异常]`, {
                        height
                    });
                    return 55;
                }
                if (height < 25) {
                    logger.error(`${this.loggerPrefix}[按钮高度传入异常]`, {
                        height
                    });
                    return 25;
                }
                return height;
            }
            get isContinueMode() {
                return "continue" === this.payMode;
            }
            get isVerticalLayout() {
                return "vertical" === this.config.styleOption.commonStyle.paypalSPBStyle.layout;
            }
            transProducts(products) {
                return products.map((item => ({
                    productNum: item.num,
                    productSeq: item.spuId,
                    productSku: item.skuId,
                    productPrice: item.price
                })));
            }
            onPayPalError(error, type) {
                const message = error && error.message;
                if ("caught" !== message) {
                    logger.error(`${this.loggerPrefix}[onError]${splitter({
                        k: "code",
                        v: error && error.code
                    })}${splitter({
                        k: "message",
                        v: message || error && error.msg
                    })}`, {
                        ...error,
                        code: error && error.code,
                        message
                    });
                    const text = (0, _utils__WEBPACK_IMPORTED_MODULE_7__.conversion)(error);
                    this.onToast({
                        message: text
                    });
                }
                this.onError(error, type);
            }
            async continueMode() {
                let dataReportReq;
                try {
                    dataReportReq = (0, _utils_tradeReport__WEBPACK_IMPORTED_MODULE_10__.setPayPalReportReq)({
                        products: this.products,
                        needReport: this.config.needReport,
                        extra: this.config.reportParamsExt
                    });
                } catch (error) {
                    this.onPayPalError(error);
                }
                const {originUrl, query} = (0, _yy_sl_theme_shared_utils_url_adaptor__WEBPACK_IMPORTED_MODULE_1__.adaptor)(this.createOrderParams.returnUrl);
                const {engineType, preview, themeId, ignoreRedirect} = query;
                const {url: wrapperUrl} = (0, _yy_sl_theme_shared_utils_url_adaptor__WEBPACK_IMPORTED_MODULE_1__.adaptor)(originUrl, {
                    query: {
                        engineType,
                        preview,
                        themeId,
                        ignoreRedirect
                    },
                    fullQuery: false
                });
                const {manualCapture, orderFrom = null} = (0, _utils__WEBPACK_IMPORTED_MODULE_7__.getPayPalServerConfig)();
                const params = {
                    payMethod: "Paypal",
                    dataReportReq,
                    abandonedOrderInfo: this.preparePayParams,
                    returnUrl: wrapperUrl,
                    extChannelInfo: {
                        manualCapture
                    },
                    orderFrom: (0, _utils_dataAccessor__WEBPACK_IMPORTED_MODULE_13__.getSyncData)("orderFrom") || orderFrom
                };
                try {
                    const isDismissParams = [ "orderFrom" ].some((key => !params[key] && 0 !== params[key]));
                    if (isDismissParams) logger.info("[预支付请求参数缺失，请检查]", {
                        ...params,
                        abandonedSeq: this.abandonedSeq
                    });
                    const {data = {}} = await (0, _services__WEBPACK_IMPORTED_MODULE_6__.preparePay)(params);
                    const {chDealId, returnUrl: continueRedirectUrl} = data;
                    _utils_event_bus__WEBPACK_IMPORTED_MODULE_12__.SL_EventBus.emit(PAYPAL_CHECKOUT, {
                        data: {
                            event_status: chDealId ? 1 : 0,
                            stage: (0, _utils_syntax_patch__WEBPACK_IMPORTED_MODULE_4__.nullishCoalescingOperator)(this.config.stage, this.config.pageType),
                            product: this.products
                        }
                    });
                    PayPalReturnUrl = continueRedirectUrl;
                    logger.debug(`${this.loggerPrefix}[唤起弹窗成功][createOrder][拿chDealId][${chDealId ? "成功" : "失败"}]`, chDealId ? {
                        ...data
                    } : null);
                    return chDealId;
                } catch (error) {
                    logger.debug(`${this.loggerPrefix}[唤起弹窗成功][createOrder][拿chDealId][失败]${splitter({
                        k: "code",
                        v: error && error.code
                    })}${splitter({
                        k: "message",
                        v: error && error.msg || error && error.message
                    })}`, {
                        ...error
                    });
                    _utils_event_bus__WEBPACK_IMPORTED_MODULE_12__.SL_EventBus.emit(PAYPAL_CHECKOUT, {
                        data: {
                            event_status: 0,
                            stage: (0, _utils_syntax_patch__WEBPACK_IMPORTED_MODULE_4__.nullishCoalescingOperator)(this.config.stage, this.config.pageType),
                            product: this.products
                        }
                    });
                }
            }
            async payNowMode() {
                try {
                    const {chDealId, returnUrl: payNowReturnUrl} = await this.createOrder(this.createOrderParams);
                    PayPalReturnUrl = payNowReturnUrl;
                    logger.debug(`${this.loggerPrefix}[唤起弹窗成功][createOrder][拿chDealId][${chDealId ? "成功" : "失败"}]`, chDealId ? {
                        chDealId,
                        returnUrl: payNowReturnUrl
                    } : null);
                    return chDealId;
                } catch (error) {
                    const text = (0, _utils__WEBPACK_IMPORTED_MODULE_7__.conversion)(error);
                    this.onToast({
                        message: text
                    });
                    this.onPayPalError(error);
                    return Promise.reject({
                        message: text
                    });
                }
            }
            async onUserCancel(data, {redirect}) {
                logger.info(`${this.loggerPrefix}[用户关闭PayPal弹窗]`, {
                    abandonedSeq: this.abandonedSeq
                });
                const redirectUrl = await this.onCancel(data);
                if (redirectUrl) redirect(redirectUrl);
            }
            async onCurrentInit(data, actions) {
                if (this.initTimer) clearTimeout(this.initTimer);
                this.initActions = actions;
                logger.debug(`${this.loggerPrefix}[初始化成功]`);
                this.onInit(data, actions);
            }
            async onClick(options, actions) {
                const {fundingSource} = options || {};
                logger.info(`${this.loggerPrefix}[按钮点击][点击了${fundingSource}]`);
                let orderParams;
                const isAsync = "[object AsyncFunction]" === Object.prototype.toString.call(this.beforeCreateOrder);
                if (isAsync) orderParams = await this.beforeCreateOrder(this).catch((error => {
                    this.onPayPalError(error);
                    return actions.reject();
                })); else orderParams = await this.beforeCreateOrder(this);
                logger.debug(`${this.loggerPrefix}[准备唤起弹窗][beforeCreateOrder][参数拼接完成]`);
                if (orderParams && false === orderParams.valid) return actions.reject();
                this.initActions.enable();
                orderParams = orderParams || {
                    products: this.products
                };
                this.createOrderParams = orderParams;
                const {products, ...extra} = orderParams;
                if (!products || products.length <= 0) {
                    this.onPayPalError({
                        message: `products empty, request aborted: ${products}`
                    });
                    return actions.reject();
                }
                if (!this.isContinueMode) return;
                this.products = products;
                try {
                    const {url: returnUrl, needLogin, abandonedInfo} = await _utils_checkout__WEBPACK_IMPORTED_MODULE_8__["default"].save(products, {
                        ...extra,
                        stage: this.config.stage,
                        query: {
                            ...extra.query,
                            spb: true
                        }
                    });
                    this.createOrderParams.returnUrl = returnUrl;
                    this.preparePayParams = abandonedInfo;
                    if (needLogin) {
                        window.location.href = returnUrl;
                        return actions.reject();
                    }
                } catch (e) {
                    return actions.reject();
                }
            }
            async onCreateOrder() {
                logger.debug(`${this.loggerPrefix}[唤起弹窗成功][createOrder][拿chDealId]`);
                try {
                    if (this.isContinueMode) return this.continueMode();
                    return this.payNowMode();
                } catch {
                    return "";
                }
            }
            get abandonedSeq() {
                if (this.isContinueMode) return this.preparePayParams && this.preparePayParams.seq;
                return lodash_get__WEBPACK_IMPORTED_MODULE_3___default()(this.createOrderParams, "abandonedOrderSeqInfo.seq", void 0);
            }
            onContinue() {
                const tipsTxt = this.isContinueMode ? "继续" : "支付";
                logger.info(`${this.loggerPrefix}[点击${tipsTxt}][准备跳转][onContinue][${PayPalReturnUrl}]`, {
                    jumpUrl: PayPalReturnUrl,
                    abandonedSeq: this.abandonedSeq
                });
                isFn(this.beforeContinue) && this.beforeContinue({
                    returnUrl: PayPalReturnUrl
                });
                window.location.href = PayPalReturnUrl;
                logger.info(`${this.loggerPrefix}[点击${tipsTxt}][跳转已触发]`, {
                    abandonedSeq: this.abandonedSeq
                });
                return false;
            }
            setProducts(products) {
                logger.debug(`${this.loggerPrefix}[更新PayPal商品信息]`, {
                    products
                });
                this.products = this.transProducts(products);
            }
            setDisabled(disabled) {
                if (!this.node) return;
                this.disabled = disabled;
                try {
                    if (disabled) {
                        this.initActions && this.initActions.disable();
                        this.createDisabledStyle(this.node);
                        return;
                    }
                    this.initActions && this.initActions.enable();
                    this.disabledStyleTag && this.node.parentElement && this.node.parentElement.removeChild(this.disabledStyleTag);
                } catch (err) {
                    console.error("此处报错不影响功能，无需关注", err);
                }
            }
            createStyle(node) {
                const skeleton = document.createElement("div");
                this.skeleton = skeleton;
                skeleton.classList.add("paypal__skeleton--animated");
                const styleTag = document.createElement("style");
                const linearGradient = [ `90deg`, `hsla(0, 0%, 74.5%, 0.2) 25%`, `hsla(0, 0%, 50.6%, 0.24) 37%`, `hsla(0, 0%, 74.5%, 0.2) 63%` ].join(", ");
                const skeletonAnimated = `\n      @keyframes skeleton {\n        0% {\n          background-position: 100% 50%;\n        }\n        100% {\n          background-position: 0 50%;\n        }\n      }\n    `;
                styleTag.innerHTML = this.isContinueMode && !this.isVerticalLayout ? `\n      #${this.config.domId} {\n        overflow: hidden;\n        text-align: center;\n        height: ${this.style.height}px;\n      }\n      /** 背景底色 */\n      #${this.config.domId}.paypal__bg::before,\n      #${this.config.domId}.paypal__bg::after {\n        content:'';\n        position: absolute;\n        top: 0;\n        bottom: 0;\n        left: 0;\n        width: calc(50% - 3px);\n        border-radius: 4px;\n        background-color: #ffc439;\n      }\n      #${this.config.domId}.paypal__bg::after {\n        left: unset;\n        right: 0;\n      }\n      [data-button_style=square] .paypal__bg::before,\n      [data-button_style=square] .paypal__bg::after{\n        border-radius: 0 !important;\n      }\n      [data-button_style=rounded] .paypal__bg::before,\n      [data-button_style=rounded] .paypal__bg::after{\n        border-radius: 9999px !important;\n      }\n    ` : `\n      #${this.config.domId} {\n        min-height: ${this.style.height}px;\n      }\n      `;
                styleTag.innerHTML += `\n\n    #${this.config.domId} {\n      position: relative;\n    }\n    #${this.config.domId} .paypal__skeleton--animated {\n      margin: 0 auto;\n      border-radius: 4px;\n      width: 100%;\n      height: ${this.style.height}px;\n      position: absolute;\n    }\n\n    .paypal__skeleton--animated {\n      background: linear-gradient(${linearGradient});\n      background-size: 400% 100%;\n      animation: skeleton 2s linear infinite;\n    }\n\n    ${skeletonAnimated}\n    `;
                if (!node) return;
                if (this.wrapperClass) node.classList.add(this.wrapperClass);
                if (this.wrapperStyle) {
                    let wrapperStyle = {};
                    const nodeStyleAttr = node.getAttribute("style").replace(/\s+/g, "");
                    const convertInputStyle = stringTypeStyle => {
                        const style = {};
                        const input = stringTypeStyle.split(";");
                        input.forEach((s => {
                            const [k, v] = s.split(":");
                            const key = k.replace(/-[^0-9]/g, (v => v.charAt(1).toUpperCase()));
                            style[key] = v;
                        }));
                        return style;
                    };
                    const convertOutputStyle = cssObjectStyle => {
                        if ("object" !== typeof cssObjectStyle) return "";
                        return Object.entries(cssObjectStyle).map((o => o.join(":"))).join(";").replace(/[A-Z]/g, (v => `-${v.charAt(0).toLowerCase()}`));
                    };
                    if ("string" === typeof this.wrapperStyle) wrapperStyle = {
                        ...convertInputStyle(nodeStyleAttr),
                        ...convertInputStyle(this.wrapperStyle)
                    }; else if ("object" === typeof this.wrapperStyle) wrapperStyle = {
                        ...convertInputStyle(nodeStyleAttr),
                        ...this.wrapperStyle
                    };
                    node.style = convertOutputStyle(wrapperStyle);
                }
                node.parentElement.insertBefore(styleTag, node);
                node.appendChild(skeleton);
            }
            createDisabledStyle(node) {
                const styleTag = document.createElement("style");
                this.disabledStyleTag = styleTag;
                styleTag.innerHTML = `\n      #${this.config.domId || "shopline-paypal"}::before {\n        width: 0 !important;\n      }\n      #${this.config.domId || "shopline-paypal"}::after {\n        content: '';\n        display: block;\n        z-index: 100;\n        width: 100% !important;\n        height: ${this.style.height}px;\n        border-radius: 4px;\n        cursor: not-allowed;\n        position: absolute;\n        top: 0;\n        left: 0 !important;\n        background: transparent !important;\n      }\n\n      #${this.config.domId} {\n        opacity: ${this.disabled ? .3 : 1};\n      }\n    `;
                if (!node) return;
                node.parentElement.insertBefore(styleTag, node);
            }
            removeSkeleton(node) {
                const {skeleton} = this;
                clearTimeout(this.removeSkeletonTimer);
                this.removeSkeletonTimer = setTimeout((() => {
                    if (node) {
                        node.removeChild(skeleton);
                        if (this.isContinueMode) node.classList.add("paypal__bg");
                    }
                }), 300);
            }
            dynamicNotify(remembered) {
                const {paypal} = remembered || {};
                this.isHidePayPalButton = !paypal;
                if (!paypal && this.onDynamicNotify) this.onDynamicNotify({
                    ...remembered,
                    isHidePayPalButton: !paypal
                });
            }
            jsonpCallback(remembered) {
                logger.debug(`${this.loggerPrefix}[是否有登录cookie][remembered]`, {
                    remembered
                });
                dynamicRemembered.info = remembered;
                dynamicRemembered.loadingStatus = 2;
                this.dynamicNotify(remembered);
                if (dynamicRemembered.cbFnList) try {
                    dynamicRemembered.cbFnList.forEach((cbFn => cbFn(remembered)));
                    dynamicRemembered.cbFnList = [];
                } catch (e) {
                    dynamicRemembered.cbFnList = [];
                }
            }
            async beforeRender() {
                try {
                    this.configBeforeRender();
                } catch (error) {
                    this.onPayPalError({
                        message: "[beforeRender调用失败]",
                        error
                    });
                }
                let paypalConfig = {};
                try {
                    const {data} = await (0, _services__WEBPACK_IMPORTED_MODULE_6__.getPaypalConfig)();
                    paypalConfig = data || {};
                } catch (error) {
                    this.onPayPalError({
                        message: "[获取paypal配置失败]",
                        error
                    });
                }
                return {
                    clientKey: (0, _config__WEBPACK_IMPORTED_MODULE_5__.getPaypalKey)(paypalConfig),
                    paypalQueryParams: (0, _utils__WEBPACK_IMPORTED_MODULE_7__.getQueryParams)(this.config, {
                        isContinueMode: this.isContinueMode,
                        paypalConfig
                    })
                };
            }
            async render() {
                if (this.dynamic) if (2 !== dynamicRemembered.loadingStatus) {
                    if (1 === dynamicRemembered.loadingStatus) {
                        dynamicRemembered.cbFnList.push(this.render.bind(this));
                        return;
                    }
                    dynamicRemembered.loadingStatus = 1;
                    window[dynamicCallBackName] = this.jsonpCallback;
                    try {
                        await (0, _utils_load_script__WEBPACK_IMPORTED_MODULE_9__["default"])(PayPalRememberedScript(dynamicCallBackName));
                        logger.debug(`${this.loggerPrefix}[加载登录态判定 script]: ${dynamicCallBackName}`);
                    } catch (error) {
                        this.onPayPalError(error);
                    }
                } else this.dynamicNotify(dynamicRemembered.info);
                if (void 0 !== this.isHidePayPalButton && this.isHidePayPalButton) return null;
                if (!this.config.domId || this.rendered) return null;
                const node = document.getElementById(this.config.domId);
                if (!node) {
                    logger.error(`${this.loggerPrefix}[onError][初始化失败][找不到挂载的DOM]`);
                    return null;
                }
                this.node = node;
                if (this.config.timeout && this.config.timeout.switch) {
                    if (renderObserver) {
                        renderObserver.disconnect();
                        renderObserver = null;
                    }
                    this.initTimer = setTimeout((() => {
                        this.node.innerHTML = "";
                        const MutationObserver = window.MutationObserver || window.WebKitMutationObserver || window.MozMutationObserver;
                        renderObserver = new MutationObserver((mutations => {
                            mutations.forEach((() => {
                                this.node.innerHTML = "";
                            }));
                        }));
                        const config = {
                            childList: true,
                            attributes: false,
                            subtree: false
                        };
                        node && renderObserver.observe(node, config);
                        setTimeout((() => {
                            if (!renderObserver) return;
                            renderObserver.disconnect();
                            renderObserver = null;
                        }), 5e3);
                        this.initError = true;
                        this.onPayPalError(new Error(`[初始化渲染失败][超时未调用onInit][当前超时时间:${this.config.timeout.delay}ms]`), "initRender");
                        throw new Error(`[初始化渲染失败][超时未调用onInit][当前超时时间:${this.config.timeout.delay}ms]`);
                    }), this.config.timeout.delay);
                }
                this.createStyle(node);
                const {clientKey, paypalQueryParams} = await this.beforeRender();
                const paypalSdkInitParams = {
                    ...this.config,
                    paypalQueryParams,
                    createOrder: this.onCreateOrder.bind(this),
                    createToken: this.onContinue.bind(this),
                    paypalProps: {
                        onClick: this.onClick.bind(this),
                        onError: this.onPayPalError.bind(this),
                        onInit: this.onCurrentInit.bind(this),
                        onCancel: this.onUserCancel.bind(this)
                    }
                };
                const PayPalInstance = new (getPaypalSDK())(clientKey, paypalSdkInitParams);
                PayPalInstance && this.removeSkeleton(node);
                this.rendered = true;
                this.afterRender({
                    dynamicInfo: dynamicRemembered.info
                });
                logger.debug(`${this.loggerPrefix}[初始化SDK]`, {
                    ...paypalSdkInitParams
                });
                return PayPalInstance;
            }
        }
        const __WEBPACK_DEFAULT_EXPORT__ = PayPalSmartPayButton;
    },
    "../shared/browser/components/paypal/services.js": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
        "use strict";
        __webpack_require__.d(__webpack_exports__, {
            preparePay: () => preparePay,
            getPaypalConfig: () => getPaypalConfig
        });
        var _yy_sl_theme_shared_utils_request__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("../shared/browser/utils/request.js");
        const legalUrl = "undefined" === typeof window ? "" : window.location.href.replace(/(&?\w+={.*?})|{|}/g, "");
        const extChannelInfo = {
            shopper_action: "CONTINUE",
            sub_channel: "SPB",
            cancel_url: legalUrl,
            landing_page: "LOGIN",
            locale: ""
        };
        const preparePay = params => {
            const {extChannelInfo: ext, ...rest} = params;
            return _yy_sl_theme_shared_utils_request__WEBPACK_IMPORTED_MODULE_0__["default"].post("/trade/center/pay/pay-pal/prepare-pay", {
                extChannelInfo: JSON.stringify({
                    ...extChannelInfo,
                    ...ext || {}
                }),
                ...rest
            });
        };
        const getPaypalConfig = () => _yy_sl_theme_shared_utils_request__WEBPACK_IMPORTED_MODULE_0__["default"].get("/trade/pay/payment/paypal/config/data");
    },
    "../shared/browser/components/paypal/utils/index.js": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
        "use strict";
        __webpack_require__.d(__webpack_exports__, {
            isProd: () => isProd,
            conversion: () => conversion,
            getPayPalServerConfig: () => getPayPalServerConfig,
            getConfigCommit: () => getConfigCommit,
            canTrustedPaypalConfig: () => canTrustedPaypalConfig,
            getQueryParams: () => getQueryParams
        });
        var _yy_sl_theme_shared_utils_get_env__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("../shared/browser/utils/get-env.js");
        var _yy_sl_theme_shared_utils_i18n__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("../shared/browser/utils/i18n.js");
        var _utils_state_selector__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("../shared/browser/utils/state-selector.js");
        const isProd = [ "product", "preview" ].includes((0, _yy_sl_theme_shared_utils_get_env__WEBPACK_IMPORTED_MODULE_2__["default"])().APP_ENV);
        const conversion = error => {
            let content;
            switch (true) {
              case /0401/.test(error.code):
              case /0402/.test(error.code):
                content = (0, _yy_sl_theme_shared_utils_i18n__WEBPACK_IMPORTED_MODULE_0__.t)("cart.notices.product_expired");
                break;

              case /0403/.test(error.code):
                content = (0, _yy_sl_theme_shared_utils_i18n__WEBPACK_IMPORTED_MODULE_0__.t)("cart.notices.insufficient_product_inventory");
                break;

              case /0404/.test(error.code):
                content = (0, _yy_sl_theme_shared_utils_i18n__WEBPACK_IMPORTED_MODULE_0__.t)("cart.notices.product_limit");
                break;

              case /0005/.test(error.code):
                content = (0, _yy_sl_theme_shared_utils_i18n__WEBPACK_IMPORTED_MODULE_0__.t)("cart.notices.network");
                break;

              case /0703/.test(error.code):
                content = (0, _yy_sl_theme_shared_utils_i18n__WEBPACK_IMPORTED_MODULE_0__.t)("cart.notices.store_nonexistent");
                break;

              default:
                content = error && error.message || (0, _yy_sl_theme_shared_utils_i18n__WEBPACK_IMPORTED_MODULE_0__.t)("cart.notices.network");
            }
            return content;
        };
        const getPaypalNacosConfig = () => window.__ENV__ && window.__ENV__.PAYPAL_CONFIG_V2;
        const getPayPalServerConfig = () => {
            const {enterAccountConfig = {}, ...rest} = _utils_state_selector__WEBPACK_IMPORTED_MODULE_1__.SL_State.get("tradeCollectionConfig") || {};
            const {orderFrom} = _utils_state_selector__WEBPACK_IMPORTED_MODULE_1__.SL_State.get("checkout.otherInfo") || {};
            const intent = enterAccountConfig.manualEnterAccount ? "authorize" : "capture";
            const manualCapture = enterAccountConfig.manualEnterAccount;
            return {
                ...rest,
                intent,
                manualCapture,
                orderFrom
            };
        };
        const getConfigCommit = config => !!config.commit;
        const paypalConfigKey = [ "paypalMerchantId", "clientId" ];
        const canTrustedPaypalConfig = paypalConfig => {
            const servicesConfig = paypalConfigKey.map((key => paypalConfig[key]));
            if (servicesConfig.some(Boolean) && !servicesConfig.every(Boolean)) return true;
            return false;
        };
        const getQueryParams = (config, {isContinueMode, paypalConfig}) => {
            const {intent} = getPayPalServerConfig();
            const commit = getConfigCommit(config);
            const nacosConfig = getPaypalNacosConfig();
            let queryParams = `intent=${intent}&commit=${commit}`;
            if (config.queryParams) queryParams += `&${config.queryParams}`;
            if (canTrustedPaypalConfig(paypalConfig) && paypalConfig.paypalMerchantId) queryParams += `&merchant-id=${paypalConfig.paypalMerchantId}`;
            if (Array.isArray(nacosConfig)) {
                const setQueryParams = item => {
                    const {key, value, isCoverAll, whitelist, blacklist} = item;
                    const {storeId} = window.Shopline;
                    if (isCoverAll) {
                        if (Array.isArray(blacklist) && !blacklist.includes(storeId)) queryParams += `&${key}=${value}`;
                    } else if (Array.isArray(whitelist) && whitelist.includes(storeId)) queryParams += `&${key}=${value}`;
                };
                nacosConfig.forEach((item => {
                    if ("all" === item.scope) setQueryParams(item); else {
                        if (isContinueMode && "continue" === item.scope) setQueryParams(item);
                        if (!isContinueMode && "payNow" === item.scope) setQueryParams(item);
                    }
                }));
            } else {
                const {disableFunding} = window.__ENV__ && window.__ENV__.PAYPAL_CONFIG || {};
                if (isContinueMode) if (disableFunding) queryParams += `&disable-funding=${disableFunding}`;
            }
            return queryParams;
        };
    },
    "../shared/browser/components/smart-payment/index.js": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
        "use strict";
        __webpack_require__.d(__webpack_exports__, {
            SmartPayment: () => SmartPayment
        });
        var _sl_smart_payment__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("../shared/browser/node_modules/@sl/smart-payment/lib/index.js");
        var _yy_sl_theme_shared_utils_logger_sentry__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("../shared/browser/utils/logger/sentry.js");
        var _utils_event_bus__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("../shared/browser/utils/event-bus.js");
        var _utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("../shared/browser/components/smart-payment/utils.js");
        var _utils_tradeReport_const__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__("../shared/browser/utils/tradeReport/const.js");
        const {PAYPAL_CHECKOUT} = _utils_tradeReport_const__WEBPACK_IMPORTED_MODULE_4__.HD_EVENT_NAME;
        const logger = _yy_sl_theme_shared_utils_logger_sentry__WEBPACK_IMPORTED_MODULE_1__["default"].pipeOwner("SmartPayment");
        const loggerPrefix = "[shared]快速支付SDK";
        class SmartPayment {
            constructor(config) {
                this.config = config;
            }
            async renderSmartPayment() {
                const payments = (0, _utils__WEBPACK_IMPORTED_MODULE_3__.getPayments)();
                if (!(payments && Array.isArray(payments))) {
                    logger.error(`${loggerPrefix} payments入参非法`, {
                        data: {
                            payments
                        }
                    });
                    return;
                }
                this.currentController = new _sl_smart_payment__WEBPACK_IMPORTED_MODULE_0__.Payment({
                    ...this.config,
                    payments,
                    afterCreateOrder: status => {
                        _utils_event_bus__WEBPACK_IMPORTED_MODULE_2__.SL_EventBus.emit(PAYPAL_CHECKOUT, {
                            data: {
                                event_status: status,
                                ...this.config.emitData
                            }
                        });
                        if ((0, _utils__WEBPACK_IMPORTED_MODULE_3__.isFn)(this.config.afterCreateOrder)) this.config.afterCreateOrder(status);
                    },
                    logger
                });
                await this.currentController.render();
            }
            async init() {
                await this.renderSmartPayment();
            }
            setDisabled(disabled) {
                this.currentController.setDisabled(disabled);
            }
        }
    },
    "../shared/browser/components/smart-payment/utils.js": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
        "use strict";
        __webpack_require__.d(__webpack_exports__, {
            getPayments: () => getPayments,
            isPaypalGrey: () => isPaypalGrey,
            isFn: () => isFn
        });
        var _sl_smart_payment__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("../shared/browser/node_modules/@sl/smart-payment/lib/index.js");
        const getPayments = code => {
            const payments = window && window.__PRELOAD_STATE__ && window.__PRELOAD_STATE__.fastCheckout && window.__PRELOAD_STATE__.fastCheckout.payments;
            if (!payments) return;
            if (!code) return payments;
            return payments.find((item => item.channelCode === code));
        };
        const isPaypalGrey = () => {
            const payment = getPayments(_sl_smart_payment__WEBPACK_IMPORTED_MODULE_0__.ChannelCode.Paypal);
            if (payment) return payment.systemCode === _sl_smart_payment__WEBPACK_IMPORTED_MODULE_0__.SystemCode.StandardEC;
        };
        const isFn = object => object && "function" === typeof object;
    },
    "../shared/browser/events/data-report/enum/index.js": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
        "use strict";
        __webpack_require__.r(__webpack_exports__);
        __webpack_require__.d(__webpack_exports__, {
            ADD_TO_CART: () => ADD_TO_CART,
            COMPLETE_ORDER: () => COMPLETE_ORDER,
            INITIATE_CHECKOUT: () => INITIATE_CHECKOUT,
            VIEW_CONTENT: () => VIEW_CONTENT,
            PURCHASE: () => PURCHASE,
            ThirdPartReport: () => ThirdPartReport,
            HiidoReport: () => HiidoReport
        });
        const ADD_TO_CART = "DataReport::AddToCart";
        const COMPLETE_ORDER = "DataReport::CompleteOrder";
        const INITIATE_CHECKOUT = "DataReport::InitiateCheckout";
        const VIEW_CONTENT = "DataReport::ViewContent";
        const PURCHASE = "DataReport::Purchase";
        const ThirdPartReport = "DataReport::ThirdPart";
        const HiidoReport = "DataReport::Hiido";
    },
    "../shared/browser/events/data-report/view-content/index.js": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
        "use strict";
        __webpack_require__.d(__webpack_exports__, {
            default: () => __WEBPACK_DEFAULT_EXPORT__
        });
        var _utils_api_logger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("../shared/browser/events/utils/api-logger.js");
        var _enum__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("../shared/browser/events/data-report/enum/index.js");
        const logger = (0, _utils_api_logger__WEBPACK_IMPORTED_MODULE_0__["default"])(`${_enum__WEBPACK_IMPORTED_MODULE_1__.VIEW_CONTENT} - EMIT`);
        const external = window.Shopline && window.Shopline.event;
        const viewContent = data => {
            if (external) {
                logger.info(data);
                return external.emit(_enum__WEBPACK_IMPORTED_MODULE_1__.VIEW_CONTENT, {
                    data,
                    onSuccess: result => {
                        logger.info("success", result);
                    },
                    onError: error => {
                        logger.error(error);
                    }
                });
            }
        };
        viewContent.apiName = _enum__WEBPACK_IMPORTED_MODULE_1__.VIEW_CONTENT;
        const __WEBPACK_DEFAULT_EXPORT__ = viewContent;
    },
    "../shared/browser/events/product/preview-init/index.js": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
        "use strict";
        __webpack_require__.d(__webpack_exports__, {
            default: () => __WEBPACK_DEFAULT_EXPORT__
        });
        var _utils_api_logger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("../shared/browser/events/utils/api-logger.js");
        const EVENT_NAME = "Product::productPreviewInit";
        const logger = (0, _utils_api_logger__WEBPACK_IMPORTED_MODULE_0__["default"])(EVENT_NAME);
        const external = window.Shopline && window.Shopline.event;
        const filterUpdateSection = data => {
            if (external) {
                logger.info(`[emit]`, data);
                return external.emit(EVENT_NAME, {
                    data,
                    onSuccess: result => {
                        logger.info("success", result);
                    },
                    onError: error => {
                        logger.error(error);
                    }
                });
            }
        };
        filterUpdateSection.apiName = EVENT_NAME;
        const __WEBPACK_DEFAULT_EXPORT__ = filterUpdateSection;
    },
    "../shared/browser/events/product/quickView-click/index.js": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
        "use strict";
        __webpack_require__.d(__webpack_exports__, {
            default: () => __WEBPACK_DEFAULT_EXPORT__
        });
        var _utils_api_logger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("../shared/browser/events/utils/api-logger.js");
        const EVENT_NAME = {
            OPEN_QUICKVIEW_EVENT: "Product::OpenQuickView",
            CLOSE_QUICKVIEW_EVENT: "Product::CloseQuickView",
            OPEN_QUICKVIEW_ADDTOCART: "Product::OpenQuickView::AddToCart",
            CLOSE_QUICKVIEW_ADDTOCART: "Product::CloseQuickView::AddToCart"
        };
        const external = window.Shopline && window.Shopline.event;
        const quickViewClick = data => {
            if (external) {
                const logger = (0, _utils_api_logger__WEBPACK_IMPORTED_MODULE_0__["default"])(EVENT_NAME[data.eventName]);
                quickViewClick.apiName = EVENT_NAME[data.eventName];
                logger.info(`[emit]`, data);
                return external.emit(EVENT_NAME[data.eventName], {
                    data,
                    onSuccess: result => {
                        logger.info("success", result);
                    },
                    onError: error => {
                        logger.error(error);
                    }
                });
            }
        };
        const __WEBPACK_DEFAULT_EXPORT__ = quickViewClick;
    },
    "../shared/browser/events/product/sku-change/index.js": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
        "use strict";
        __webpack_require__.d(__webpack_exports__, {
            default: () => __WEBPACK_DEFAULT_EXPORT__
        });
        var _utils_api_logger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("../shared/browser/events/utils/api-logger.js");
        const EVENT_NAME = "Product::SkuChange";
        const logger = (0, _utils_api_logger__WEBPACK_IMPORTED_MODULE_0__["default"])(EVENT_NAME);
        const external = window.Shopline && window.Shopline.event;
        const skuChange = data => {
            if (external) {
                logger.info(`[emit]`, data);
                return external.emit(EVENT_NAME, {
                    data,
                    onSuccess: result => {
                        logger.info("success", result);
                    },
                    onError: error => {
                        logger.error(error);
                    }
                });
            }
        };
        skuChange.apiName = EVENT_NAME;
        const __WEBPACK_DEFAULT_EXPORT__ = skuChange;
    },
    "../shared/browser/events/trade/interior-event/index.js": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
        "use strict";
        __webpack_require__.d(__webpack_exports__, {
            OPEN_MINI_CART: () => OPEN_MINI_CART,
            ADD_TO_CART: () => ADD_TO_CART,
            CONTROL_CART_BASIS: () => CONTROL_CART_BASIS,
            INTERIOR_TRADE_UPDATE_DETAIL: () => INTERIOR_TRADE_UPDATE_DETAIL,
            LINE_ITEM_UPDATE: () => LINE_ITEM_UPDATE
        });
        const OPEN_MINI_CART = Symbol("OPEN_MINI_CART");
        const ADD_TO_CART = Symbol("ADD_TO_CART");
        const CONTROL_CART_BASIS = Symbol("CONTROL_CART_BASIS");
        const INTERIOR_TRADE_UPDATE_DETAIL = Symbol("TRADE_UPDATE_DETAIL");
        const LINE_ITEM_UPDATE = Symbol("LINE_ITEM_UPDATE");
    },
    "../shared/browser/events/utils/api-logger.js": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
        "use strict";
        __webpack_require__.d(__webpack_exports__, {
            default: () => __WEBPACK_DEFAULT_EXPORT__
        });
        var _utils_createLogger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("../shared/browser/utils/createLogger.js");
        const __WEBPACK_DEFAULT_EXPORT__ = apiName => (0, _utils_createLogger__WEBPACK_IMPORTED_MODULE_0__["default"])("developer-api", `[${apiName}]`);
    },
    "../shared/browser/node_modules/@funnyecho/context/dist/constant.js": (__unused_webpack_module, exports) => {
        "use strict";
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        var errCanceled = "context done with cancellation";
        var errTimeout = "context done with timeout";
        var errDeadline = "context done with deadline";
        var errNotNullableValuer = "valuer is not nullable";
        exports["default"] = {
            errCanceled,
            errTimeout,
            errDeadline,
            errNotNullableValuer
        };
    },
    "../shared/browser/node_modules/@funnyecho/context/dist/context.js": function(__unused_webpack_module, exports, __webpack_require__) {
        "use strict";
        var __importDefault = this && this.__importDefault || function(mod) {
            return mod && mod.__esModule ? mod : {
                default: mod
            };
        };
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        var promise_1 = __importDefault(__webpack_require__("../shared/browser/node_modules/@funnyecho/promise/dist/index.js"));
        var time_1 = __importDefault(__webpack_require__("../shared/browser/node_modules/@funnyecho/time/dist/index.js"));
        var constant_1 = __importDefault(__webpack_require__("../shared/browser/node_modules/@funnyecho/context/dist/constant.js"));
        function background() {
            return forkParentCtx(_background);
        }
        function todo() {
            return forkParentCtx(_todo);
        }
        function withValue(parent, valuer, value) {
            return newValueCtx(parent, valuer, value);
        }
        function withCancel(parent) {
            return newCancelCtx(parent);
        }
        function withTimeout(parent, timeout) {
            return newCancelCtx(newTimeoutCtx(parent, timeout));
        }
        function withDeadline(parent, deadline) {
            return newCancelCtx(newDeadlineCtx(parent, deadline));
        }
        exports["default"] = {
            background,
            todo,
            withValue,
            withCancel,
            withTimeout,
            withDeadline
        };
        function newEmptyCtx() {
            return {
                deadline: function() {
                    return null;
                },
                done: function() {
                    return promise_1.default.zombie;
                },
                err: function() {
                    return null;
                },
                value: function(cv) {
                    return cv ? cv.defaultGetter() : null;
                }
            };
        }
        function newValueCtx(parent, valuer, value) {
            return {
                deadline: function() {
                    return parent.deadline();
                },
                done: function() {
                    return parent.done();
                },
                err: function() {
                    return parent.err();
                },
                value: function(cv) {
                    if (valuer === cv) return value;
                    return parent.value(cv);
                }
            };
        }
        function forkParentCtx(parent) {
            if (!parent) parent = _background;
            return {
                deadline: function() {
                    return parent.deadline();
                },
                done: function() {
                    return parent.done();
                },
                err: function() {
                    return parent.err();
                },
                value: function(cv) {
                    return parent.value(cv);
                }
            };
        }
        function createCancellablePromise() {
            return promise_1.default.resolvable();
        }
        function newTimeoutCtx(parent, dur) {
            var error;
            var deadline = time_1.default.later(dur);
            var timeoutPromise = promise_1.default.resolveAfterDuration(dur);
            return {
                deadline: function() {
                    return deadline;
                },
                done: function() {
                    return Promise.race([ parent.done().then((function() {
                        return parent.err();
                    })), timeoutPromise.then((function() {
                        return new Error(constant_1.default.errTimeout);
                    })) ]).then((function(err) {
                        error = err;
                    }));
                },
                err: function() {
                    return error;
                },
                value: function(cv) {
                    return parent.value(cv);
                }
            };
        }
        function newDeadlineCtx(parent, deadline) {
            var error = null;
            var deadlinePromise = promise_1.default.resolveAfterDuration(deadline.duration(time_1.default.now()));
            return {
                deadline: function() {
                    return deadline;
                },
                done: function() {
                    return Promise.race([ parent.done().then((function() {
                        return parent.err();
                    })), deadlinePromise.then((function() {
                        return new Error(constant_1.default.errDeadline);
                    })) ]).then((function(err) {
                        error = err;
                    }));
                },
                err: function() {
                    return error;
                },
                value: function(cv) {
                    return parent.value(cv);
                }
            };
        }
        function newCancelCtx(parent) {
            var _a = createCancellablePromise(), cancelPromise = _a[0], cancelFunc = _a[1];
            var error = null;
            return [ {
                deadline: function() {
                    return parent.deadline();
                },
                done: function() {
                    return Promise.race([ parent.done().then((function() {
                        return parent.err();
                    })), cancelPromise.then((function() {
                        return new Error(constant_1.default.errCanceled);
                    })) ]).then((function(err) {
                        error = err;
                    }));
                },
                err: function() {
                    return error;
                },
                value: function(cv) {
                    return parent.value(cv);
                }
            }, cancelFunc ];
        }
        var _background = newEmptyCtx();
        var _todo = newEmptyCtx();
    },
    "../shared/browser/node_modules/@funnyecho/context/dist/index.js": function(__unused_webpack_module, exports, __webpack_require__) {
        "use strict";
        var __assign = this && this.__assign || function() {
            __assign = Object.assign || function(t) {
                for (var s, i = 1, n = arguments.length; i < n; i++) {
                    s = arguments[i];
                    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
                }
                return t;
            };
            return __assign.apply(this, arguments);
        };
        var __createBinding = this && this.__createBinding || (Object.create ? function(o, m, k, k2) {
            if (void 0 === k2) k2 = k;
            Object.defineProperty(o, k2, {
                enumerable: true,
                get: function() {
                    return m[k];
                }
            });
        } : function(o, m, k, k2) {
            if (void 0 === k2) k2 = k;
            o[k2] = m[k];
        });
        var __exportStar = this && this.__exportStar || function(m, exports) {
            for (var p in m) if ("default" !== p && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
        };
        var __importDefault = this && this.__importDefault || function(mod) {
            return mod && mod.__esModule ? mod : {
                default: mod
            };
        };
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        var context_1 = __importDefault(__webpack_require__("../shared/browser/node_modules/@funnyecho/context/dist/context.js"));
        var constant_1 = __importDefault(__webpack_require__("../shared/browser/node_modules/@funnyecho/context/dist/constant.js"));
        var valuer_1 = __importDefault(__webpack_require__("../shared/browser/node_modules/@funnyecho/context/dist/valuer.js"));
        __exportStar(__webpack_require__("../shared/browser/node_modules/@funnyecho/context/dist/context.js"), exports);
        __exportStar(__webpack_require__("../shared/browser/node_modules/@funnyecho/context/dist/valuer.js"), exports);
        exports["default"] = __assign(__assign(__assign({}, constant_1.default), context_1.default), valuer_1.default);
    },
    "../shared/browser/node_modules/@funnyecho/context/dist/valuer.js": function(__unused_webpack_module, exports, __webpack_require__) {
        "use strict";
        var __importDefault = this && this.__importDefault || function(mod) {
            return mod && mod.__esModule ? mod : {
                default: mod
            };
        };
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        var constant_1 = __importDefault(__webpack_require__("../shared/browser/node_modules/@funnyecho/context/dist/constant.js"));
        function newValuer(value) {
            var getter;
            if (void 0 === value) getter = function() {
                throw new Error(constant_1.default.errNotNullableValuer);
            }; else getter = function() {
                return value;
            };
            return createValuer(getter);
        }
        function newValuerWithGetter(getter) {
            if ("function" !== typeof getter) getter = function() {
                throw new Error(constant_1.default.errNotNullableValuer);
            };
            return createValuer(getter);
        }
        exports["default"] = {
            newValuer,
            newValuerWithGetter
        };
        function createValuer(getter) {
            return Object.defineProperty({}, "defaultGetter", {
                value: getter,
                writable: false,
                configurable: false
            });
        }
    },
    "../shared/browser/node_modules/@funnyecho/logger/dist/entry.js": (__unused_webpack_module, exports) => {
        "use strict";
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
    },
    "../shared/browser/node_modules/@funnyecho/logger/dist/error.js": (__unused_webpack_module, exports) => {
        "use strict";
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        var errNilEntry = "FA_LOGGER_NIL_ENTRY";
        var errNilFieldKey = "FA_LOGGER_NIL_FIELD_KEY";
        var errNilFieldValue = "FA_LOGGER_NIL_FIELD_VALUE";
        exports["default"] = {
            errNilEntry,
            errNilFieldKey,
            errNilFieldValue
        };
    },
    "../shared/browser/node_modules/@funnyecho/logger/dist/field.js": function(__unused_webpack_module, exports, __webpack_require__) {
        "use strict";
        var __importDefault = this && this.__importDefault || function(mod) {
            return mod && mod.__esModule ? mod : {
                default: mod
            };
        };
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        var error_1 = __importDefault(__webpack_require__("../shared/browser/node_modules/@funnyecho/logger/dist/error.js"));
        function getFieldKey(field) {
            return null == (null === field || void 0 === field ? void 0 : field.key) ? "" : String(field.key);
        }
        function getFieldValue(field) {
            return null === field || void 0 === field ? void 0 : field.value;
        }
        function marshalFieldList() {
            var values = [];
            for (var _i = 0; _i < arguments.length; _i++) values[_i] = arguments[_i];
            var fields = [];
            var _loop_1 = function(i) {
                var item = values[i];
                if (item) {
                    var itemType = typeof item;
                    if ("string" === itemType) {
                        i += 1;
                        if (i >= values.length) fields.push({
                            key: item,
                            value: error_1.default.errNilFieldValue
                        }); else fields.push({
                            key: item,
                            value: values[i]
                        });
                    } else if (isPlainObject(item)) Object.keys(item).forEach((function(key) {
                        fields.push({
                            key,
                            value: item[key]
                        });
                    })); else fields.push({
                        key: "",
                        value: item
                    });
                }
                out_i_1 = i;
            };
            var out_i_1;
            for (var i = 0; i < values.length; ++i) {
                _loop_1(i);
                i = out_i_1;
            }
            return fields;
        }
        function mergeFieldList() {
            var list = [];
            for (var _i = 0; _i < arguments.length; _i++) list[_i] = arguments[_i];
            return list.reduce((function(result, l) {
                if (!Array.isArray(l)) return result;
                return result.concat(l || []);
            }), []);
        }
        function mapFieldList(fields) {
            var record = {};
            var extra = [];
            (fields || []).forEach((function(field) {
                var key = getFieldKey(field);
                var value = getFieldValue(field);
                if (!key) extra.push(value); else record[key] = value;
            }));
            if (extra.length > 0) Object.assign(record, {
                __extra__: extra
            });
            return record;
        }
        exports["default"] = {
            getFieldKey,
            getFieldValue,
            marshalFieldList,
            mergeFieldList,
            mapFieldList
        };
        function isPlainObject(obj) {
            if ("object" == typeof obj && null !== obj) {
                if ("function" == typeof Object.getPrototypeOf) {
                    var proto = Object.getPrototypeOf(obj);
                    return proto === Object.prototype || null === proto;
                }
                return "[object Object]" == Object.prototype.toString.call(obj);
            }
            return false;
        }
    },
    "../shared/browser/node_modules/@funnyecho/logger/dist/index.js": function(__unused_webpack_module, exports, __webpack_require__) {
        "use strict";
        var __assign = this && this.__assign || function() {
            __assign = Object.assign || function(t) {
                for (var s, i = 1, n = arguments.length; i < n; i++) {
                    s = arguments[i];
                    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
                }
                return t;
            };
            return __assign.apply(this, arguments);
        };
        var __createBinding = this && this.__createBinding || (Object.create ? function(o, m, k, k2) {
            if (void 0 === k2) k2 = k;
            Object.defineProperty(o, k2, {
                enumerable: true,
                get: function() {
                    return m[k];
                }
            });
        } : function(o, m, k, k2) {
            if (void 0 === k2) k2 = k;
            o[k2] = m[k];
        });
        var __exportStar = this && this.__exportStar || function(m, exports) {
            for (var p in m) if ("default" !== p && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
        };
        var __importDefault = this && this.__importDefault || function(mod) {
            return mod && mod.__esModule ? mod : {
                default: mod
            };
        };
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        var error_1 = __importDefault(__webpack_require__("../shared/browser/node_modules/@funnyecho/logger/dist/error.js"));
        var field_1 = __importDefault(__webpack_require__("../shared/browser/node_modules/@funnyecho/logger/dist/field.js"));
        var level_1 = __importDefault(__webpack_require__("../shared/browser/node_modules/@funnyecho/logger/dist/level.js"));
        var logger_1 = __importDefault(__webpack_require__("../shared/browser/node_modules/@funnyecho/logger/dist/logger.js"));
        var loggerConfig_1 = __importDefault(__webpack_require__("../shared/browser/node_modules/@funnyecho/logger/dist/loggerConfig.js"));
        var transport_1 = __importDefault(__webpack_require__("../shared/browser/node_modules/@funnyecho/logger/dist/transport.js"));
        __exportStar(__webpack_require__("../shared/browser/node_modules/@funnyecho/logger/dist/entry.js"), exports);
        __exportStar(__webpack_require__("../shared/browser/node_modules/@funnyecho/logger/dist/error.js"), exports);
        __exportStar(__webpack_require__("../shared/browser/node_modules/@funnyecho/logger/dist/field.js"), exports);
        __exportStar(__webpack_require__("../shared/browser/node_modules/@funnyecho/logger/dist/kvt.js"), exports);
        __exportStar(__webpack_require__("../shared/browser/node_modules/@funnyecho/logger/dist/level.js"), exports);
        __exportStar(__webpack_require__("../shared/browser/node_modules/@funnyecho/logger/dist/logger.js"), exports);
        __exportStar(__webpack_require__("../shared/browser/node_modules/@funnyecho/logger/dist/loggerConfig.js"), exports);
        __exportStar(__webpack_require__("../shared/browser/node_modules/@funnyecho/logger/dist/transport.js"), exports);
        exports["default"] = __assign(__assign(__assign(__assign(__assign(__assign({}, error_1.default), field_1.default), level_1.default), loggerConfig_1.default), logger_1.default), transport_1.default);
    },
    "../shared/browser/node_modules/@funnyecho/logger/dist/kvt.js": (__unused_webpack_module, exports) => {
        "use strict";
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
    },
    "../shared/browser/node_modules/@funnyecho/logger/dist/level.js": (__unused_webpack_module, exports) => {
        "use strict";
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        exports.LevelEnum = void 0;
        var LevelEnum;
        (function(LevelEnum) {
            LevelEnum[LevelEnum["fatal"] = 0] = "fatal";
            LevelEnum[LevelEnum["error"] = 1] = "error";
            LevelEnum[LevelEnum["info"] = 2] = "info";
            LevelEnum[LevelEnum["debug"] = 3] = "debug";
        })(LevelEnum = exports.LevelEnum || (exports.LevelEnum = {}));
        exports["default"] = {
            LevelEnum
        };
    },
    "../shared/browser/node_modules/@funnyecho/logger/dist/logger.js": function(__unused_webpack_module, exports, __webpack_require__) {
        "use strict";
        var __spreadArray = this && this.__spreadArray || function(to, from) {
            for (var i = 0, il = from.length, j = to.length; i < il; i++, j++) to[j] = from[i];
            return to;
        };
        var __importDefault = this && this.__importDefault || function(mod) {
            return mod && mod.__esModule ? mod : {
                default: mod
            };
        };
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        var loggerConfig_1 = __importDefault(__webpack_require__("../shared/browser/node_modules/@funnyecho/logger/dist/loggerConfig.js"));
        var level_1 = __importDefault(__webpack_require__("../shared/browser/node_modules/@funnyecho/logger/dist/level.js"));
        var field_1 = __importDefault(__webpack_require__("../shared/browser/node_modules/@funnyecho/logger/dist/field.js"));
        var transport_1 = __importDefault(__webpack_require__("../shared/browser/node_modules/@funnyecho/logger/dist/transport.js"));
        var context_1 = __importDefault(__webpack_require__("../shared/browser/node_modules/@funnyecho/context/dist/index.js"));
        function withLogger(logger) {
            var withConfig = [];
            for (var _i = 1; _i < arguments.length; _i++) withConfig[_i - 1] = arguments[_i];
            return newLogger(loggerConfig_1.default.withLoggerConfig.apply(loggerConfig_1.default, __spreadArray([ copyLoggerConfig(logger) ], withConfig)));
        }
        function newNopLogger() {
            return newLogger(loggerConfig_1.default.newNopLoggerConfig());
        }
        var _globalLogger = newNopLogger();
        function takeGlobalLogger() {
            return _globalLogger;
        }
        function withGlobalLogger(_logger) {
            _globalLogger = _logger;
        }
        exports["default"] = {
            withLogger,
            newNopLogger,
            takeGlobalLogger,
            withGlobalLogger
        };
        function newLogger(config) {
            var owner = config.owner, transportList = config.transportList;
            function marshalLogExtra(extra) {
                return field_1.default.marshalFieldList.apply(field_1.default, extra);
            }
            function log(entry) {
                try {
                    transport_1.default.traverseTransportList(context_1.default.background(), entry, transportList);
                } catch (e) {
                    console.error("failed to log entry", "entry", entry, "error", e);
                }
            }
            function debug(msg) {
                var entry = {
                    owner,
                    level: level_1.default.LevelEnum.debug,
                    message: msg,
                    fields: marshalLogExtra(Array.from(arguments).slice(1))
                };
                log(entry);
            }
            function info(msg) {
                var entry = {
                    owner,
                    level: level_1.default.LevelEnum.info,
                    message: msg,
                    fields: marshalLogExtra(Array.from(arguments).slice(1))
                };
                log(entry);
            }
            function error(msg) {
                var entry = {
                    owner,
                    level: level_1.default.LevelEnum.error,
                    message: msg,
                    fields: marshalLogExtra(Array.from(arguments).slice(1))
                };
                log(entry);
            }
            return {
                get owner() {
                    return owner;
                },
                get transportList() {
                    return transportList;
                },
                debug,
                info,
                error
            };
        }
        function copyLoggerConfig(logger) {
            if (!logger) return loggerConfig_1.default.newNopLoggerConfig();
            return {
                owner: logger.owner,
                transportList: logger.transportList
            };
        }
    },
    "../shared/browser/node_modules/@funnyecho/logger/dist/loggerConfig.js": function(__unused_webpack_module, exports) {
        "use strict";
        var __spreadArray = this && this.__spreadArray || function(to, from) {
            for (var i = 0, il = from.length, j = to.length; i < il; i++, j++) to[j] = from[i];
            return to;
        };
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        function newNopLoggerConfig() {
            return {
                owner: "",
                transportList: []
            };
        }
        function withLoggerConfig(config) {
            var withConfigs = [];
            for (var _i = 1; _i < arguments.length; _i++) withConfigs[_i - 1] = arguments[_i];
            if (!config) config = newNopLoggerConfig();
            for (var i = 0; i < withConfigs.length; ++i) {
                var withFn = withConfigs[i];
                if ("function" === typeof withFn) {
                    var c = withFn(config);
                    if (c) config = c;
                }
            }
            return config;
        }
        function pipeOwner(owner) {
            return function(config) {
                if (owner) config.owner = [ config.owner, owner ].join(".");
            };
        }
        function withOwner(owner) {
            return function(config) {
                if (owner) config.owner = "" + owner;
            };
        }
        function pipeTransport() {
            var transportList = [];
            for (var _i = 0; _i < arguments.length; _i++) transportList[_i] = arguments[_i];
            return function(config) {
                config.transportList = __spreadArray(__spreadArray([], config.transportList || []), transportList.filter((function(v) {
                    return v;
                })));
            };
        }
        exports["default"] = {
            newNopLoggerConfig,
            withLoggerConfig,
            pipeOwner,
            withOwner,
            pipeTransport
        };
    },
    "../shared/browser/node_modules/@funnyecho/logger/dist/transport.js": (__unused_webpack_module, exports) => {
        "use strict";
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        function traverseTransportWalkerList(ctx, entry, list) {
            if (!ctx || !Array.isArray(list) || !entry) return;
            for (var i = 0; i < list.length; ++i) {
                var walker = list[i];
                if ("function" === typeof walker) {
                    var result = walker(ctx, entry);
                    if (Array.isArray(result)) ctx = result[0], entry = result[1]; else if (false === result) return false;
                }
            }
            return [ ctx, entry ];
        }
        function traverseCapturedTransportList(ctx, entry, list) {
            if (!ctx || !Array.isArray(list) || !entry) return;
            for (var i = 0; i < list.length; ++i) {
                var transport = list[i];
                if (transport) {
                    var walker = void 0;
                    if ("function" !== typeof transport) walker = transport.capture; else walker = transport;
                    if ("function" === typeof walker) {
                        var result = walker(ctx, entry);
                        if (Array.isArray(result)) ctx = result[0], entry = result[1]; else if (false === result) return false;
                    }
                }
            }
            return [ ctx, entry ];
        }
        function traverseBubbledTransportList(ctx, entry, list) {
            if (!ctx || !Array.isArray(list) || !entry) return;
            for (var i = list.length - 1; i >= 0; --i) {
                var transport = list[i];
                if (transport) {
                    var walker = void 0;
                    if ("function" !== typeof transport) walker = transport.bubble;
                    if ("function" === typeof walker) {
                        var result = walker(ctx, entry);
                        if (Array.isArray(result)) ctx = result[0], entry = result[1]; else if (false === result) return false;
                    }
                }
            }
            return [ ctx, entry ];
        }
        function traverseTransportList(ctx, entry, list) {
            if (!ctx || !Array.isArray(list) || !entry) return entry;
            var capturedRes = traverseCapturedTransportList(ctx, entry, list);
            if (false === capturedRes) return;
            if (Array.isArray(capturedRes)) ctx = capturedRes[0], entry = capturedRes[1];
            var bubbledRes = traverseBubbledTransportList(ctx, entry, list);
            if (false === bubbledRes) return;
            if (Array.isArray(bubbledRes)) ctx = bubbledRes[0], entry = bubbledRes[1];
            return entry;
        }
        exports["default"] = {
            traverseTransportWalkerList,
            traverseTransportList,
            traverseCapturedTransportList,
            traverseBubbledTransportList
        };
    },
    "../shared/browser/node_modules/@funnyecho/logger/dist/transports/concat.js": function(__unused_webpack_module, exports, __webpack_require__) {
        "use strict";
        var __importDefault = this && this.__importDefault || function(mod) {
            return mod && mod.__esModule ? mod : {
                default: mod
            };
        };
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        var transport_1 = __importDefault(__webpack_require__("../shared/browser/node_modules/@funnyecho/logger/dist/transport.js"));
        function withConcat() {
            var transportList = [];
            for (var _i = 0; _i < arguments.length; _i++) transportList[_i] = arguments[_i];
            return {
                capture: function(ctx, entry) {
                    return transport_1.default.traverseCapturedTransportList(ctx, entry, transportList);
                },
                bubble: function(ctx, entry) {
                    return transport_1.default.traverseBubbledTransportList(ctx, entry, transportList);
                }
            };
        }
        exports["default"] = {
            withConcat
        };
    },
    "../shared/browser/node_modules/@funnyecho/logger/dist/transports/expect.js": function(__unused_webpack_module, exports, __webpack_require__) {
        "use strict";
        var __importDefault = this && this.__importDefault || function(mod) {
            return mod && mod.__esModule ? mod : {
                default: mod
            };
        };
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        var transport_1 = __importDefault(__webpack_require__("../shared/browser/node_modules/@funnyecho/logger/dist/transport.js"));
        function withExpect(tester, next) {
            return {
                capture: function(ctx, entry) {
                    if (tester(ctx, entry) && null != next) return transport_1.default.traverseCapturedTransportList(ctx, entry, [ next ]);
                },
                bubble: function(ctx, entry) {
                    if (tester(ctx, entry) && null != next) return transport_1.default.traverseBubbledTransportList(ctx, entry, [ next ]);
                }
            };
        }
        function withTruth(tester, next) {
            return withExpect(tester, next);
        }
        function withFalsy(tester, next) {
            return withExpect((function(ctx, entry) {
                return !tester(ctx, entry);
            }), next);
        }
        exports["default"] = {
            withExpect,
            withTruth,
            withFalsy
        };
    },
    "../shared/browser/node_modules/@funnyecho/logger/dist/transports/field.js": function(__unused_webpack_module, exports, __webpack_require__) {
        "use strict";
        var __importDefault = this && this.__importDefault || function(mod) {
            return mod && mod.__esModule ? mod : {
                default: mod
            };
        };
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        var field_1 = __importDefault(__webpack_require__("../shared/browser/node_modules/@funnyecho/logger/dist/field.js"));
        function withFields(fields) {
            return function(_, entry) {
                entry.fields = field_1.default.mergeFieldList(entry.fields, fields);
            };
        }
        exports["default"] = {
            withFields
        };
    },
    "../shared/browser/node_modules/@funnyecho/logger/dist/transports/index.js": function(__unused_webpack_module, exports, __webpack_require__) {
        "use strict";
        var __assign = this && this.__assign || function() {
            __assign = Object.assign || function(t) {
                for (var s, i = 1, n = arguments.length; i < n; i++) {
                    s = arguments[i];
                    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
                }
                return t;
            };
            return __assign.apply(this, arguments);
        };
        var __importDefault = this && this.__importDefault || function(mod) {
            return mod && mod.__esModule ? mod : {
                default: mod
            };
        };
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        var field_1 = __importDefault(__webpack_require__("../shared/browser/node_modules/@funnyecho/logger/dist/transports/field.js"));
        var level_1 = __importDefault(__webpack_require__("../shared/browser/node_modules/@funnyecho/logger/dist/transports/level.js"));
        var stdout_1 = __importDefault(__webpack_require__("../shared/browser/node_modules/@funnyecho/logger/dist/transports/stdout.js"));
        var expect_1 = __importDefault(__webpack_require__("../shared/browser/node_modules/@funnyecho/logger/dist/transports/expect.js"));
        var split_1 = __importDefault(__webpack_require__("../shared/browser/node_modules/@funnyecho/logger/dist/transports/split.js"));
        var concat_1 = __importDefault(__webpack_require__("../shared/browser/node_modules/@funnyecho/logger/dist/transports/concat.js"));
        exports["default"] = __assign(__assign(__assign(__assign(__assign(__assign({}, field_1.default), level_1.default), stdout_1.default), expect_1.default), split_1.default), concat_1.default);
    },
    "../shared/browser/node_modules/@funnyecho/logger/dist/transports/level.js": function(__unused_webpack_module, exports, __webpack_require__) {
        "use strict";
        var __importDefault = this && this.__importDefault || function(mod) {
            return mod && mod.__esModule ? mod : {
                default: mod
            };
        };
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        var level_1 = __importDefault(__webpack_require__("../shared/browser/node_modules/@funnyecho/logger/dist/level.js"));
        function withLevel(level) {
            return {
                capture: function(_, entry) {
                    if (entry && entry.level > level) return false;
                }
            };
        }
        function withDebugLevel() {
            return withLevel(level_1.default.LevelEnum.debug);
        }
        function withInfoLevel() {
            return withLevel(level_1.default.LevelEnum.info);
        }
        exports["default"] = {
            withLevel,
            withDebugLevel,
            withInfoLevel
        };
    },
    "../shared/browser/node_modules/@funnyecho/logger/dist/transports/split.js": function(__unused_webpack_module, exports, __webpack_require__) {
        "use strict";
        var __importDefault = this && this.__importDefault || function(mod) {
            return mod && mod.__esModule ? mod : {
                default: mod
            };
        };
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        var transport_1 = __importDefault(__webpack_require__("../shared/browser/node_modules/@funnyecho/logger/dist/transport.js"));
        function withSplit(tester, truth, falsy) {
            return {
                capture: function(ctx, entry) {
                    var useTruth = !!tester(ctx, entry);
                    if (useTruth && null != truth) return transport_1.default.traverseCapturedTransportList(ctx, entry, [ truth ]);
                    if (!useTruth && null != falsy) return transport_1.default.traverseCapturedTransportList(ctx, entry, [ falsy ]);
                },
                bubble: function(ctx, entry) {
                    var useTruth = !!tester(ctx, entry);
                    if (useTruth && null != truth) return transport_1.default.traverseBubbledTransportList(ctx, entry, [ truth ]);
                    if (!useTruth && null != falsy) return transport_1.default.traverseBubbledTransportList(ctx, entry, [ falsy ]);
                }
            };
        }
        exports["default"] = {
            withSplit
        };
    },
    "../shared/browser/node_modules/@funnyecho/logger/dist/transports/stdout.js": function(__unused_webpack_module, exports, __webpack_require__) {
        "use strict";
        var __importDefault = this && this.__importDefault || function(mod) {
            return mod && mod.__esModule ? mod : {
                default: mod
            };
        };
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        var level_1 = __importDefault(__webpack_require__("../shared/browser/node_modules/@funnyecho/logger/dist/level.js"));
        var field_1 = __importDefault(__webpack_require__("../shared/browser/node_modules/@funnyecho/logger/dist/field.js"));
        function withStdout() {
            return {
                bubble: function(_, entry) {
                    var owner = entry.owner, level = entry.level, message = entry.message, fields = entry.fields;
                    var label = message + " [" + owner + "]";
                    var fieldMap = field_1.default.mapFieldList(fields);
                    var output = label + " " + JSON.stringify(fieldMap, null, 2);
                    switch (level) {
                      case level_1.default.LevelEnum.error:
                      case level_1.default.LevelEnum.fatal:
                        console.error(output);
                        break;

                      case level_1.default.LevelEnum.info:
                        console.info(output);
                        break;

                      default:
                      case level_1.default.LevelEnum.debug:
                        console.debug(output);
                    }
                }
            };
        }
        exports["default"] = {
            withStdout
        };
    },
    "../shared/browser/node_modules/@funnyecho/promise/dist/index.js": function(__unused_webpack_module, exports) {
        "use strict";
        var __awaiter = this && this.__awaiter || function(thisArg, _arguments, P, generator) {
            function adopt(value) {
                return value instanceof P ? value : new P((function(resolve) {
                    resolve(value);
                }));
            }
            return new (P || (P = Promise))((function(resolve, reject) {
                function fulfilled(value) {
                    try {
                        step(generator.next(value));
                    } catch (e) {
                        reject(e);
                    }
                }
                function rejected(value) {
                    try {
                        step(generator["throw"](value));
                    } catch (e) {
                        reject(e);
                    }
                }
                function step(result) {
                    result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
                }
                step((generator = generator.apply(thisArg, _arguments || [])).next());
            }));
        };
        var __generator = this && this.__generator || function(thisArg, body) {
            var f, y, t, g, _ = {
                label: 0,
                sent: function() {
                    if (1 & t[0]) throw t[1];
                    return t[1];
                },
                trys: [],
                ops: []
            };
            return g = {
                next: verb(0),
                throw: verb(1),
                return: verb(2)
            }, "function" === typeof Symbol && (g[Symbol.iterator] = function() {
                return this;
            }), g;
            function verb(n) {
                return function(v) {
                    return step([ n, v ]);
                };
            }
            function step(op) {
                if (f) throw new TypeError("Generator is already executing.");
                while (_) try {
                    if (f = 1, y && (t = 2 & op[0] ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 
                    0) : y.next) && !(t = t.call(y, op[1])).done) return t;
                    if (y = 0, t) op = [ 2 & op[0], t.value ];
                    switch (op[0]) {
                      case 0:
                      case 1:
                        t = op;
                        break;

                      case 4:
                        _.label++;
                        return {
                            value: op[1],
                            done: false
                        };

                      case 5:
                        _.label++;
                        y = op[1];
                        op = [ 0 ];
                        continue;

                      case 7:
                        op = _.ops.pop();
                        _.trys.pop();
                        continue;

                      default:
                        if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (6 === op[0] || 2 === op[0])) {
                            _ = 0;
                            continue;
                        }
                        if (3 === op[0] && (!t || op[1] > t[0] && op[1] < t[3])) {
                            _.label = op[1];
                            break;
                        }
                        if (6 === op[0] && _.label < t[1]) {
                            _.label = t[1];
                            t = op;
                            break;
                        }
                        if (t && _.label < t[2]) {
                            _.label = t[2];
                            _.ops.push(op);
                            break;
                        }
                        if (t[2]) _.ops.pop();
                        _.trys.pop();
                        continue;
                    }
                    op = body.call(thisArg, _);
                } catch (e) {
                    op = [ 6, e ];
                    y = 0;
                } finally {
                    f = t = 0;
                }
                if (5 & op[0]) throw op[1];
                return {
                    value: op[0] ? op[1] : void 0,
                    done: true
                };
            }
        };
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        function resolveAfterDuration(dur) {
            return __awaiter(this, void 0, void 0, (function() {
                return __generator(this, (function(_a) {
                    if (dur <= 0) return [ 2, Promise.resolve() ];
                    return [ 2, new Promise((function(resolve) {
                        setTimeout((function() {
                            resolve();
                        }), dur);
                    })) ];
                }));
            }));
        }
        function resolveAfterSeconds(s) {
            return __awaiter(this, void 0, void 0, (function() {
                return __generator(this, (function(_a) {
                    if (s <= 0) return [ 2, Promise.resolve() ];
                    return [ 2, new Promise((function(resolve) {
                        setTimeout((function() {
                            resolve();
                        }), 1e3 * s);
                    })) ];
                }));
            }));
        }
        function resolveAfterEventBubbled($ele, eventName) {
            return __awaiter(this, void 0, void 0, (function() {
                return __generator(this, (function(_a) {
                    return [ 2, new Promise((function(resolve) {
                        var listener = function(e) {
                            $ele.removeEventListener(eventName, listener);
                            resolve(e);
                        };
                        $ele.addEventListener(eventName, listener);
                    })) ];
                }));
            }));
        }
        function promiseResolvable() {
            var resolver;
            var resolved = false;
            var promise = new Promise((function(res) {
                if (resolved) res(); else resolver = res;
            }));
            var resolveFunc = function() {
                resolved = true;
                "function" === typeof resolver && resolver();
            };
            return [ promise, resolveFunc ];
        }
        var zombie = new Promise((function(_) {}));
        exports["default"] = {
            zombie,
            resolvable: promiseResolvable,
            resolveAfterEventBubbled,
            resolveAfterSeconds,
            resolveAfterDuration
        };
    },
    "../shared/browser/node_modules/@funnyecho/time/dist/index.js": (__unused_webpack_module, exports) => {
        "use strict";
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        var Millisecond = 1;
        var Second = 1e3 * Millisecond;
        var Minute = 60 * Second;
        var Hour = 60 * Minute;
        var Day = 24 * Hour;
        var Week = 7 * Day;
        var Time = function() {
            function Time(v) {
                this.v = v;
            }
            Object.defineProperty(Time.prototype, "timestamp", {
                get: function() {
                    return this.v;
                },
                enumerable: false,
                configurable: true
            });
            Time.prototype.add = function(d) {
                return new Time(this.v + d);
            };
            Time.prototype.sub = function(d) {
                return new Time(this.v - d);
            };
            Time.prototype.duration = function(t) {
                return this.v - t.timestamp;
            };
            return Time;
        }();
        function time(v) {
            return new Time(v);
        }
        function now() {
            return time(Date.now());
        }
        function later(dur) {
            return now().add(dur);
        }
        function former(dur) {
            return now().sub(dur);
        }
        exports["default"] = {
            time,
            now,
            later,
            former,
            Millisecond,
            Second,
            Minute,
            Hour,
            Day,
            Week
        };
    },
    "../shared/browser/node_modules/@payment/gateway-sdk/dist/index.js": function(__unused_webpack_module, exports, __webpack_require__) {
        !function(e, t) {
            true ? t(exports) : 0;
        }(0, (function(e) {
            "use strict";
            var t = function(e, n) {
                return (t = Object.setPrototypeOf || {
                    __proto__: []
                } instanceof Array && function(e, t) {
                    e.__proto__ = t;
                } || function(e, t) {
                    for (var n in t) t.hasOwnProperty(n) && (e[n] = t[n]);
                })(e, n);
            };
            function n(e, n) {
                function i() {
                    this.constructor = e;
                }
                t(e, n), e.prototype = null === n ? Object.create(n) : (i.prototype = n.prototype, 
                new i);
            }
            var i = function() {
                return (i = Object.assign || function(e) {
                    for (var t, n = 1, i = arguments.length; n < i; n++) for (var a in t = arguments[n]) Object.prototype.hasOwnProperty.call(t, a) && (e[a] = t[a]);
                    return e;
                }).apply(this, arguments);
            };
            function a(e, t, n, i) {
                return new (n || (n = Promise))((function(a, o) {
                    function l(e) {
                        try {
                            d(i.next(e));
                        } catch (e) {
                            o(e);
                        }
                    }
                    function r(e) {
                        try {
                            d(i.throw(e));
                        } catch (e) {
                            o(e);
                        }
                    }
                    function d(e) {
                        var t;
                        e.done ? a(e.value) : (t = e.value, t instanceof n ? t : new n((function(e) {
                            e(t);
                        }))).then(l, r);
                    }
                    d((i = i.apply(e, t || [])).next());
                }));
            }
            function o(e, t) {
                var n, i, a, o, l = {
                    label: 0,
                    sent: function() {
                        if (1 & a[0]) throw a[1];
                        return a[1];
                    },
                    trys: [],
                    ops: []
                };
                return o = {
                    next: r(0),
                    throw: r(1),
                    return: r(2)
                }, "function" == typeof Symbol && (o[Symbol.iterator] = function() {
                    return this;
                }), o;
                function r(o) {
                    return function(r) {
                        return function(o) {
                            if (n) throw new TypeError("Generator is already executing.");
                            for (;l; ) try {
                                if (n = 1, i && (a = 2 & o[0] ? i.return : o[0] ? i.throw || ((a = i.return) && a.call(i), 
                                0) : i.next) && !(a = a.call(i, o[1])).done) return a;
                                switch (i = 0, a && (o = [ 2 & o[0], a.value ]), o[0]) {
                                  case 0:
                                  case 1:
                                    a = o;
                                    break;

                                  case 4:
                                    return l.label++, {
                                        value: o[1],
                                        done: !1
                                    };

                                  case 5:
                                    l.label++, i = o[1], o = [ 0 ];
                                    continue;

                                  case 7:
                                    o = l.ops.pop(), l.trys.pop();
                                    continue;

                                  default:
                                    if (!(a = l.trys, (a = a.length > 0 && a[a.length - 1]) || 6 !== o[0] && 2 !== o[0])) {
                                        l = 0;
                                        continue;
                                    }
                                    if (3 === o[0] && (!a || o[1] > a[0] && o[1] < a[3])) {
                                        l.label = o[1];
                                        break;
                                    }
                                    if (6 === o[0] && l.label < a[1]) {
                                        l.label = a[1], a = o;
                                        break;
                                    }
                                    if (a && l.label < a[2]) {
                                        l.label = a[2], l.ops.push(o);
                                        break;
                                    }
                                    a[2] && l.ops.pop(), l.trys.pop();
                                    continue;
                                }
                                o = t.call(e, l);
                            } catch (e) {
                                o = [ 6, e ], i = 0;
                            } finally {
                                n = a = 0;
                            }
                            if (5 & o[0]) throw o[1];
                            return {
                                value: o[0] ? o[1] : void 0,
                                done: !0
                            };
                        }([ o, r ]);
                    };
                }
            }
            const l = new Set([ "a", "altGlyph", "altGlyphDef", "altGlyphItem", "animate", "animateColor", "animateMotion", "animateTransform", "animation", "audio", "canvas", "circle", "clipPath", "color-profile", "cursor", "defs", "desc", "discard", "ellipse", "feBlend", "feColorMatrix", "feComponentTransfer", "feComposite", "feConvolveMatrix", "feDiffuseLighting", "feDisplacementMap", "feDistantLight", "feDropShadow", "feFlood", "feFuncA", "feFuncB", "feFuncG", "feFuncR", "feGaussianBlur", "feImage", "feMerge", "feMergeNode", "feMorphology", "feOffset", "fePointLight", "feSpecularLighting", "feSpotLight", "feTile", "feTurbulence", "filter", "font", "font-face", "font-face-format", "font-face-name", "font-face-src", "font-face-uri", "foreignObject", "g", "glyph", "glyphRef", "handler", "hkern", "iframe", "image", "line", "linearGradient", "listener", "marker", "mask", "metadata", "missing-glyph", "mpath", "path", "pattern", "polygon", "polyline", "prefetch", "radialGradient", "rect", "script", "set", "solidColor", "stop", "style", "svg", "switch", "symbol", "tbreak", "text", "textArea", "textPath", "title", "tref", "tspan", "unknown", "use", "video", "view", "vkern" ]);
            l.delete("a"), l.delete("audio"), l.delete("canvas"), l.delete("iframe"), l.delete("script"), 
            l.delete("video");
            const r = /acit|ex(?:s|g|n|p|$)|rph|ows|mnc|ntw|ine[ch]|zoo|^ord/i, d = (e, t) => {
                for (const [n, i] of Object.entries(t)) n.startsWith("-") ? e.style.setProperty(n, i) : "number" != typeof i || r.test(n) ? e.style[n] = i : e.style[n] = i + "px";
            }, s = e => "string" == typeof e ? l.has(e) ? document.createElementNS("http://www.w3.org/2000/svg", e) : document.createElement(e) : (e => e === DocumentFragment)(e) ? document.createDocumentFragment() : e(e.defaultProps), u = (e, t, n) => {
                null != n && (/^xlink[AHRST]/.test(t) ? e.setAttributeNS("http://www.w3.org/1999/xlink", t.replace("xlink", "xlink:").toLowerCase(), n) : e.setAttribute(t, n));
            }, c = (e, t) => {
                for (const n of t) n instanceof Node ? e.appendChild(n) : Array.isArray(n) ? c(e, n) : "boolean" != typeof n && null != n && e.appendChild(document.createTextNode(n));
            }, p = (e, t, ...n) => {
                var i;
                const a = s(e);
                if (c(a, n), a instanceof DocumentFragment || !t) return a;
                for (let [e, n] of Object.entries(t)) if ("htmlFor" === e && (e = "for"), "class" === e || "className" === e) {
                    const e = null !== (i = a.getAttribute("class")) && void 0 !== i ? i : "";
                    u(a, "class", (e + " " + String(n)).trim());
                } else if ("style" === e) d(a, n); else if (e.startsWith("on")) {
                    const t = e.slice(2).toLowerCase().replace(/^-/, "");
                    a.addEventListener(t, n);
                } else "dangerouslySetInnerHTML" === e && "__html" in n ? a.innerHTML = n.__html : "key" !== e && !1 !== n && u(a, e, !0 === n ? "" : n);
                return a;
            };
            var v = function() {
                function e() {}
                return e.prototype.renderToDom = function(e, t) {
                    t.length > 0 && document.querySelector("#" + t) ? (console.log("将挂载到 DOM id 为 " + t + " 的节点上"), 
                    document.querySelector("#" + t).appendChild(e)) : (console.log("domId 无效，将挂载到 body "), 
                    document.querySelector("body").append(e));
                }, e;
            }();
            "undefined" != typeof globalThis ? globalThis : "undefined" != typeof window ? window : "undefined" != typeof __webpack_require__.g ? __webpack_require__.g : "undefined" != typeof self && self;
            function m(e, t) {
                return e(t = {
                    exports: {}
                }, t.exports), t.exports;
            }
            var y = m((function(e, t) {
                e.exports = function() {
                    var e = function() {}, t = {}, n = {}, i = {};
                    function a(e, t) {
                        if (e) {
                            var a = i[e];
                            if (n[e] = t, a) for (;a.length; ) a[0](e, t), a.splice(0, 1);
                        }
                    }
                    function o(t, n) {
                        t.call && (t = {
                            success: t
                        }), n.length ? (t.error || e)(n) : (t.success || e)(t);
                    }
                    function l(t, n, i, a) {
                        var o, r, d = document, s = i.async, u = (i.numRetries || 0) + 1, c = i.before || e, p = t.replace(/[\?|#].*$/, ""), v = t.replace(/^(css|img)!/, "");
                        a = a || 0, /(^css!|\.css$)/.test(p) ? ((r = d.createElement("link")).rel = "stylesheet", 
                        r.href = v, (o = "hideFocus" in r) && r.relList && (o = 0, r.rel = "preload", r.as = "style")) : /(^img!|\.(png|gif|jpg|svg|webp)$)/.test(p) ? (r = d.createElement("img")).src = v : ((r = d.createElement("script")).src = t, 
                        r.async = void 0 === s || s), r.onload = r.onerror = r.onbeforeload = function(e) {
                            var d = e.type[0];
                            if (o) try {
                                r.sheet.cssText.length || (d = "e");
                            } catch (e) {
                                18 != e.code && (d = "e");
                            }
                            if ("e" == d) {
                                if ((a += 1) < u) return l(t, n, i, a);
                            } else if ("preload" == r.rel && "style" == r.as) return r.rel = "stylesheet";
                            n(t, d, e.defaultPrevented);
                        }, !1 !== c(t, r) && d.head.appendChild(r);
                    }
                    function r(e, n, i) {
                        var r, d;
                        if (n && n.trim && (r = n), d = (r ? i : n) || {}, r) {
                            if (r in t) throw "LoadJS";
                            t[r] = !0;
                        }
                        function s(t, n) {
                            !function(e, t, n) {
                                var i, a, o = (e = e.push ? e : [ e ]).length, r = o, d = [];
                                for (i = function(e, n, i) {
                                    if ("e" == n && d.push(e), "b" == n) {
                                        if (!i) return;
                                        d.push(e);
                                    }
                                    --o || t(d);
                                }, a = 0; a < r; a++) l(e[a], i, n);
                            }(e, (function(e) {
                                o(d, e), t && o({
                                    success: t,
                                    error: n
                                }, e), a(r, e);
                            }), d);
                        }
                        if (d.returnPromise) return new Promise(s);
                        s();
                    }
                    return r.ready = function(e, t) {
                        return function(e, t) {
                            e = e.push ? e : [ e ];
                            var a, o, l, r = [], d = e.length, s = d;
                            for (a = function(e, n) {
                                n.length && r.push(e), --s || t(r);
                            }; d--; ) o = e[d], (l = n[o]) ? a(o, l) : (i[o] = i[o] || []).push(a);
                        }(e, (function(e) {
                            o(t, e);
                        })), r;
                    }, r.done = function(e) {
                        a(e, []);
                    }, r.reset = function() {
                        t = {}, n = {}, i = {};
                    }, r.isDefined = function(e) {
                        return e in t;
                    }, r;
                }();
            })), h = function(e) {
                function t(t, n) {
                    var i, l, r = e.call(this) || this;
                    console.log("publicKey", t, "initialData", n), r.publicKey = t, r.initialData = n;
                    var d = (new Date).getTime();
                    r.renderHtml(), y([ "https://2pay-js.2checkout.com/v1/2pay.js" ], (function() {
                        var e, i, l, d, s, u;
                        console.log("--------2checkout.js loaded-------"), r.jsPaymentClient = new TwoPayClient(t.key), 
                        n.language && r.jsPaymentClient.setup.setLanguage(n.language), r.component = r.jsPaymentClient.components.create("card", (e = n.styleOption, 
                        i = null == e ? void 0 : e.commonStyle, l = null == e ? void 0 : e.componentStyle, 
                        d = null == l ? void 0 : l.cardInputStyle, s = null == l ? void 0 : l.expirationInputStyle, 
                        u = null == l ? void 0 : l.cvvInputStyle, {
                            margin: 0,
                            fontFamily: (null == i ? void 0 : i.fontFamily) || "Helvetica, sans-serif",
                            fontSize: (null == i ? void 0 : i.fontSize) || "1rem",
                            fontWeight: (null == i ? void 0 : i.fontWeight) || "400",
                            color: (null == i ? void 0 : i.color) || "#212529",
                            textAlign: (null == i ? void 0 : i.textAlign) || "left",
                            backgroundColor: (null == i ? void 0 : i.backgroundColor) || "#ffffff",
                            "*": {
                                boxSizing: (null == i ? void 0 : i.boxSizing) || "border-box"
                            },
                            ".card-number .control-label": (null == d ? void 0 : d.labelStyle) || {},
                            ".card-number .input-wrapper": (null == d ? void 0 : d.inputWrapperStyle) || {},
                            ".card-number .form-control": (null == d ? void 0 : d.inputStyle) || {},
                            ".card-number .validation-message": (null == d ? void 0 : d.messageStyle) || {},
                            ".card-expiration-date .control-label": (null == s ? void 0 : s.labelStyle) || {},
                            ".card-expiration-date .input-wrapper": (null == s ? void 0 : s.inputWrapperStyle) || {},
                            ".card-expiration-date .form-control": (null == s ? void 0 : s.inputStyle) || {},
                            ".card-expiration-date .validation-message": (null == s ? void 0 : s.messageStyle) || {},
                            ".card-security-code .control-label": (null == u ? void 0 : u.labelStyle) || {},
                            ".card-security-code .input-wrapper": (null == u ? void 0 : u.inputWrapperStyle) || {},
                            ".card-security-code .form-control": (null == u ? void 0 : u.inputStyle) || {},
                            ".card-security-code .validation-message": (null == u ? void 0 : u.messageStyle) || {},
                            ".no-gutters": {
                                marginRight: 0,
                                marginLeft: 0
                            },
                            ".row": {
                                display: "flex",
                                flexWrap: "wrap"
                            },
                            ".col": {
                                flexBasis: "0",
                                flexGrow: "1",
                                maxWidth: "100%",
                                padding: "0",
                                position: "relative",
                                width: "100%"
                            },
                            div: {
                                display: "block"
                            },
                            ".field-container": {
                                paddingBottom: "14px"
                            },
                            ".field-wrapper": {
                                paddingRight: "25px"
                            },
                            ".input-wrapper": {
                                position: "relative"
                            },
                            label: {
                                display: "inline-block",
                                marginBottom: "9px",
                                color: "#313131",
                                fontWeight: "300",
                                fontSize: "14px",
                                lineHeight: "17px"
                            },
                            input: {
                                outline: "none",
                                position: "absolute",
                                overflow: "visible",
                                margin: 0,
                                fontFamily: "inherit",
                                display: "block",
                                width: "100%",
                                height: "42px",
                                padding: "10px 12px",
                                fontSize: "18px",
                                fontWeight: "400",
                                lineHeight: "22px",
                                color: "#313131",
                                backgroundColor: "#fff",
                                backgroundClip: "padding-box",
                                border: "1px solid #CBCBCB",
                                borderRadius: "3px",
                                transition: "border-color .15s ease-in-out,box-shadow .15s ease-in-out",
                                ontline: "0"
                            },
                            ".form-control": {
                                position: "relative"
                            },
                            "input:focus": {
                                border: "1px solid #5D5D5D",
                                backgroundColor: "#FFFDF2"
                            },
                            ".is-error input": {
                                border: "1px solid #D9534F"
                            },
                            ".is-error input:focus": {
                                backgroundColor: "#D9534F0B"
                            },
                            ".is-valid input": {
                                border: "1px solid #1BB43F"
                            },
                            ".is-valid input:focus": {
                                backgroundColor: "#1BB43F0B"
                            },
                            ".validation-message": {
                                color: "#D9534F",
                                fontSize: "10px",
                                fontStyle: "italic",
                                marginTop: "6px",
                                marginBottom: "-5px",
                                display: "block",
                                lineHeight: "1"
                            },
                            ".card-expiration-date": {
                                paddingRight: ".5rem"
                            },
                            ".is-empty input": {
                                color: "#EBEBEB"
                            },
                            ".lock-icon": {
                                top: "calc(50% - 7px)",
                                right: "10px"
                            },
                            ".valid-icon": {
                                top: "calc(50% - 8px)",
                                right: "-25px"
                            },
                            ".error-icon": {
                                top: "calc(50% - 8px)",
                                right: " -25px"
                            },
                            ".card-icon": {
                                top: "calc(50% - 10px)",
                                left: "10px",
                                display: "none"
                            },
                            ".is-empty .card-icon": {
                                display: "block"
                            },
                            ".is-focused .card-icon": {
                                display: "none"
                            },
                            ".card-type-icon": {
                                right: "30px",
                                display: "block"
                            },
                            ".card-type-icon.visa": {
                                top: "calc(50% - 14px)"
                            },
                            ".card-type-icon.mastercard": {
                                top: "calc(50% - 14.5px)"
                            },
                            ".card-type-icon.amex": {
                                top: "calc(50% - 14px)"
                            },
                            ".card-type-icon.discover": {
                                top: "calc(50% - 14px)"
                            },
                            ".card-type-icon.jcb": {
                                top: "calc(50% - 14px)"
                            },
                            ".card-type-icon.dankort": {
                                top: "calc(50% - 14px)"
                            },
                            ".card-type-icon.cartebleue": {
                                top: "calc(50% - 14px)"
                            },
                            ".card-type-icon.diners": {
                                top: "calc(50% - 14px)"
                            },
                            ".card-type-icon.elo": {
                                top: "calc(50% - 14px)"
                            }
                        })), r.component.mount("#card-element"), r.initialData.btnText && document.getElementById("payment-form").addEventListener("submit", (function(e) {
                            return a(r, void 0, void 0, (function() {
                                var t, n, i, a;
                                return o(this, (function(o) {
                                    switch (o.label) {
                                      case 0:
                                        return e.preventDefault(), t = (null === (a = null === (i = this.initialData) || void 0 === i ? void 0 : i.fieldData) || void 0 === a ? void 0 : a.userName) || document.querySelector("#name").value, 
                                        [ 4, this.generateToken(this.jsPaymentClient, this.component, t) ];

                                      case 1:
                                        return n = o.sent(), this.initialData.createToken && this.initialData.createToken(n), 
                                        [ 2 ];
                                    }
                                }));
                            }));
                        }));
                    }));
                    var s = (new Date).getTime() - d;
                    return null === (l = null === (i = r.initialData) || void 0 === i ? void 0 : i.reportSDKLoading) || void 0 === l || l.call(i, {
                        time: s
                    }), r;
                }
                return n(t, e), t.prototype.generateToken = function(e, t, n) {
                    return a(this, void 0, void 0, (function() {
                        var i, a;
                        return o(this, (function(o) {
                            switch (o.label) {
                              case 0:
                                this.nameOnblur(), i = {
                                    name: n
                                }, o.label = 1;

                              case 1:
                                return o.trys.push([ 1, 3, , 4 ]), [ 4, e.tokens.generate(t, i) ];

                              case 2:
                                return [ 2, o.sent() ];

                              case 3:
                                return a = o.sent(), [ 2, {
                                    error: a.toString().trim().split("\n")[0]
                                } ];

                              case 4:
                                return [ 2 ];
                            }
                        }));
                    }));
                }, t.prototype.getToken = function(e) {
                    return a(this, void 0, void 0, (function() {
                        var t;
                        return o(this, (function(n) {
                            switch (n.label) {
                              case 0:
                                return t = e || document.querySelector("#name").value, [ 4, this.generateToken(this.jsPaymentClient, this.component, t) ];

                              case 1:
                                return [ 2, n.sent() ];
                            }
                        }));
                    }));
                }, t.prototype.nameOnblur = function() {
                    var e = document.querySelector("#name-field-wrapper"), t = document.querySelector("#name").value, n = document.querySelector("#name-message");
                    t ? (n.style.display = "none", e.setAttribute("class", "name-field-wrapper is-valid")) : (n.style.display = "inline-block", 
                    e.setAttribute("class", "name-field-wrapper is-error"));
                }, t.prototype.renderHtml = function() {
                    var e, t, n, a, o, l, r, d, s = function(e) {
                        var t, n, a, o, l, r, d, s, u, c;
                        return {
                            common: (null == e ? void 0 : e.commonStyle) || {},
                            form: i({
                                fontFamily: "Helvetica, sans-serif"
                            }, (null === (t = null == e ? void 0 : e.componentStyle) || void 0 === t ? void 0 : t.formStyle) || {}),
                            name: {
                                wrapper: i({
                                    paddingBottom: "14px",
                                    paddingRight: "25px"
                                }, (null === (a = null === (n = null == e ? void 0 : e.componentStyle) || void 0 === n ? void 0 : n.nameInputStyle) || void 0 === a ? void 0 : a.inputWrapperStyle) || {}),
                                label: i({
                                    display: "inline-block",
                                    marginBottom: "9px",
                                    color: "#313131",
                                    fontSize: "14px",
                                    fontWeight: "300",
                                    lineHeight: "17px"
                                }, (null === (l = null === (o = null == e ? void 0 : e.componentStyle) || void 0 === o ? void 0 : o.nameInputStyle) || void 0 === l ? void 0 : l.labelStyle) || {}),
                                input: i({
                                    padding: "10px 12px",
                                    outline: "none",
                                    margin: 0,
                                    fontFamily: "inherit",
                                    display: "block",
                                    width: "100%",
                                    height: "42px",
                                    fontSize: "18px",
                                    fontWeight: "400",
                                    lineHeight: "22px",
                                    color: "#313131",
                                    backgroundClip: "padding-box",
                                    borderRadius: "3px",
                                    transition: "border-color .15s ease-in-out,box-shadow .15s ease-in-out",
                                    ontline: "0"
                                }, (null === (d = null === (r = null == e ? void 0 : e.componentStyle) || void 0 === r ? void 0 : r.nameInputStyle) || void 0 === d ? void 0 : d.inputStyle) || {}),
                                message: i({
                                    display: "none",
                                    color: "#D9534F",
                                    fontSize: "10px",
                                    fontStyle: "italic",
                                    marginTop: "6px",
                                    marginBottom: "-5px",
                                    lineHeight: "1"
                                }, (null === (u = null === (s = null == e ? void 0 : e.componentStyle) || void 0 === s ? void 0 : s.nameInputStyle) || void 0 === u ? void 0 : u.messageStyle) || {})
                            },
                            submit: {
                                wrapper: {
                                    paddingRight: "25px",
                                    width: "100%",
                                    textAlign: "center"
                                },
                                button: i({
                                    color: "#fff",
                                    backgroundColor: "#007bff",
                                    borderColor: "#007bff",
                                    display: "inline-block",
                                    fontWeight: "400",
                                    textAlign: "center",
                                    verticalAlign: "middle",
                                    border: "1px solid transparent",
                                    padding: ".375rem .75rem",
                                    fontSize: "1rem",
                                    lineHeight: "1.5",
                                    borderRadius: ".25rem"
                                }, (null === (c = null == e ? void 0 : e.componentStyle) || void 0 === c ? void 0 : c.btnStyle) || {})
                            }
                        };
                    }(null === (e = this.initialData) || void 0 === e ? void 0 : e.styleOption), u = {
                        nameOnblur: this.nameOnblur,
                        userNamePlaceholder: null === (n = null === (t = this.initialData) || void 0 === t ? void 0 : t.placeholder) || void 0 === n ? void 0 : n.userNamePlaceholder,
                        nameInputText: null === (o = null === (a = this.initialData) || void 0 === a ? void 0 : a.label) || void 0 === o ? void 0 : o.userNameLabel,
                        submitBtnText: null === (l = this.initialData) || void 0 === l ? void 0 : l.btnText,
                        nameMessageText: null === (d = null === (r = this.initialData) || void 0 === r ? void 0 : r.errorTips) || void 0 === d ? void 0 : d.userNameErrorTips,
                        style: s
                    };
                    this.renderToDom(function(e) {
                        return p("div", {
                            className: "two-checkout",
                            style: e.style.common
                        }, p("div", {
                            dangerouslySetInnerHTML: {
                                __html: "<style>\n        .two-checkout * {\n          box-sizing: border-box;\n        }\n        .name-input {\n          border: 1px solid #CBCBCB;\n          background-color: #fff,\n        }\n        input:focus {\n          border          : 1px solid #5D5D5D;\n          background-color: #FFFDF2;\n        }\n        \n        .is-error input {\n          border: 1px solid #D9534F;\n        }\n        \n        .is-error input:focus {\n          background-color: #D9534F0B;\n        }\n        \n        .is-valid input {\n          border: 1px solid #1BB43F;\n        }\n        \n        .is-valid input:focus {\n          background-color: #1BB43F0B;\n        }\n                </style>"
                            }
                        }), p("form", {
                            type: "post",
                            id: "payment-form",
                            style: e.style.form
                        }, p("div", {
                            className: "twocheckout-group"
                        }, (null == e ? void 0 : e.nameInputText) ? p("div", {
                            id: "name-field-wrapper",
                            class: "name-field-wrapper",
                            style: e.style.name.wrapper
                        }, p("label", {
                            for: "name",
                            class: "name-label",
                            style: e.style.name.label
                        }, null == e ? void 0 : e.nameInputText), p("input", {
                            type: "text",
                            id: "name",
                            name: "name",
                            class: "name-input",
                            style: e.style.name.input,
                            oninput: function(e) {
                                e.target.value = e.target.value.replace(/[1-9]/g, "");
                            },
                            placeholder: "" + ((null == e ? void 0 : e.userNamePlaceholder) || ""),
                            onblur: function() {
                                e.nameOnblur();
                            }
                        }), p("span", {
                            id: "name-message",
                            style: e.style.name.message
                        }, e.nameMessageText || "Card holder name is empty.")) : null, p("div", {
                            id: "card-element",
                            className: "card-element"
                        }), (null == e ? void 0 : e.submitBtnText) ? p("div", {
                            style: e.style.submit.wrapper
                        }, p("button", {
                            className: "twocheckout-btn",
                            style: e.style.submit.button,
                            type: "submit"
                        }, null == e ? void 0 : e.submitBtnText)) : null)));
                    }(u), this.initialData.domId);
                }, t;
            }(v);
            var b, f = function(e) {
                null == e || e.commonStyle;
                var t = null == e ? void 0 : e.componentStyle, n = null == t ? void 0 : t.formStyle, a = null == t ? void 0 : t.nameInputStyle, o = null == t ? void 0 : t.cardInputStyle, l = null == t ? void 0 : t.expirationInputStyle, r = null == t ? void 0 : t.cvvInputStyle, d = null == t ? void 0 : t.btnStyle;
                return {
                    ebanx_payment_form: i({
                        width: "100%"
                    }, n || {}),
                    ebanx_nameInputStyle_inputWrapperStyle: i({
                        width: "100%",
                        margin: "10px 0"
                    }, (null == a ? void 0 : a.inputWrapperStyle) || {}),
                    ebanx_nameInputStyle_labelStyle: i({
                        display: "block",
                        fontWeight: 400,
                        fontSize: "15px",
                        marginBottom: "8px"
                    }, (null == a ? void 0 : a.labelStyle) || {}),
                    ebanx_nameInputStyle_inputStyle: i({
                        width: "100%",
                        padding: "18px 15px",
                        borderRadius: "6px",
                        color: "#000000",
                        background: "#F3F3F3",
                        border: "0px",
                        fontSize: "16px",
                        outline: "none"
                    }, (null == a ? void 0 : a.inputStyle) || {}),
                    ebanx_nameInputStyle_messageStyle: {},
                    ebanx_cardInputStyle_inputWrapperStyle: i({
                        width: "100%",
                        margin: "10px 0"
                    }, (null == o ? void 0 : o.inputWrapperStyle) || {}),
                    ebanx_cardInputStyle_labelStyle: i({
                        display: "block",
                        fontWeight: 400,
                        fontSize: "15px",
                        marginBottom: "8px"
                    }, (null == o ? void 0 : o.labelStyle) || {}),
                    ebanx_cardInputStyle_inputStyle: i({
                        width: "100%",
                        padding: "18px 15px",
                        borderRadius: "6px",
                        color: "#000000",
                        background: "#F3F3F3",
                        border: "0px",
                        fontSize: "16px",
                        outline: "none"
                    }, (null == o ? void 0 : o.inputStyle) || {}),
                    ebanx_cardInputStyle_messageStyle: {},
                    ebanx_flex_style: {
                        display: "flex",
                        justifyContent: "space-between",
                        alignItems: "center"
                    },
                    ebanx_expirationInputStyle_inputWrapperStyle: i({
                        width: "48%",
                        margin: "10px 0"
                    }, (null == l ? void 0 : l.inputWrapperStyle) || {}),
                    ebanx_expirationInputStyle_labelStyle: i({
                        display: "block",
                        fontWeight: 400,
                        fontSize: "15px",
                        marginBottom: "8px"
                    }, (null == l ? void 0 : l.labelStyle) || {}),
                    ebanx_expirationInputStyle_inputStyle: i({
                        width: "100%",
                        padding: "18px 15px",
                        borderRadius: "6px",
                        color: "#000000",
                        background: "#F3F3F3",
                        border: "0px",
                        fontSize: "16px",
                        outline: "none"
                    }, (null == l ? void 0 : l.inputStyle) || {}),
                    ebanx_expirationInputStyle_messageStyle: {},
                    ebanx_cvvInputStyle_inputWrapperStyle: i({
                        width: "48%",
                        margin: "10px 0"
                    }, (null == r ? void 0 : r.inputWrapperStyle) || {}),
                    ebanx_cvvInputStyle_labelStyle: i({
                        display: "block",
                        fontWeight: 400,
                        fontSize: "15px",
                        marginBottom: "8px"
                    }, (null == r ? void 0 : r.labelStyle) || {}),
                    ebanx_cvvInputStyle_inputStyle: i({
                        width: "100%",
                        padding: "18px 15px",
                        borderRadius: "6px",
                        color: "#000000",
                        background: "#F3F3F3",
                        border: "0px",
                        fontSize: "16px",
                        outline: "none"
                    }, (null == r ? void 0 : r.inputStyle) || {}),
                    ebanx_cvvInputStyle_messageStyle: {},
                    ebanx_error_tips: i(i(i(i({
                        marginTop: "-10px",
                        lineHeight: "18px",
                        minHeight: "20px",
                        color: "red"
                    }, (null == a ? void 0 : a.messageStyle) || {}), (null == o ? void 0 : o.messageStyle) || {}), (null == l ? void 0 : l.messageStyle) || {}), (null == r ? void 0 : r.messageStyle) || {}),
                    ebanx_submit_btn: i({
                        position: "relative",
                        display: "flex",
                        justifyContent: "center",
                        alignItems: "center",
                        width: "100%",
                        color: "#ffffff",
                        padding: "15px",
                        fontSize: "16px",
                        opacity: 1,
                        background: (null == d ? void 0 : d.disableBackground) || (null == d ? void 0 : d.background) || "#dddddd",
                        outline: "none",
                        border: "0px",
                        borderRadius: "6px"
                    }, d)
                };
            }, g = function(e) {
                function t(t, n) {
                    var i, a, o = e.call(this) || this;
                    return o.publicKey = t, o.initialData = n, o.userNameErrorTips = "", o.cardNumberErrorTips = "", 
                    o.expirationErrorTips = "", o.cvvErrorTips = "", o.userName = "", o.cardNumber = "", 
                    o.expiration = "", o.cvv = "", o.loadEBANXJS(), o.renderHtml(), (null === (i = o.initialData) || void 0 === i ? void 0 : i.isWith3DS) && o.checkoutFieldData((null === (a = o.initialData) || void 0 === a ? void 0 : a.fieldData) || {}), 
                    o;
                }
                return n(t, e), t.prototype.loadEBANXJS = function() {
                    var e, t, n = this, i = (new Date).getTime();
                    y([ "https://js.ebanx.com/assets/songbird/songbird-" + (null !== (t = null === (e = this.initialData) || void 0 === e ? void 0 : e.env) && void 0 !== t ? t : "dev") + ".js", "https://js.ebanx.com/ebanx-libjs-latest.min.js" ], (function() {
                        var e, t, a, o, l;
                        console.log("success", EBANX), EBANX.config.setMode("prod" === (null === (e = n.initialData) || void 0 === e ? void 0 : e.env) ? "production" : "test"), 
                        EBANX.config.setPublishableKey(n.publicKey.key), EBANX.config.setCountry((null === (a = null === (t = n.initialData) || void 0 === t ? void 0 : t.country) || void 0 === a ? void 0 : a.toLowerCase()) || "br");
                        var r = (new Date).getTime() - i;
                        null === (l = null === (o = n.initialData) || void 0 === o ? void 0 : o.reportSDKLoading) || void 0 === l || l.call(o, {
                            time: r
                        });
                    }));
                }, t.prototype.renderHtml = function() {
                    var e, t, n, i, a, o, l = f(null === (e = this.initialData) || void 0 === e ? void 0 : e.styleOption);
                    this.renderToDom(function(e) {
                        var t, n, i, a, o, l, r, d, s, u, c, v, m, y, h, b, f, g, x, S, _, D, k, w, N, T, C, I, E, P, A, B;
                        return p("div", {
                            className: "ebanx_cover"
                        }, p("div", {
                            dangerouslySetInnerHTML: {
                                __html: "<style>\n        .ebanx_cover * {\n          box-sizing: border-box !important;\n          margin: 0;\n          padding: 0;\n        }\n        .ebanx_cover input::placeholder{\n          color: #999999 !important;\n        }\n        </style>"
                            }
                        }), p("div", {
                            className: "ebanx_payment_form",
                            style: e.styleOption.ebanx_payment_form
                        }, !e.userName && p("div", {
                            calssName: "ebanx_nameInputStyle_inputWrapperStyle",
                            style: e.styleOption.ebanx_nameInputStyle_inputWrapperStyle
                        }, (null === (t = null == e ? void 0 : e.label) || void 0 === t ? void 0 : t.userNameLabel) && p("label", {
                            for: "ebanx_user_name",
                            className: "ebanx_nameInputStyle_labelStyle",
                            style: null === (n = e.styleOption) || void 0 === n ? void 0 : n.ebanx_nameInputStyle_labelStyle
                        }, null !== (a = null === (i = null == e ? void 0 : e.label) || void 0 === i ? void 0 : i.userNameLabel) && void 0 !== a ? a : "User Name"), p("input", {
                            placeholder: "" + (null !== (l = null === (o = null == e ? void 0 : e.placeholder) || void 0 === o ? void 0 : o.userNamePlaceholder) && void 0 !== l ? l : "User Name"),
                            type: "text",
                            id: "ebanx_user_name",
                            className: "ebanx_nameInputStyle_inputStyle",
                            style: null === (r = e.styleOption) || void 0 === r ? void 0 : r.ebanx_nameInputStyle_inputStyle,
                            onkeyup: function(t) {
                                e.changeUserName(t, "onkeyup");
                            },
                            onblur: function(t) {
                                e.changeUserName(t, "onblur");
                            }
                        })), p("div", {
                            className: "ebanx_cardInputStyle_inputWrapperStyle",
                            style: e.styleOption.ebanx_cardInputStyle_inputWrapperStyle
                        }, (null === (d = null == e ? void 0 : e.label) || void 0 === d ? void 0 : d.cardNumberLabel) && p("label", {
                            for: "ebanx_card_number",
                            className: "ebanx_cardInputStyle_labelStyle",
                            style: null === (s = e.styleOption) || void 0 === s ? void 0 : s.ebanx_cardInputStyle_labelStyle
                        }, null !== (c = null === (u = null == e ? void 0 : e.label) || void 0 === u ? void 0 : u.cardNumberLabel) && void 0 !== c ? c : "Card Number"), p("div", null, p("input", {
                            placeholder: "" + (null !== (m = null === (v = null == e ? void 0 : e.placeholder) || void 0 === v ? void 0 : v.cardNumberPlaceholder) && void 0 !== m ? m : "Card Number"),
                            type: "text",
                            maxlength: "23",
                            id: "ebanx_card_number",
                            className: "ebanx_cardInputStyle_inputStyle",
                            style: null === (y = e.styleOption) || void 0 === y ? void 0 : y.ebanx_cardInputStyle_inputStyle,
                            oninput: function(e) {
                                var t, n, i, a;
                                e.target.value = null === (a = null === (i = null === (n = null === (t = e.target.value) || void 0 === t ? void 0 : t.replace(/\D/g, "")) || void 0 === n ? void 0 : n.replace(/(\d{4})/g, "$1 ")) || void 0 === i ? void 0 : i.trim()) || void 0 === a ? void 0 : a.slice(0, 23);
                            },
                            onkeyup: function(t) {
                                var n, i, a, o;
                                t.target.value = null === (o = null === (a = null === (i = null === (n = t.target.value) || void 0 === n ? void 0 : n.replace(/\D/g, "")) || void 0 === i ? void 0 : i.replace(/(\d{4})/g, "$1 ")) || void 0 === a ? void 0 : a.trim()) || void 0 === o ? void 0 : o.slice(0, 23), 
                                e.changeCardNumber(t, "onkeyup");
                            },
                            onblur: function(t) {
                                e.changeCardNumber(t, "onblur");
                            }
                        }))), p("div", {
                            className: "ebanx_flex_style",
                            style: e.styleOption.ebanx_flex_style
                        }, p("div", {
                            className: "ebanx_expirationInputStyle_inputWrapperStyle",
                            style: e.styleOption.ebanx_expirationInputStyle_inputWrapperStyle
                        }, (null === (h = null == e ? void 0 : e.label) || void 0 === h ? void 0 : h.expirationLabel) && p("label", {
                            for: "ebanx_card_due_date",
                            className: "ebanx_expirationInputStyle_labelStyle",
                            style: null === (b = e.styleOption) || void 0 === b ? void 0 : b.ebanx_expirationInputStyle_labelStyle
                        }, null !== (g = null === (f = null == e ? void 0 : e.label) || void 0 === f ? void 0 : f.expirationLabel) && void 0 !== g ? g : "Card Due Date"), p("input", {
                            placeholder: (null !== (S = null === (x = null == e ? void 0 : e.placeholder) || void 0 === x ? void 0 : x.expiryMonthPlaceholder) && void 0 !== S ? S : "MM") + "/" + (null !== (D = null === (_ = null == e ? void 0 : e.placeholder) || void 0 === _ ? void 0 : _.expiryYearPlaceholder) && void 0 !== D ? D : "YYYY"),
                            type: "text",
                            id: "ebanx_card_due_date",
                            className: "ebanx_expirationInputStyle_inputStyle",
                            style: null === (k = e.styleOption) || void 0 === k ? void 0 : k.ebanx_expirationInputStyle_inputStyle,
                            onblur: function(t) {
                                e.changeExpiration(t, "onblur");
                            },
                            onkeyup: function(t) {
                                var n, i, a;
                                t.target.value = null === (a = null === (i = null === (n = t.target.value) || void 0 === n ? void 0 : n.replace(/\D/g, "")) || void 0 === i ? void 0 : i.slice(0, 6)) || void 0 === a ? void 0 : a.replace(/^(\d{2})\/?(\d{0,})$/, (function(e, t, n) {
                                    return "" + t + (n ? "/" + n : n);
                                })), e.changeExpiration(t, "onkeyup");
                            }
                        })), p("div", {
                            className: "ebanx_cvvInputStyle_inputWrapperStyle",
                            style: e.styleOption.ebanx_cvvInputStyle_inputWrapperStyle
                        }, (null === (w = null == e ? void 0 : e.label) || void 0 === w ? void 0 : w.cvvLabel) && p("label", {
                            for: "ebanx_card_cvv",
                            className: "ebanx_cvvInputStyle_labelStyle",
                            style: null === (N = e.styleOption) || void 0 === N ? void 0 : N.ebanx_cvvInputStyle_labelStyle
                        }, null !== (C = null === (T = null == e ? void 0 : e.label) || void 0 === T ? void 0 : T.cvvLabel) && void 0 !== C ? C : "Card Cvv"), p("input", {
                            placeholder: "" + (null !== (E = null === (I = null == e ? void 0 : e.placeholder) || void 0 === I ? void 0 : I.cvvPlaceholder) && void 0 !== E ? E : "Cvv"),
                            type: "text",
                            maxlength: "4",
                            id: "ebanx_card_cvv",
                            className: "ebanx_cvvInputStyle_inputStyle",
                            style: null === (P = e.styleOption) || void 0 === P ? void 0 : P.ebanx_cvvInputStyle_inputStyle,
                            oninput: function(e) {
                                var t, n;
                                e.target.value = null === (n = null === (t = e.target.value) || void 0 === t ? void 0 : t.replace(/\D/g, "")) || void 0 === n ? void 0 : n.slice(0, 4);
                            },
                            onkeyup: function(t) {
                                var n, i;
                                t.target.value = null === (i = null === (n = t.target.value) || void 0 === n ? void 0 : n.replace(/\D/g, "")) || void 0 === i ? void 0 : i.slice(0, 4), 
                                e.changeCVV(t, "onkeyup");
                            },
                            onblur: function(t) {
                                e.changeCVV(t, "onblur");
                            }
                        }))), p("div", {
                            id: "ebanx_error_tips",
                            className: "ebanx_error_tips",
                            style: e.styleOption.ebanx_error_tips
                        }), (null == e ? void 0 : e.btnText) && p("button", {
                            type: "submit",
                            id: "ebanx_submit_btn",
                            className: "ebanx_submit_btn",
                            style: null === (A = e.styleOption) || void 0 === A ? void 0 : A.ebanx_submit_btn,
                            disabled: !0,
                            onClick: function(t) {
                                null == e || e.submit(t);
                            }
                        }, null !== (B = null == e ? void 0 : e.btnText) && void 0 !== B ? B : "OK")));
                    }({
                        submit: this.submit.bind(this),
                        changeUserName: this.changeUserName.bind(this),
                        changeCardNumber: this.changeCardNumber.bind(this),
                        changeExpiration: this.changeExpiration.bind(this),
                        changeCVV: this.changeCVV.bind(this),
                        label: null === (t = this.initialData) || void 0 === t ? void 0 : t.label,
                        placeholder: null === (n = this.initialData) || void 0 === n ? void 0 : n.placeholder,
                        btnText: null === (i = this.initialData) || void 0 === i ? void 0 : i.btnText,
                        styleOption: l,
                        userName: null === (o = null === (a = this.initialData) || void 0 === a ? void 0 : a.fieldData) || void 0 === o ? void 0 : o.userName
                    }), this.initialData.domId);
                }, t.prototype.fieldOnChange = function(e, t) {
                    var n, i, a, o, l, r;
                    e.message || (this.userNameErrorTips && !(null === (i = null === (n = this.initialData) || void 0 === n ? void 0 : n.fieldData) || void 0 === i ? void 0 : i.userName) && (e.message = this.userNameErrorTips, 
                    e.param = "username"), this.cardNumberErrorTips && (e.message = this.cardNumberErrorTips, 
                    e.param = "cardnumber"), this.expirationErrorTips && (e.message = this.expirationErrorTips, 
                    e.param = "expiration"), this.cvvErrorTips && (e.message = this.cvvErrorTips, e.param = "cvv")), 
                    "onblur" !== t && e.message || (document.getElementById("ebanx_error_tips").innerText = e.message), 
                    "onblur" === t && (null === (o = null === (a = this.initialData) || void 0 === a ? void 0 : a.fieldOnBlur) || void 0 === o || o.call(a, e)), 
                    "onkeyup" === t && (null === (r = null === (l = this.initialData) || void 0 === l ? void 0 : l.fieldOnChange) || void 0 === r || r.call(l, e)), 
                    this.fieldComplete();
                }, t.prototype.fieldComplete = function() {
                    var e, t, n, i, a, o, l, r, d, s, u, c, p = document.getElementById("ebanx_submit_btn");
                    ((null === (t = null === (e = this.initialData) || void 0 === e ? void 0 : e.fieldData) || void 0 === t ? void 0 : t.userName) || !this.userNameErrorTips && this.userName) && !this.cardNumberErrorTips && !this.expirationErrorTips && !this.cvvErrorTips && this.cardNumber && this.expiration && this.cvv ? (console.log("表单填写完成"), 
                    p.removeAttribute("disabled"), p.style.background = (null === (o = null === (a = null === (i = null === (n = this.initialData) || void 0 === n ? void 0 : n.styleOption) || void 0 === i ? void 0 : i.componentStyle) || void 0 === a ? void 0 : a.btnStyle) || void 0 === o ? void 0 : o.normalBackground) || "#ffc102", 
                    null === (r = null === (l = this.initialData) || void 0 === l ? void 0 : l.fieldComplete) || void 0 === r || r.call(l, {
                        userName: this.userName,
                        cardNumber: this.cardNumber,
                        expiration: this.expiration,
                        cvv: this.cvv
                    })) : (console.log("表单没填写完成"), p.setAttribute("disabled", "disabled"), p.style.background = (null === (c = null === (u = null === (s = null === (d = this.initialData) || void 0 === d ? void 0 : d.styleOption) || void 0 === s ? void 0 : s.componentStyle) || void 0 === u ? void 0 : u.btnStyle) || void 0 === c ? void 0 : c.disableBackground) || "#dddddd");
                }, t.prototype.changeUserName = function(e, t) {
                    var n, i, a;
                    this.userName = e.target.value, a = this.userName, /^[\s\S]{2,50}$/.test(a) ? this.userNameErrorTips = "" : this.userNameErrorTips = (null === (i = null === (n = this.initialData) || void 0 === n ? void 0 : n.errorTips) || void 0 === i ? void 0 : i.userNameErrorTips) || "The username is incorrect.", 
                    this.fieldOnChange({
                        message: this.userNameErrorTips,
                        param: "username"
                    }, t);
                }, t.prototype.changeCardNumber = function(e, t, n) {
                    var i, l;
                    return a(this, void 0, void 0, (function() {
                        return o(this, (function(a) {
                            return this.cardNumber = e.target.value, n && this.cardNumber.length !== n || (!function(e) {
                                var t = (e + "").replace(/[\D]/g, "");
                                if (!/^\d{12,19}$/.test(t)) return !1;
                                for (var n = t.split("").reverse(), i = parseInt(n.shift(), 10), a = n.length, o = a, l = 0; o > 0; o--) {
                                    var r = a - o, d = parseInt(n[r], 10), s = d;
                                    if (r % 2 == 0) {
                                        var u = 2 * d;
                                        switch (u) {
                                          case 10:
                                            s = 1;
                                            break;

                                          case 12:
                                            s = 3;
                                            break;

                                          case 14:
                                            s = 5;
                                            break;

                                          case 16:
                                            s = 7;
                                            break;

                                          case 18:
                                            s = 9;
                                            break;

                                          default:
                                            s = u;
                                        }
                                    }
                                    l += s;
                                }
                                return parseInt((9 * l + "").replace(/\d+(\d$)/, "$1"), 10) === i;
                            }(this.cardNumber) ? this.cardNumberErrorTips = (null === (l = null === (i = this.initialData) || void 0 === i ? void 0 : i.errorTips) || void 0 === l ? void 0 : l.cardNumberErrorTips) || "The card number is incorrect." : this.cardNumberErrorTips = "", 
                            this.fieldOnChange({
                                message: this.cardNumberErrorTips,
                                param: "cardnumber"
                            }, t)), [ 2 ];
                        }));
                    }));
                }, t.prototype.changeExpiration = function(e, t) {
                    var n, i, a, o, l, r, d, s, u;
                    this.expiration = e.target.value, a = this.expiration, o = new Date, l = o.getFullYear(), 
                    r = o.getMonth() + 1, d = a.split("/"), s = Number(d[1]), u = Number(d[0]), this.expirationErrorTips = u < 1 || u > 12 || !(l < s || l === s && r <= u) ? (null === (i = null === (n = this.initialData) || void 0 === n ? void 0 : n.errorTips) || void 0 === i ? void 0 : i.expirationErrorTips) || "The card’s expiration date is incorrect." : "", 
                    this.fieldOnChange({
                        message: this.expirationErrorTips,
                        param: "expiration"
                    }, t);
                }, t.prototype.changeCVV = function(e, t) {
                    var n, i, a;
                    this.cvv = e.target.value, a = this.cvv, /^\d{3,4}$/.test(a) ? this.cvvErrorTips = "" : this.cvvErrorTips = (null === (i = null === (n = this.initialData) || void 0 === n ? void 0 : n.errorTips) || void 0 === i ? void 0 : i.cvvErrorTips) || "The card’s security code is incorrect.", 
                    this.fieldOnChange({
                        message: this.cvvErrorTips,
                        param: "cvv"
                    }, t);
                }, t.prototype.submit = function(e) {
                    var t, n, i, a, o, l, r, d, s = document.getElementById("ebanx_submit_btn");
                    s.setAttribute("disabled", "disabled");
                    var u = f(null === (t = this.initialData) || void 0 === t ? void 0 : t.styleOption), c = document.createElement("style");
                    c.type = "text/css", c.innerHTML = "\n      @keyframes loading {\n        0% {transform: rotate(0deg);}\n        100% {transform: rotate(360deg);}\n      }\n    ";
                    var p = document.createElement("div");
                    p.setAttribute("style", "\n        width: " + (null === (n = null == u ? void 0 : u.ebanx_submit_btn) || void 0 === n ? void 0 : n.fontSize) + ";\n        height: " + (null === (i = null == u ? void 0 : u.ebanx_submit_btn) || void 0 === i ? void 0 : i.fontSize) + ";\n        border: 2px solid;\n        border-color: #fff #fff transparent;\n        border-radius: 50%;\n        animation: loading 1.2s linear infinite;\n      "), 
                    s.innerHTML = "", s.appendChild(c), s.appendChild(p);
                    var v = null === (o = null === (a = document.getElementById("ebanx_card_number")) || void 0 === a ? void 0 : a.value) || void 0 === o ? void 0 : o.replace(/\D/g, ""), m = (null === (r = null === (l = this.initialData) || void 0 === l ? void 0 : l.fieldData) || void 0 === r ? void 0 : r.userName) || document.getElementById("ebanx_user_name").value, y = document.getElementById("ebanx_card_due_date").value, h = document.getElementById("ebanx_card_cvv").value;
                    (null === (d = this.initialData) || void 0 === d ? void 0 : d.isWith3DS) ? this.isWith3DSSubmit({
                        cardNumber: v,
                        userName: m,
                        cardDueDate: y,
                        cardCvv: h
                    }) : this.isWithout3DSSubmit({
                        cardNumber: v,
                        userName: m,
                        cardDueDate: y,
                        cardCvv: h
                    });
                }, t.prototype.isWithout3DSSubmit = function(e) {
                    var t = e.cardNumber, n = e.userName, i = e.cardDueDate, a = e.cardCvv;
                    this.successCallToken({
                        cardNumber: t,
                        userName: n,
                        cardDueDate: i,
                        cardCvv: a
                    });
                }, t.prototype.isWith3DSSubmit = function(e) {
                    var t = this, n = e.cardNumber, i = e.userName, a = e.cardDueDate, o = e.cardCvv, l = this.initialData.fieldData, r = void 0 === l ? {} : l, d = r.orderAmount, s = r.orderCurrency, u = r.shipAddress, c = r.shipCountry, p = r.shipState, v = r.shipCity, m = r.shipZip, y = r.email, h = r.shipPhone, b = r.homePhone, f = r.CPF;
                    try {
                        this.checkoutFieldData(r);
                        var g = {
                            orderInformation: {
                                amountDetails: {
                                    totalAmount: d,
                                    currency: s
                                },
                                billTo: {
                                    address1: u,
                                    administrativeArea: p,
                                    country: c || "BR",
                                    email: y,
                                    homePhone: b || h,
                                    locality: v,
                                    postalCode: m,
                                    mobilePhone: h
                                }
                            },
                            paymentInformation: {
                                card: {
                                    number: n,
                                    expirationMonth: a.split("/")[0],
                                    expirationYear: a.split("/")[1],
                                    holderName: i
                                }
                            },
                            personalIdentification: {
                                id: f,
                                type: "CPF"
                            }
                        };
                        console.log("3DS校验传参：", g), EBANX.threedsecure.checkIfShouldAuthenticate(g).then((function(e) {
                            e ? EBANX.threedsecure.run(g).then((function(e) {
                                t.successCallToken({
                                    cardNumber: n,
                                    userName: i,
                                    cardDueDate: a,
                                    cardCvv: o,
                                    threedsEci: e.threeds_eci,
                                    threedsCryptogram: e.threeds_cryptogram,
                                    threedsXid: e.threeds_xid,
                                    threedsVersion: e.threeds_version,
                                    threedsTrxid: e.threeds_trxid
                                });
                            })).catch((function(e) {
                                console.log("进行threedsecure时出错"), t.failureCall(e);
                            })) : t.successCallToken({
                                cardNumber: n,
                                userName: i,
                                cardDueDate: a,
                                cardCvv: o
                            });
                        })).catch((function(e) {
                            console.log("checkIfShouldAuthenticate时出错"), t.failureCall(e);
                        }));
                    } catch (e) {
                        console.error("传参缺失", e);
                    }
                }, t.prototype.failureCall = function(e) {
                    var t, n, i, a = document.getElementById("ebanx_submit_btn");
                    null === (t = null == a ? void 0 : a.removeAttribute) || void 0 === t || t.call(a, "disabled"), 
                    a && (a.innerHTML = null !== (i = null === (n = this.initialData) || void 0 === n ? void 0 : n.btnText) && void 0 !== i ? i : "OK"), 
                    document.getElementById("ebanx_error_tips").textContent = null == e ? void 0 : e.toString(), 
                    console.error("failureCall", e);
                }, t.prototype.successCallToken = function(e) {
                    var t = this, n = e.cardNumber, a = e.userName, o = e.cardDueDate, l = e.cardCvv, r = e.threedsEci, d = e.threedsCryptogram, s = e.threedsXid, u = e.threedsVersion, c = e.threedsTrxid;
                    console.log("successCallToken");
                    var p = document.getElementById("ebanx_submit_btn");
                    EBANX.card.createToken({
                        card_number: n,
                        card_name: a,
                        card_due_date: o,
                        card_cvv: l,
                        threeds_eci: r,
                        threeds_cryptogram: d,
                        threeds_xid: s,
                        threeds_version: u,
                        threeds_trxid: c
                    }, (function(e) {
                        var n, a, o, l, v, m, y, h, b, f;
                        if (null === (n = null == p ? void 0 : p.removeAttribute) || void 0 === n || n.call(p, "disabled"), 
                        p && (p.innerHTML = null !== (o = null === (a = t.initialData) || void 0 === a ? void 0 : a.btnText) && void 0 !== o ? o : "OK"), 
                        null === (l = null == e ? void 0 : e.data) || void 0 === l ? void 0 : l.hasOwnProperty("status")) ; else {
                            var g = (null === (m = null === (v = null == e ? void 0 : e.error) || void 0 === v ? void 0 : v.err) || void 0 === m ? void 0 : m.status_message) || (null === (h = null === (y = null == e ? void 0 : e.error) || void 0 === y ? void 0 : y.err) || void 0 === h ? void 0 : h.message) || "";
                            document.getElementById("ebanx_error_tips").textContent = g;
                        }
                        var x = i({}, e), S = {};
                        r && (S.threeds_eci = r), d && (S.threeds_cryptogram = d), s && (S.threeds_xid = s), 
                        u && (S.threeds_version = u), c && (S.threeds_trxid = c), Object.keys(S).length > 0 && (x.threedSecure = S), 
                        null === (f = null === (b = t.initialData) || void 0 === b ? void 0 : b.createToken) || void 0 === f || f.call(b, x);
                    }));
                }, t.prototype.checkoutFieldData = function(e) {
                    var t = e.orderAmount, n = e.orderCurrency, i = e.shipAddress, a = e.shipCountry, o = e.shipState, l = e.shipCity, r = e.shipZip, d = e.email, s = e.shipPhone;
                    e.homePhone;
                    var u = {
                        orderAmount: t,
                        orderCurrency: n,
                        shipAddress: i,
                        shipCountry: a,
                        shipState: o,
                        shipCity: l,
                        shipZip: r,
                        email: d,
                        shipPhone: s,
                        CPF: e.CPF
                    };
                    for (var c in u) if (!u[c]) throw this.failureCall("initialData.fieldData." + c + " cannot be null"), 
                    "initialData.fieldData." + c + "参数不能为null";
                }, t.prototype.getToken = function() {
                    return a(this, void 0, void 0, (function() {
                        var e = this;
                        return o(this, (function(t) {
                            return console.log("getToken"), [ 2, new Promise((function(t, n) {
                                var i, a;
                                EBANX.card.createToken({
                                    card_number: document.getElementById("ebanx_card_number").value,
                                    card_name: (null === (a = null === (i = e.initialData) || void 0 === i ? void 0 : i.fieldData) || void 0 === a ? void 0 : a.userName) || document.getElementById("ebanx_user_name").value,
                                    card_due_date: document.getElementById("ebanx_card_due_date").value,
                                    card_cvv: document.getElementById("ebanx_card_cvv").value
                                }, (function(e) {
                                    var i, a, o, l, r;
                                    if (null === (i = null == e ? void 0 : e.data) || void 0 === i ? void 0 : i.hasOwnProperty("status")) t(e); else {
                                        var d = (null === (o = null === (a = null == e ? void 0 : e.error) || void 0 === a ? void 0 : a.err) || void 0 === o ? void 0 : o.status_message) || (null === (r = null === (l = null == e ? void 0 : e.error) || void 0 === l ? void 0 : l.err) || void 0 === r ? void 0 : r.message) || "";
                                        document.getElementById("ebanx_error_tips").textContent = d, n(e);
                                    }
                                }));
                            })) ];
                        }));
                    }));
                }, t;
            }(v), x = function(e) {
                function t(t, n) {
                    var i, a, o = e.call(this) || this;
                    o.publicKey = t, o.initialData = n;
                    var l = (new Date).getTime();
                    o.renderHtml();
                    var r = (new Date).getTime() - l;
                    return null === (a = null === (i = o.initialData) || void 0 === i ? void 0 : i.reportSDKLoading) || void 0 === a || a.call(i, {
                        time: r
                    }), o;
                }
                return n(t, e), t.prototype.getToken = function() {
                    return a(this, void 0, void 0, (function() {
                        return o(this, (function(e) {
                            return [ 2, "" ];
                        }));
                    }));
                }, t.prototype.sdkFormOnLoad = function(e) {
                    if (e) {
                        var t = e.contentWindow.location.href;
                        console.log("curSrc", t);
                    } else console.log("curSrc iframe not init");
                }, t.prototype.renderHtml = function() {
                    console.log("this.publicKey.key", this.publicKey.key);
                    var e, t = this.publicKey.key.split("?")[0], n = (e = this.publicKey.key, decodeURIComponent(e).match(/(\w+)=([^=&]+)/gi)), i = {};
                    console.log("iframeAction", t), console.log("keyArray", n), n && n.length > 0 && n.forEach((function(e) {
                        var t = e.split("=");
                        i[t[0]] = t[1];
                    })), i.cssUrl = this.initialData.rewriteCssUrl || "https://unpkg.com/@efox/pay@1.0.32/assets/oceanpay/rewrite.css", 
                    i.iframeOnload = this.sdkFormOnLoad, i.action = t, this.renderToDom(function(e) {
                        return p(DocumentFragment, null, p("form", {
                            action: e.action || "https://secure.oceanpayment.com/gateway/service/pay",
                            id: "creditcard_payment_checkout",
                            name: "creditcard_payment_checkout",
                            method: "POST",
                            target: "ifrm_creditcard_checkout"
                        }, p("input", {
                            type: "hidden",
                            name: "account",
                            value: e.account
                        }), p("input", {
                            type: "hidden",
                            name: "terminal",
                            value: e.terminal
                        }), p("input", {
                            type: "hidden",
                            name: "order_number",
                            value: e.order_number
                        }), p("input", {
                            type: "hidden",
                            name: "order_currency",
                            value: e.order_currency
                        }), p("input", {
                            type: "hidden",
                            name: "order_amount",
                            value: e.order_amount
                        }), p("input", {
                            type: "hidden",
                            name: "signValue",
                            value: e.signValue
                        }), p("input", {
                            type: "hidden",
                            name: "backUrl",
                            value: e.backUrl
                        }), p("input", {
                            type: "hidden",
                            name: "billing_firstName",
                            value: e.billing_firstName
                        }), p("input", {
                            type: "hidden",
                            name: "billing_lastName",
                            value: e.billing_lastName
                        }), p("input", {
                            type: "hidden",
                            name: "billing_email",
                            value: e.billing_email
                        }), p("input", {
                            type: "hidden",
                            name: "billing_phone",
                            value: e.billing_phone
                        }), p("input", {
                            type: "hidden",
                            name: "billing_country",
                            value: e.billing_country
                        }), p("input", {
                            type: "hidden",
                            name: "billing_city",
                            value: e.billing_city
                        }), p("input", {
                            type: "hidden",
                            name: "billing_address",
                            value: e.billing_address
                        }), p("input", {
                            type: "hidden",
                            name: "billing_zip",
                            value: e.billing_zip
                        }), p("input", {
                            type: "hidden",
                            name: "productSku",
                            value: e.productSku
                        }), p("input", {
                            type: "hidden",
                            name: "productName",
                            value: e.productName
                        }), p("input", {
                            type: "hidden",
                            name: "productNum",
                            value: e.productNum
                        }), p("input", {
                            type: "hidden",
                            name: "cssUrl",
                            value: e.cssUrl
                        })), p("iframe", {
                            width: "100%",
                            height: "100%",
                            scrolling: "auto",
                            name: "ifrm_creditcard_checkout",
                            id: "ifrm_creditcard_checkout",
                            onLoad: e.iframeOnload(void 0)
                        }));
                    }(i), this.initialData.domId), document.querySelector("#creditcard_payment_checkout").submit();
                }, t;
            }(v), S = function(e) {
                function t(t, n) {
                    var i = e.call(this) || this;
                    return i.publicKey = t, i.initialData = n, i.paypalInstanceName = "paypal", window.__PAYPALSPB_LOADJS || (window.__PAYPALSPB_LOADJS = y, 
                    window.__PAYPALSPB_LOADJS.ids = {}), i.loadPAYPALPSB(), i.renderHtml(), i;
                }
                return n(t, e), t.prototype.loadPAYPALPSB = function() {
                    var e, t, n, i, a, o, l, r, d, s = this, u = (new Date).getTime(), c = "https://www.paypal.com/sdk/js?client-id=" + (null === (e = this.publicKey) || void 0 === e ? void 0 : e.key) + "&currency=" + ((null === (n = null === (t = this.publicKey) || void 0 === t ? void 0 : t.expand) || void 0 === n ? void 0 : n.currency) || "USD");
                    (null === (i = this.initialData) || void 0 === i ? void 0 : i.isContinue) && (c += "&intent=capture&commit=false"), 
                    (null === (a = this.initialData) || void 0 === a ? void 0 : a.disableFunding) && (c += "&disable-funding=" + (null === (o = this.initialData) || void 0 === o ? void 0 : o.disableFunding)), 
                    (null === (l = this.initialData) || void 0 === l ? void 0 : l.paypalQueryParams) && (c += "&" + this.initialData.paypalQueryParams);
                    var p = c, v = {
                        success: function() {
                            window.__PAYPALSPB_LOADJS.ids[p] = !0, s.spbInit(c, u);
                        }
                    };
                    (null === (r = this.initialData) || void 0 === r ? void 0 : r.paypalScriptParams) && (v.before = function(e, t) {
                        Object.keys(s.initialData.paypalScriptParams).forEach((function(e) {
                            var n = s.initialData.paypalScriptParams[e];
                            t.setAttribute(e, n);
                        }));
                    }, (null === (d = this.initialData.paypalScriptParams) || void 0 === d ? void 0 : d["data-namespace"]) && (this.paypalInstanceName = this.initialData.paypalScriptParams["data-namespace"]), 
                    Object.keys(this.initialData.paypalScriptParams).forEach((function(e) {
                        var t = s.initialData.paypalScriptParams[e];
                        p += e + "&" + t;
                    }))), window.__PAYPALSPB_LOADJS.ids[p] ? window.__PAYPALSPB_LOADJS.ready(p, v) : (window.__PAYPALSPB_LOADJS.ids[p] = !0, 
                    window.__PAYPALSPB_LOADJS([ c ], p, v));
                }, t.prototype.spbInit = function(e, t) {
                    var n, l, r, d, s, u, c, p, v, m, y, h = this, b = (new Date).getTime() - t;
                    null === (l = null === (n = this.initialData) || void 0 === n ? void 0 : n.reportSDKLoading) || void 0 === l || l.call(n, {
                        time: b
                    });
                    var f = function(e) {
                        var t = null == e ? void 0 : e.commonStyle;
                        return null == e || e.componentStyle, i({}, t);
                    }(null === (r = this.initialData) || void 0 === r ? void 0 : r.styleOption);
                    window[this.paypalInstanceName].Buttons(i({
                        style: {
                            layout: (null === (d = null == f ? void 0 : f.paypalSPBStyle) || void 0 === d ? void 0 : d.layout) || "vertical",
                            color: (null === (s = null == f ? void 0 : f.paypalSPBStyle) || void 0 === s ? void 0 : s.color) || "gold",
                            shape: (null === (u = null == f ? void 0 : f.paypalSPBStyle) || void 0 === u ? void 0 : u.shape) || "rect",
                            label: (null === (c = null == f ? void 0 : f.paypalSPBStyle) || void 0 === c ? void 0 : c.label) || "paypal",
                            height: null === (p = null == f ? void 0 : f.paypalSPBStyle) || void 0 === p ? void 0 : p.height,
                            tagline: null !== (m = null === (v = null == f ? void 0 : f.paypalSPBStyle) || void 0 === v ? void 0 : v.tagline) && void 0 !== m && m
                        },
                        createOrder: function(e, t) {
                            return a(h, void 0, void 0, (function() {
                                var n, i;
                                return o(this, (function(a) {
                                    switch (a.label) {
                                      case 0:
                                        return console.log("createOrder", e, t), [ 4, null === (i = null === (n = this.initialData) || void 0 === n ? void 0 : n.createOrder) || void 0 === i ? void 0 : i.call(n, {
                                            data: e,
                                            actions: t
                                        }) ];

                                      case 1:
                                        return [ 2, a.sent() ];
                                    }
                                }));
                            }));
                        },
                        onApprove: function(e, t) {
                            var n, i;
                            console.log("onApprove", e, t), null === (i = null === (n = h.initialData) || void 0 === n ? void 0 : n.createToken) || void 0 === i || i.call(n, {
                                data: e,
                                actions: t
                            });
                        }
                    }, null === (y = this.initialData) || void 0 === y ? void 0 : y.paypalProps)).render("#" + (this.initialData.domId ? this.initialData.domId : "paypal-button-container"));
                }, t.prototype.renderHtml = function() {
                    this.renderToDom(p(DocumentFragment, null, p("div", {
                        id: "paypal-button-container"
                    })), this.initialData.domId);
                }, t.prototype.getToken = function() {
                    return a(this, void 0, void 0, (function() {
                        return o(this, (function(e) {
                            return [ 2 ];
                        }));
                    }));
                }, t;
            }(v), _ = m((function(e) {
                function t(n) {
                    return "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? (e.exports = t = function(e) {
                        return typeof e;
                    }, e.exports.default = e.exports, e.exports.__esModule = !0) : (e.exports = t = function(e) {
                        return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e;
                    }, e.exports.default = e.exports, e.exports.__esModule = !0), t(n);
                }
                e.exports = t, e.exports.default = e.exports, e.exports.__esModule = !0;
            })), D = (b = _) && b.__esModule && Object.prototype.hasOwnProperty.call(b, "default") ? b.default : b, k = {
                length: function(e, t) {
                    return e = e.toString(), RegExp("^\\S{" + t + "}$", "g").test(e);
                },
                enum: function(e, t) {
                    var n = !1;
                    return t.map((function(t) {
                        t === e && (n = !0);
                    })), n;
                },
                any: function(e, t) {
                    return e = e.toString(), RegExp(t, "g").test(e);
                }
            };
            var w = [ {
                name: "merNo",
                type: "length",
                target: "1,5",
                msg: "require a length of 5",
                errorCode: "101"
            }, {
                name: "gatewayNo",
                type: "length",
                target: "1,8",
                msg: "require a length of 8",
                errorCode: "102"
            }, {
                name: "orderNo",
                type: "length",
                target: "0,50",
                msg: "require a length less than 50",
                errorCode: "103"
            }, {
                name: "orderCurrency",
                type: "enum",
                target: [ "KRW", "TRY", "ZAR", "AED", "MXN", "CLP", "BYR", "MYR", "MKD", "CSD", "PKR", "UAH", "IRR", "TZS", "AMD", "ISK", "AZN", "ALL", "BDT", "SAR", "GEL", "PLN", "NZD", "NOK", "DKK", "SEK", "CHF", "RUB", "BAM", "BGN", "HRK", "HUF", "LTL", "LVL", "RON", "RSD", "BRL", "THB", "ILS", "CNY", "USD", "GBP", "EUR", "AUD", "CAD", "JPY", "SGD", "HKD", "MYR", "PHP", "TWD", "INR", "CZK" ],
                msg: "require currency code,https://www.asiabill.com/developers/347-cn.html#currency",
                errorCode: "104"
            }, {
                name: "orderAmount",
                type: "any",
                target: "^[0-9]{0,8}.[0-9]{2}$",
                msg: "2 decimal places after the decimal point. Length less than ten digits",
                errorCode: "105"
            }, {
                name: "email",
                type: "length",
                target: "2,200",
                msg: "the length must be between 2-200",
                errorCode: "108"
            }, {
                name: "phone",
                type: "length",
                target: "2,50",
                msg: "the length must be between 2-50",
                errorCode: "109"
            }, {
                name: "paymentMethod",
                type: "enum",
                target: [ "Credit Card" ],
                msg: "inaccurate payment method",
                errorCode: "110"
            }, {
                name: "returnUrl",
                type: "length",
                target: "0,500",
                msg: "require a length less than 500",
                errorCode: "103"
            } ], N = function() {
                function e(e) {
                    "prod" === e.env ? this.actionURL = "https://safepay.asiabill.com/Interface/V2" : this.actionURL = "https://safepay.asiabill.com/TestInterface/V2", 
                    this.fieldData = e.fieldData, this.reportSDKLoading = null == e ? void 0 : e.reportSDKLoading;
                }
                return e.prototype.getToken = function() {
                    var e, t = this, n = (new Date).getTime(), i = (new Date).getTime() - n;
                    return null === (e = null == this ? void 0 : this.reportSDKLoading) || void 0 === e || e.call(this, {
                        time: i
                    }), new Promise((function(e, n) {
                        var i = document.createElement("form");
                        document.body.appendChild(i), i.method = "post", i.action = t.actionURL;
                        var a = function(e, t) {
                            for (var n, i = 0; i < t.length; i++) {
                                var a = t[i];
                                if (!e[a.name]) {
                                    n = {
                                        state: !1,
                                        name: a.name,
                                        msg: a.name + " is required",
                                        code: a.errorCode
                                    };
                                    break;
                                }
                                var o = e[a.name], l = k[a.type](o, a.target);
                                if (!l) {
                                    n = {
                                        state: l,
                                        name: a.name,
                                        msg: a.msg,
                                        code: a.errorCode
                                    };
                                    break;
                                }
                                n = {
                                    state: l,
                                    name: "all",
                                    msg: "check pass",
                                    code: "200"
                                };
                            }
                            return n;
                        }(t.fieldData, w);
                        if (console.log(a), a.state) {
                            for (var o in t.fieldData) {
                                console.log(o + ":" + t.fieldData[o]);
                                var l = document.createElement("input");
                                l.setAttribute("name", o), l.setAttribute("type", "hidden"), "object" !== D(t.fieldData[o]) ? l.setAttribute("value", t.fieldData[o]) : l.setAttribute("value", JSON.stringify(t.fieldData[o])), 
                                i.appendChild(l);
                            }
                            e(a), console.log(i), i.submit();
                        } else e(a);
                    }));
                }, e;
            }(), T = {
                nl: "NL-NL",
                en: "EN-GB",
                fr: "FR-FR",
                de: "DE-DE",
                it: "IT-IT",
                ko: "KR-KR",
                es: "ES-ES"
            }, C = function(e) {
                function t(t, n) {
                    var i = e.call(this) || this;
                    i.publicKey = t, i.initialData = n;
                    var a = (new Date).getTime();
                    i.render();
                    var o = "https://assets.checkout.com/docs/examples/wireframe/images/card-icons/";
                    return console.log("publicKey", t.key, "initialData", n), y("https://cdn.checkout.com/js/framesv2.min.js", (function() {
                        var e, t, n;
                        window.Frames.init({
                            publicKey: i.publicKey.key,
                            debug: "dev" === i.initialData.env,
                            namespace: "Frames",
                            localization: T[i.initialData.language],
                            style: i.initialData.styleOption.commonStyle
                        });
                        var l = (new Date).getTime() - a;
                        null === (t = null === (e = i.initialData) || void 0 === e ? void 0 : e.reportSDKLoading) || void 0 === t || t.call(e, {
                            time: l
                        });
                        var r = window.Frames, d = function() {
                            var e = {
                                "card-number": {
                                    src: "card",
                                    alt: "card number logo"
                                },
                                "expiry-date": {
                                    src: "exp-date",
                                    alt: "expiry date logo"
                                },
                                cvv: {
                                    src: "cvv",
                                    alt: "cvv logo"
                                }
                            };
                            return e;
                        }();
                        var s = {}, u = null === (n = i.initialData) || void 0 === n ? void 0 : n.errorTips;
                        function c(e) {
                            document.getElementById("icon-" + e + "-error").style.removeProperty("display");
                        }
                        function p(e, t) {
                            void 0 === e && (e = null), void 0 === t && (t = null), e && e.classList.add("show");
                            var n = document.getElementById("logo-payment-method");
                            if (t) {
                                var i = t.toLowerCase();
                                n.setAttribute("src", o + i + ".svg"), n.setAttribute("alt", t || "payment method");
                            }
                            n.style.removeProperty("display");
                        }
                        function v(e) {
                            void 0 === e && (e = null), e && e.classList.remove("show"), document.getElementById("logo-payment-method").style.setProperty("display", "none");
                        }
                        s["card-number"] = (null == u ? void 0 : u.cardNumberErrorTips) || "Please enter a valid card number", 
                        s["expiry-date"] = (null == u ? void 0 : u.expirationErrorTips) || "Please enter a valid expiry date", 
                        s.cvv = (null == u ? void 0 : u.cvvErrorTips) || "Please enter a valid cvv code", 
                        r.addEventHandler(r.Events.FRAME_VALIDATION_CHANGED, (function(e) {
                            var t = e.element;
                            e.isValid || e.isEmpty ? ("card-number" !== t || e.isEmpty || p(), i = "icon-" + (n = t), 
                            (a = document.getElementById(i)).setAttribute("src", o + d[n].src + ".svg"), a.setAttribute("alt", d[n].alt), 
                            c(t), function(e) {
                                var t = ".error-message__" + e;
                                document.querySelector(t).textContent = "";
                            }(t)) : ("card-number" === t && v(), function(e) {
                                var t = "icon-" + e, n = document.getElementById(t);
                                n.setAttribute("src", o + d[e].src + "-error.svg"), n.setAttribute("alt", d[e].alt);
                            }(t), function(e) {
                                document.getElementById("icon-" + e + "-error").style.setProperty("display", "block");
                            }(t), function(e) {
                                var t = ".error-message__" + e;
                                document.querySelector(t).textContent = s[e];
                            }(t));
                            var n, i, a;
                        })), r.addEventHandler(r.Events.CARD_TOKENIZATION_FAILED, (function(e) {
                            console.log("CARD_TOKENIZATION_FAILED: %o", e), r.enableSubmitForm();
                        })), r.addEventHandler(r.Events.PAYMENT_METHOD_CHANGED, (function(e) {
                            var t = e.paymentMethod, n = document.querySelector(".icon-container.payment-method");
                            t ? (c("card-number"), p(n, t)) : v(n);
                        }));
                    })), i;
                }
                return n(t, e), t.prototype.getToken = function() {
                    return a(this, void 0, void 0, (function() {
                        return o(this, (function(e) {
                            return [ 2, window.Frames.submitCard() ];
                        }));
                    }));
                }, t.prototype.render = function() {
                    var e, t, n, i, a, o, l, r, d, s, u, c;
                    this.renderToDom((e = {
                        style: this.initialData.styleOption.componentStyle,
                        label: this.initialData.label
                    }, u = e.style, c = e.label, p("div", {
                        class: "checkout"
                    }, p("div", {
                        dangerouslySetInnerHTML: {
                            __html: "<style>\n.checkout *, *::before, *::after {\n  box-sizing: border-box;\n}\n\n.checkout {\n  padding: 1rem;\n  background-color: #FFF;\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n}\n\n.checkout iframe {\n  /* This fixes a mobile Safari bug */\n  height: 38px !important;\n}\n\n.checkout label {\n  display: block;\n  height: 10px;\n  color: #13395E;\n  font-size: 14px;\n  font-weight: 500;\n  line-height: 10px;\n  margin: 8px 0;\n}\n\n#payment-form {\n  width: 280px;\n  margin: 0 auto;\n}\n\n.date-and-code {\n  display: flex;\n  margin-bottom: 8px;\n}\n\n.date-and-code > div:nth-child(1) {\n  width: 55.715%;\n}\n.date-and-code > div:nth-child(2) {\n  width: 45.719%;\n}\n\n.input-container {\n  position: relative;\n  display: flex;\n  height: 40px;\n}\n.icon-container:last-child {\n  right: 0;\n}\n.icon-container.payment-method {\n  right: 0;\n}\n\n.input-container.card-number {\n  margin-bottom: 8px;\n}\n.input-container.expiry-date {\n  margin-right: 4px;\n}\n.input-container.cvv {\n  margin-left: 4px;\n}\n\n.card-number-frame {\n  padding-left: 40px;\n}\n.expiry-date-frame {\n  padding-left: 40px;\n}\n.cvv-frame {\n  padding-left: 40px;\n}\n\ndiv + button {\n  margin-top: 8px;\n}\n\n.icon-container {\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  display: flex;\n  justify-content: center;\n  width: 26px;\n  margin: 0 7px;\n}\n\n.icon-container.payment-method  {\n  transform: translateY(-50%) rotateY(90deg);\n  transition: opacity 0.15s ease-out;\n  opacity: 0;\n  top: 50%;\n}\n\n.icon-container.payment-method.show {\n  opacity: 1;\n  transition: all 0.4s ease-out;\n  transform: translateY(-50%) rotateY(0deg);\n}\n\n.icon-container.payment-method img {\n  width: 100%;\n}\n\n[id$=\"-error\"] { display: none }\n\n.frame {\n  opacity: 0;\n}\n\n.frame--activated {\n  opacity: 1;\n  border: solid 1px #13395E;\n  border-radius: 3px;\n  box-shadow: 0 1px 3px 0 rgba(19,57,94,0.2);\n}\n\n.frame--activated.frame--focus {\n  border: solid 1px #13395E;\n  box-shadow: 0 2px 5px 0 rgba(19,57,94,0.15);\n}\n\n.frame--activated.frame--invalid {\n  border: solid 1px #D96830;\n  box-shadow: 0 2px 5px 0 rgba(217,104,48,0.15);\n}\n\n.error-message {\n  display: block;\n  color: #C9501C;\n  font-size: .9rem;\n  margin: 8px 0 0 1px;\n  font-weight: 300;\n}\n\n#pay-button {\n  border: none;\n  border-radius: 3px;\n  color: #FFF;\n  font-weight: 500;\n  height: 40px;\n  width: 100%;\n  background-color: #13395E;\n  box-shadow: 0 1px 3px 0 rgba(19,57,94,0.4);\n}\n\n#pay-button:active {\n  background-color: #0B2A49;\n  box-shadow: 0 1px 3px 0 rgba(19,57,94,0.4);\n}\n\n#pay-button:hover {\n  background-color: #15406B;\n  box-shadow: 0 2px 5px 0 rgba(19,57,94,0.4);\n}\n\n#pay-button:disabled {\n  background-color: #697887;\n  box-shadow: none;\n}\n\n#pay-button:not(:disabled) {\n  cursor: pointer;\n}\n\n.token {\n  color: #b35e14;\n  font-size: .9rem;\n  font-family: monospace;\n}\n\n/**\nIE11-targeted optimisations\n*/\n_:-ms-fullscreen, :root .icon-container {\n  display: block;\n}\n\n_:-ms-fullscreen, :root .icon-container img {\n  top: 50%;\n  -ms-transform: translateY(-50%);\n  position: absolute;\n}\n\n_:-ms-fullscreen, #icon-card-number,\n_:-ms-fullscreen, #icon-expiry-date,\n_:-ms-fullscreen, #icon-cvv {\n  left: 7px;\n}\n\n#checkout-frames-card-number::-ms-clear {\n  display: none;\n}\n\n</style>"
                        }
                    }), p("form", {
                        id: "payment-form",
                        method: "POST",
                        style: !!(null == u ? void 0 : u.formStyle) && u.formStyle
                    }, p("label", {
                        for: "card-number",
                        style: !!(null === (t = null == u ? void 0 : u.cardInputStyle) || void 0 === t ? void 0 : t.labelStyle) && u.cardInputStyle.labelStyle
                    }, (null == c ? void 0 : c.cardNumberLabel) || "Card number"), p("div", {
                        class: "input-container card-number",
                        style: !!(null === (n = null == u ? void 0 : u.cardInputStyle) || void 0 === n ? void 0 : n.inputWrapperStyle) && u.cardInputStyle.inputWrapperStyle
                    }, p("div", {
                        class: "icon-container"
                    }, p("img", {
                        id: "icon-card-number",
                        src: "https://assets.checkout.com/docs/examples/wireframe/images/card-icons/card.svg",
                        alt: "PAN"
                    })), p("div", {
                        class: "card-number-frame"
                    }), p("div", {
                        class: "icon-container payment-method"
                    }, p("img", {
                        id: "logo-payment-method"
                    })), p("div", {
                        class: "icon-container"
                    }, p("img", {
                        id: "icon-card-number-error",
                        src: "https://assets.checkout.com/docs/examples/wireframe/images/card-icons/error.svg"
                    }))), p("span", {
                        class: "error-message error-message__card-number",
                        style: !!(null === (i = null == u ? void 0 : u.cardInputStyle) || void 0 === i ? void 0 : i.messageStyle) && u.cardInputStyle.messageStyle
                    }), p("div", {
                        class: "date-and-code"
                    }, p("div", null, p("label", {
                        for: "expiry-date",
                        style: !!(null === (a = null == u ? void 0 : u.expirationInputStyle) || void 0 === a ? void 0 : a.labelStyle) && u.expirationInputStyle.labelStyle
                    }, (null == c ? void 0 : c.expirationLabel) || "Expiry date"), p("div", {
                        class: "input-container expiry-date",
                        style: !!(null === (o = null == u ? void 0 : u.expirationInputStyle) || void 0 === o ? void 0 : o.inputWrapperStyle) && u.expirationInputStyle.inputWrapperStyle
                    }, p("div", {
                        class: "icon-container"
                    }, p("img", {
                        id: "icon-expiry-date",
                        src: "https://assets.checkout.com/docs/examples/wireframe/images/card-icons/exp-date.svg",
                        alt: "Expiry date"
                    })), p("div", {
                        class: "expiry-date-frame"
                    }), p("div", {
                        class: "icon-container"
                    }, p("img", {
                        id: "icon-expiry-date-error",
                        src: "https://assets.checkout.com/docs/examples/wireframe/images/card-icons/error.svg"
                    })))), p("div", null, p("label", {
                        for: "cvv",
                        style: !!(null === (l = null == u ? void 0 : u.cvvInputStyle) || void 0 === l ? void 0 : l.labelStyle) && u.cvvInputStyle.labelStyle
                    }, (null == c ? void 0 : c.cvvLabel) || " Security code"), p("div", {
                        class: "input-container cvv",
                        style: !!(null === (r = null == u ? void 0 : u.cvvInputStyle) || void 0 === r ? void 0 : r.inputWrapperStyle) && u.cvvInputStyle.inputWrapperStyle
                    }, p("div", {
                        class: "icon-container"
                    }, p("img", {
                        id: "icon-cvv",
                        src: "https://assets.checkout.com/docs/examples/wireframe/images/card-icons/cvv.svg",
                        alt: "CVV"
                    })), p("div", {
                        class: "cvv-frame"
                    }), p("div", {
                        class: "icon-container"
                    }, p("img", {
                        id: "icon-cvv-error",
                        src: "https://assets.checkout.com/docs/examples/wireframe/images/card-icons/error.svg"
                    }))))), p("div", null, p("span", {
                        class: "error-message error-message__expiry-date",
                        style: !!(null === (d = null == u ? void 0 : u.expirationInputStyle) || void 0 === d ? void 0 : d.messageStyle) && u.expirationInputStyle.messageStyle
                    }), p("span", {
                        class: "error-message error-message__cvv",
                        style: !!(null === (s = null == u ? void 0 : u.cvvInputStyle) || void 0 === s ? void 0 : s.messageStyle) && u.cvvInputStyle.messageStyle
                    }))))), this.initialData.domId);
                }, t;
            }(v), I = function() {
                function e(e, t) {
                    this.publicKey = e, this.initialData = t, this.initSDK();
                }
                return e.prototype.checkKey = function(e) {
                    return !0;
                }, e.prototype.getToken = function(e) {
                    return a(this, void 0, void 0, (function() {
                        return o(this, (function(t) {
                            switch (t.label) {
                              case 0:
                                return [ 4, this.sdk.getToken(e) ];

                              case 1:
                                return [ 2, t.sent() ];
                            }
                        }));
                    }));
                }, e.prototype.initSDK = function() {
                    return a(this, void 0, void 0, (function() {
                        return o(this, (function(e) {
                            if (!this.checkKey(this.publicKey)) return [ 2 ];
                            switch (this.initialData.sdkName) {
                              case "2checkout":
                                this.sdk = new h(this.publicKey, this.initialData);
                                break;

                              case "ebanx":
                                this.sdk = new g(this.publicKey, this.initialData);
                                break;

                              case "oceanPay":
                                this.sdk = new x(this.publicKey, this.initialData);
                                break;

                              case "paypalSPB":
                                this.sdk = new S(this.publicKey, this.initialData);
                                break;

                              case "asiaBill":
                                this.sdk = new N(this.initialData);
                                break;

                              case "checkout":
                                this.sdk = new C(this.publicKey, this.initialData);
                            }
                            return [ 2 ];
                        }));
                    }));
                }, e;
            }();
            e.AsiaBill = N, e.Checkout = C, e.Ebanx = g, e.OceanPay = x, e.PaypalSPB = S, e.TwoCheckOut = h, 
            e.default = I, Object.defineProperty(e, "__esModule", {
                value: !0
            });
        }));
    },
    "../shared/browser/node_modules/@sl/currency-tools-core/lib/index.js": function(__unused_webpack_module, exports, __webpack_require__) {
        (function(global, factory) {
            true ? factory(exports) : 0;
        })(0, (function(exports) {
            "use strict";
            function _slicedToArray(arr, i) {
                return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();
            }
            function _arrayWithHoles(arr) {
                if (Array.isArray(arr)) return arr;
            }
            function _iterableToArrayLimit(arr, i) {
                var _i = null == arr ? null : "undefined" !== typeof Symbol && arr[Symbol.iterator] || arr["@@iterator"];
                if (null == _i) return;
                var _arr = [];
                var _n = true;
                var _d = false;
                var _s, _e;
                try {
                    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {
                        _arr.push(_s.value);
                        if (i && _arr.length === i) break;
                    }
                } catch (err) {
                    _d = true;
                    _e = err;
                } finally {
                    try {
                        if (!_n && null != _i["return"]) _i["return"]();
                    } finally {
                        if (_d) throw _e;
                    }
                }
                return _arr;
            }
            function _unsupportedIterableToArray(o, minLen) {
                if (!o) return;
                if ("string" === typeof o) return _arrayLikeToArray(o, minLen);
                var n = Object.prototype.toString.call(o).slice(8, -1);
                if ("Object" === n && o.constructor) n = o.constructor.name;
                if ("Map" === n || "Set" === n) return Array.from(o);
                if ("Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);
            }
            function _arrayLikeToArray(arr, len) {
                if (null == len || len > arr.length) len = arr.length;
                for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];
                return arr2;
            }
            function _nonIterableRest() {
                throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
            }
            var commonjsGlobal = "undefined" !== typeof globalThis ? globalThis : "undefined" !== typeof window ? window : "undefined" !== typeof __webpack_require__.g ? __webpack_require__.g : "undefined" !== typeof self ? self : {};
            var INFINITY = 1 / 0, MAX_INTEGER = 17976931348623157e292, NAN = 0 / 0;
            var symbolTag = "[object Symbol]";
            var reTrim = /^\s+|\s+$/g;
            var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;
            var reIsBinary = /^0b[01]+$/i;
            var reIsOctal = /^0o[0-7]+$/i;
            var freeParseInt = parseInt;
            var freeGlobal = "object" == typeof commonjsGlobal && commonjsGlobal && commonjsGlobal.Object === Object && commonjsGlobal;
            var freeSelf = "object" == typeof self && self && self.Object === Object && self;
            var root = freeGlobal || freeSelf || Function("return this")();
            var objectProto = Object.prototype;
            var objectToString = objectProto.toString;
            var Symbol$1 = root.Symbol;
            var nativeMin = Math.min;
            var symbolProto = Symbol$1 ? Symbol$1.prototype : void 0, symbolToString = symbolProto ? symbolProto.toString : void 0;
            function baseToString(value) {
                if ("string" == typeof value) return value;
                if (isSymbol(value)) return symbolToString ? symbolToString.call(value) : "";
                var result = value + "";
                return "0" == result && 1 / value == -INFINITY ? "-0" : result;
            }
            function createRound(methodName) {
                var func = Math[methodName];
                return function(number, precision) {
                    number = toNumber(number);
                    precision = nativeMin(toInteger(precision), 292);
                    if (precision) {
                        var pair = (toString(number) + "e").split("e"), value = func(pair[0] + "e" + (+pair[1] + precision));
                        pair = (toString(value) + "e").split("e");
                        return +(pair[0] + "e" + (+pair[1] - precision));
                    }
                    return func(number);
                };
            }
            function isObject(value) {
                var type = typeof value;
                return !!value && ("object" == type || "function" == type);
            }
            function isObjectLike(value) {
                return !!value && "object" == typeof value;
            }
            function isSymbol(value) {
                return "symbol" == typeof value || isObjectLike(value) && objectToString.call(value) == symbolTag;
            }
            function toFinite(value) {
                if (!value) return 0 === value ? value : 0;
                value = toNumber(value);
                if (value === INFINITY || value === -INFINITY) {
                    var sign = value < 0 ? -1 : 1;
                    return sign * MAX_INTEGER;
                }
                return value === value ? value : 0;
            }
            function toInteger(value) {
                var result = toFinite(value), remainder = result % 1;
                return result === result ? remainder ? result - remainder : result : 0;
            }
            function toNumber(value) {
                if ("number" == typeof value) return value;
                if (isSymbol(value)) return NAN;
                if (isObject(value)) {
                    var other = "function" == typeof value.valueOf ? value.valueOf() : value;
                    value = isObject(other) ? other + "" : other;
                }
                if ("string" != typeof value) return 0 === value ? value : +value;
                value = value.replace(reTrim, "");
                var isBinary = reIsBinary.test(value);
                return isBinary || reIsOctal.test(value) ? freeParseInt(value.slice(2), isBinary ? 2 : 8) : reIsBadHex.test(value) ? NAN : +value;
            }
            function toString(value) {
                return null == value ? "" : baseToString(value);
            }
            var round = createRound("round");
            var lodash_round = round;
            var defaultCurrency = "CNY";
            var defaultCurrencyDigit = 2;
            var defaultPresentDigit = 2;
            var standardFormatMap = {
                amount: {
                    value: "amount",
                    decimalSymbol: ".",
                    groupSymbol: ",",
                    format: "amount"
                },
                amount_no_decimals: {
                    value: "amount_no_decimals",
                    decimalSymbol: "",
                    groupSymbol: ",",
                    format: "amount_no_decimals"
                },
                amount_with_comma_separator: {
                    value: "amount_with_comma_separator",
                    decimalSymbol: ",",
                    groupSymbol: ".",
                    format: "amount_with_comma_separator"
                },
                amount_no_decimals_with_comma_separator: {
                    value: "amount_no_decimals_with_comma_separator",
                    decimalSymbol: "",
                    groupSymbol: ".",
                    format: "amount_no_decimals_with_comma_separator"
                },
                amount_with_apostrophe_separator: {
                    value: "amount_with_apostrophe_separator",
                    decimalSymbol: ".",
                    groupSymbol: "'",
                    format: "amount_with_apostrophe_separator"
                },
                amount_no_decimals_with_space_separator: {
                    value: "amount_no_decimals_with_space_separator",
                    decimalSymbol: "",
                    groupSymbol: " ",
                    format: "amount_no_decimals_with_space_separator"
                },
                amount_with_space_separator: {
                    value: "amount_with_space_separator",
                    decimalSymbol: ",",
                    groupSymbol: " ",
                    format: "amount_with_space_separator"
                }
            };
            var CUSTOM_FORMAT_REGEX = /.*\{\{(.*)\}\}/;
            var ORIGIN_FORMAT_REGEX = /(\{\{.*\}\})/;
            var DEFAULT_FORMAT = "{{amount}}";
            var defaultFormatStr = "amount";
            var SymbolOrderEnum;
            (function(SymbolOrderEnum) {
                SymbolOrderEnum["PREFIX"] = "prefix";
                SymbolOrderEnum["SUFFIX"] = "suffix";
            })(SymbolOrderEnum || (SymbolOrderEnum = {}));
            function isNodeEnv() {
                return "[object process]" === Object.prototype.toString.call("undefined" !== typeof process ? process : 0);
            }
            function formatNumberByGroupSymbol(num, symbol) {
                return "".concat(num || 0).replace(/(\d)(?=(?:\d{3})+$)/g, "$1".concat(symbol));
            }
            function parseIntegerAndFractionPartByStr(originValue, precision, decimalSymbol) {
                var value = lodash_round(originValue, precision);
                var integerPart;
                var fractionPart;
                if (0 === precision || !decimalSymbol) {
                    integerPart = lodash_round(value);
                    fractionPart = "";
                } else {
                    integerPart = Math.floor(value);
                    fractionPart = "".concat(lodash_round(value - integerPart, precision)).replace(/^0?\.?/, "").padEnd(precision, "0");
                }
                return {
                    integerPart,
                    fractionPart
                };
            }
            var storeCurrency;
            var defaultToCurrency;
            var currencyRates;
            var currencyConfig;
            var standardFormatMapValue = Object.entries(standardFormatMap).map((function(_ref) {
                var _ref2 = _slicedToArray(_ref, 2), value = _ref2[1];
                return value.value;
            }));
            var currencyPrecisionsMap = new Map;
            var currencySymbolsMap = new Map;
            var currencyCustomFormatWithoutCurrencyMap = new Map;
            var currencyCustomFormatWithCurrencyMap = new Map;
            var currencyDefaultFormatWithoutCurrencyMap = new Map;
            var currencyDefaultFormatWithCurrencyMap = new Map;
            var currencySymbolOrderMap = new Map;
            var currencyDecimalSymbolsMap = new Map;
            var currencyGroupSymbolsMap = new Map;
            var reset = function() {
                currencyPrecisionsMap.clear();
                currencySymbolsMap.clear();
                currencyCustomFormatWithoutCurrencyMap.clear();
                currencyCustomFormatWithCurrencyMap.clear();
                currencyDefaultFormatWithoutCurrencyMap.clear();
                currencyDefaultFormatWithCurrencyMap.clear();
                currencySymbolOrderMap.clear();
                currencyDecimalSymbolsMap.clear();
                currencyGroupSymbolsMap.clear();
            };
            var setStoreCurrency = function(code) {
                storeCurrency = code;
            };
            var getStoreCurrency = function() {
                return storeCurrency;
            };
            var setCurrencyRates = function(rates) {
                currencyRates = rates;
            };
            var getCurrencyRates = function() {
                return currencyRates;
            };
            var setDefaultToCurrency = function(code) {
                defaultToCurrency = code;
            };
            var getDefaultToCurrency = function() {
                return defaultToCurrency;
            };
            var setCurrencyConfig = function(config) {
                currencyConfig = config;
                var ratesData = {};
                currencyConfig.forEach((function(config) {
                    ratesData[config.currencyCode] = config.exchangeRate;
                }));
                setCurrencyRates(ratesData);
                if (isNodeEnv()) reset();
            };
            var getCurrencyConfig = function() {
                return currencyConfig;
            };
            var getCurrencyConfigByCode = function(code) {
                return getCurrencyConfig().find((function(item) {
                    return item.currencyCode === code;
                }));
            };
            var isStandardFormatMapKeyType = function(x) {
                return standardFormatMapValue.includes(x || "");
            };
            var commonFormatParse = function(config) {
                var format = config.match(CUSTOM_FORMAT_REGEX);
                if (format && format.length) {
                    var customString = (format[1] || "").trim();
                    if (!isStandardFormatMapKeyType(customString)) return null;
                    return standardFormatMap[customString];
                }
                return null;
            };
            var parseCustomFormat = function(code, config, withCurrency) {
                var _map$get;
                var map = withCurrency ? currencyDefaultFormatWithCurrencyMap : currencyDefaultFormatWithoutCurrencyMap;
                var format = commonFormatParse(config);
                var finalFormat = null === (_map$get = map.get(code)) || void 0 === _map$get ? void 0 : _map$get.format;
                if (format) return format;
                if (isStandardFormatMapKeyType(finalFormat)) return standardFormatMap[finalFormat];
                return standardFormatMap[defaultFormatStr];
            };
            var parseDefaultFormat = function(config) {
                return commonFormatParse(config) || standardFormatMap[defaultFormatStr];
            };
            var parsePrecision = function(code, precision) {
                currencyPrecisionsMap.set(code, precision);
            };
            var parseCurrencySymbol = function(code, currencySymbol) {
                currencySymbolsMap.set(code, currencySymbol);
            };
            var getOriginalFormatConfig = function(config, code, withCurrency) {
                var _format$, _get;
                var format = config.match(CUSTOM_FORMAT_REGEX);
                if (null !== format && void 0 !== format && format.length && standardFormatMapValue.includes((null === format || void 0 === format ? void 0 : null === (_format$ = format[1]) || void 0 === _format$ ? void 0 : _format$.trim()) || "")) return config;
                return (null === (_get = (withCurrency ? currencyDefaultFormatWithCurrencyMap : currencyDefaultFormatWithoutCurrencyMap).get(code)) || void 0 === _get ? void 0 : _get.origin) || DEFAULT_FORMAT;
            };
            var parseDefaultFormatWithoutCurrency = function(code, config) {
                var _parseDefaultFormat = parseDefaultFormat(config), format = _parseDefaultFormat.format;
                currencyDefaultFormatWithoutCurrencyMap.set(code, {
                    format,
                    origin: config
                });
            };
            var parseDefaultFormatWithCurrency = function(code, config) {
                var _parseDefaultFormat2 = parseDefaultFormat(config), format = _parseDefaultFormat2.format;
                currencyDefaultFormatWithCurrencyMap.set(code, {
                    format,
                    origin: config
                });
            };
            var parseCustomFormatWithoutCurrency = function(code, config) {
                var _parseCustomFormat = parseCustomFormat(code, config, false), format = _parseCustomFormat.format, decimalSymbol = _parseCustomFormat.decimalSymbol, groupSymbol = _parseCustomFormat.groupSymbol;
                currencyDecimalSymbolsMap.set(code, decimalSymbol);
                currencyGroupSymbolsMap.set(code, groupSymbol);
                currencyCustomFormatWithoutCurrencyMap.set(code, {
                    format,
                    origin: getOriginalFormatConfig(config, code, false)
                });
            };
            var parseCustomFormatWithCurrency = function(code, config) {
                var _parseCustomFormat2 = parseCustomFormat(code, config, true), format = _parseCustomFormat2.format, decimalSymbol = _parseCustomFormat2.decimalSymbol, groupSymbol = _parseCustomFormat2.groupSymbol;
                currencyDecimalSymbolsMap.set(code, decimalSymbol);
                currencyGroupSymbolsMap.set(code, groupSymbol);
                currencyCustomFormatWithCurrencyMap.set(code, {
                    format,
                    origin: getOriginalFormatConfig(config, code, true)
                });
            };
            var parseCurrencySymbolOrder = function(code, config) {
                if (!config) {
                    console.error("".concat(code, "无对应的messageWithoutDefaultCurrency配置"));
                    return;
                }
                if ((null === config || void 0 === config ? void 0 : config.trimStart().indexOf("{{")) > 0) currencySymbolOrderMap.set(code, SymbolOrderEnum.PREFIX); else currencySymbolOrderMap.set(code, SymbolOrderEnum.SUFFIX);
            };
            var parseCurrencyConfig = function(code) {
                var config = getCurrencyConfigByCode(code);
                if (!config) {
                    console.error("获取".concat(code, "对应的货币配置失败"));
                    return;
                }
                var messageWithoutDefaultCurrency = config.messageWithoutDefaultCurrency, messageWithCurrency = config.messageWithCurrency, messageWithoutCurrency = config.messageWithoutCurrency, messageWithDefaultCurrency = config.messageWithDefaultCurrency, currencyCode = config.currencyCode, _config$rate = config.rate, rate = void 0 === _config$rate ? defaultCurrencyDigit : _config$rate, currencySymbol = config.currencySymbol;
                parsePrecision(currencyCode, rate);
                parseCurrencySymbol(currencyCode, currencySymbol);
                parseCurrencySymbolOrder(currencyCode, messageWithoutDefaultCurrency);
                parseDefaultFormatWithoutCurrency(currencyCode, messageWithoutDefaultCurrency);
                parseDefaultFormatWithCurrency(currencyCode, messageWithDefaultCurrency);
                parseCustomFormatWithoutCurrency(currencyCode, messageWithoutCurrency);
                parseCustomFormatWithCurrency(currencyCode, messageWithCurrency);
            };
            var combineFormatPart = function() {
                var str = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : "";
                var originFormat = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : "";
                return originFormat.replace(ORIGIN_FORMAT_REGEX, str);
            };
            var parseNumberByFormatStr = function(value, formatStr, precision) {
                var _standardFormatMap$fo = standardFormatMap[formatStr], groupSymbol = _standardFormatMap$fo.groupSymbol, decimalSymbol = _standardFormatMap$fo.decimalSymbol;
                var isNegative = value < 0;
                var _parseIntegerAndFract = parseIntegerAndFractionPartByStr(isNegative ? -value : value, precision, decimalSymbol), fractionPart = _parseIntegerAndFract.fractionPart, integerPart = _parseIntegerAndFract.integerPart;
                var integerPartWithGroupSymbol = formatNumberByGroupSymbol(integerPart, groupSymbol);
                return {
                    integer: "".concat(isNegative ? "-" : "").concat(integerPartWithGroupSymbol),
                    fraction: fractionPart,
                    groupSymbol,
                    decimalSymbol
                };
            };
            var getFormatParts = function(value, options) {
                var code = (null === options || void 0 === options ? void 0 : options.code) || storeCurrency || defaultCurrency;
                if (!currencyCustomFormatWithoutCurrencyMap.get(code)) parseCurrencyConfig(code);
                var group = getGroupSymbolByCode(code);
                var decimal = getDecimalSymbolByCode(code);
                var symbol = getSymbolByCode(code);
                var symbolOrder = getSymbolOrderByCode(code);
                var _ref3 = currencyCustomFormatWithoutCurrencyMap.get(code) || {}, format = _ref3.format;
                var finalFormat = isStandardFormatMapKeyType(format) ? format : defaultFormatStr;
                var _parseNumberByFormatS = parseNumberByFormatStr(value, finalFormat, defaultCurrencyDigit), integer = _parseNumberByFormatS.integer, fraction = _parseNumberByFormatS.fraction;
                var rst = [];
                var integerArr = (null === integer || void 0 === integer ? void 0 : integer.split(group)) || [];
                integerArr.forEach((function(item, index) {
                    rst.push({
                        type: "integer",
                        value: item
                    });
                    if (index !== integerArr.length - 1) rst.push({
                        type: "group",
                        value: group
                    });
                }));
                rst.push({
                    type: "decimal",
                    value: decimal
                });
                rst.push({
                    type: "fraction",
                    value: null === fraction || void 0 === fraction ? void 0 : fraction.trim()
                });
                if ("prefix" === symbolOrder) rst.unshift({
                    type: "currency",
                    value: symbol
                }); else rst.push({
                    type: "currency",
                    value: symbol
                });
                return rst;
            };
            var convertCalc = function(value) {
                var _rates$to, _rates$from;
                var from = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : defaultCurrency;
                var to = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : defaultToCurrency;
                var ratesData = arguments.length > 3 ? arguments[3] : void 0;
                var rates = ratesData || getCurrencyRates();
                if (from === to) return value;
                return value * (null !== (_rates$to = null === rates || void 0 === rates ? void 0 : rates[to]) && void 0 !== _rates$to ? _rates$to : 1) / (null !== (_rates$from = null === rates || void 0 === rates ? void 0 : rates[from]) && void 0 !== _rates$from ? _rates$from : 1);
            };
            var commonConvertFormat = function(value, withCurrency, options) {
                var map = withCurrency ? currencyCustomFormatWithCurrencyMap : currencyCustomFormatWithoutCurrencyMap;
                var formatFn = withCurrency ? format : formatWithoutCurrency;
                var _ref4 = options || {}, _ref4$from = _ref4.from, from = void 0 === _ref4$from ? storeCurrency : _ref4$from, _ref4$to = _ref4.to, to = void 0 === _ref4$to ? defaultToCurrency : _ref4$to, rates = _ref4.currencyRates;
                if (!map.get(from)) parseCurrencyConfig(from);
                if (!map.get(to)) parseCurrencyConfig(to);
                var rateData = rates || getCurrencyRates();
                var rst = convertCalc(value, from, to, rateData);
                return formatFn(rst, {
                    code: to
                });
            };
            var convertFormat = function(value, options) {
                return commonConvertFormat(value, true, options);
            };
            var convertFormatWithoutCurrency = function(value, options) {
                return commonConvertFormat(value, false, options);
            };
            var commonFormat = function(value) {
                var _options$digits;
                var withCurrency = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : true;
                var options = arguments.length > 2 ? arguments[2] : void 0;
                var map = withCurrency ? currencyCustomFormatWithCurrencyMap : currencyCustomFormatWithoutCurrencyMap;
                var code = (null === options || void 0 === options ? void 0 : options.code) || storeCurrency || defaultCurrency;
                if (!map.get(code)) parseCurrencyConfig(code);
                var _ref5 = map.get(code) || {}, format = _ref5.format, origin = _ref5.origin;
                var precision = null !== (_options$digits = null === options || void 0 === options ? void 0 : options.digits) && void 0 !== _options$digits ? _options$digits : defaultCurrencyDigit;
                var finalFormat = isStandardFormatMapKeyType(format) ? format : defaultFormatStr;
                var _parseNumberByFormatS2 = parseNumberByFormatStr(value / Math.pow(10, precision), finalFormat, precision), integer = _parseNumberByFormatS2.integer, fraction = _parseNumberByFormatS2.fraction, decimalSymbol = _parseNumberByFormatS2.decimalSymbol;
                var str;
                if (decimalSymbol && precision) str = "".concat(integer).concat(decimalSymbol).concat(null !== fraction && void 0 !== fraction ? fraction : ""); else str = integer;
                var res = combineFormatPart(str, origin);
                return res;
            };
            var format = function(value, options) {
                return commonFormat(value, true, options);
            };
            var formatWithoutCurrency = function(value, options) {
                return commonFormat(value, false, options);
            };
            var formatMoneyWithoutCurrency = function(value, options) {
                var map = currencyCustomFormatWithoutCurrencyMap;
                var code = (null === options || void 0 === options ? void 0 : options.code) || storeCurrency || defaultCurrency;
                if (!map.get(code)) parseCurrencyConfig(code);
                var _ref6 = map.get(code) || {}, format = _ref6.format;
                var finalFormat = isStandardFormatMapKeyType(format) ? format : defaultFormatStr;
                var precision = defaultCurrencyDigit;
                var _parseNumberByFormatS3 = parseNumberByFormatStr(value / Math.pow(10, precision), finalFormat, precision), integer = _parseNumberByFormatS3.integer, fraction = _parseNumberByFormatS3.fraction, decimalSymbol = _parseNumberByFormatS3.decimalSymbol;
                var str;
                if (decimalSymbol && precision) str = "".concat(integer).concat(decimalSymbol).concat(null !== fraction && void 0 !== fraction ? fraction : ""); else str = integer;
                return str;
            };
            var getDigitsByCode = function(code) {
                if (!currencyCustomFormatWithoutCurrencyMap.get(code)) parseCurrencyConfig(code);
                return currencyPrecisionsMap.get(code);
            };
            var getSymbolByCode = function(code) {
                if (!currencyCustomFormatWithoutCurrencyMap.get(code)) parseCurrencyConfig(code);
                return currencySymbolsMap.get(code);
            };
            var getSymbolOrderByCode = function() {
                var code = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : defaultCurrency;
                if (!currencyCustomFormatWithoutCurrencyMap.get(code)) parseCurrencyConfig(code);
                return currencySymbolOrderMap.get(code);
            };
            var formatNumber = function(value) {
                var decimalDigits = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : defaultCurrencyDigit;
                var v = "number" !== typeof value ? Number(value) : value;
                return v / Math.pow(10, decimalDigits);
            };
            var unformatNumber = function(value) {
                var decimalDigits = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : defaultCurrencyDigit;
                var v = lodash_round(("number" !== typeof value ? Number(value) : value) * Math.pow(10, decimalDigits), 0);
                return v;
            };
            var formatCurrency = function(value) {
                return formatNumber(value, defaultCurrencyDigit);
            };
            var unformatCurrency = function(value) {
                return unformatNumber(value, defaultCurrencyDigit);
            };
            var formatPercent = function(value) {
                return formatNumber(value, defaultPresentDigit);
            };
            var unformatPercent = function(value) {
                return unformatNumber(value, defaultPresentDigit);
            };
            var getDecimalSymbolByCode = function(code) {
                if (!currencyCustomFormatWithoutCurrencyMap.get(code)) parseCurrencyConfig(code);
                return currencyDecimalSymbolsMap.get(code);
            };
            var getGroupSymbolByCode = function(code) {
                if (!currencyCustomFormatWithoutCurrencyMap.get(code)) parseCurrencyConfig(code);
                return currencyGroupSymbolsMap.get(code);
            };
            var getConvertPrice = function(value, options) {
                var _ref7 = options || {}, from = _ref7.from, code = _ref7.code, to = _ref7.to, rates = _ref7.currencyRates;
                var fromCurrencyCode = from || storeCurrency || defaultCurrency;
                if (!currencyCustomFormatWithoutCurrencyMap.get(fromCurrencyCode)) parseCurrencyConfig(fromCurrencyCode);
                var toCurrencyCode = to || code || defaultToCurrency;
                if (!currencyCustomFormatWithoutCurrencyMap.get(toCurrencyCode)) parseCurrencyConfig(toCurrencyCode);
                var fromPrice = formatNumber(value);
                var toPrice = convertCalc(fromPrice, fromCurrencyCode, toCurrencyCode, rates || currencyRates);
                var formatPartsResult = getFormatParts(toPrice, {
                    code: toCurrencyCode
                });
                var convertResult = {
                    group: "",
                    integer: "",
                    decimal: "",
                    fraction: "",
                    symbolOrder: "",
                    currencySymbol: ""
                };
                convertResult.symbolOrder = getSymbolOrderByCode(toCurrencyCode);
                formatPartsResult.forEach((function(item) {
                    var value = item.value || "";
                    if ("currency" === (null === item || void 0 === item ? void 0 : item.type)) convertResult.currencySymbol = value;
                    if ("integer" === (null === item || void 0 === item ? void 0 : item.type)) if (convertResult.integer) convertResult.integer = "".concat(convertResult.integer).concat(convertResult.group || "").concat(value); else convertResult.integer = value;
                    if ("group" === (null === item || void 0 === item ? void 0 : item.type)) convertResult.group = value;
                    if ("decimal" === (null === item || void 0 === item ? void 0 : item.type)) convertResult.decimal = value;
                    if ("fraction" === (null === item || void 0 === item ? void 0 : item.type)) convertResult.fraction = value;
                }));
                return convertResult;
            };
            exports.convertCalc = convertCalc;
            exports.convertFormat = convertFormat;
            exports.convertFormatWithoutCurrency = convertFormatWithoutCurrency;
            exports.covertCalc = convertCalc;
            exports.defaultCurrency = defaultCurrency;
            exports.defaultCurrencyDigit = defaultCurrencyDigit;
            exports.defaultPresentDigit = defaultPresentDigit;
            exports.format = format;
            exports.formatCurrency = formatCurrency;
            exports.formatMoneyWithoutCurrency = formatMoneyWithoutCurrency;
            exports.formatNumber = formatNumber;
            exports.formatPercent = formatPercent;
            exports.formatWithoutCurrency = formatWithoutCurrency;
            exports.getConvertPrice = getConvertPrice;
            exports.getCurrencyConfig = getCurrencyConfig;
            exports.getCurrencyRates = getCurrencyRates;
            exports.getDecimalSymbolByCode = getDecimalSymbolByCode;
            exports.getDefaultToCurrency = getDefaultToCurrency;
            exports.getDigitsByCode = getDigitsByCode;
            exports.getFormatParts = getFormatParts;
            exports.getGroupSymbolByCode = getGroupSymbolByCode;
            exports.getStoreCurrency = getStoreCurrency;
            exports.getSymbolByCode = getSymbolByCode;
            exports.getSymbolOrderByCode = getSymbolOrderByCode;
            exports.parseCustomFormat = parseCustomFormat;
            exports.parseCustomFormatWithCurrency = parseCustomFormatWithCurrency;
            exports.parseCustomFormatWithoutCurrency = parseCustomFormatWithoutCurrency;
            exports.parseDefaultFormat = parseDefaultFormat;
            exports.parseDefaultFormatWithCurrency = parseDefaultFormatWithCurrency;
            exports.parseDefaultFormatWithoutCurrency = parseDefaultFormatWithoutCurrency;
            exports.setCurrencyConfig = setCurrencyConfig;
            exports.setCurrencyRates = setCurrencyRates;
            exports.setDefaultToCurrency = setDefaultToCurrency;
            exports.setStoreCurrency = setStoreCurrency;
            exports.unformatCurrency = unformatCurrency;
            exports.unformatNumber = unformatNumber;
            exports.unformatPercent = unformatPercent;
            Object.defineProperty(exports, "__esModule", {
                value: true
            });
        }));
    },
    "../shared/browser/node_modules/@sl/logger-sentry/lib/index.es.js": (module, __webpack_exports__, __webpack_require__) => {
        "use strict";
        __webpack_require__.d(__webpack_exports__, {
            default: () => H
        });
        var _sl_logger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("../shared/browser/node_modules/@sl/logger/lib/index.es.js");
        module = __webpack_require__.hmd(module);
        var e = function(t, n) {
            return e = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function(t, e) {
                t.__proto__ = e;
            } || function(t, e) {
                for (var n in e) e.hasOwnProperty(n) && (t[n] = e[n]);
            }, e(t, n);
        };
        var n = function() {
            return n = Object.assign || function(t) {
                for (var e, n = 1, r = arguments.length; n < r; n++) for (var i in e = arguments[n]) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
                return t;
            }, n.apply(this, arguments);
        };
        function r(t, e) {
            var n = "function" == typeof Symbol && t[Symbol.iterator];
            if (!n) return t;
            var r, i, s = n.call(t), o = [];
            try {
                for (;(void 0 === e || e-- > 0) && !(r = s.next()).done; ) o.push(r.value);
            } catch (t) {
                i = {
                    error: t
                };
            } finally {
                try {
                    r && !r.done && (n = s.return) && n.call(s);
                } finally {
                    if (i) throw i.error;
                }
            }
            return o;
        }
        function i() {
            for (var t = [], e = 0; e < arguments.length; e++) t = t.concat(r(arguments[e]));
            return t;
        }
        function s() {
            return !("undefined" != typeof __SENTRY_BROWSER_BUNDLE__ && __SENTRY_BROWSER_BUNDLE__) && "[object process]" === Object.prototype.toString.call("undefined" != typeof process ? process : 0);
        }
        var o = {};
        function a() {
            return s() ? __webpack_require__.g : "undefined" != typeof window ? window : "undefined" != typeof self ? self : o;
        }
        function c(t, e, n) {
            var r = n || a(), i = r.__SENTRY__ = r.__SENTRY__ || {};
            return i[t] || (i[t] = e());
        }
        var u = Object.prototype.toString;
        function p(t) {
            return function(t, e) {
                return u.call(t) === "[object " + e + "]";
            }(t, "Object");
        }
        function h(t) {
            return Boolean(t && t.then && "function" == typeof t.then);
        }
        var f, _ = "undefined" == typeof __SENTRY_DEBUG__ || __SENTRY_DEBUG__, l = a(), d = [ "debug", "info", "warn", "error", "log", "assert" ];
        function g(t) {
            var e = a();
            if (!("console" in e)) return t();
            var n = e.console, r = {};
            d.forEach((function(t) {
                var i = n[t] && n[t].__sentry_original__;
                t in e.console && i && (r[t] = n[t], n[t] = i);
            }));
            try {
                return t();
            } finally {
                Object.keys(r).forEach((function(t) {
                    n[t] = r[t];
                }));
            }
        }
        function v() {
            var t = !1, e = {
                enable: function() {
                    t = !0;
                },
                disable: function() {
                    t = !1;
                }
            };
            return _ ? d.forEach((function(n) {
                e[n] = function() {
                    for (var e = [], r = 0; r < arguments.length; r++) e[r] = arguments[r];
                    t && g((function() {
                        var t;
                        (t = l.console)[n].apply(t, i([ "Sentry Logger [" + n + "]:" ], e));
                    }));
                };
            })) : d.forEach((function(t) {
                e[t] = function() {};
            })), e;
        }
        function y(t) {
            var e, n;
            if (p(t)) {
                var r = {};
                try {
                    for (var i = function(t) {
                        var e = "function" == typeof Symbol && Symbol.iterator, n = e && t[e], r = 0;
                        if (n) return n.call(t);
                        if (t && "number" == typeof t.length) return {
                            next: function() {
                                return t && r >= t.length && (t = void 0), {
                                    value: t && t[r++],
                                    done: !t
                                };
                            }
                        };
                        throw new TypeError(e ? "Object is not iterable." : "Symbol.iterator is not defined.");
                    }(Object.keys(t)), s = i.next(); !s.done; s = i.next()) {
                        var o = s.value;
                        void 0 !== t[o] && (r[o] = y(t[o]));
                    }
                } catch (t) {
                    e = {
                        error: t
                    };
                } finally {
                    try {
                        s && !s.done && (n = i.return) && n.call(i);
                    } finally {
                        if (e) throw e.error;
                    }
                }
                return r;
            }
            return Array.isArray(t) ? t.map(y) : t;
        }
        function x() {
            var t = a(), e = t.crypto || t.msCrypto;
            if (void 0 !== e && e.getRandomValues) {
                var n = new Uint16Array(8);
                e.getRandomValues(n), n[3] = 4095 & n[3] | 16384, n[4] = 16383 & n[4] | 32768;
                var r = function(t) {
                    for (var e = t.toString(16); e.length < 4; ) e = "0" + e;
                    return e;
                };
                return r(n[0]) + r(n[1]) + r(n[2]) + r(n[3]) + r(n[4]) + r(n[5]) + r(n[6]) + r(n[7]);
            }
            return "xxxxxxxxxxxx4xxxyxxxxxxxxxxxxxxx".replace(/[xy]/g, (function(t) {
                var e = 16 * Math.random() | 0;
                return ("x" === t ? e : 3 & e | 8).toString(16);
            }));
        }
        f = _ ? c("logger", v) : v();
        var S, m = function() {
            function t(t) {
                var e = this;
                this._state = 0, this._handlers = [], this._resolve = function(t) {
                    e._setResult(1, t);
                }, this._reject = function(t) {
                    e._setResult(2, t);
                }, this._setResult = function(t, n) {
                    0 === e._state && (h(n) ? n.then(e._resolve, e._reject) : (e._state = t, e._value = n, 
                    e._executeHandlers()));
                }, this._executeHandlers = function() {
                    if (0 !== e._state) {
                        var t = e._handlers.slice();
                        e._handlers = [], t.forEach((function(t) {
                            t[0] || (1 === e._state && t[1](e._value), 2 === e._state && t[2](e._value), t[0] = !0);
                        }));
                    }
                };
                try {
                    t(this._resolve, this._reject);
                } catch (t) {
                    this._reject(t);
                }
            }
            return t.prototype.then = function(e, n) {
                var r = this;
                return new t((function(t, i) {
                    r._handlers.push([ !1, function(n) {
                        if (e) try {
                            t(e(n));
                        } catch (t) {
                            i(t);
                        } else t(n);
                    }, function(e) {
                        if (n) try {
                            t(n(e));
                        } catch (t) {
                            i(t);
                        } else i(e);
                    } ]), r._executeHandlers();
                }));
            }, t.prototype.catch = function(t) {
                return this.then((function(t) {
                    return t;
                }), t);
            }, t.prototype.finally = function(e) {
                var n = this;
                return new t((function(t, r) {
                    var i, s;
                    return n.then((function(t) {
                        s = !1, i = t, e && e();
                    }), (function(t) {
                        s = !0, i = t, e && e();
                    })).then((function() {
                        s ? r(i) : t(i);
                    }));
                }));
            }, t;
        }();
        !function(t) {
            t.Fatal = "fatal", t.Error = "error", t.Warning = "warning", t.Log = "log", t.Info = "info", 
            t.Debug = "debug", t.Critical = "critical";
        }(S || (S = {}));
        var b = {
            nowSeconds: function() {
                return Date.now() / 1e3;
            }
        };
        var E = s() ? function() {
            try {
                return (t = module, e = "perf_hooks", t.require(e)).performance;
            } catch (t) {
                return;
            }
            var t, e;
        }() : function() {
            var t = a().performance;
            if (t && t.now) return {
                now: function() {
                    return t.now();
                },
                timeOrigin: Date.now() - t.now()
            };
        }(), w = void 0 === E ? b : {
            nowSeconds: function() {
                return (E.timeOrigin + E.now()) / 1e3;
            }
        }, k = b.nowSeconds.bind(b), T = w.nowSeconds.bind(w);
        !function() {
            var t = a().performance;
            if (t && t.now) {
                var e = 36e5, n = t.now(), r = Date.now(), i = t.timeOrigin ? Math.abs(t.timeOrigin + n - r) : e, s = i < e, o = t.timing && t.timing.navigationStart, c = "number" == typeof o ? Math.abs(o + n - r) : e;
                (s || c < e) && i <= c && t.timeOrigin;
            }
        }();
        var L = function() {
            function t() {
                this._notifyingListeners = !1, this._scopeListeners = [], this._eventProcessors = [], 
                this._breadcrumbs = [], this._user = {}, this._tags = {}, this._extra = {}, this._contexts = {}, 
                this._sdkProcessingMetadata = {};
            }
            return t.clone = function(e) {
                var r = new t;
                return e && (r._breadcrumbs = i(e._breadcrumbs), r._tags = n({}, e._tags), r._extra = n({}, e._extra), 
                r._contexts = n({}, e._contexts), r._user = e._user, r._level = e._level, r._span = e._span, 
                r._session = e._session, r._transactionName = e._transactionName, r._fingerprint = e._fingerprint, 
                r._eventProcessors = i(e._eventProcessors), r._requestSession = e._requestSession), 
                r;
            }, t.prototype.addScopeListener = function(t) {
                this._scopeListeners.push(t);
            }, t.prototype.addEventProcessor = function(t) {
                return this._eventProcessors.push(t), this;
            }, t.prototype.setUser = function(t) {
                return this._user = t || {}, this._session && this._session.update({
                    user: t
                }), this._notifyScopeListeners(), this;
            }, t.prototype.getUser = function() {
                return this._user;
            }, t.prototype.getRequestSession = function() {
                return this._requestSession;
            }, t.prototype.setRequestSession = function(t) {
                return this._requestSession = t, this;
            }, t.prototype.setTags = function(t) {
                return this._tags = n(n({}, this._tags), t), this._notifyScopeListeners(), this;
            }, t.prototype.setTag = function(t, e) {
                var r;
                return this._tags = n(n({}, this._tags), ((r = {})[t] = e, r)), this._notifyScopeListeners(), 
                this;
            }, t.prototype.setExtras = function(t) {
                return this._extra = n(n({}, this._extra), t), this._notifyScopeListeners(), this;
            }, t.prototype.setExtra = function(t, e) {
                var r;
                return this._extra = n(n({}, this._extra), ((r = {})[t] = e, r)), this._notifyScopeListeners(), 
                this;
            }, t.prototype.setFingerprint = function(t) {
                return this._fingerprint = t, this._notifyScopeListeners(), this;
            }, t.prototype.setLevel = function(t) {
                return this._level = t, this._notifyScopeListeners(), this;
            }, t.prototype.setTransactionName = function(t) {
                return this._transactionName = t, this._notifyScopeListeners(), this;
            }, t.prototype.setTransaction = function(t) {
                return this.setTransactionName(t);
            }, t.prototype.setContext = function(t, e) {
                var r;
                return null === e ? delete this._contexts[t] : this._contexts = n(n({}, this._contexts), ((r = {})[t] = e, 
                r)), this._notifyScopeListeners(), this;
            }, t.prototype.setSpan = function(t) {
                return this._span = t, this._notifyScopeListeners(), this;
            }, t.prototype.getSpan = function() {
                return this._span;
            }, t.prototype.getTransaction = function() {
                var t = this.getSpan();
                return t && t.transaction;
            }, t.prototype.setSession = function(t) {
                return t ? this._session = t : delete this._session, this._notifyScopeListeners(), 
                this;
            }, t.prototype.getSession = function() {
                return this._session;
            }, t.prototype.update = function(e) {
                if (!e) return this;
                if ("function" == typeof e) {
                    var r = e(this);
                    return r instanceof t ? r : this;
                }
                return e instanceof t ? (this._tags = n(n({}, this._tags), e._tags), this._extra = n(n({}, this._extra), e._extra), 
                this._contexts = n(n({}, this._contexts), e._contexts), e._user && Object.keys(e._user).length && (this._user = e._user), 
                e._level && (this._level = e._level), e._fingerprint && (this._fingerprint = e._fingerprint), 
                e._requestSession && (this._requestSession = e._requestSession)) : p(e) && (this._tags = n(n({}, this._tags), e.tags), 
                this._extra = n(n({}, this._extra), e.extra), this._contexts = n(n({}, this._contexts), e.contexts), 
                e.user && (this._user = e.user), e.level && (this._level = e.level), e.fingerprint && (this._fingerprint = e.fingerprint), 
                e.requestSession && (this._requestSession = e.requestSession)), this;
            }, t.prototype.clear = function() {
                return this._breadcrumbs = [], this._tags = {}, this._extra = {}, this._user = {}, 
                this._contexts = {}, this._level = void 0, this._transactionName = void 0, this._fingerprint = void 0, 
                this._requestSession = void 0, this._span = void 0, this._session = void 0, this._notifyScopeListeners(), 
                this;
            }, t.prototype.addBreadcrumb = function(t, e) {
                var r = "number" == typeof e ? Math.min(e, 100) : 100;
                if (r <= 0) return this;
                var s = n({
                    timestamp: k()
                }, t);
                return this._breadcrumbs = i(this._breadcrumbs, [ s ]).slice(-r), this._notifyScopeListeners(), 
                this;
            }, t.prototype.clearBreadcrumbs = function() {
                return this._breadcrumbs = [], this._notifyScopeListeners(), this;
            }, t.prototype.applyToEvent = function(t, e) {
                if (this._extra && Object.keys(this._extra).length && (t.extra = n(n({}, this._extra), t.extra)), 
                this._tags && Object.keys(this._tags).length && (t.tags = n(n({}, this._tags), t.tags)), 
                this._user && Object.keys(this._user).length && (t.user = n(n({}, this._user), t.user)), 
                this._contexts && Object.keys(this._contexts).length && (t.contexts = n(n({}, this._contexts), t.contexts)), 
                this._level && (t.level = this._level), this._transactionName && (t.transaction = this._transactionName), 
                this._span) {
                    t.contexts = n({
                        trace: this._span.getTraceContext()
                    }, t.contexts);
                    var r = this._span.transaction && this._span.transaction.name;
                    r && (t.tags = n({
                        transaction: r
                    }, t.tags));
                }
                return this._applyFingerprint(t), t.breadcrumbs = i(t.breadcrumbs || [], this._breadcrumbs), 
                t.breadcrumbs = t.breadcrumbs.length > 0 ? t.breadcrumbs : void 0, t.sdkProcessingMetadata = this._sdkProcessingMetadata, 
                this._notifyEventProcessors(i(c("globalEventProcessors", (function() {
                    return [];
                })), this._eventProcessors), t, e);
            }, t.prototype.setSDKProcessingMetadata = function(t) {
                return this._sdkProcessingMetadata = n(n({}, this._sdkProcessingMetadata), t), this;
            }, t.prototype._notifyEventProcessors = function(t, e, r, i) {
                var s = this;
                return void 0 === i && (i = 0), new m((function(o, a) {
                    var c = t[i];
                    if (null === e || "function" != typeof c) o(e); else {
                        var u = c(n({}, e), r);
                        h(u) ? u.then((function(e) {
                            return s._notifyEventProcessors(t, e, r, i + 1).then(o);
                        })).then(null, a) : s._notifyEventProcessors(t, u, r, i + 1).then(o).then(null, a);
                    }
                }));
            }, t.prototype._notifyScopeListeners = function() {
                var t = this;
                this._notifyingListeners || (this._notifyingListeners = !0, this._scopeListeners.forEach((function(e) {
                    e(t);
                })), this._notifyingListeners = !1);
            }, t.prototype._applyFingerprint = function(t) {
                t.fingerprint = t.fingerprint ? Array.isArray(t.fingerprint) ? t.fingerprint : [ t.fingerprint ] : [], 
                this._fingerprint && (t.fingerprint = t.fingerprint.concat(this._fingerprint)), 
                t.fingerprint && !t.fingerprint.length && delete t.fingerprint;
            }, t;
        }();
        var O = function() {
            function t(t) {
                this.errors = 0, this.sid = x(), this.duration = 0, this.status = "ok", this.init = !0, 
                this.ignoreDuration = !1;
                var e = T();
                this.timestamp = e, this.started = e, t && this.update(t);
            }
            return t.prototype.update = function(t) {
                if (void 0 === t && (t = {}), t.user && (!this.ipAddress && t.user.ip_address && (this.ipAddress = t.user.ip_address), 
                this.did || t.did || (this.did = t.user.id || t.user.email || t.user.username)), 
                this.timestamp = t.timestamp || T(), t.ignoreDuration && (this.ignoreDuration = t.ignoreDuration), 
                t.sid && (this.sid = 32 === t.sid.length ? t.sid : x()), void 0 !== t.init && (this.init = t.init), 
                !this.did && t.did && (this.did = "" + t.did), "number" == typeof t.started && (this.started = t.started), 
                this.ignoreDuration) this.duration = void 0; else if ("number" == typeof t.duration) this.duration = t.duration; else {
                    var e = this.timestamp - this.started;
                    this.duration = e >= 0 ? e : 0;
                }
                t.release && (this.release = t.release), t.environment && (this.environment = t.environment), 
                !this.ipAddress && t.ipAddress && (this.ipAddress = t.ipAddress), !this.userAgent && t.userAgent && (this.userAgent = t.userAgent), 
                "number" == typeof t.errors && (this.errors = t.errors), t.status && (this.status = t.status);
            }, t.prototype.close = function(t) {
                t ? this.update({
                    status: t
                }) : "ok" === this.status ? this.update({
                    status: "exited"
                }) : this.update();
            }, t.prototype.toJSON = function() {
                return y({
                    sid: "" + this.sid,
                    init: this.init,
                    started: new Date(1e3 * this.started).toISOString(),
                    timestamp: new Date(1e3 * this.timestamp).toISOString(),
                    status: this.status,
                    errors: this.errors,
                    did: "number" == typeof this.did || "string" == typeof this.did ? "" + this.did : void 0,
                    duration: this.duration,
                    attrs: {
                        release: this.release,
                        environment: this.environment,
                        ip_address: this.ipAddress,
                        user_agent: this.userAgent
                    }
                });
            }, t;
        }(), N = "undefined" == typeof __SENTRY_DEBUG__ || __SENTRY_DEBUG__, R = function() {
            function t(t, e, n) {
                void 0 === e && (e = new L), void 0 === n && (n = 4), this._version = n, this._stack = [ {} ], 
                this.getStackTop().scope = e, t && this.bindClient(t);
            }
            return t.prototype.isOlderThan = function(t) {
                return this._version < t;
            }, t.prototype.bindClient = function(t) {
                this.getStackTop().client = t, t && t.setupIntegrations && t.setupIntegrations();
            }, t.prototype.pushScope = function() {
                var t = L.clone(this.getScope());
                return this.getStack().push({
                    client: this.getClient(),
                    scope: t
                }), t;
            }, t.prototype.popScope = function() {
                return !(this.getStack().length <= 1) && !!this.getStack().pop();
            }, t.prototype.withScope = function(t) {
                var e = this.pushScope();
                try {
                    t(e);
                } finally {
                    this.popScope();
                }
            }, t.prototype.getClient = function() {
                return this.getStackTop().client;
            }, t.prototype.getScope = function() {
                return this.getStackTop().scope;
            }, t.prototype.getStack = function() {
                return this._stack;
            }, t.prototype.getStackTop = function() {
                return this._stack[this._stack.length - 1];
            }, t.prototype.captureException = function(t, e) {
                var r = this._lastEventId = e && e.event_id ? e.event_id : x(), i = e;
                if (!e) {
                    var s = void 0;
                    try {
                        throw new Error("Sentry syntheticException");
                    } catch (t) {
                        s = t;
                    }
                    i = {
                        originalException: t,
                        syntheticException: s
                    };
                }
                return this._invokeClient("captureException", t, n(n({}, i), {
                    event_id: r
                })), r;
            }, t.prototype.captureMessage = function(t, e, r) {
                var i = this._lastEventId = r && r.event_id ? r.event_id : x(), s = r;
                if (!r) {
                    var o = void 0;
                    try {
                        throw new Error(t);
                    } catch (t) {
                        o = t;
                    }
                    s = {
                        originalException: t,
                        syntheticException: o
                    };
                }
                return this._invokeClient("captureMessage", t, e, n(n({}, s), {
                    event_id: i
                })), i;
            }, t.prototype.captureEvent = function(t, e) {
                var r = e && e.event_id ? e.event_id : x();
                return "transaction" !== t.type && (this._lastEventId = r), this._invokeClient("captureEvent", t, n(n({}, e), {
                    event_id: r
                })), r;
            }, t.prototype.lastEventId = function() {
                return this._lastEventId;
            }, t.prototype.addBreadcrumb = function(t, e) {
                var r = this.getStackTop(), i = r.scope, s = r.client;
                if (i && s) {
                    var o = s.getOptions && s.getOptions() || {}, a = o.beforeBreadcrumb, c = void 0 === a ? null : a, u = o.maxBreadcrumbs, p = void 0 === u ? 100 : u;
                    if (!(p <= 0)) {
                        var h = k(), f = n({
                            timestamp: h
                        }, t), _ = c ? g((function() {
                            return c(f, e);
                        })) : f;
                        null !== _ && i.addBreadcrumb(_, p);
                    }
                }
            }, t.prototype.setUser = function(t) {
                var e = this.getScope();
                e && e.setUser(t);
            }, t.prototype.setTags = function(t) {
                var e = this.getScope();
                e && e.setTags(t);
            }, t.prototype.setExtras = function(t) {
                var e = this.getScope();
                e && e.setExtras(t);
            }, t.prototype.setTag = function(t, e) {
                var n = this.getScope();
                n && n.setTag(t, e);
            }, t.prototype.setExtra = function(t, e) {
                var n = this.getScope();
                n && n.setExtra(t, e);
            }, t.prototype.setContext = function(t, e) {
                var n = this.getScope();
                n && n.setContext(t, e);
            }, t.prototype.configureScope = function(t) {
                var e = this.getStackTop(), n = e.scope, r = e.client;
                n && r && t(n);
            }, t.prototype.run = function(t) {
                var e = C(this);
                try {
                    t(this);
                } finally {
                    C(e);
                }
            }, t.prototype.getIntegration = function(t) {
                var e = this.getClient();
                if (!e) return null;
                try {
                    return e.getIntegration(t);
                } catch (e) {
                    return N && f.warn("Cannot retrieve integration " + t.id + " from the current Hub"), 
                    null;
                }
            }, t.prototype.startSpan = function(t) {
                return this._callExtensionMethod("startSpan", t);
            }, t.prototype.startTransaction = function(t, e) {
                return this._callExtensionMethod("startTransaction", t, e);
            }, t.prototype.traceHeaders = function() {
                return this._callExtensionMethod("traceHeaders");
            }, t.prototype.captureSession = function(t) {
                if (void 0 === t && (t = !1), t) return this.endSession();
                this._sendSessionUpdate();
            }, t.prototype.endSession = function() {
                var t = this.getStackTop(), e = t && t.scope, n = e && e.getSession();
                n && n.close(), this._sendSessionUpdate(), e && e.setSession();
            }, t.prototype.startSession = function(t) {
                var e = this.getStackTop(), r = e.scope, i = e.client, s = i && i.getOptions() || {}, o = s.release, c = s.environment, u = (a().navigator || {}).userAgent, p = new O(n(n(n({
                    release: o,
                    environment: c
                }, r && {
                    user: r.getUser()
                }), u && {
                    userAgent: u
                }), t));
                if (r) {
                    var h = r.getSession && r.getSession();
                    h && "ok" === h.status && h.update({
                        status: "exited"
                    }), this.endSession(), r.setSession(p);
                }
                return p;
            }, t.prototype._sendSessionUpdate = function() {
                var t = this.getStackTop(), e = t.scope, n = t.client;
                if (e) {
                    var r = e.getSession && e.getSession();
                    r && n && n.captureSession && n.captureSession(r);
                }
            }, t.prototype._invokeClient = function(t) {
                for (var e, n = [], r = 1; r < arguments.length; r++) n[r - 1] = arguments[r];
                var s = this.getStackTop(), o = s.scope, a = s.client;
                a && a[t] && (e = a)[t].apply(e, i(n, [ o ]));
            }, t.prototype._callExtensionMethod = function(t) {
                for (var e = [], n = 1; n < arguments.length; n++) e[n - 1] = arguments[n];
                var r = j(), i = r.__SENTRY__;
                if (i && i.extensions && "function" == typeof i.extensions[t]) return i.extensions[t].apply(this, e);
                N && f.warn("Extension method " + t + " couldn't be found, doing nothing.");
            }, t;
        }();
        function j() {
            var t = a();
            return t.__SENTRY__ = t.__SENTRY__ || {
                extensions: {},
                hub: void 0
            }, t;
        }
        function C(t) {
            var e = j(), n = M(e);
            return D(e, t), n;
        }
        function A() {
            var t = j();
            return P(t) && !M(t).isOlderThan(4) || D(t, new R), s() ? function(t) {
                try {
                    var e = j().__SENTRY__, n = e && e.extensions && e.extensions.domain && e.extensions.domain.active;
                    if (!n) return M(t);
                    if (!P(n) || M(n).isOlderThan(4)) {
                        var r = M(t).getStackTop();
                        D(n, new R(r.client, L.clone(r.scope)));
                    }
                    return M(n);
                } catch (e) {
                    return M(t);
                }
            }(t) : M(t);
        }
        function P(t) {
            return !!(t && t.__SENTRY__ && t.__SENTRY__.hub);
        }
        function M(t) {
            return c("hub", (function() {
                return new R;
            }), t);
        }
        function D(t, e) {
            return !!t && ((t.__SENTRY__ = t.__SENTRY__ || {}).hub = e, !0);
        }
        function B(t) {
            for (var e = [], n = 1; n < arguments.length; n++) e[n - 1] = arguments[n];
            var r = A();
            if (r && r[t]) return r[t].apply(r, i(e));
            throw new Error("No hub defined or " + t + " was not found on the hub, please open a bug report.");
        }
        function I(t, e) {
            var r = new Error(t);
            return B("captureMessage", t, "string" == typeof e ? e : void 0, n({
                originalException: t,
                syntheticException: r
            }, "string" != typeof e ? {
                captureContext: e
            } : void 0));
        }
        var Y = function(t) {
            function n() {
                var e = null !== t && t.apply(this, arguments) || this;
                return e.name = "Logger Error", e;
            }
            return function(t, n) {
                function r() {
                    this.constructor = t;
                }
                e(t, n), t.prototype = null === n ? Object.create(n) : (r.prototype = n.prototype, 
                new r);
            }(n, t), n;
        }(Error), U = function(t) {
            var e = t.message, n = t.owner, r = t.action, i = t.status, s = t.errorLevel, o = t.data;
            return {
                title: e,
                context: [ {
                    key: "owner",
                    value: n
                }, {
                    key: "action",
                    value: r
                }, {
                    key: "status",
                    value: i
                }, {
                    key: "errorLevel",
                    value: s
                } ].map((function(t) {
                    return e = t.key, n = t.value, "".concat(n ? "\n[".concat(e, ": ").concat(n, "]") : "");
                    var e, n;
                })).join(""),
                data: o ? "\n".concat(JSON.stringify(o, null, 2)) : ""
            };
        }, q = function(t) {
            var e = {};
            return [ "owner", "action" ].forEach((function(n) {
                (t[n] || 0 === t[n]) && (e["event.".concat(n)] = t[n]);
            })), n(n({}, t.tags), e);
        }, W = function(t, e) {
            var n;
            return e instanceof Error ? (e.message = "".concat(t.title).concat(e.message ? " [reason: ".concat(e.message, "]") : "").concat(t.context), 
            n = e) : (null == e ? void 0 : e.reportError) instanceof Error ? (e.reportError.message = "".concat(t.title).concat(e.reportError.message ? " [reason: ".concat(e.reportError.message, "]") : "").concat(t.context), 
            n = e.reportError) : n = new Y("".concat(t.title).concat(t.context)), n;
        }, H = function(e) {
            var r, i, s = e.level, o = e.data, a = e.error, c = U(e), u = q(e), p = W(c, a);
            switch (s) {
              case _sl_logger__WEBPACK_IMPORTED_MODULE_0__.LogLevel.Info:
                B("addBreadcrumb", {
                    category: e.owner,
                    message: "".concat(c.title).concat(c.context).concat(c.data),
                    level: S.Info
                });
                break;

              case _sl_logger__WEBPACK_IMPORTED_MODULE_0__.LogLevel.Log:
                I("".concat(c.title).concat(c.context).concat(c.data), {
                    extra: o,
                    tags: u,
                    level: S.Log
                });
                break;

              case _sl_logger__WEBPACK_IMPORTED_MODULE_0__.LogLevel.Warn:
                I("".concat(c.title).concat(c.context).concat(c.data), {
                    extra: o,
                    tags: u,
                    level: S.Warning
                });
                break;

              case _sl_logger__WEBPACK_IMPORTED_MODULE_0__.LogLevel.Error:
                r = p, i = {
                    extra: n({
                        error: a
                    }, o),
                    tags: u,
                    level: S.Error
                }, B("captureException", r, {
                    captureContext: i,
                    originalException: r,
                    syntheticException: new Error("Sentry syntheticException")
                });
                break;

              default:
                console.error("不是期望的上报类型", s, c);
            }
        };
    },
    "../shared/browser/node_modules/@sl/logger/lib/index.es.js": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
        "use strict";
        __webpack_require__.d(__webpack_exports__, {
            LogLevel: () => t,
            consoleTransport: () => i,
            default: () => p
        });
        var o, n, t, e = function() {
            return e = Object.assign || function(o) {
                for (var n, t = 1, e = arguments.length; t < e; t++) for (var r in n = arguments[t]) Object.prototype.hasOwnProperty.call(n, r) && (o[r] = n[r]);
                return o;
            }, e.apply(this, arguments);
        };
        function r(o, n, t, e) {
            var r, i = arguments.length, c = i < 3 ? n : null === e ? e = Object.getOwnPropertyDescriptor(n, t) : e;
            if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) c = Reflect.decorate(o, n, t, e); else for (var a = o.length - 1; a >= 0; a--) (r = o[a]) && (c = (i < 3 ? r(c) : i > 3 ? r(n, t, c) : r(n, t)) || c);
            return i > 3 && c && Object.defineProperty(n, t, c), c;
        }
        !function(o) {
            o.P0 = "P0", o.P1 = "P1", o.P2 = "P2";
        }(o || (o = {})), function(o) {
            o.Start = "开始", o.Success = "成功", o.Failure = "失败";
        }(n || (n = {})), function(o) {
            o.Info = "info", o.Log = "log", o.Warn = "warn", o.Error = "error";
        }(t || (t = {}));
        var i = function(o) {
            var n = o.level, e = o.message, r = function(o, n) {
                var t = {};
                for (var e in o) Object.prototype.hasOwnProperty.call(o, e) && n.indexOf(e) < 0 && (t[e] = o[e]);
                if (null != o && "function" == typeof Object.getOwnPropertySymbols) {
                    var r = 0;
                    for (e = Object.getOwnPropertySymbols(o); r < e.length; r++) n.indexOf(e[r]) < 0 && Object.prototype.propertyIsEnumerable.call(o, e[r]) && (t[e[r]] = o[e[r]]);
                }
                return t;
            }(o, [ "level", "message" ]);
            switch (n) {
              case t.Info:
                console.debug("%c".concat(e), "color: #fff; background-color: #6e6e6e;", r);
                break;

              case t.Log:
                console.log("%c".concat(e), "color: #fff; background-color: #2a53cd;", r);
                break;

              case t.Warn:
                console.warn(e, r);
                break;

              case t.Error:
                console.error(e, r);
                break;

              default:
                console.error("不是期望的上报类型", n, e, r);
            }
        }, s = function(o, n, t) {
            var e = t.value;
            t.value = function() {
                for (var o = [], t = 0; t < arguments.length; t++) o[t] = arguments[t];
                try {
                    var r = e.apply(this, o);
                    return r;
                } catch (o) {
                    return console.error("logger: ".concat(n, "方法执行出错"), o), p;
                }
            };
        }, l = function() {
            function o(o) {
                var n = this;
                this.options = {
                    owner: "",
                    action: "",
                    transports: []
                }, this.report = function(o, t, r) {
                    !function(o, n) {
                        var t = o;
                        n.forEach((function(o) {
                            var n = o(t);
                            n && (t = n);
                        }));
                    }(e(e({
                        level: o,
                        owner: n.options.owner,
                        action: n.options.action
                    }, r), {
                        message: t
                    }), n.options.transports);
                }, this.options = e(e({}, this.options), o);
            }
            return o.prototype.withOwner = function(n) {
                return new o(e(e({}, this.options), {
                    owner: n
                }));
            }, o.prototype.pipeOwner = function(n) {
                if (!n) return this;
                var t = "";
                return t = this.options.owner ? "".concat(this.options.owner, ".").concat(n) : n, 
                new o(e(e({}, this.options), {
                    owner: t
                }));
            }, o.prototype.withAction = function(n) {
                return new o(e(e({}, this.options), {
                    action: n
                }));
            }, o.prototype.pipeTransport = function() {
                for (var n = [], t = 0; t < arguments.length; t++) n[t] = arguments[t];
                var r = this.options.transports.concat(n);
                return new o(e(e({}, this.options), {
                    transports: r
                }));
            }, o.prototype.info = function(o, n) {
                this.report(t.Info, o, n);
            }, o.prototype.log = function(o, n) {
                this.report(t.Log, o, n);
            }, o.prototype.warn = function(o, n) {
                this.report(t.Warn, o, n);
            }, o.prototype.error = function(o, n) {
                this.report(t.Error, o, n);
            }, r([ s ], o.prototype, "withOwner", null), r([ s ], o.prototype, "pipeOwner", null), 
            r([ s ], o.prototype, "withAction", null), r([ s ], o.prototype, "pipeTransport", null), 
            r([ s ], o.prototype, "info", null), r([ s ], o.prototype, "log", null), r([ s ], o.prototype, "warn", null), 
            r([ s ], o.prototype, "error", null), o;
        }(), p = new l;
        Object.defineProperty(p, "options", {
            writable: !1,
            configurable: !1
        });
    },
    "../shared/browser/node_modules/@sl/smart-payment/lib/index.js": function(__unused_webpack_module, exports, __webpack_require__) {
        !function(e, t) {
            true ? t(exports) : 0;
        }(0, (function(e) {
            "use strict";
            function t(e, t, n, r) {
                var o, i = arguments.length, a = i < 3 ? t : null === r ? r = Object.getOwnPropertyDescriptor(t, n) : r;
                if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) a = Reflect.decorate(e, t, n, r); else for (var s = e.length - 1; s >= 0; s--) (o = e[s]) && (a = (i < 3 ? o(a) : i > 3 ? o(t, n, a) : o(t, n)) || a);
                return i > 3 && a && Object.defineProperty(t, n, a), a;
            }
            "undefined" != typeof globalThis ? globalThis : "undefined" != typeof window ? window : "undefined" != typeof __webpack_require__.g ? __webpack_require__.g : "undefined" != typeof self && self;
            var n = {
                exports: {}
            };
            !function(e, t) {
                e.exports = function() {
                    var e = function() {}, t = {}, n = {}, r = {};
                    function o(e, t) {
                        e = e.push ? e : [ e ];
                        var o, i, a, s = [], c = e.length, d = c;
                        for (o = function(e, n) {
                            n.length && s.push(e), --d || t(s);
                        }; c--; ) i = e[c], (a = n[i]) ? o(i, a) : (r[i] = r[i] || []).push(o);
                    }
                    function i(e, t) {
                        if (e) {
                            var o = r[e];
                            if (n[e] = t, o) for (;o.length; ) o[0](e, t), o.splice(0, 1);
                        }
                    }
                    function a(t, n) {
                        t.call && (t = {
                            success: t
                        }), n.length ? (t.error || e)(n) : (t.success || e)(t);
                    }
                    function s(t, n, r, o) {
                        var i, a, c = document, d = r.async, l = (r.numRetries || 0) + 1, p = r.before || e, h = t.replace(/[\?|#].*$/, ""), u = t.replace(/^(css|img)!/, "");
                        o = o || 0, /(^css!|\.css$)/.test(h) ? ((a = c.createElement("link")).rel = "stylesheet", 
                        a.href = u, (i = "hideFocus" in a) && a.relList && (i = 0, a.rel = "preload", a.as = "style")) : /(^img!|\.(png|gif|jpg|svg|webp)$)/.test(h) ? (a = c.createElement("img")).src = u : ((a = c.createElement("script")).src = t, 
                        a.async = void 0 === d || d), a.onload = a.onerror = a.onbeforeload = function(e) {
                            var c = e.type[0];
                            if (i) try {
                                a.sheet.cssText.length || (c = "e");
                            } catch (e) {
                                18 != e.code && (c = "e");
                            }
                            if ("e" == c) {
                                if ((o += 1) < l) return s(t, n, r, o);
                            } else if ("preload" == a.rel && "style" == a.as) return a.rel = "stylesheet";
                            n(t, c, e.defaultPrevented);
                        }, !1 !== p(t, a) && c.head.appendChild(a);
                    }
                    function c(e, t, n) {
                        var r, o, i = (e = e.push ? e : [ e ]).length, a = i, c = [];
                        for (r = function(e, n, r) {
                            if ("e" == n && c.push(e), "b" == n) {
                                if (!r) return;
                                c.push(e);
                            }
                            --i || t(c);
                        }, o = 0; o < a; o++) s(e[o], r, n);
                    }
                    function d(e, n, r) {
                        var o, s;
                        if (n && n.trim && (o = n), s = (o ? r : n) || {}, o) {
                            if (o in t) throw "LoadJS";
                            t[o] = !0;
                        }
                        function d(t, n) {
                            c(e, (function(e) {
                                a(s, e), t && a({
                                    success: t,
                                    error: n
                                }, e), i(o, e);
                            }), s);
                        }
                        if (s.returnPromise) return new Promise(d);
                        d();
                    }
                    return d.ready = function(e, t) {
                        return o(e, (function(e) {
                            a(t, e);
                        })), d;
                    }, d.done = function(e) {
                        i(e, []);
                    }, d.reset = function() {
                        t = {}, n = {}, r = {};
                    }, d.isDefined = function(e) {
                        return e in t;
                    }, d;
                }();
            }(n);
            var r = n.exports;
            function o(e) {
                for (var t = 1; t < arguments.length; t++) {
                    var n = arguments[t];
                    for (var r in n) e[r] = n[r];
                }
                return e;
            }
            var i, a, s, c, d, l, p = function e(t, n) {
                function r(e, r, i) {
                    if ("undefined" != typeof document) {
                        "number" == typeof (i = o({}, n, i)).expires && (i.expires = new Date(Date.now() + 864e5 * i.expires)), 
                        i.expires && (i.expires = i.expires.toUTCString()), e = encodeURIComponent(e).replace(/%(2[346B]|5E|60|7C)/g, decodeURIComponent).replace(/[()]/g, escape);
                        var a = "";
                        for (var s in i) i[s] && (a += "; " + s, !0 !== i[s] && (a += "=" + i[s].split(";")[0]));
                        return document.cookie = e + "=" + t.write(r, e) + a;
                    }
                }
                return Object.create({
                    set: r,
                    get: function(e) {
                        if ("undefined" != typeof document && (!arguments.length || e)) {
                            for (var n = document.cookie ? document.cookie.split("; ") : [], r = {}, o = 0; o < n.length; o++) {
                                var i = n[o].split("="), a = i.slice(1).join("=");
                                try {
                                    var s = decodeURIComponent(i[0]);
                                    if (r[s] = t.read(a, s), e === s) break;
                                } catch (e) {}
                            }
                            return e ? r[e] : r;
                        }
                    },
                    remove: function(e, t) {
                        r(e, "", o({}, t, {
                            expires: -1
                        }));
                    },
                    withAttributes: function(t) {
                        return e(this.converter, o({}, this.attributes, t));
                    },
                    withConverter: function(t) {
                        return e(o({}, this.converter, t), this.attributes);
                    }
                }, {
                    attributes: {
                        value: Object.freeze(n)
                    },
                    converter: {
                        value: Object.freeze(t)
                    }
                });
            }({
                read: function(e) {
                    return '"' === e[0] && (e = e.slice(1, -1)), e.replace(/(%[\dA-F]{2})+/gi, decodeURIComponent);
                },
                write: function(e) {
                    return encodeURIComponent(e).replace(/%(2[346BF]|3[AC-F]|40|5[BDE]|60|7[BCD])/g, decodeURIComponent);
                }
            }, {
                path: "/"
            });
            !function(e) {
                e.Init = "init", e.CreateOrder = "createOrder", e.Pay = "pay";
            }(i || (i = {})), e.PayMode = void 0, (a = e.PayMode || (e.PayMode = {})).Continue = "continue", 
            a.PayNow = "pay_now", a.All = "all", e.ChannelCode = void 0, (e.ChannelCode || (e.ChannelCode = {})).Paypal = "Paypal", 
            e.SystemCode = void 0, (e.SystemCode || (e.SystemCode = {})).StandardEC = "standard_ec", 
            function(e) {
                e.Stg = "stg", e.Prod = "prod";
            }(s || (s = {})), function(e) {
                e.Done = "done", e.Pending = "pending", e.Await = "await";
            }(c || (c = {})), function(e) {
                e[e.Fail = 0] = "Fail", e[e.Success = 1] = "Success";
            }(d || (d = {})), function(e) {
                e.RedirectOrPopup = "RedirectOrPopup";
            }(l || (l = {}));
            const h = "rememberedCb", u = "loadPayPalRemembered", f = {
                props: {
                    payMode: e.PayMode.Continue,
                    timeout: {
                        switch: !1,
                        delay: 5e3
                    },
                    styleOptions: {
                        layout: "horizontal",
                        color: "gold",
                        shape: "rect",
                        label: "paypal",
                        tagline: !1,
                        height: 55
                    },
                    timing: !1,
                    currency: p.get("currency_code") || "USD"
                }
            };
            class y {
                initialData;
                paypalInstanceName;
                constructor(e) {
                    this.initialData = e, this.paypalInstanceName = e?.scriptParams?.["data-namespace"] || "paypal", 
                    window.__PAYPALSPB_LOADJS || (window.__PAYPALSPB_LOADJS = r, window.__PAYPALSPB_LOADJS.ids = {}), 
                    this.loadPaypal();
                }
                loadPaypal() {
                    let e = "https://www.paypal.com/sdk/js";
                    this.initialData?.queryParams && (e += `${this.initialData.queryParams}`);
                    let t = e;
                    const n = {
                        success: () => {
                            window.__PAYPALSPB_LOADJS.ids[t] = !0, this.initPaypal();
                        }
                    };
                    if (this.initialData?.scriptParams) {
                        const e = this.initialData?.scriptParams || {};
                        n.before = (n, r) => {
                            Object.keys(e).forEach((n => {
                                const o = e[n];
                                o && r.setAttribute(n, o), t += `${n}&${o}`;
                            }));
                        }, e?.["data-namespace"] && (this.paypalInstanceName = e["data-namespace"]), Object.keys(e).forEach((n => {
                            const r = e[n];
                            t += `${n}&${r}`;
                        }));
                    }
                    window.__PAYPALSPB_LOADJS.ids[t] ? window.__PAYPALSPB_LOADJS.ready(t, n) : (window.__PAYPALSPB_LOADJS.ids[t] = !0, 
                    window.__PAYPALSPB_LOADJS([ e ], t, n));
                }
                initPaypal() {
                    window[this.paypalInstanceName].Buttons(this.initialData).render(`#${this.initialData.domId}`);
                }
            }
            const m = (e, t) => {
                const n = [];
                return Object.keys(t).forEach((e => t[e] && n.push(`${e}=${t[e]}`))), -1 === e.search(/\?/) ? e += `?${n.join("&")}` : e += `&${n.join("&")}`, 
                e;
            }, g = t => {
                const n = t, r = t.props.payMode === e.PayMode.Continue;
                if (t?.paymentInfo) {
                    const {configData: o, channelSdkInitConfig: i, captureInfo: {autoCapture: a}} = t.paymentInfo;
                    let s = ((t, n) => {
                        let r = "";
                        const o = e => {
                            const {key: t, value: n, isCoverAll: o, whitelist: i, blacklist: a} = e, {storeId: s} = window.Shopline || {};
                            o ? Array.isArray(a) && !a.includes(s) && (r = m(r, {
                                [t]: n
                            })) : Array.isArray(i) && i.includes(s) && (r = m(r, {
                                [t]: n
                            }));
                        };
                        return Array.isArray(t) && t?.forEach((t => {
                            t.scope === e.PayMode.All ? o(t) : (n && t.scope === e.PayMode.Continue && o(t), 
                            n || t.scope !== e.PayMode.PayNow || o(t));
                        })), r;
                    })(JSON.parse(i), r);
                    s = m(s, {
                        currency: t.props.currency || "USD",
                        intent: a ? "capture" : "authorize",
                        commit: !!r,
                        "merchant-id": o.paypalMerchantId,
                        "client-id": o.clientId
                    }), n.props = {
                        ...t.props,
                        queryParams: s,
                        ...o
                    };
                }
                return n;
            }, b = e => {
                const t = Math.floor(e);
                return t >= 5e3 && t <= 1e4 ? "warn" : t > 1e4 ? "error" : "info";
            }, w = ({styleTag: e, domId: t, height: n, isContinueMode: r, isVerticalLayout: o}) => {
                e.innerHTML = r && !o ? `\n        #${t} {\n          overflow: hidden;\n          text-align: center;\n          height: ${n}px;\n        }\n        /** 背景底色 */\n        #${t}.paypal__bg::before,\n        #${t}.paypal__bg::after {\n          content:'';\n          position: absolute;\n          top: 0;\n          bottom: 0;\n          left: 0;\n          width: calc(50% - 3px);\n          border-radius: 4px;\n          background-color: #ffc439;\n        }\n        #${t}.paypal__bg::after {\n          left: unset;\n          right: 0;\n        }\n        [data-button_style=square] .paypal__bg::before,\n        [data-button_style=square] .paypal__bg::after{\n          border-radius: 0 !important;\n        }\n        [data-button_style=rounded] .paypal__bg::before,\n        [data-button_style=rounded] .paypal__bg::after{\n          border-radius: 9999px !important;\n        }\n      ` : `\n        #${t} {\n          min-height: ${n}px;\n        }\n        `;
                const i = [ "90deg", "hsla(0, 0%, 74.5%, 0.2) 25%", "hsla(0, 0%, 50.6%, 0.24) 37%", "hsla(0, 0%, 74.5%, 0.2) 63%" ].join(", ");
                e.innerHTML += `\n      #${t} {\n        position: relative;\n      }\n      #${t} .paypal__skeleton--animated {\n        margin: 0 auto;\n        border-radius: 4px;\n        width: 100%;\n        height: ${n}px;\n        position: absolute;\n      }\n  \n      .paypal__skeleton--animated {\n        background: linear-gradient(${i});\n        background-size: 400% 100%;\n        animation: skeleton 2s linear infinite;\n      }\n  \n      \n            @keyframes skeleton {\n              0% {\n                background-position: 100% 50%;\n              }\n              100% {\n                background-position: 0 50%;\n              }\n            }\n          \n      `;
            };
            const P = new class {
                options={};
                create(e) {
                    this.options = e;
                }
                get(e, t = {}) {
                    e = this.buildUrl(e, t.params);
                    return this.dispatchRequest(e, {
                        method: "GET",
                        ...this.options,
                        ...t,
                        headers: {
                            Accept: "application/json",
                            "Content-Type": "application/json;charset=UTF-8",
                            ...t.headers
                        }
                    });
                }
                post(e, t, n = {}) {
                    const r = {
                        Accept: "application/json"
                    };
                    let o = t || n.data || null;
                    return "form" === n.requestType ? (r["Content-Type"] = "application/x-www-form-urlencoded;charset=UTF-8", 
                    o = this.serialize(o)) : (r["Content-Type"] = "application/json;charset=UTF-8", 
                    o = o ? JSON.stringify(o) : null), this.dispatchRequest(e, {
                        method: "POST",
                        body: o,
                        ...this.options,
                        ...n,
                        headers: {
                            ...r,
                            ...n.headers
                        }
                    });
                }
                dispatchRequest(e, t) {
                    return new Promise(((n, r) => {
                        const o = new window.XMLHttpRequest;
                        let i = !1;
                        const {body: a} = t, s = this.options.baseUrl && !/^(https?:)?(\/\/)/.test(e) ? `${this.options.baseUrl}${e}` : e;
                        o.open(t.method || "", s), t.headers && Object.keys(t.headers).forEach((e => {
                            o.setRequestHeader(e, t.headers?.[e] || "");
                        }));
                        const c = {
                            options: t,
                            url: s
                        };
                        if (o.onreadystatechange = () => {
                            if (4 === o.readyState) {
                                c.statusCode = o.status;
                                let e = "";
                                try {
                                    e = JSON.parse(o.responseText);
                                } catch (t) {
                                    e = o.responseText;
                                }
                                if (/^(2|3)\d{2}$/.test(o.status.toString())) {
                                    try {
                                        n({
                                            data: e,
                                            ...c
                                        });
                                    } catch (t) {
                                        n({
                                            data: e,
                                            ...c
                                        });
                                    }
                                    return;
                                }
                                r({
                                    data: e,
                                    ...c
                                });
                            }
                        }, o.send(a), o.onabort = function(e) {
                            i = !0, c.statusCode = o.status, r({
                                error: e,
                                ...c
                            });
                        }, o.onerror = e => {
                            c.statusCode = o.status, r({
                                error: e,
                                ...c
                            });
                        }, o.ontimeout = () => {}, t.timeout) {
                            if (i) return;
                            setTimeout((() => {
                                o.abort();
                                const e = new Error("XMLHttpRequest timeout");
                                e.code = "ETIMEDOUT", c.statusCode = o.status, r({
                                    error: e,
                                    ...c
                                });
                            }), t.timeout);
                        }
                    }));
                }
                buildUrl(e, t) {
                    const n = Object.prototype.toString.call(t);
                    if (!t || "[object Object]" !== n) return e;
                    const r = Object.keys(t);
                    return (e = decodeURIComponent(e).indexOf("?") > -1 ? `${e}&` : `${e}?`) + r.map((e => `${e}=${t[e]}`)).join("&");
                }
                serialize=e => {
                    const t = Object.prototype.toString.call(e);
                    return e && "[object Object]" === t ? Object.keys(e).map((t => encodeURIComponent(t) + "=" + encodeURIComponent(e[t]))).join("&") : "";
                };
            };
            var C;
            !function(e) {
                e.Error = "error", e.Warn = "warn", e.Log = "log", e.Info = "info";
            }(C || (C = {}));
            const O = new class {
                currentLogger;
                setLogger(e) {
                    e && (this.currentLogger = e);
                }
                createFn({fnName: e, message: t, context: n}) {
                    this.currentLogger ? D(this.currentLogger[e]) && this.currentLogger[e](`${t}`, n) : console[e](`${t}`, n || "");
                }
                warn(e, t) {
                    this.createFn({
                        fnName: C.Warn,
                        message: e,
                        context: t
                    });
                }
                info(e, t) {
                    this.createFn({
                        fnName: C.Info,
                        message: e,
                        context: t
                    });
                }
                log(e, t) {
                    this.createFn({
                        fnName: C.Log,
                        message: e,
                        context: t
                    });
                }
                error(e, t) {
                    this.createFn({
                        fnName: C.Error,
                        message: e,
                        context: t
                    });
                }
            };
            function v(e) {
                const {validate: t, handleError: n, handleDynamicNotify: r, dynamicJsonpCallback: o, handleDynamic: i, handleRenderTimeout: a, beforeInit: s, beforeCreateOrder: c, afterCreateOrder: d, removeSkeleton: l, getLoggerPrefix: p} = e.prototype, h = {
                    validate: t,
                    handleError: n,
                    handleDynamicNotify: r,
                    dynamicJsonpCallback: o,
                    handleDynamic: i,
                    handleRenderTimeout: a,
                    beforeInit: s,
                    beforeCreateOrder: c,
                    afterCreateOrder: d,
                    removeSkeleton: l
                }, u = e => async function(...t) {
                    const n = p.apply(this, t), r = `【${e}】`;
                    try {
                        return O.info(`${n} ${r}[开始执行]`), h[e].apply(this, t);
                    } catch (e) {
                        throw O.error(`${n} ${r}[执行失败]`, {
                            error: e
                        }), e;
                    }
                };
                Object.keys(h).forEach((t => {
                    e.prototype[t] = u(t);
                }));
            }
            let I, A = class {
                config;
                payMode;
                dynamicRemembered={
                    loadingStatus: c.Await,
                    info: {},
                    cbFnList: []
                };
                isHidePayPalButton;
                isRendered;
                element;
                initTimer;
                initActions;
                createOrderParams;
                returnUrl;
                disabledStyleTag;
                loggerPrefix="[sl/smart-payment PayPal]";
                initTime=0;
                skeleton;
                constructor(t) {
                    this.validate(t), this.config = g(T(f, t)), this.handleDomHeight(), this.payMode = t.props.payMode || e.PayMode.Continue, 
                    this.returnUrl = "", this.loggerPrefix += `[当前dom为:${this.config.props.domId}]`, 
                    O.currentLogger || O.setLogger(this.config.logger);
                }
                validate(e) {
                    const t = $(e), {result: n, errorTip: r} = t.validate();
                    n || O.error(`constructor error ${r}`);
                }
                handleDomHeight() {
                    var e;
                    this.config.props.styleOptions = {
                        ...this.config.props.styleOptions,
                        height: (e = this.config.props.styleOptions?.height, e ? e > 55 ? (O.warn("[按钮高度传入异常]", {
                            data: {
                                height: e
                            }
                        }), 55) : e < 25 ? (O.warn("[按钮高度传入异常]", {
                            data: {
                                height: e
                            }
                        }), 25) : e : 45)
                    };
                }
                get isContinueMode() {
                    return this.payMode === e.PayMode.Continue;
                }
                get isVerticalLayout() {
                    return "vertical" === this.config.props.styleOptions?.layout;
                }
                getLoggerPrefix() {
                    return this.loggerPrefix;
                }
                handleError(e, t) {
                    O.error("handleError", {
                        action: t,
                        error: e,
                        data: {
                            type: t
                        }
                    }), D(this.config.onError) && this.config.onError(e, t);
                }
                handleDynamicNotify(e) {
                    const {paypal: t} = e || {};
                    this.isHidePayPalButton = !t, !t && D(this.config.onDynamicNotify) && this.config.onDynamicNotify({
                        ...e,
                        isHidePayPalButton: !0
                    });
                }
                dynamicJsonpCallback=e => {
                    if (this.dynamicRemembered = {
                        ...this.dynamicRemembered,
                        info: e,
                        loadingStatus: c.Done
                    }, this.handleDynamicNotify(e), this.dynamicRemembered?.cbFnList) try {
                        this.dynamicRemembered.cbFnList.forEach((t => t(e))), this.dynamicRemembered.cbFnList = [];
                    } catch (e) {
                        this.dynamicRemembered.cbFnList = [];
                    }
                };
                async handleDynamic() {
                    return (0, {
                        [c.Done]: () => {
                            this.handleDynamicNotify(this.dynamicRemembered.info);
                        },
                        [c.Pending]: () => {
                            this.dynamicRemembered.cbFnList.push(this.render.bind(this));
                        },
                        [c.Await]: () => {
                            var e;
                            this.dynamicRemembered.loadingStatus = c.Pending, window.rememberedCb = this.dynamicJsonpCallback, 
                            r([ (e = h, `https://www.paypal.com/checkoutnow/remembered?callback=${e}`) ], u), 
                            r.ready(u, {
                                error: () => {
                                    this.handleError(new Error("[加载登录态判定 script 失败]:rememberedCb"), i.Init);
                                }
                            });
                        }
                    }[this.dynamicRemembered.loadingStatus])();
                }
                handlePay(e) {
                    const {nextAction: t, context: {returnUrl: n}} = e;
                    return this.returnUrl = n, t.data.popupData.id || "";
                }
                async continueMode(t, n) {
                    if (!this.createOrderParams || !1 === this.createOrderParams.valid) return "";
                    try {
                        const t = (t => ({
                            abandonedOrderInfo: t.abandonedOrderInfo,
                            orderFrom: t.orderFrom,
                            channelCode: e.ChannelCode.Paypal,
                            payInfo: {
                                cancelUrl: window.location.href,
                                returnUrl: t.returnUrl,
                                captureInfo: t?.captureInfo
                            },
                            dataReportReq: t.dataReportReq
                        }))(this.createOrderParams), r = await (e => P.post("/leproxy/api/trade/center/pay/fast-checkout/prepare-pay", {
                            ...e
                        }))(t), o = r.data?.data, i = {
                            nextAction: JSON.parse(o?.nextAction || "{}"),
                            context: o?.context
                        };
                        return O.log("continueMode", {
                            data: {
                                data: o,
                                payOptions: i
                            },
                            actions: n
                        }), this.handlePay(i);
                    } catch (e) {
                        return this.handleError(e, i.Pay), "";
                    }
                }
                async payNowMode(e, t) {
                    try {
                        if (D(this.config.createOrder)) {
                            const n = await this.config.createOrder(e, t);
                            return O.log("payNowMode，createOrder 入参", {
                                res: n
                            }), this.handlePay(n);
                        }
                        return "";
                    } catch (e) {
                        return this.handleError(e, i.Pay), "";
                    }
                }
                handleRenderTimeout() {
                    I && (I.disconnect(), I = null), this.initTimer = setTimeout((() => {
                        this.element && (this.element.innerHTML = "");
                        const e = window.MutationObserver || window.WebKitMutationObserver || window.MozMutationObserver;
                        I = new e((e => {
                            e.forEach((() => {
                                this.element && (this.element.innerHTML = "");
                            }));
                        }));
                        const t = {
                            childList: !0,
                            attributes: !1,
                            subtree: !1
                        };
                        throw this.element && I.observe(this.element, t), setTimeout((() => {
                            I && (I.disconnect(), I = null);
                        }), 5e3), this.handleError(new Error(`[初始化渲染失败][超时未调用onInit][当前超时时间:${this.config.props?.timeout?.delay}ms]`), i.Init), 
                        new Error(`[初始化渲染失败][超时未调用onInit][当前超时时间:${this.config.props?.timeout?.delay}ms]`);
                    }), this.config.props?.timeout?.delay);
                }
                setDisabled(e) {
                    if (this.element) try {
                        if (e) {
                            this.initActions && this.initActions.disable();
                            const t = (({node: e, disabled: t, domId: n, height: r}) => {
                                const o = document.createElement("style");
                                if (o.innerHTML = `\n    #${n || "shopline-paypal"}::before {\n      width: 0 !important;\n    }\n    #${n || "shopline-paypal"}::after {\n      content: '';\n      display: block;\n      z-index: 100;\n      width: 100% !important;\n      height: ${r}px;\n      border-radius: 4px;\n      cursor: not-allowed;\n      position: absolute;\n      top: 0;\n      left: 0 !important;\n      background: transparent !important;\n    }\n\n    #${n} {\n      opacity: ${t ? .3 : 1};\n    }\n  `, 
                                e) return e.parentElement?.insertBefore(o, e), o;
                            })({
                                node: this.element,
                                disabled: e,
                                domId: this.config.props.domId,
                                height: this.config.props.styleOptions?.height || ""
                            });
                            return void (this.disabledStyleTag = t);
                        }
                        this.initActions && this.initActions.enable(), this.disabledStyleTag && this.element.parentElement && this.element.parentElement.removeChild(this.disabledStyleTag);
                    } catch (e) {
                        console.error("此处报错不影响功能，无需关注", e);
                    }
                }
                beforeInit() {
                    this.initTime = x.now(), D(this.config.beforeInit) && this.config.beforeInit();
                }
                afterInit(e, t) {
                    try {
                        const n = x.now() - this.initTime;
                        O.log("afterInit", {
                            data: {
                                data: e,
                                actions: t,
                                duration: n,
                                level: b(n)
                            }
                        }), D(this.config.afterInit) && this.config.afterInit();
                    } catch (e) {
                        this.handleError(e);
                    }
                }
                async beforeCreateOrder() {
                    if (!D(this.config.beforeCreateOrder)) return;
                    return await this.config.beforeCreateOrder();
                }
                afterCreateOrder(e) {
                    D(this.config.afterCreateOrder) && this.config.afterCreateOrder(e);
                }
                removeSkeleton(e) {
                    let t = null;
                    t && clearTimeout(t), t = setTimeout((() => {
                        e && (this.skeleton && e.removeChild(this.skeleton), this.isContinueMode && e.classList.add("paypal__bg"));
                    }), 300);
                }
                async render() {
                    const {props: e} = this.config;
                    if (e.dynamic && await this.handleDynamic(), this.isHidePayPalButton) return null;
                    if (this.isRendered) return null;
                    const t = document.getElementById(e.domId);
                    if (!t) return this.handleError(new Error("[onError][初始化失败][找不到挂载的DOM]"), i.Init), 
                    null;
                    this.element = t, e.timeout && e.timeout.switch && this.handleRenderTimeout();
                    const n = (({node: e, domId: t, height: n, isContinueMode: r, isVerticalLayout: o, wrapperClass: i, wrapperStyle: a}) => {
                        const s = document.createElement("div");
                        s.classList.add("paypal__skeleton--animated");
                        const c = document.createElement("style");
                        if (w({
                            styleTag: c,
                            domId: t,
                            height: n,
                            isContinueMode: r,
                            isVerticalLayout: o
                        }), e) {
                            if (i && e.classList.add(i), a) {
                                let t = {};
                                const n = e.getAttribute("style")?.replace(/\s+/g, "") || "", r = e => {
                                    const t = {};
                                    return e.split(";").forEach((e => {
                                        const [n, r] = e.split(":"), o = n?.replace(/-[^0-9]/g, (e => e.charAt(1).toUpperCase()));
                                        o && (t[o] = r);
                                    })), t;
                                }, o = e => "object" != typeof e ? "" : Object.entries(e).map((e => e.join(":"))).join(";").replace(/[A-Z]/g, (e => `-${e.charAt(0).toLowerCase()}`));
                                "string" == typeof a ? t = {
                                    ...r(n),
                                    ...r(a)
                                } : "object" == typeof a && (t = {
                                    ...r(n),
                                    ...a
                                }), e.style = o(t);
                            }
                            return e.parentElement?.insertBefore(c, e), e.appendChild(s), s;
                        }
                    })({
                        node: t,
                        domId: e.domId,
                        height: e.styleOptions?.height || "",
                        isContinueMode: this.isContinueMode,
                        isVerticalLayout: this.isVerticalLayout,
                        wrapperClass: e.wrapperClass,
                        wrapperStyle: e.wrapperStyle
                    });
                    this.skeleton = n, O.log("render start", {
                        data: {
                            config: this.config
                        }
                    }), this.beforeInit();
                    const r = {
                        domId: e.domId,
                        clientId: e.clientId,
                        currency: e.currency,
                        queryParams: e.queryParams,
                        scriptParams: e.scriptParams,
                        style: e.styleOptions,
                        onInit: (e, t) => {
                            this.afterInit(e, t), this.initTimer && clearTimeout(this.initTimer), this.initActions = t;
                        },
                        onClick: async (e, t) => {
                            const n = await this.beforeCreateOrder();
                            if (O.log("onClick 用户点击了按钮", {
                                data: {
                                    data: e,
                                    params: n,
                                    actions: t
                                }
                            }), n) {
                                if (!1 === n.valid) return t.reject();
                                this.initActions?.enable(), this.isContinueMode && (this.createOrderParams = {
                                    ...n,
                                    captureInfo: this.config?.paymentInfo?.captureInfo
                                });
                            }
                        },
                        createOrder: async (e, t) => {
                            O.log("createOrder PayPal开始下单", {
                                data: {
                                    data: e,
                                    actions: t
                                }
                            });
                            try {
                                const n = (this.isContinueMode ? await this.continueMode(e, t) : await this.payNowMode(e, t)) || "";
                                return this.afterCreateOrder(n ? d.Success : d.Fail), n;
                            } catch {
                                return this.afterCreateOrder(d.Fail), "";
                            }
                        },
                        onApprove: async (e, t) => {
                            O.log("onApprove PayPal 下单成功，触发回调", {
                                data: {
                                    data: e,
                                    actions: t,
                                    returnUrl: this.returnUrl
                                }
                            }), window.location.href = this.returnUrl;
                        },
                        onCancel: async (e, t) => {
                            let n;
                            O.log(`onCancel[订单${e?.orderID}用户取消了支付]`, {
                                data: e
                            }), D(t?.redirect) && D(this.config.onCancel) && (n = await this.config.onCancel(e), 
                            t?.redirect(n));
                        },
                        onError: e => {
                            this.handleError(e);
                        }
                    }, o = new y(r);
                    return o && this.removeSkeleton(t), o;
                }
            };
            A = t([ v ], A);
            var L = A;
            const D = e => "function" == typeof e;
            function S(e) {
                return "[object Object]" === Object.prototype.toString.call(e);
            }
            function _(e) {
                return !e || !!e.nodeType || "object" != typeof e ? e : JSON.parse(JSON.stringify(e));
            }
            function T(e, t) {
                if (function(e) {
                    return void 0 === e;
                }(n = t) || function(e) {
                    return null === e;
                }(n)) return _(e);
                var n;
                if (!S(t) || !S(e)) return _(t);
                const r = {};
                return Object.keys(e).map((n => {
                    r[n] = T(e[n], t[n]);
                })), Object.keys(t).map((e => {
                    r[e] || (r[e] = _(t[e]));
                })), r;
            }
            function $(t) {
                return {
                    [e.ChannelCode.Paypal]: {
                        validate: () => t.props && S(t.props) ? {
                            result: !0
                        } : {
                            result: !1,
                            errorTip: "props 传值不合法"
                        },
                        getConfig: () => t,
                        component: L
                    }
                }[t.channelCode];
            }
            const x = window.performance && "function" == typeof window.performance.now ? window.performance : Date;
            let E = class {
                configData;
                renderList=[];
                loggerPrefix="[sl/smart-payment]";
                constructor(e) {
                    this.configData = e, O.setLogger(this.configData.logger);
                }
                getLoggerPrefix() {
                    return this.loggerPrefix;
                }
                async render() {
                    O.log("render", {
                        data: {
                            config: this.configData
                        }
                    }), this.configData.payments && Array.isArray(this.configData.payments) || O.error("render error 传值有误[payments]");
                    const {payments: e} = this.configData;
                    for (const t of e) try {
                        const e = $({
                            channelCode: t.channelCode,
                            paymentInfo: t,
                            ...this.configData
                        });
                        if (!e) continue;
                        const {result: n, errorTip: r} = e.validate();
                        n || O.error(`render error ${r}`);
                        const o = e.getConfig(), i = new (0, e.component)({
                            ...o
                        });
                        await i.render(), this.renderList.push({
                            channelCode: o.channelCode,
                            params: o,
                            instance: i
                        });
                    } catch (e) {
                        O.error("render error", {
                            error: e
                        });
                    }
                }
                getPaymentMethods() {
                    return this.renderList.map((e => ({
                        channelCode: e.channelCode,
                        params: e.params
                    })));
                }
                setDisabled(e) {
                    this.renderList.forEach((t => {
                        t.instance.setDisabled(e);
                    }));
                }
            };
            E = t([ v ], E);
            var k = E;
            e.Payment = k, e.Paypal = L, Object.defineProperty(e, "__esModule", {
                value: !0
            });
        }));
    },
    "../shared/browser/node_modules/axios/index.js": (module, __unused_webpack_exports, __webpack_require__) => {
        module.exports = __webpack_require__("../shared/browser/node_modules/axios/lib/axios.js");
    },
    "../shared/browser/node_modules/axios/lib/adapters/xhr.js": (module, __unused_webpack_exports, __webpack_require__) => {
        "use strict";
        var utils = __webpack_require__("../shared/browser/node_modules/axios/lib/utils.js");
        var settle = __webpack_require__("../shared/browser/node_modules/axios/lib/core/settle.js");
        var cookies = __webpack_require__("../shared/browser/node_modules/axios/lib/helpers/cookies.js");
        var buildURL = __webpack_require__("../shared/browser/node_modules/axios/lib/helpers/buildURL.js");
        var buildFullPath = __webpack_require__("../shared/browser/node_modules/axios/lib/core/buildFullPath.js");
        var parseHeaders = __webpack_require__("../shared/browser/node_modules/axios/lib/helpers/parseHeaders.js");
        var isURLSameOrigin = __webpack_require__("../shared/browser/node_modules/axios/lib/helpers/isURLSameOrigin.js");
        var createError = __webpack_require__("../shared/browser/node_modules/axios/lib/core/createError.js");
        module.exports = function(config) {
            return new Promise((function(resolve, reject) {
                var requestData = config.data;
                var requestHeaders = config.headers;
                var responseType = config.responseType;
                if (utils.isFormData(requestData)) delete requestHeaders["Content-Type"];
                var request = new XMLHttpRequest;
                if (config.auth) {
                    var username = config.auth.username || "";
                    var password = config.auth.password ? unescape(encodeURIComponent(config.auth.password)) : "";
                    requestHeaders.Authorization = "Basic " + btoa(username + ":" + password);
                }
                var fullPath = buildFullPath(config.baseURL, config.url);
                request.open(config.method.toUpperCase(), buildURL(fullPath, config.params, config.paramsSerializer), true);
                request.timeout = config.timeout;
                function onloadend() {
                    if (!request) return;
                    var responseHeaders = "getAllResponseHeaders" in request ? parseHeaders(request.getAllResponseHeaders()) : null;
                    var responseData = !responseType || "text" === responseType || "json" === responseType ? request.responseText : request.response;
                    var response = {
                        data: responseData,
                        status: request.status,
                        statusText: request.statusText,
                        headers: responseHeaders,
                        config,
                        request
                    };
                    settle(resolve, reject, response);
                    request = null;
                }
                if ("onloadend" in request) request.onloadend = onloadend; else request.onreadystatechange = function() {
                    if (!request || 4 !== request.readyState) return;
                    if (0 === request.status && !(request.responseURL && 0 === request.responseURL.indexOf("file:"))) return;
                    setTimeout(onloadend);
                };
                request.onabort = function() {
                    if (!request) return;
                    reject(createError("Request aborted", config, "ECONNABORTED", request));
                    request = null;
                };
                request.onerror = function() {
                    reject(createError("Network Error", config, null, request));
                    request = null;
                };
                request.ontimeout = function() {
                    var timeoutErrorMessage = "timeout of " + config.timeout + "ms exceeded";
                    if (config.timeoutErrorMessage) timeoutErrorMessage = config.timeoutErrorMessage;
                    reject(createError(timeoutErrorMessage, config, config.transitional && config.transitional.clarifyTimeoutError ? "ETIMEDOUT" : "ECONNABORTED", request));
                    request = null;
                };
                if (utils.isStandardBrowserEnv()) {
                    var xsrfValue = (config.withCredentials || isURLSameOrigin(fullPath)) && config.xsrfCookieName ? cookies.read(config.xsrfCookieName) : void 0;
                    if (xsrfValue) requestHeaders[config.xsrfHeaderName] = xsrfValue;
                }
                if ("setRequestHeader" in request) utils.forEach(requestHeaders, (function(val, key) {
                    if ("undefined" === typeof requestData && "content-type" === key.toLowerCase()) delete requestHeaders[key]; else request.setRequestHeader(key, val);
                }));
                if (!utils.isUndefined(config.withCredentials)) request.withCredentials = !!config.withCredentials;
                if (responseType && "json" !== responseType) request.responseType = config.responseType;
                if ("function" === typeof config.onDownloadProgress) request.addEventListener("progress", config.onDownloadProgress);
                if ("function" === typeof config.onUploadProgress && request.upload) request.upload.addEventListener("progress", config.onUploadProgress);
                if (config.cancelToken) config.cancelToken.promise.then((function(cancel) {
                    if (!request) return;
                    request.abort();
                    reject(cancel);
                    request = null;
                }));
                if (!requestData) requestData = null;
                request.send(requestData);
            }));
        };
    },
    "../shared/browser/node_modules/axios/lib/axios.js": (module, __unused_webpack_exports, __webpack_require__) => {
        "use strict";
        var utils = __webpack_require__("../shared/browser/node_modules/axios/lib/utils.js");
        var bind = __webpack_require__("../shared/browser/node_modules/axios/lib/helpers/bind.js");
        var Axios = __webpack_require__("../shared/browser/node_modules/axios/lib/core/Axios.js");
        var mergeConfig = __webpack_require__("../shared/browser/node_modules/axios/lib/core/mergeConfig.js");
        var defaults = __webpack_require__("../shared/browser/node_modules/axios/lib/defaults.js");
        function createInstance(defaultConfig) {
            var context = new Axios(defaultConfig);
            var instance = bind(Axios.prototype.request, context);
            utils.extend(instance, Axios.prototype, context);
            utils.extend(instance, context);
            return instance;
        }
        var axios = createInstance(defaults);
        axios.Axios = Axios;
        axios.create = function(instanceConfig) {
            return createInstance(mergeConfig(axios.defaults, instanceConfig));
        };
        axios.Cancel = __webpack_require__("../shared/browser/node_modules/axios/lib/cancel/Cancel.js");
        axios.CancelToken = __webpack_require__("../shared/browser/node_modules/axios/lib/cancel/CancelToken.js");
        axios.isCancel = __webpack_require__("../shared/browser/node_modules/axios/lib/cancel/isCancel.js");
        axios.all = function(promises) {
            return Promise.all(promises);
        };
        axios.spread = __webpack_require__("../shared/browser/node_modules/axios/lib/helpers/spread.js");
        axios.isAxiosError = __webpack_require__("../shared/browser/node_modules/axios/lib/helpers/isAxiosError.js");
        module.exports = axios;
        module.exports["default"] = axios;
    },
    "../shared/browser/node_modules/axios/lib/cancel/Cancel.js": module => {
        "use strict";
        function Cancel(message) {
            this.message = message;
        }
        Cancel.prototype.toString = function() {
            return "Cancel" + (this.message ? ": " + this.message : "");
        };
        Cancel.prototype.__CANCEL__ = true;
        module.exports = Cancel;
    },
    "../shared/browser/node_modules/axios/lib/cancel/CancelToken.js": (module, __unused_webpack_exports, __webpack_require__) => {
        "use strict";
        var Cancel = __webpack_require__("../shared/browser/node_modules/axios/lib/cancel/Cancel.js");
        function CancelToken(executor) {
            if ("function" !== typeof executor) throw new TypeError("executor must be a function.");
            var resolvePromise;
            this.promise = new Promise((function(resolve) {
                resolvePromise = resolve;
            }));
            var token = this;
            executor((function(message) {
                if (token.reason) return;
                token.reason = new Cancel(message);
                resolvePromise(token.reason);
            }));
        }
        CancelToken.prototype.throwIfRequested = function() {
            if (this.reason) throw this.reason;
        };
        CancelToken.source = function() {
            var cancel;
            var token = new CancelToken((function(c) {
                cancel = c;
            }));
            return {
                token,
                cancel
            };
        };
        module.exports = CancelToken;
    },
    "../shared/browser/node_modules/axios/lib/cancel/isCancel.js": module => {
        "use strict";
        module.exports = function(value) {
            return !!(value && value.__CANCEL__);
        };
    },
    "../shared/browser/node_modules/axios/lib/core/Axios.js": (module, __unused_webpack_exports, __webpack_require__) => {
        "use strict";
        var utils = __webpack_require__("../shared/browser/node_modules/axios/lib/utils.js");
        var buildURL = __webpack_require__("../shared/browser/node_modules/axios/lib/helpers/buildURL.js");
        var InterceptorManager = __webpack_require__("../shared/browser/node_modules/axios/lib/core/InterceptorManager.js");
        var dispatchRequest = __webpack_require__("../shared/browser/node_modules/axios/lib/core/dispatchRequest.js");
        var mergeConfig = __webpack_require__("../shared/browser/node_modules/axios/lib/core/mergeConfig.js");
        var validator = __webpack_require__("../shared/browser/node_modules/axios/lib/helpers/validator.js");
        var validators = validator.validators;
        function Axios(instanceConfig) {
            this.defaults = instanceConfig;
            this.interceptors = {
                request: new InterceptorManager,
                response: new InterceptorManager
            };
        }
        Axios.prototype.request = function(config) {
            if ("string" === typeof config) {
                config = arguments[1] || {};
                config.url = arguments[0];
            } else config = config || {};
            config = mergeConfig(this.defaults, config);
            if (config.method) config.method = config.method.toLowerCase(); else if (this.defaults.method) config.method = this.defaults.method.toLowerCase(); else config.method = "get";
            var transitional = config.transitional;
            if (void 0 !== transitional) validator.assertOptions(transitional, {
                silentJSONParsing: validators.transitional(validators.boolean, "1.0.0"),
                forcedJSONParsing: validators.transitional(validators.boolean, "1.0.0"),
                clarifyTimeoutError: validators.transitional(validators.boolean, "1.0.0")
            }, false);
            var requestInterceptorChain = [];
            var synchronousRequestInterceptors = true;
            this.interceptors.request.forEach((function(interceptor) {
                if ("function" === typeof interceptor.runWhen && false === interceptor.runWhen(config)) return;
                synchronousRequestInterceptors = synchronousRequestInterceptors && interceptor.synchronous;
                requestInterceptorChain.unshift(interceptor.fulfilled, interceptor.rejected);
            }));
            var responseInterceptorChain = [];
            this.interceptors.response.forEach((function(interceptor) {
                responseInterceptorChain.push(interceptor.fulfilled, interceptor.rejected);
            }));
            var promise;
            if (!synchronousRequestInterceptors) {
                var chain = [ dispatchRequest, void 0 ];
                Array.prototype.unshift.apply(chain, requestInterceptorChain);
                chain = chain.concat(responseInterceptorChain);
                promise = Promise.resolve(config);
                while (chain.length) promise = promise.then(chain.shift(), chain.shift());
                return promise;
            }
            var newConfig = config;
            while (requestInterceptorChain.length) {
                var onFulfilled = requestInterceptorChain.shift();
                var onRejected = requestInterceptorChain.shift();
                try {
                    newConfig = onFulfilled(newConfig);
                } catch (error) {
                    onRejected(error);
                    break;
                }
            }
            try {
                promise = dispatchRequest(newConfig);
            } catch (error) {
                return Promise.reject(error);
            }
            while (responseInterceptorChain.length) promise = promise.then(responseInterceptorChain.shift(), responseInterceptorChain.shift());
            return promise;
        };
        Axios.prototype.getUri = function(config) {
            config = mergeConfig(this.defaults, config);
            return buildURL(config.url, config.params, config.paramsSerializer).replace(/^\?/, "");
        };
        utils.forEach([ "delete", "get", "head", "options" ], (function(method) {
            Axios.prototype[method] = function(url, config) {
                return this.request(mergeConfig(config || {}, {
                    method,
                    url,
                    data: (config || {}).data
                }));
            };
        }));
        utils.forEach([ "post", "put", "patch" ], (function(method) {
            Axios.prototype[method] = function(url, data, config) {
                return this.request(mergeConfig(config || {}, {
                    method,
                    url,
                    data
                }));
            };
        }));
        module.exports = Axios;
    },
    "../shared/browser/node_modules/axios/lib/core/InterceptorManager.js": (module, __unused_webpack_exports, __webpack_require__) => {
        "use strict";
        var utils = __webpack_require__("../shared/browser/node_modules/axios/lib/utils.js");
        function InterceptorManager() {
            this.handlers = [];
        }
        InterceptorManager.prototype.use = function(fulfilled, rejected, options) {
            this.handlers.push({
                fulfilled,
                rejected,
                synchronous: options ? options.synchronous : false,
                runWhen: options ? options.runWhen : null
            });
            return this.handlers.length - 1;
        };
        InterceptorManager.prototype.eject = function(id) {
            if (this.handlers[id]) this.handlers[id] = null;
        };
        InterceptorManager.prototype.forEach = function(fn) {
            utils.forEach(this.handlers, (function(h) {
                if (null !== h) fn(h);
            }));
        };
        module.exports = InterceptorManager;
    },
    "../shared/browser/node_modules/axios/lib/core/buildFullPath.js": (module, __unused_webpack_exports, __webpack_require__) => {
        "use strict";
        var isAbsoluteURL = __webpack_require__("../shared/browser/node_modules/axios/lib/helpers/isAbsoluteURL.js");
        var combineURLs = __webpack_require__("../shared/browser/node_modules/axios/lib/helpers/combineURLs.js");
        module.exports = function(baseURL, requestedURL) {
            if (baseURL && !isAbsoluteURL(requestedURL)) return combineURLs(baseURL, requestedURL);
            return requestedURL;
        };
    },
    "../shared/browser/node_modules/axios/lib/core/createError.js": (module, __unused_webpack_exports, __webpack_require__) => {
        "use strict";
        var enhanceError = __webpack_require__("../shared/browser/node_modules/axios/lib/core/enhanceError.js");
        module.exports = function(message, config, code, request, response) {
            var error = new Error(message);
            return enhanceError(error, config, code, request, response);
        };
    },
    "../shared/browser/node_modules/axios/lib/core/dispatchRequest.js": (module, __unused_webpack_exports, __webpack_require__) => {
        "use strict";
        var utils = __webpack_require__("../shared/browser/node_modules/axios/lib/utils.js");
        var transformData = __webpack_require__("../shared/browser/node_modules/axios/lib/core/transformData.js");
        var isCancel = __webpack_require__("../shared/browser/node_modules/axios/lib/cancel/isCancel.js");
        var defaults = __webpack_require__("../shared/browser/node_modules/axios/lib/defaults.js");
        function throwIfCancellationRequested(config) {
            if (config.cancelToken) config.cancelToken.throwIfRequested();
        }
        module.exports = function(config) {
            throwIfCancellationRequested(config);
            config.headers = config.headers || {};
            config.data = transformData.call(config, config.data, config.headers, config.transformRequest);
            config.headers = utils.merge(config.headers.common || {}, config.headers[config.method] || {}, config.headers);
            utils.forEach([ "delete", "get", "head", "post", "put", "patch", "common" ], (function(method) {
                delete config.headers[method];
            }));
            var adapter = config.adapter || defaults.adapter;
            return adapter(config).then((function(response) {
                throwIfCancellationRequested(config);
                response.data = transformData.call(config, response.data, response.headers, config.transformResponse);
                return response;
            }), (function(reason) {
                if (!isCancel(reason)) {
                    throwIfCancellationRequested(config);
                    if (reason && reason.response) reason.response.data = transformData.call(config, reason.response.data, reason.response.headers, config.transformResponse);
                }
                return Promise.reject(reason);
            }));
        };
    },
    "../shared/browser/node_modules/axios/lib/core/enhanceError.js": module => {
        "use strict";
        module.exports = function(error, config, code, request, response) {
            error.config = config;
            if (code) error.code = code;
            error.request = request;
            error.response = response;
            error.isAxiosError = true;
            error.toJSON = function() {
                return {
                    message: this.message,
                    name: this.name,
                    description: this.description,
                    number: this.number,
                    fileName: this.fileName,
                    lineNumber: this.lineNumber,
                    columnNumber: this.columnNumber,
                    stack: this.stack,
                    config: this.config,
                    code: this.code
                };
            };
            return error;
        };
    },
    "../shared/browser/node_modules/axios/lib/core/mergeConfig.js": (module, __unused_webpack_exports, __webpack_require__) => {
        "use strict";
        var utils = __webpack_require__("../shared/browser/node_modules/axios/lib/utils.js");
        module.exports = function(config1, config2) {
            config2 = config2 || {};
            var config = {};
            var valueFromConfig2Keys = [ "url", "method", "data" ];
            var mergeDeepPropertiesKeys = [ "headers", "auth", "proxy", "params" ];
            var defaultToConfig2Keys = [ "baseURL", "transformRequest", "transformResponse", "paramsSerializer", "timeout", "timeoutMessage", "withCredentials", "adapter", "responseType", "xsrfCookieName", "xsrfHeaderName", "onUploadProgress", "onDownloadProgress", "decompress", "maxContentLength", "maxBodyLength", "maxRedirects", "transport", "httpAgent", "httpsAgent", "cancelToken", "socketPath", "responseEncoding" ];
            var directMergeKeys = [ "validateStatus" ];
            function getMergedValue(target, source) {
                if (utils.isPlainObject(target) && utils.isPlainObject(source)) return utils.merge(target, source); else if (utils.isPlainObject(source)) return utils.merge({}, source); else if (utils.isArray(source)) return source.slice();
                return source;
            }
            function mergeDeepProperties(prop) {
                if (!utils.isUndefined(config2[prop])) config[prop] = getMergedValue(config1[prop], config2[prop]); else if (!utils.isUndefined(config1[prop])) config[prop] = getMergedValue(void 0, config1[prop]);
            }
            utils.forEach(valueFromConfig2Keys, (function(prop) {
                if (!utils.isUndefined(config2[prop])) config[prop] = getMergedValue(void 0, config2[prop]);
            }));
            utils.forEach(mergeDeepPropertiesKeys, mergeDeepProperties);
            utils.forEach(defaultToConfig2Keys, (function(prop) {
                if (!utils.isUndefined(config2[prop])) config[prop] = getMergedValue(void 0, config2[prop]); else if (!utils.isUndefined(config1[prop])) config[prop] = getMergedValue(void 0, config1[prop]);
            }));
            utils.forEach(directMergeKeys, (function(prop) {
                if (prop in config2) config[prop] = getMergedValue(config1[prop], config2[prop]); else if (prop in config1) config[prop] = getMergedValue(void 0, config1[prop]);
            }));
            var axiosKeys = valueFromConfig2Keys.concat(mergeDeepPropertiesKeys).concat(defaultToConfig2Keys).concat(directMergeKeys);
            var otherKeys = Object.keys(config1).concat(Object.keys(config2)).filter((function(key) {
                return -1 === axiosKeys.indexOf(key);
            }));
            utils.forEach(otherKeys, mergeDeepProperties);
            return config;
        };
    },
    "../shared/browser/node_modules/axios/lib/core/settle.js": (module, __unused_webpack_exports, __webpack_require__) => {
        "use strict";
        var createError = __webpack_require__("../shared/browser/node_modules/axios/lib/core/createError.js");
        module.exports = function(resolve, reject, response) {
            var validateStatus = response.config.validateStatus;
            if (!response.status || !validateStatus || validateStatus(response.status)) resolve(response); else reject(createError("Request failed with status code " + response.status, response.config, null, response.request, response));
        };
    },
    "../shared/browser/node_modules/axios/lib/core/transformData.js": (module, __unused_webpack_exports, __webpack_require__) => {
        "use strict";
        var utils = __webpack_require__("../shared/browser/node_modules/axios/lib/utils.js");
        var defaults = __webpack_require__("../shared/browser/node_modules/axios/lib/defaults.js");
        module.exports = function(data, headers, fns) {
            var context = this || defaults;
            utils.forEach(fns, (function(fn) {
                data = fn.call(context, data, headers);
            }));
            return data;
        };
    },
    "../shared/browser/node_modules/axios/lib/defaults.js": (module, __unused_webpack_exports, __webpack_require__) => {
        "use strict";
        var utils = __webpack_require__("../shared/browser/node_modules/axios/lib/utils.js");
        var normalizeHeaderName = __webpack_require__("../shared/browser/node_modules/axios/lib/helpers/normalizeHeaderName.js");
        var enhanceError = __webpack_require__("../shared/browser/node_modules/axios/lib/core/enhanceError.js");
        var DEFAULT_CONTENT_TYPE = {
            "Content-Type": "application/x-www-form-urlencoded"
        };
        function setContentTypeIfUnset(headers, value) {
            if (!utils.isUndefined(headers) && utils.isUndefined(headers["Content-Type"])) headers["Content-Type"] = value;
        }
        function getDefaultAdapter() {
            var adapter;
            if ("undefined" !== typeof XMLHttpRequest) adapter = __webpack_require__("../shared/browser/node_modules/axios/lib/adapters/xhr.js"); else if ("undefined" !== typeof process && "[object process]" === Object.prototype.toString.call(process)) adapter = __webpack_require__("../shared/browser/node_modules/axios/lib/adapters/xhr.js");
            return adapter;
        }
        function stringifySafely(rawValue, parser, encoder) {
            if (utils.isString(rawValue)) try {
                (parser || JSON.parse)(rawValue);
                return utils.trim(rawValue);
            } catch (e) {
                if ("SyntaxError" !== e.name) throw e;
            }
            return (encoder || JSON.stringify)(rawValue);
        }
        var defaults = {
            transitional: {
                silentJSONParsing: true,
                forcedJSONParsing: true,
                clarifyTimeoutError: false
            },
            adapter: getDefaultAdapter(),
            transformRequest: [ function(data, headers) {
                normalizeHeaderName(headers, "Accept");
                normalizeHeaderName(headers, "Content-Type");
                if (utils.isFormData(data) || utils.isArrayBuffer(data) || utils.isBuffer(data) || utils.isStream(data) || utils.isFile(data) || utils.isBlob(data)) return data;
                if (utils.isArrayBufferView(data)) return data.buffer;
                if (utils.isURLSearchParams(data)) {
                    setContentTypeIfUnset(headers, "application/x-www-form-urlencoded;charset=utf-8");
                    return data.toString();
                }
                if (utils.isObject(data) || headers && "application/json" === headers["Content-Type"]) {
                    setContentTypeIfUnset(headers, "application/json");
                    return stringifySafely(data);
                }
                return data;
            } ],
            transformResponse: [ function(data) {
                var transitional = this.transitional;
                var silentJSONParsing = transitional && transitional.silentJSONParsing;
                var forcedJSONParsing = transitional && transitional.forcedJSONParsing;
                var strictJSONParsing = !silentJSONParsing && "json" === this.responseType;
                if (strictJSONParsing || forcedJSONParsing && utils.isString(data) && data.length) try {
                    return JSON.parse(data);
                } catch (e) {
                    if (strictJSONParsing) {
                        if ("SyntaxError" === e.name) throw enhanceError(e, this, "E_JSON_PARSE");
                        throw e;
                    }
                }
                return data;
            } ],
            timeout: 0,
            xsrfCookieName: "XSRF-TOKEN",
            xsrfHeaderName: "X-XSRF-TOKEN",
            maxContentLength: -1,
            maxBodyLength: -1,
            validateStatus: function(status) {
                return status >= 200 && status < 300;
            }
        };
        defaults.headers = {
            common: {
                Accept: "application/json, text/plain, */*"
            }
        };
        utils.forEach([ "delete", "get", "head" ], (function(method) {
            defaults.headers[method] = {};
        }));
        utils.forEach([ "post", "put", "patch" ], (function(method) {
            defaults.headers[method] = utils.merge(DEFAULT_CONTENT_TYPE);
        }));
        module.exports = defaults;
    },
    "../shared/browser/node_modules/axios/lib/helpers/bind.js": module => {
        "use strict";
        module.exports = function(fn, thisArg) {
            return function() {
                var args = new Array(arguments.length);
                for (var i = 0; i < args.length; i++) args[i] = arguments[i];
                return fn.apply(thisArg, args);
            };
        };
    },
    "../shared/browser/node_modules/axios/lib/helpers/buildURL.js": (module, __unused_webpack_exports, __webpack_require__) => {
        "use strict";
        var utils = __webpack_require__("../shared/browser/node_modules/axios/lib/utils.js");
        function encode(val) {
            return encodeURIComponent(val).replace(/%3A/gi, ":").replace(/%24/g, "$").replace(/%2C/gi, ",").replace(/%20/g, "+").replace(/%5B/gi, "[").replace(/%5D/gi, "]");
        }
        module.exports = function(url, params, paramsSerializer) {
            if (!params) return url;
            var serializedParams;
            if (paramsSerializer) serializedParams = paramsSerializer(params); else if (utils.isURLSearchParams(params)) serializedParams = params.toString(); else {
                var parts = [];
                utils.forEach(params, (function(val, key) {
                    if (null === val || "undefined" === typeof val) return;
                    if (utils.isArray(val)) key += "[]"; else val = [ val ];
                    utils.forEach(val, (function(v) {
                        if (utils.isDate(v)) v = v.toISOString(); else if (utils.isObject(v)) v = JSON.stringify(v);
                        parts.push(encode(key) + "=" + encode(v));
                    }));
                }));
                serializedParams = parts.join("&");
            }
            if (serializedParams) {
                var hashmarkIndex = url.indexOf("#");
                if (-1 !== hashmarkIndex) url = url.slice(0, hashmarkIndex);
                url += (-1 === url.indexOf("?") ? "?" : "&") + serializedParams;
            }
            return url;
        };
    },
    "../shared/browser/node_modules/axios/lib/helpers/combineURLs.js": module => {
        "use strict";
        module.exports = function(baseURL, relativeURL) {
            return relativeURL ? baseURL.replace(/\/+$/, "") + "/" + relativeURL.replace(/^\/+/, "") : baseURL;
        };
    },
    "../shared/browser/node_modules/axios/lib/helpers/cookies.js": (module, __unused_webpack_exports, __webpack_require__) => {
        "use strict";
        var utils = __webpack_require__("../shared/browser/node_modules/axios/lib/utils.js");
        module.exports = utils.isStandardBrowserEnv() ? function() {
            return {
                write: function(name, value, expires, path, domain, secure) {
                    var cookie = [];
                    cookie.push(name + "=" + encodeURIComponent(value));
                    if (utils.isNumber(expires)) cookie.push("expires=" + new Date(expires).toGMTString());
                    if (utils.isString(path)) cookie.push("path=" + path);
                    if (utils.isString(domain)) cookie.push("domain=" + domain);
                    if (true === secure) cookie.push("secure");
                    document.cookie = cookie.join("; ");
                },
                read: function(name) {
                    var match = document.cookie.match(new RegExp("(^|;\\s*)(" + name + ")=([^;]*)"));
                    return match ? decodeURIComponent(match[3]) : null;
                },
                remove: function(name) {
                    this.write(name, "", Date.now() - 864e5);
                }
            };
        }() : function() {
            return {
                write: function() {},
                read: function() {
                    return null;
                },
                remove: function() {}
            };
        }();
    },
    "../shared/browser/node_modules/axios/lib/helpers/isAbsoluteURL.js": module => {
        "use strict";
        module.exports = function(url) {
            return /^([a-z][a-z\d\+\-\.]*:)?\/\//i.test(url);
        };
    },
    "../shared/browser/node_modules/axios/lib/helpers/isAxiosError.js": module => {
        "use strict";
        module.exports = function(payload) {
            return "object" === typeof payload && true === payload.isAxiosError;
        };
    },
    "../shared/browser/node_modules/axios/lib/helpers/isURLSameOrigin.js": (module, __unused_webpack_exports, __webpack_require__) => {
        "use strict";
        var utils = __webpack_require__("../shared/browser/node_modules/axios/lib/utils.js");
        module.exports = utils.isStandardBrowserEnv() ? function() {
            var msie = /(msie|trident)/i.test(navigator.userAgent);
            var urlParsingNode = document.createElement("a");
            var originURL;
            function resolveURL(url) {
                var href = url;
                if (msie) {
                    urlParsingNode.setAttribute("href", href);
                    href = urlParsingNode.href;
                }
                urlParsingNode.setAttribute("href", href);
                return {
                    href: urlParsingNode.href,
                    protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, "") : "",
                    host: urlParsingNode.host,
                    search: urlParsingNode.search ? urlParsingNode.search.replace(/^\?/, "") : "",
                    hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, "") : "",
                    hostname: urlParsingNode.hostname,
                    port: urlParsingNode.port,
                    pathname: "/" === urlParsingNode.pathname.charAt(0) ? urlParsingNode.pathname : "/" + urlParsingNode.pathname
                };
            }
            originURL = resolveURL(window.location.href);
            return function(requestURL) {
                var parsed = utils.isString(requestURL) ? resolveURL(requestURL) : requestURL;
                return parsed.protocol === originURL.protocol && parsed.host === originURL.host;
            };
        }() : function() {
            return function() {
                return true;
            };
        }();
    },
    "../shared/browser/node_modules/axios/lib/helpers/normalizeHeaderName.js": (module, __unused_webpack_exports, __webpack_require__) => {
        "use strict";
        var utils = __webpack_require__("../shared/browser/node_modules/axios/lib/utils.js");
        module.exports = function(headers, normalizedName) {
            utils.forEach(headers, (function(value, name) {
                if (name !== normalizedName && name.toUpperCase() === normalizedName.toUpperCase()) {
                    headers[normalizedName] = value;
                    delete headers[name];
                }
            }));
        };
    },
    "../shared/browser/node_modules/axios/lib/helpers/parseHeaders.js": (module, __unused_webpack_exports, __webpack_require__) => {
        "use strict";
        var utils = __webpack_require__("../shared/browser/node_modules/axios/lib/utils.js");
        var ignoreDuplicateOf = [ "age", "authorization", "content-length", "content-type", "etag", "expires", "from", "host", "if-modified-since", "if-unmodified-since", "last-modified", "location", "max-forwards", "proxy-authorization", "referer", "retry-after", "user-agent" ];
        module.exports = function(headers) {
            var parsed = {};
            var key;
            var val;
            var i;
            if (!headers) return parsed;
            utils.forEach(headers.split("\n"), (function(line) {
                i = line.indexOf(":");
                key = utils.trim(line.substr(0, i)).toLowerCase();
                val = utils.trim(line.substr(i + 1));
                if (key) {
                    if (parsed[key] && ignoreDuplicateOf.indexOf(key) >= 0) return;
                    if ("set-cookie" === key) parsed[key] = (parsed[key] ? parsed[key] : []).concat([ val ]); else parsed[key] = parsed[key] ? parsed[key] + ", " + val : val;
                }
            }));
            return parsed;
        };
    },
    "../shared/browser/node_modules/axios/lib/helpers/spread.js": module => {
        "use strict";
        module.exports = function(callback) {
            return function(arr) {
                return callback.apply(null, arr);
            };
        };
    },
    "../shared/browser/node_modules/axios/lib/helpers/validator.js": (module, __unused_webpack_exports, __webpack_require__) => {
        "use strict";
        var pkg = __webpack_require__("../shared/browser/node_modules/axios/package.json");
        var validators = {};
        [ "object", "boolean", "number", "function", "string", "symbol" ].forEach((function(type, i) {
            validators[type] = function(thing) {
                return typeof thing === type || "a" + (i < 1 ? "n " : " ") + type;
            };
        }));
        var deprecatedWarnings = {};
        var currentVerArr = pkg.version.split(".");
        function isOlderVersion(version, thanVersion) {
            var pkgVersionArr = thanVersion ? thanVersion.split(".") : currentVerArr;
            var destVer = version.split(".");
            for (var i = 0; i < 3; i++) if (pkgVersionArr[i] > destVer[i]) return true; else if (pkgVersionArr[i] < destVer[i]) return false;
            return false;
        }
        validators.transitional = function(validator, version, message) {
            var isDeprecated = version && isOlderVersion(version);
            function formatMessage(opt, desc) {
                return "[Axios v" + pkg.version + "] Transitional option '" + opt + "'" + desc + (message ? ". " + message : "");
            }
            return function(value, opt, opts) {
                if (false === validator) throw new Error(formatMessage(opt, " has been removed in " + version));
                if (isDeprecated && !deprecatedWarnings[opt]) {
                    deprecatedWarnings[opt] = true;
                    console.warn(formatMessage(opt, " has been deprecated since v" + version + " and will be removed in the near future"));
                }
                return validator ? validator(value, opt, opts) : true;
            };
        };
        function assertOptions(options, schema, allowUnknown) {
            if ("object" !== typeof options) throw new TypeError("options must be an object");
            var keys = Object.keys(options);
            var i = keys.length;
            while (i-- > 0) {
                var opt = keys[i];
                var validator = schema[opt];
                if (validator) {
                    var value = options[opt];
                    var result = void 0 === value || validator(value, opt, options);
                    if (true !== result) throw new TypeError("option " + opt + " must be " + result);
                    continue;
                }
                if (true !== allowUnknown) throw Error("Unknown option " + opt);
            }
        }
        module.exports = {
            isOlderVersion,
            assertOptions,
            validators
        };
    },
    "../shared/browser/node_modules/axios/lib/utils.js": (module, __unused_webpack_exports, __webpack_require__) => {
        "use strict";
        var bind = __webpack_require__("../shared/browser/node_modules/axios/lib/helpers/bind.js");
        var toString = Object.prototype.toString;
        function isArray(val) {
            return "[object Array]" === toString.call(val);
        }
        function isUndefined(val) {
            return "undefined" === typeof val;
        }
        function isBuffer(val) {
            return null !== val && !isUndefined(val) && null !== val.constructor && !isUndefined(val.constructor) && "function" === typeof val.constructor.isBuffer && val.constructor.isBuffer(val);
        }
        function isArrayBuffer(val) {
            return "[object ArrayBuffer]" === toString.call(val);
        }
        function isFormData(val) {
            return "undefined" !== typeof FormData && val instanceof FormData;
        }
        function isArrayBufferView(val) {
            var result;
            if ("undefined" !== typeof ArrayBuffer && ArrayBuffer.isView) result = ArrayBuffer.isView(val); else result = val && val.buffer && val.buffer instanceof ArrayBuffer;
            return result;
        }
        function isString(val) {
            return "string" === typeof val;
        }
        function isNumber(val) {
            return "number" === typeof val;
        }
        function isObject(val) {
            return null !== val && "object" === typeof val;
        }
        function isPlainObject(val) {
            if ("[object Object]" !== toString.call(val)) return false;
            var prototype = Object.getPrototypeOf(val);
            return null === prototype || prototype === Object.prototype;
        }
        function isDate(val) {
            return "[object Date]" === toString.call(val);
        }
        function isFile(val) {
            return "[object File]" === toString.call(val);
        }
        function isBlob(val) {
            return "[object Blob]" === toString.call(val);
        }
        function isFunction(val) {
            return "[object Function]" === toString.call(val);
        }
        function isStream(val) {
            return isObject(val) && isFunction(val.pipe);
        }
        function isURLSearchParams(val) {
            return "undefined" !== typeof URLSearchParams && val instanceof URLSearchParams;
        }
        function trim(str) {
            return str.trim ? str.trim() : str.replace(/^\s+|\s+$/g, "");
        }
        function isStandardBrowserEnv() {
            if ("undefined" !== typeof navigator && ("ReactNative" === navigator.product || "NativeScript" === navigator.product || "NS" === navigator.product)) return false;
            return "undefined" !== typeof window && "undefined" !== typeof document;
        }
        function forEach(obj, fn) {
            if (null === obj || "undefined" === typeof obj) return;
            if ("object" !== typeof obj) obj = [ obj ];
            if (isArray(obj)) for (var i = 0, l = obj.length; i < l; i++) fn.call(null, obj[i], i, obj); else for (var key in obj) if (Object.prototype.hasOwnProperty.call(obj, key)) fn.call(null, obj[key], key, obj);
        }
        function merge() {
            var result = {};
            function assignValue(val, key) {
                if (isPlainObject(result[key]) && isPlainObject(val)) result[key] = merge(result[key], val); else if (isPlainObject(val)) result[key] = merge({}, val); else if (isArray(val)) result[key] = val.slice(); else result[key] = val;
            }
            for (var i = 0, l = arguments.length; i < l; i++) forEach(arguments[i], assignValue);
            return result;
        }
        function extend(a, b, thisArg) {
            forEach(b, (function(val, key) {
                if (thisArg && "function" === typeof val) a[key] = bind(val, thisArg); else a[key] = val;
            }));
            return a;
        }
        function stripBOM(content) {
            if (65279 === content.charCodeAt(0)) content = content.slice(1);
            return content;
        }
        module.exports = {
            isArray,
            isArrayBuffer,
            isBuffer,
            isFormData,
            isArrayBufferView,
            isString,
            isNumber,
            isObject,
            isPlainObject,
            isUndefined,
            isDate,
            isFile,
            isBlob,
            isFunction,
            isStream,
            isURLSearchParams,
            isStandardBrowserEnv,
            forEach,
            merge,
            extend,
            trim,
            stripBOM
        };
    },
    "../shared/browser/node_modules/decode-uri-component/index.js": module => {
        "use strict";
        var token = "%[a-f0-9]{2}";
        var singleMatcher = new RegExp(token, "gi");
        var multiMatcher = new RegExp("(" + token + ")+", "gi");
        function decodeComponents(components, split) {
            try {
                return decodeURIComponent(components.join(""));
            } catch (err) {}
            if (1 === components.length) return components;
            split = split || 1;
            var left = components.slice(0, split);
            var right = components.slice(split);
            return Array.prototype.concat.call([], decodeComponents(left), decodeComponents(right));
        }
        function decode(input) {
            try {
                return decodeURIComponent(input);
            } catch (err) {
                var tokens = input.match(singleMatcher);
                for (var i = 1; i < tokens.length; i++) {
                    input = decodeComponents(tokens, i).join("");
                    tokens = input.match(singleMatcher);
                }
                return input;
            }
        }
        function customDecodeURIComponent(input) {
            var replaceMap = {
                "%FE%FF": "��",
                "%FF%FE": "��"
            };
            var match = multiMatcher.exec(input);
            while (match) {
                try {
                    replaceMap[match[0]] = decodeURIComponent(match[0]);
                } catch (err) {
                    var result = decode(match[0]);
                    if (result !== match[0]) replaceMap[match[0]] = result;
                }
                match = multiMatcher.exec(input);
            }
            replaceMap["%C2"] = "�";
            var entries = Object.keys(replaceMap);
            for (var i = 0; i < entries.length; i++) {
                var key = entries[i];
                input = input.replace(new RegExp(key, "g"), replaceMap[key]);
            }
            return input;
        }
        module.exports = function(encodedURI) {
            if ("string" !== typeof encodedURI) throw new TypeError("Expected `encodedURI` to be of type `string`, got `" + typeof encodedURI + "`");
            try {
                encodedURI = encodedURI.replace(/\+/g, " ");
                return decodeURIComponent(encodedURI);
            } catch (err) {
                return customDecodeURIComponent(encodedURI);
            }
        };
    },
    "../shared/browser/node_modules/filter-obj/index.js": module => {
        "use strict";
        module.exports = function(obj, predicate) {
            var ret = {};
            var keys = Object.keys(obj);
            var isArr = Array.isArray(predicate);
            for (var i = 0; i < keys.length; i++) {
                var key = keys[i];
                var val = obj[key];
                if (isArr ? -1 !== predicate.indexOf(key) : predicate(key, val, obj)) ret[key] = val;
            }
            return ret;
        };
    },
    "../shared/browser/node_modules/load-script2/index.js": module => {
        module.exports = function(src, attrs, parentNode) {
            return new Promise(((resolve, reject) => {
                const script = document.createElement("script");
                script.async = true;
                script.src = src;
                for (const [k, v] of Object.entries(attrs || {})) script.setAttribute(k, v);
                script.onload = () => {
                    script.onerror = script.onload = null;
                    resolve(script);
                };
                script.onerror = () => {
                    script.onerror = script.onload = null;
                    reject(new Error(`Failed to load ${src}`));
                };
                const node = parentNode || document.head || document.getElementsByTagName("head")[0];
                node.appendChild(script);
            }));
        };
    },
    "../shared/browser/node_modules/lodash/_baseGetTag.js": module => {
        var objectProto = Object.prototype;
        var nativeObjectToString = objectProto.toString;
        function objectToString(value) {
            return nativeObjectToString.call(value);
        }
        module.exports = objectToString;
    },
    "../shared/browser/node_modules/lodash/_getPrototype.js": (module, __unused_webpack_exports, __webpack_require__) => {
        var overArg = __webpack_require__("../shared/browser/node_modules/lodash/_overArg.js");
        var getPrototype = overArg(Object.getPrototypeOf, Object);
        module.exports = getPrototype;
    },
    "../shared/browser/node_modules/lodash/_overArg.js": module => {
        function overArg(func, transform) {
            return function(arg) {
                return func(transform(arg));
            };
        }
        module.exports = overArg;
    },
    "../shared/browser/node_modules/lodash/isObjectLike.js": module => {
        function isObjectLike(value) {
            return null != value && "object" == typeof value;
        }
        module.exports = isObjectLike;
    },
    "../shared/browser/node_modules/lodash/isPlainObject.js": (module, __unused_webpack_exports, __webpack_require__) => {
        var baseGetTag = __webpack_require__("../shared/browser/node_modules/lodash/_baseGetTag.js"), getPrototype = __webpack_require__("../shared/browser/node_modules/lodash/_getPrototype.js"), isObjectLike = __webpack_require__("../shared/browser/node_modules/lodash/isObjectLike.js");
        var objectTag = "[object Object]";
        var funcProto = Function.prototype, objectProto = Object.prototype;
        var funcToString = funcProto.toString;
        var hasOwnProperty = objectProto.hasOwnProperty;
        var objectCtorString = funcToString.call(Object);
        function isPlainObject(value) {
            if (!isObjectLike(value) || baseGetTag(value) != objectTag) return false;
            var proto = getPrototype(value);
            if (null === proto) return true;
            var Ctor = hasOwnProperty.call(proto, "constructor") && proto.constructor;
            return "function" == typeof Ctor && Ctor instanceof Ctor && funcToString.call(Ctor) == objectCtorString;
        }
        module.exports = isPlainObject;
    },
    "../shared/browser/node_modules/photoswipe/dist/photoswipe-ui-default.min.js": function(module, exports, __webpack_require__) {
        var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;
        !function(a, b) {
            true ? !(__WEBPACK_AMD_DEFINE_FACTORY__ = b, __WEBPACK_AMD_DEFINE_RESULT__ = "function" === typeof __WEBPACK_AMD_DEFINE_FACTORY__ ? __WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module) : __WEBPACK_AMD_DEFINE_FACTORY__, 
            void 0 !== __WEBPACK_AMD_DEFINE_RESULT__ && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)) : 0;
        }(0, (function() {
            "use strict";
            var a = function(a, b) {
                var c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, t, u, v = this, w = !1, x = !0, y = !0, z = {
                    barsSize: {
                        top: 44,
                        bottom: "auto"
                    },
                    closeElClasses: [ "item", "caption", "zoom-wrap", "ui", "top-bar" ],
                    timeToIdle: 4e3,
                    timeToIdleOutside: 1e3,
                    loadingIndicatorDelay: 1e3,
                    addCaptionHTMLFn: function(a, b) {
                        return a.title ? (b.children[0].innerHTML = a.title, !0) : (b.children[0].innerHTML = "", 
                        !1);
                    },
                    closeEl: !0,
                    captionEl: !0,
                    fullscreenEl: !0,
                    zoomEl: !0,
                    shareEl: !0,
                    counterEl: !0,
                    arrowEl: !0,
                    preloaderEl: !0,
                    tapToClose: !1,
                    tapToToggleControls: !0,
                    clickToCloseNonZoomable: !0,
                    shareButtons: [ {
                        id: "facebook",
                        label: "Share on Facebook",
                        url: "https://www.facebook.com/sharer/sharer.php?u={{url}}"
                    }, {
                        id: "twitter",
                        label: "Tweet",
                        url: "https://twitter.com/intent/tweet?text={{text}}&url={{url}}"
                    }, {
                        id: "pinterest",
                        label: "Pin it",
                        url: "http://www.pinterest.com/pin/create/button/?url={{url}}&media={{image_url}}&description={{text}}"
                    }, {
                        id: "download",
                        label: "Download image",
                        url: "{{raw_image_url}}",
                        download: !0
                    } ],
                    getImageURLForShare: function() {
                        return a.currItem.src || "";
                    },
                    getPageURLForShare: function() {
                        return window.location.href;
                    },
                    getTextForShare: function() {
                        return a.currItem.title || "";
                    },
                    indexIndicatorSep: " / ",
                    fitControlsWidth: 1200
                }, A = function(a) {
                    if (r) return !0;
                    a = a || window.event, q.timeToIdle && q.mouseUsed && !k && K();
                    for (var c, d, e = a.target || a.srcElement, f = e.getAttribute("class") || "", g = 0; g < S.length; g++) c = S[g], 
                    c.onTap && f.indexOf("pswp__" + c.name) > -1 && (c.onTap(), d = !0);
                    if (d) {
                        a.stopPropagation && a.stopPropagation(), r = !0;
                        var h = b.features.isOldAndroid ? 600 : 30;
                        setTimeout((function() {
                            r = !1;
                        }), h);
                    }
                }, B = function() {
                    return !a.likelyTouchDevice || q.mouseUsed || screen.width > q.fitControlsWidth;
                }, C = function(a, c, d) {
                    b[(d ? "add" : "remove") + "Class"](a, "pswp__" + c);
                }, D = function() {
                    var a = 1 === q.getNumItemsFn();
                    a !== p && (C(d, "ui--one-slide", a), p = a);
                }, E = function() {
                    C(i, "share-modal--hidden", y);
                }, F = function() {
                    return y = !y, y ? (b.removeClass(i, "pswp__share-modal--fade-in"), setTimeout((function() {
                        y && E();
                    }), 300)) : (E(), setTimeout((function() {
                        y || b.addClass(i, "pswp__share-modal--fade-in");
                    }), 30)), y || H(), !1;
                }, G = function(b) {
                    b = b || window.event;
                    var c = b.target || b.srcElement;
                    return a.shout("shareLinkClick", b, c), !!c.href && (!!c.hasAttribute("download") || (window.open(c.href, "pswp_share", "scrollbars=yes,resizable=yes,toolbar=no,location=yes,width=550,height=420,top=100,left=" + (window.screen ? Math.round(screen.width / 2 - 275) : 100)), 
                    y || F(), !1));
                }, H = function() {
                    for (var a, b, c, d, e, f = "", g = 0; g < q.shareButtons.length; g++) a = q.shareButtons[g], 
                    c = q.getImageURLForShare(a), d = q.getPageURLForShare(a), e = q.getTextForShare(a), 
                    b = a.url.replace("{{url}}", encodeURIComponent(d)).replace("{{image_url}}", encodeURIComponent(c)).replace("{{raw_image_url}}", c).replace("{{text}}", encodeURIComponent(e)), 
                    f += '<a href="' + b + '" target="_blank" class="pswp__share--' + a.id + '"' + (a.download ? "download" : "") + ">" + a.label + "</a>", 
                    q.parseShareButtonOut && (f = q.parseShareButtonOut(a, f));
                    i.children[0].innerHTML = f, i.children[0].onclick = G;
                }, I = function(a) {
                    for (var c = 0; c < q.closeElClasses.length; c++) if (b.hasClass(a, "pswp__" + q.closeElClasses[c])) return !0;
                }, J = 0, K = function() {
                    clearTimeout(u), J = 0, k && v.setIdle(!1);
                }, L = function(a) {
                    a = a ? a : window.event;
                    var b = a.relatedTarget || a.toElement;
                    b && "HTML" !== b.nodeName || (clearTimeout(u), u = setTimeout((function() {
                        v.setIdle(!0);
                    }), q.timeToIdleOutside));
                }, M = function() {
                    q.fullscreenEl && !b.features.isOldAndroid && (c || (c = v.getFullscreenAPI()), 
                    c ? (b.bind(document, c.eventK, v.updateFullscreen), v.updateFullscreen(), b.addClass(a.template, "pswp--supports-fs")) : b.removeClass(a.template, "pswp--supports-fs"));
                }, N = function() {
                    q.preloaderEl && (O(!0), l("beforeChange", (function() {
                        clearTimeout(o), o = setTimeout((function() {
                            a.currItem && a.currItem.loading ? (!a.allowProgressiveImg() || a.currItem.img && !a.currItem.img.naturalWidth) && O(!1) : O(!0);
                        }), q.loadingIndicatorDelay);
                    })), l("imageLoadComplete", (function(b, c) {
                        a.currItem === c && O(!0);
                    })));
                }, O = function(a) {
                    n !== a && (C(m, "preloader--active", !a), n = a);
                }, P = function(a) {
                    var c = a.vGap;
                    if (B()) {
                        var g = q.barsSize;
                        if (q.captionEl && "auto" === g.bottom) if (f || (f = b.createEl("pswp__caption pswp__caption--fake"), 
                        f.appendChild(b.createEl("pswp__caption__center")), d.insertBefore(f, e), b.addClass(d, "pswp__ui--fit")), 
                        q.addCaptionHTMLFn(a, f, !0)) {
                            var h = f.clientHeight;
                            c.bottom = parseInt(h, 10) || 44;
                        } else c.bottom = g.top; else c.bottom = "auto" === g.bottom ? 0 : g.bottom;
                        c.top = g.top;
                    } else c.top = c.bottom = 0;
                }, Q = function() {
                    q.timeToIdle && l("mouseUsed", (function() {
                        b.bind(document, "mousemove", K), b.bind(document, "mouseout", L), t = setInterval((function() {
                            J++, 2 === J && v.setIdle(!0);
                        }), q.timeToIdle / 2);
                    }));
                }, R = function() {
                    l("onVerticalDrag", (function(a) {
                        x && a < .95 ? v.hideControls() : !x && a >= .95 && v.showControls();
                    }));
                    var a;
                    l("onPinchClose", (function(b) {
                        x && b < .9 ? (v.hideControls(), a = !0) : a && !x && b > .9 && v.showControls();
                    })), l("zoomGestureEnded", (function() {
                        a = !1, a && !x && v.showControls();
                    }));
                }, S = [ {
                    name: "caption",
                    option: "captionEl",
                    onInit: function(a) {
                        e = a;
                    }
                }, {
                    name: "share-modal",
                    option: "shareEl",
                    onInit: function(a) {
                        i = a;
                    },
                    onTap: function() {
                        F();
                    }
                }, {
                    name: "button--share",
                    option: "shareEl",
                    onInit: function(a) {
                        h = a;
                    },
                    onTap: function() {
                        F();
                    }
                }, {
                    name: "button--zoom",
                    option: "zoomEl",
                    onTap: a.toggleDesktopZoom
                }, {
                    name: "counter",
                    option: "counterEl",
                    onInit: function(a) {
                        g = a;
                    }
                }, {
                    name: "button--close",
                    option: "closeEl",
                    onTap: a.close
                }, {
                    name: "button--arrow--left",
                    option: "arrowEl",
                    onTap: a.prev
                }, {
                    name: "button--arrow--right",
                    option: "arrowEl",
                    onTap: a.next
                }, {
                    name: "button--fs",
                    option: "fullscreenEl",
                    onTap: function() {
                        c.isFullscreen() ? c.exit() : c.enter();
                    }
                }, {
                    name: "preloader",
                    option: "preloaderEl",
                    onInit: function(a) {
                        m = a;
                    }
                } ], T = function() {
                    var a, c, e, f = function(d) {
                        if (d) for (var f = d.length, g = 0; g < f; g++) {
                            a = d[g], c = a.className;
                            for (var h = 0; h < S.length; h++) e = S[h], c.indexOf("pswp__" + e.name) > -1 && (q[e.option] ? (b.removeClass(a, "pswp__element--disabled"), 
                            e.onInit && e.onInit(a)) : b.addClass(a, "pswp__element--disabled"));
                        }
                    };
                    f(d.children);
                    var g = b.getChildByClass(d, "pswp__top-bar");
                    g && f(g.children);
                };
                v.init = function() {
                    b.extend(a.options, z, !0), q = a.options, d = b.getChildByClass(a.scrollWrap, "pswp__ui"), 
                    l = a.listen, R(), l("beforeChange", v.update), l("doubleTap", (function(b) {
                        var c = a.currItem.initialZoomLevel;
                        a.getZoomLevel() !== c ? a.zoomTo(c, b, 333) : a.zoomTo(q.getDoubleTapZoom(!1, a.currItem), b, 333);
                    })), l("preventDragEvent", (function(a, b, c) {
                        var d = a.target || a.srcElement;
                        d && d.getAttribute("class") && a.type.indexOf("mouse") > -1 && (d.getAttribute("class").indexOf("__caption") > 0 || /(SMALL|STRONG|EM)/i.test(d.tagName)) && (c.prevent = !1);
                    })), l("bindEvents", (function() {
                        b.bind(d, "pswpTap click", A), b.bind(a.scrollWrap, "pswpTap", v.onGlobalTap), a.likelyTouchDevice || b.bind(a.scrollWrap, "mouseover", v.onMouseOver);
                    })), l("unbindEvents", (function() {
                        y || F(), t && clearInterval(t), b.unbind(document, "mouseout", L), b.unbind(document, "mousemove", K), 
                        b.unbind(d, "pswpTap click", A), b.unbind(a.scrollWrap, "pswpTap", v.onGlobalTap), 
                        b.unbind(a.scrollWrap, "mouseover", v.onMouseOver), c && (b.unbind(document, c.eventK, v.updateFullscreen), 
                        c.isFullscreen() && (q.hideAnimationDuration = 0, c.exit()), c = null);
                    })), l("destroy", (function() {
                        q.captionEl && (f && d.removeChild(f), b.removeClass(e, "pswp__caption--empty")), 
                        i && (i.children[0].onclick = null), b.removeClass(d, "pswp__ui--over-close"), b.addClass(d, "pswp__ui--hidden"), 
                        v.setIdle(!1);
                    })), q.showAnimationDuration || b.removeClass(d, "pswp__ui--hidden"), l("initialZoomIn", (function() {
                        q.showAnimationDuration && b.removeClass(d, "pswp__ui--hidden");
                    })), l("initialZoomOut", (function() {
                        b.addClass(d, "pswp__ui--hidden");
                    })), l("parseVerticalMargin", P), T(), q.shareEl && h && i && (y = !0), D(), Q(), 
                    M(), N();
                }, v.setIdle = function(a) {
                    k = a, C(d, "ui--idle", a);
                }, v.update = function() {
                    x && a.currItem ? (v.updateIndexIndicator(), q.captionEl && (q.addCaptionHTMLFn(a.currItem, e), 
                    C(e, "caption--empty", !a.currItem.title)), w = !0) : w = !1, y || F(), D();
                }, v.updateFullscreen = function(d) {
                    d && setTimeout((function() {
                        a.setScrollOffset(0, b.getScrollY());
                    }), 50), b[(c.isFullscreen() ? "add" : "remove") + "Class"](a.template, "pswp--fs");
                }, v.updateIndexIndicator = function() {
                    q.counterEl && (g.innerHTML = a.getCurrentIndex() + 1 + q.indexIndicatorSep + q.getNumItemsFn());
                }, v.onGlobalTap = function(c) {
                    c = c || window.event;
                    var d = c.target || c.srcElement;
                    if (!r) if (c.detail && "mouse" === c.detail.pointerType) {
                        if (I(d)) return void a.close();
                        b.hasClass(d, "pswp__img") && (1 === a.getZoomLevel() && a.getZoomLevel() <= a.currItem.fitRatio ? q.clickToCloseNonZoomable && a.close() : a.toggleDesktopZoom(c.detail.releasePoint));
                    } else if (q.tapToToggleControls && (x ? v.hideControls() : v.showControls()), q.tapToClose && (b.hasClass(d, "pswp__img") || I(d))) return void a.close();
                }, v.onMouseOver = function(a) {
                    a = a || window.event;
                    var b = a.target || a.srcElement;
                    C(d, "ui--over-close", I(b));
                }, v.hideControls = function() {
                    b.addClass(d, "pswp__ui--hidden"), x = !1;
                }, v.showControls = function() {
                    x = !0, w || v.update(), b.removeClass(d, "pswp__ui--hidden");
                }, v.supportsFullscreen = function() {
                    var a = document;
                    return !!(a.exitFullscreen || a.mozCancelFullScreen || a.webkitExitFullscreen || a.msExitFullscreen);
                }, v.getFullscreenAPI = function() {
                    var b, c = document.documentElement, d = "fullscreenchange";
                    return c.requestFullscreen ? b = {
                        enterK: "requestFullscreen",
                        exitK: "exitFullscreen",
                        elementK: "fullscreenElement",
                        eventK: d
                    } : c.mozRequestFullScreen ? b = {
                        enterK: "mozRequestFullScreen",
                        exitK: "mozCancelFullScreen",
                        elementK: "mozFullScreenElement",
                        eventK: "moz" + d
                    } : c.webkitRequestFullscreen ? b = {
                        enterK: "webkitRequestFullscreen",
                        exitK: "webkitExitFullscreen",
                        elementK: "webkitFullscreenElement",
                        eventK: "webkit" + d
                    } : c.msRequestFullscreen && (b = {
                        enterK: "msRequestFullscreen",
                        exitK: "msExitFullscreen",
                        elementK: "msFullscreenElement",
                        eventK: "MSFullscreenChange"
                    }), b && (b.enter = function() {
                        return j = q.closeOnScroll, q.closeOnScroll = !1, "webkitRequestFullscreen" !== this.enterK ? a.template[this.enterK]() : void a.template[this.enterK](Element.ALLOW_KEYBOARD_INPUT);
                    }, b.exit = function() {
                        return q.closeOnScroll = j, document[this.exitK]();
                    }, b.isFullscreen = function() {
                        return document[this.elementK];
                    }), b;
                };
            };
            return a;
        }));
    },
    "../shared/browser/node_modules/photoswipe/dist/photoswipe.min.js": function(module, exports, __webpack_require__) {
        var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;
        !function(a, b) {
            true ? !(__WEBPACK_AMD_DEFINE_FACTORY__ = b, __WEBPACK_AMD_DEFINE_RESULT__ = "function" === typeof __WEBPACK_AMD_DEFINE_FACTORY__ ? __WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module) : __WEBPACK_AMD_DEFINE_FACTORY__, 
            void 0 !== __WEBPACK_AMD_DEFINE_RESULT__ && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)) : 0;
        }(0, (function() {
            "use strict";
            var a = function(a, b, c, d) {
                var e = {
                    features: null,
                    bind: function(a, b, c, d) {
                        var e = (d ? "remove" : "add") + "EventListener";
                        b = b.split(" ");
                        for (var f = 0; f < b.length; f++) b[f] && a[e](b[f], c, !1);
                    },
                    isArray: function(a) {
                        return a instanceof Array;
                    },
                    createEl: function(a, b) {
                        var c = document.createElement(b || "div");
                        return a && (c.className = a), c;
                    },
                    getScrollY: function() {
                        var a = window.pageYOffset;
                        return void 0 !== a ? a : document.documentElement.scrollTop;
                    },
                    unbind: function(a, b, c) {
                        e.bind(a, b, c, !0);
                    },
                    removeClass: function(a, b) {
                        var c = new RegExp("(\\s|^)" + b + "(\\s|$)");
                        a.className = a.className.replace(c, " ").replace(/^\s\s*/, "").replace(/\s\s*$/, "");
                    },
                    addClass: function(a, b) {
                        e.hasClass(a, b) || (a.className += (a.className ? " " : "") + b);
                    },
                    hasClass: function(a, b) {
                        return a.className && new RegExp("(^|\\s)" + b + "(\\s|$)").test(a.className);
                    },
                    getChildByClass: function(a, b) {
                        for (var c = a.firstChild; c; ) {
                            if (e.hasClass(c, b)) return c;
                            c = c.nextSibling;
                        }
                    },
                    arraySearch: function(a, b, c) {
                        for (var d = a.length; d--; ) if (a[d][c] === b) return d;
                        return -1;
                    },
                    extend: function(a, b, c) {
                        for (var d in b) if (b.hasOwnProperty(d)) {
                            if (c && a.hasOwnProperty(d)) continue;
                            a[d] = b[d];
                        }
                    },
                    easing: {
                        sine: {
                            out: function(a) {
                                return Math.sin(a * (Math.PI / 2));
                            },
                            inOut: function(a) {
                                return -(Math.cos(Math.PI * a) - 1) / 2;
                            }
                        },
                        cubic: {
                            out: function(a) {
                                return --a * a * a + 1;
                            }
                        }
                    },
                    detectFeatures: function() {
                        if (e.features) return e.features;
                        var a = e.createEl(), b = a.style, c = "", d = {};
                        if (d.oldIE = document.all && !document.addEventListener, d.touch = "ontouchstart" in window, 
                        window.requestAnimationFrame && (d.raf = window.requestAnimationFrame, d.caf = window.cancelAnimationFrame), 
                        d.pointerEvent = !!window.PointerEvent || navigator.msPointerEnabled, !d.pointerEvent) {
                            var f = navigator.userAgent;
                            if (/iP(hone|od)/.test(navigator.platform)) {
                                var g = navigator.appVersion.match(/OS (\d+)_(\d+)_?(\d+)?/);
                                g && g.length > 0 && (g = parseInt(g[1], 10), g >= 1 && g < 8 && (d.isOldIOSPhone = !0));
                            }
                            var h = f.match(/Android\s([0-9\.]*)/), i = h ? h[1] : 0;
                            i = parseFloat(i), i >= 1 && (i < 4.4 && (d.isOldAndroid = !0), d.androidVersion = i), 
                            d.isMobileOpera = /opera mini|opera mobi/i.test(f);
                        }
                        for (var j, k, l = [ "transform", "perspective", "animationName" ], m = [ "", "webkit", "Moz", "ms", "O" ], n = 0; n < 4; n++) {
                            c = m[n];
                            for (var o = 0; o < 3; o++) j = l[o], k = c + (c ? j.charAt(0).toUpperCase() + j.slice(1) : j), 
                            !d[j] && k in b && (d[j] = k);
                            c && !d.raf && (c = c.toLowerCase(), d.raf = window[c + "RequestAnimationFrame"], 
                            d.raf && (d.caf = window[c + "CancelAnimationFrame"] || window[c + "CancelRequestAnimationFrame"]));
                        }
                        if (!d.raf) {
                            var p = 0;
                            d.raf = function(a) {
                                var b = (new Date).getTime(), c = Math.max(0, 16 - (b - p)), d = window.setTimeout((function() {
                                    a(b + c);
                                }), c);
                                return p = b + c, d;
                            }, d.caf = function(a) {
                                clearTimeout(a);
                            };
                        }
                        return d.svg = !!document.createElementNS && !!document.createElementNS("http://www.w3.org/2000/svg", "svg").createSVGRect, 
                        e.features = d, d;
                    }
                };
                e.detectFeatures(), e.features.oldIE && (e.bind = function(a, b, c, d) {
                    b = b.split(" ");
                    for (var e, f = (d ? "detach" : "attach") + "Event", g = function() {
                        c.handleEvent.call(c);
                    }, h = 0; h < b.length; h++) if (e = b[h]) if ("object" == typeof c && c.handleEvent) {
                        if (d) {
                            if (!c["oldIE" + e]) return !1;
                        } else c["oldIE" + e] = g;
                        a[f]("on" + e, c["oldIE" + e]);
                    } else a[f]("on" + e, c);
                });
                var f = this, g = 25, h = 3, i = {
                    allowPanToNext: !0,
                    spacing: .12,
                    bgOpacity: 1,
                    mouseUsed: !1,
                    loop: !0,
                    pinchToClose: !0,
                    closeOnScroll: !0,
                    closeOnVerticalDrag: !0,
                    verticalDragRange: .75,
                    hideAnimationDuration: 333,
                    showAnimationDuration: 333,
                    showHideOpacity: !1,
                    focus: !0,
                    escKey: !0,
                    arrowKeys: !0,
                    mainScrollEndFriction: .35,
                    panEndFriction: .35,
                    isClickableElement: function(a) {
                        return "A" === a.tagName;
                    },
                    getDoubleTapZoom: function(a, b) {
                        return a ? 1 : b.initialZoomLevel < .7 ? 1 : 1.33;
                    },
                    maxSpreadZoom: 1.33,
                    modal: !0,
                    scaleMode: "fit"
                };
                e.extend(i, d);
                var j, k, l, m, n, o, p, q, r, s, t, u, v, w, x, y, z, A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U, V, W, X, Y, Z, $, _, aa, ca, da, ea, fa, ga, ha, ia, ja, ka, la, ma = function() {
                    return {
                        x: 0,
                        y: 0
                    };
                }, na = ma(), oa = ma(), pa = ma(), qa = {}, ra = 0, sa = {}, ta = ma(), ua = 0, va = !0, wa = [], xa = {}, ya = !1, za = function(a, b) {
                    e.extend(f, b.publicMethods), wa.push(a);
                }, Aa = function(a) {
                    var b = ac();
                    return a > b - 1 ? a - b : a < 0 ? b + a : a;
                }, Ba = {}, Ca = function(a, b) {
                    return Ba[a] || (Ba[a] = []), Ba[a].push(b);
                }, Da = function(a) {
                    var b = Ba[a];
                    if (b) {
                        var c = Array.prototype.slice.call(arguments);
                        c.shift();
                        for (var d = 0; d < b.length; d++) b[d].apply(f, c);
                    }
                }, Ea = function() {
                    return (new Date).getTime();
                }, Fa = function(a) {
                    ja = a, f.bg.style.opacity = a * i.bgOpacity;
                }, Ga = function(a, b, c, d, e) {
                    (!ya || e && e !== f.currItem) && (d /= e ? e.fitRatio : f.currItem.fitRatio), a[E] = u + b + "px, " + c + "px" + v + " scale(" + d + ")";
                }, Ha = function(a) {
                    ea && (a && (s > f.currItem.fitRatio ? ya || (mc(f.currItem, !1, !0), ya = !0) : ya && (mc(f.currItem), 
                    ya = !1)), Ga(ea, pa.x, pa.y, s));
                }, Ia = function(a) {
                    a.container && Ga(a.container.style, a.initialPosition.x, a.initialPosition.y, a.initialZoomLevel, a);
                }, Ja = function(a, b) {
                    b[E] = u + a + "px, 0px" + v;
                }, Ka = function(a, b) {
                    if (!i.loop && b) {
                        var c = m + (ta.x * ra - a) / ta.x, d = Math.round(a - tb.x);
                        (c < 0 && d > 0 || c >= ac() - 1 && d < 0) && (a = tb.x + d * i.mainScrollEndFriction);
                    }
                    tb.x = a, Ja(a, n);
                }, La = function(a, b) {
                    var c = ub[a] - sa[a];
                    return oa[a] + na[a] + c - c * (b / t);
                }, Ma = function(a, b) {
                    a.x = b.x, a.y = b.y, b.id && (a.id = b.id);
                }, Na = function(a) {
                    a.x = Math.round(a.x), a.y = Math.round(a.y);
                }, Oa = null, Pa = function() {
                    Oa && (e.unbind(document, "mousemove", Pa), e.addClass(a, "pswp--has_mouse"), i.mouseUsed = !0, 
                    Da("mouseUsed")), Oa = setTimeout((function() {
                        Oa = null;
                    }), 100);
                }, Qa = function() {
                    e.bind(document, "keydown", f), N.transform && e.bind(f.scrollWrap, "click", f), 
                    i.mouseUsed || e.bind(document, "mousemove", Pa), e.bind(window, "resize scroll orientationchange", f), 
                    Da("bindEvents");
                }, Ra = function() {
                    e.unbind(window, "resize scroll orientationchange", f), e.unbind(window, "scroll", r.scroll), 
                    e.unbind(document, "keydown", f), e.unbind(document, "mousemove", Pa), N.transform && e.unbind(f.scrollWrap, "click", f), 
                    V && e.unbind(window, p, f), clearTimeout(O), Da("unbindEvents");
                }, Sa = function(a, b) {
                    var c = ic(f.currItem, qa, a);
                    return b && (da = c), c;
                }, Ta = function(a) {
                    return a || (a = f.currItem), a.initialZoomLevel;
                }, Ua = function(a) {
                    return a || (a = f.currItem), a.w > 0 ? i.maxSpreadZoom : 1;
                }, Va = function(a, b, c, d) {
                    return d === f.currItem.initialZoomLevel ? (c[a] = f.currItem.initialPosition[a], 
                    !0) : (c[a] = La(a, d), c[a] > b.min[a] ? (c[a] = b.min[a], !0) : c[a] < b.max[a] && (c[a] = b.max[a], 
                    !0));
                }, Wa = function() {
                    if (E) {
                        var b = N.perspective && !G;
                        return u = "translate" + (b ? "3d(" : "("), void (v = N.perspective ? ", 0px)" : ")");
                    }
                    E = "left", e.addClass(a, "pswp--ie"), Ja = function(a, b) {
                        b.left = a + "px";
                    }, Ia = function(a) {
                        var b = a.fitRatio > 1 ? 1 : a.fitRatio, c = a.container.style, d = b * a.w, e = b * a.h;
                        c.width = d + "px", c.height = e + "px", c.left = a.initialPosition.x + "px", c.top = a.initialPosition.y + "px";
                    }, Ha = function() {
                        if (ea) {
                            var a = ea, b = f.currItem, c = b.fitRatio > 1 ? 1 : b.fitRatio, d = c * b.w, e = c * b.h;
                            a.width = d + "px", a.height = e + "px", a.left = pa.x + "px", a.top = pa.y + "px";
                        }
                    };
                }, Xa = function(a) {
                    var b = "";
                    i.escKey && 27 === a.keyCode ? b = "close" : i.arrowKeys && (37 === a.keyCode ? b = "prev" : 39 === a.keyCode && (b = "next")), 
                    b && (a.ctrlKey || a.altKey || a.shiftKey || a.metaKey || (a.preventDefault ? a.preventDefault() : a.returnValue = !1, 
                    f[b]()));
                }, Ya = function(a) {
                    a && (Y || X || fa || T) && (a.preventDefault(), a.stopPropagation());
                }, Za = function() {
                    f.setScrollOffset(0, e.getScrollY());
                }, $a = {}, _a = 0, ab = function(a) {
                    $a[a] && ($a[a].raf && I($a[a].raf), _a--, delete $a[a]);
                }, bb = function(a) {
                    $a[a] && ab(a), $a[a] || (_a++, $a[a] = {});
                }, cb = function() {
                    for (var a in $a) $a.hasOwnProperty(a) && ab(a);
                }, db = function(a, b, c, d, e, f, g) {
                    var h, i = Ea();
                    bb(a);
                    var j = function() {
                        if ($a[a]) {
                            if (h = Ea() - i, h >= d) return ab(a), f(c), void (g && g());
                            f((c - b) * e(h / d) + b), $a[a].raf = H(j);
                        }
                    };
                    j();
                }, eb = {
                    shout: Da,
                    listen: Ca,
                    viewportSize: qa,
                    options: i,
                    isMainScrollAnimating: function() {
                        return fa;
                    },
                    getZoomLevel: function() {
                        return s;
                    },
                    getCurrentIndex: function() {
                        return m;
                    },
                    isDragging: function() {
                        return V;
                    },
                    isZooming: function() {
                        return aa;
                    },
                    setScrollOffset: function(a, b) {
                        sa.x = a, M = sa.y = b, Da("updateScrollOffset", sa);
                    },
                    applyZoomPan: function(a, b, c, d) {
                        pa.x = b, pa.y = c, s = a, Ha(d);
                    },
                    init: function() {
                        if (!j && !k) {
                            var c;
                            f.framework = e, f.template = a, f.bg = e.getChildByClass(a, "pswp__bg"), J = a.className, 
                            j = !0, N = e.detectFeatures(), H = N.raf, I = N.caf, E = N.transform, L = N.oldIE, 
                            f.scrollWrap = e.getChildByClass(a, "pswp__scroll-wrap"), f.container = e.getChildByClass(f.scrollWrap, "pswp__container"), 
                            n = f.container.style, f.itemHolders = y = [ {
                                el: f.container.children[0],
                                wrap: 0,
                                index: -1
                            }, {
                                el: f.container.children[1],
                                wrap: 0,
                                index: -1
                            }, {
                                el: f.container.children[2],
                                wrap: 0,
                                index: -1
                            } ], y[0].el.style.display = y[2].el.style.display = "none", Wa(), r = {
                                resize: f.updateSize,
                                orientationchange: function() {
                                    clearTimeout(O), O = setTimeout((function() {
                                        qa.x !== f.scrollWrap.clientWidth && f.updateSize();
                                    }), 500);
                                },
                                scroll: Za,
                                keydown: Xa,
                                click: Ya
                            };
                            var d = N.isOldIOSPhone || N.isOldAndroid || N.isMobileOpera;
                            for (N.animationName && N.transform && !d || (i.showAnimationDuration = i.hideAnimationDuration = 0), 
                            c = 0; c < wa.length; c++) f["init" + wa[c]]();
                            if (b) {
                                var g = f.ui = new b(f, e);
                                g.init();
                            }
                            Da("firstUpdate"), m = m || i.index || 0, (isNaN(m) || m < 0 || m >= ac()) && (m = 0), 
                            f.currItem = _b(m), (N.isOldIOSPhone || N.isOldAndroid) && (va = !1), a.setAttribute("aria-hidden", "false"), 
                            i.modal && (va ? a.style.position = "fixed" : (a.style.position = "absolute", a.style.top = e.getScrollY() + "px")), 
                            void 0 === M && (Da("initialLayout"), M = K = e.getScrollY());
                            var l = "pswp--open ";
                            for (i.mainClass && (l += i.mainClass + " "), i.showHideOpacity && (l += "pswp--animate_opacity "), 
                            l += G ? "pswp--touch" : "pswp--notouch", l += N.animationName ? " pswp--css_animation" : "", 
                            l += N.svg ? " pswp--svg" : "", e.addClass(a, l), f.updateSize(), o = -1, ua = null, 
                            c = 0; c < h; c++) Ja((c + o) * ta.x, y[c].el.style);
                            L || e.bind(f.scrollWrap, q, f), Ca("initialZoomInEnd", (function() {
                                f.setContent(y[0], m - 1), f.setContent(y[2], m + 1), y[0].el.style.display = y[2].el.style.display = "block", 
                                i.focus && a.focus(), Qa();
                            })), f.setContent(y[1], m), f.updateCurrItem(), Da("afterInit"), va || (w = setInterval((function() {
                                _a || V || aa || s !== f.currItem.initialZoomLevel || f.updateSize();
                            }), 1e3)), e.addClass(a, "pswp--visible");
                        }
                    },
                    close: function() {
                        j && (j = !1, k = !0, Da("close"), Ra(), cc(f.currItem, null, !0, f.destroy));
                    },
                    destroy: function() {
                        Da("destroy"), Xb && clearTimeout(Xb), a.setAttribute("aria-hidden", "true"), a.className = J, 
                        w && clearInterval(w), e.unbind(f.scrollWrap, q, f), e.unbind(window, "scroll", f), 
                        zb(), cb(), Ba = null;
                    },
                    panTo: function(a, b, c) {
                        c || (a > da.min.x ? a = da.min.x : a < da.max.x && (a = da.max.x), b > da.min.y ? b = da.min.y : b < da.max.y && (b = da.max.y)), 
                        pa.x = a, pa.y = b, Ha();
                    },
                    handleEvent: function(a) {
                        a = a || window.event, r[a.type] && r[a.type](a);
                    },
                    goTo: function(a) {
                        a = Aa(a);
                        var b = a - m;
                        ua = b, m = a, f.currItem = _b(m), ra -= b, Ka(ta.x * ra), cb(), fa = !1, f.updateCurrItem();
                    },
                    next: function() {
                        f.goTo(m + 1);
                    },
                    prev: function() {
                        f.goTo(m - 1);
                    },
                    updateCurrZoomItem: function(a) {
                        if (a && Da("beforeChange", 0), y[1].el.children.length) {
                            var b = y[1].el.children[0];
                            ea = e.hasClass(b, "pswp__zoom-wrap") ? b.style : null;
                        } else ea = null;
                        da = f.currItem.bounds, t = s = f.currItem.initialZoomLevel, pa.x = da.center.x, 
                        pa.y = da.center.y, a && Da("afterChange");
                    },
                    invalidateCurrItems: function() {
                        x = !0;
                        for (var a = 0; a < h; a++) y[a].item && (y[a].item.needsUpdate = !0);
                    },
                    updateCurrItem: function(a) {
                        if (0 !== ua) {
                            var b, c = Math.abs(ua);
                            if (!(a && c < 2)) {
                                f.currItem = _b(m), ya = !1, Da("beforeChange", ua), c >= h && (o += ua + (ua > 0 ? -h : h), 
                                c = h);
                                for (var d = 0; d < c; d++) ua > 0 ? (b = y.shift(), y[h - 1] = b, o++, Ja((o + 2) * ta.x, b.el.style), 
                                f.setContent(b, m - c + d + 1 + 1)) : (b = y.pop(), y.unshift(b), o--, Ja(o * ta.x, b.el.style), 
                                f.setContent(b, m + c - d - 1 - 1));
                                if (ea && 1 === Math.abs(ua)) {
                                    var e = _b(z);
                                    e.initialZoomLevel !== s && (ic(e, qa), mc(e), Ia(e));
                                }
                                ua = 0, f.updateCurrZoomItem(), z = m, Da("afterChange");
                            }
                        }
                    },
                    updateSize: function(b) {
                        if (!va && i.modal) {
                            var c = e.getScrollY();
                            if (M !== c && (a.style.top = c + "px", M = c), !b && xa.x === window.innerWidth && xa.y === window.innerHeight) return;
                            xa.x = window.innerWidth, xa.y = window.innerHeight, a.style.height = xa.y + "px";
                        }
                        if (qa.x = f.scrollWrap.clientWidth, qa.y = f.scrollWrap.clientHeight, Za(), ta.x = qa.x + Math.round(qa.x * i.spacing), 
                        ta.y = qa.y, Ka(ta.x * ra), Da("beforeResize"), void 0 !== o) {
                            for (var d, g, j, k = 0; k < h; k++) d = y[k], Ja((k + o) * ta.x, d.el.style), j = m + k - 1, 
                            i.loop && ac() > 2 && (j = Aa(j)), g = _b(j), g && (x || g.needsUpdate || !g.bounds) ? (f.cleanSlide(g), 
                            f.setContent(d, j), 1 === k && (f.currItem = g, f.updateCurrZoomItem(!0)), g.needsUpdate = !1) : -1 === d.index && j >= 0 && f.setContent(d, j), 
                            g && g.container && (ic(g, qa), mc(g), Ia(g));
                            x = !1;
                        }
                        t = s = f.currItem.initialZoomLevel, da = f.currItem.bounds, da && (pa.x = da.center.x, 
                        pa.y = da.center.y, Ha(!0)), Da("resize");
                    },
                    zoomTo: function(a, b, c, d, f) {
                        b && (t = s, ub.x = Math.abs(b.x) - pa.x, ub.y = Math.abs(b.y) - pa.y, Ma(oa, pa));
                        var g = Sa(a, !1), h = {};
                        Va("x", g, h, a), Va("y", g, h, a);
                        var i = s, j = {
                            x: pa.x,
                            y: pa.y
                        };
                        Na(h);
                        var k = function(b) {
                            1 === b ? (s = a, pa.x = h.x, pa.y = h.y) : (s = (a - i) * b + i, pa.x = (h.x - j.x) * b + j.x, 
                            pa.y = (h.y - j.y) * b + j.y), f && f(b), Ha(1 === b);
                        };
                        c ? db("customZoomTo", 0, 1, c, d || e.easing.sine.inOut, k) : k(1);
                    }
                }, fb = 30, gb = 10, hb = {}, ib = {}, jb = {}, kb = {}, lb = {}, mb = [], nb = {}, ob = [], pb = {}, qb = 0, rb = ma(), sb = 0, tb = ma(), ub = ma(), vb = ma(), wb = function(a, b) {
                    return a.x === b.x && a.y === b.y;
                }, xb = function(a, b) {
                    return Math.abs(a.x - b.x) < g && Math.abs(a.y - b.y) < g;
                }, yb = function(a, b) {
                    return pb.x = Math.abs(a.x - b.x), pb.y = Math.abs(a.y - b.y), Math.sqrt(pb.x * pb.x + pb.y * pb.y);
                }, zb = function() {
                    Z && (I(Z), Z = null);
                }, Ab = function() {
                    V && (Z = H(Ab), Qb());
                }, Bb = function() {
                    return !("fit" === i.scaleMode && s === f.currItem.initialZoomLevel);
                }, Cb = function(a, b) {
                    return !(!a || a === document) && !(a.getAttribute("class") && a.getAttribute("class").indexOf("pswp__scroll-wrap") > -1) && (b(a) ? a : Cb(a.parentNode, b));
                }, Db = {}, Eb = function(a, b) {
                    return Db.prevent = !Cb(a.target, i.isClickableElement), Da("preventDragEvent", a, b, Db), 
                    Db.prevent;
                }, Fb = function(a, b) {
                    return b.x = a.pageX, b.y = a.pageY, b.id = a.identifier, b;
                }, Gb = function(a, b, c) {
                    c.x = .5 * (a.x + b.x), c.y = .5 * (a.y + b.y);
                }, Hb = function(a, b, c) {
                    if (a - Q > 50) {
                        var d = ob.length > 2 ? ob.shift() : {};
                        d.x = b, d.y = c, ob.push(d), Q = a;
                    }
                }, Ib = function() {
                    var a = pa.y - f.currItem.initialPosition.y;
                    return 1 - Math.abs(a / (qa.y / 2));
                }, Jb = {}, Kb = {}, Lb = [], Mb = function(a) {
                    for (;Lb.length > 0; ) Lb.pop();
                    return F ? (la = 0, mb.forEach((function(a) {
                        0 === la ? Lb[0] = a : 1 === la && (Lb[1] = a), la++;
                    }))) : a.type.indexOf("touch") > -1 ? a.touches && a.touches.length > 0 && (Lb[0] = Fb(a.touches[0], Jb), 
                    a.touches.length > 1 && (Lb[1] = Fb(a.touches[1], Kb))) : (Jb.x = a.pageX, Jb.y = a.pageY, 
                    Jb.id = "", Lb[0] = Jb), Lb;
                }, Nb = function(a, b) {
                    var c, d, e, g, j = pa[a] + b[a], k = b[a] > 0, l = tb.x + b.x, m = tb.x - nb.x;
                    return c = j > da.min[a] || j < da.max[a] ? i.panEndFriction : 1, j = pa[a] + b[a] * c, 
                    !i.allowPanToNext && s !== f.currItem.initialZoomLevel || (ea ? "h" !== ga || "x" !== a || X || (k ? (j > da.min[a] && (c = i.panEndFriction, 
                    da.min[a] - j, d = da.min[a] - oa[a]), (d <= 0 || m < 0) && ac() > 1 ? (g = l, m < 0 && l > nb.x && (g = nb.x)) : da.min.x !== da.max.x && (e = j)) : (j < da.max[a] && (c = i.panEndFriction, 
                    j - da.max[a], d = oa[a] - da.max[a]), (d <= 0 || m > 0) && ac() > 1 ? (g = l, m > 0 && l < nb.x && (g = nb.x)) : da.min.x !== da.max.x && (e = j))) : g = l, 
                    "x" !== a) ? void (fa || $ || s > f.currItem.fitRatio && (pa[a] += b[a] * c)) : (void 0 !== g && (Ka(g, !0), 
                    $ = g !== nb.x), da.min.x !== da.max.x && (void 0 !== e ? pa.x = e : $ || (pa.x += b.x * c)), 
                    void 0 !== g);
                }, Ob = function(a) {
                    if (!("mousedown" === a.type && a.button > 0)) {
                        if ($b) return void a.preventDefault();
                        if (!U || "mousedown" !== a.type) {
                            if (Eb(a, !0) && a.preventDefault(), Da("pointerDown"), F) {
                                var b = e.arraySearch(mb, a.pointerId, "id");
                                b < 0 && (b = mb.length), mb[b] = {
                                    x: a.pageX,
                                    y: a.pageY,
                                    id: a.pointerId
                                };
                            }
                            var c = Mb(a), d = c.length;
                            _ = null, cb(), V && 1 !== d || (V = ha = !0, e.bind(window, p, f), S = ka = ia = T = $ = Y = W = X = !1, 
                            ga = null, Da("firstTouchStart", c), Ma(oa, pa), na.x = na.y = 0, Ma(kb, c[0]), 
                            Ma(lb, kb), nb.x = ta.x * ra, ob = [ {
                                x: kb.x,
                                y: kb.y
                            } ], Q = P = Ea(), Sa(s, !0), zb(), Ab()), !aa && d > 1 && !fa && !$ && (t = s, 
                            X = !1, aa = W = !0, na.y = na.x = 0, Ma(oa, pa), Ma(hb, c[0]), Ma(ib, c[1]), Gb(hb, ib, vb), 
                            ub.x = Math.abs(vb.x) - pa.x, ub.y = Math.abs(vb.y) - pa.y, ca = yb(hb, ib));
                        }
                    }
                }, Pb = function(a) {
                    if (a.preventDefault(), F) {
                        var b = e.arraySearch(mb, a.pointerId, "id");
                        if (b > -1) {
                            var c = mb[b];
                            c.x = a.pageX, c.y = a.pageY;
                        }
                    }
                    if (V) {
                        var d = Mb(a);
                        if (ga || Y || aa) _ = d; else if (tb.x !== ta.x * ra) ga = "h"; else {
                            var f = Math.abs(d[0].x - kb.x) - Math.abs(d[0].y - kb.y);
                            Math.abs(f) >= gb && (ga = f > 0 ? "h" : "v", _ = d);
                        }
                    }
                }, Qb = function() {
                    if (_) {
                        var a = _.length;
                        if (0 !== a) if (Ma(hb, _[0]), jb.x = hb.x - kb.x, jb.y = hb.y - kb.y, aa && a > 1) {
                            if (kb.x = hb.x, kb.y = hb.y, !jb.x && !jb.y && wb(_[1], ib)) return;
                            Ma(ib, _[1]), X || (X = !0, Da("zoomGestureStarted"));
                            var b = yb(hb, ib), c = Vb(b);
                            c > f.currItem.initialZoomLevel + f.currItem.initialZoomLevel / 15 && (ka = !0);
                            var d = 1, e = Ta(), g = Ua();
                            if (c < e) if (i.pinchToClose && !ka && t <= f.currItem.initialZoomLevel) {
                                var h = e - c, j = 1 - h / (e / 1.2);
                                Fa(j), Da("onPinchClose", j), ia = !0;
                            } else d = (e - c) / e, d > 1 && (d = 1), c = e - d * (e / 3); else c > g && (d = (c - g) / (6 * e), 
                            d > 1 && (d = 1), c = g + d * e);
                            d < 0 && (d = 0), b, Gb(hb, ib, rb), na.x += rb.x - vb.x, na.y += rb.y - vb.y, Ma(vb, rb), 
                            pa.x = La("x", c), pa.y = La("y", c), S = c > s, s = c, Ha();
                        } else {
                            if (!ga) return;
                            if (ha && (ha = !1, Math.abs(jb.x) >= gb && (jb.x -= _[0].x - lb.x), Math.abs(jb.y) >= gb && (jb.y -= _[0].y - lb.y)), 
                            kb.x = hb.x, kb.y = hb.y, 0 === jb.x && 0 === jb.y) return;
                            if ("v" === ga && i.closeOnVerticalDrag && !Bb()) {
                                na.y += jb.y, pa.y += jb.y;
                                var k = Ib();
                                return T = !0, Da("onVerticalDrag", k), Fa(k), void Ha();
                            }
                            Hb(Ea(), hb.x, hb.y), Y = !0, da = f.currItem.bounds;
                            var l = Nb("x", jb);
                            l || (Nb("y", jb), Na(pa), Ha());
                        }
                    }
                }, Rb = function(a) {
                    if (N.isOldAndroid) {
                        if (U && "mouseup" === a.type) return;
                        a.type.indexOf("touch") > -1 && (clearTimeout(U), U = setTimeout((function() {
                            U = 0;
                        }), 600));
                    }
                    Da("pointerUp"), Eb(a, !1) && a.preventDefault();
                    var b;
                    if (F) {
                        var c = e.arraySearch(mb, a.pointerId, "id");
                        if (c > -1) if (b = mb.splice(c, 1)[0], navigator.msPointerEnabled) {
                            var d = {
                                4: "mouse",
                                2: "touch",
                                3: "pen"
                            };
                            b.type = d[a.pointerType], b.type || (b.type = a.pointerType || "mouse");
                        } else b.type = a.pointerType || "mouse";
                    }
                    var g, h = Mb(a), j = h.length;
                    if ("mouseup" === a.type && (j = 0), 2 === j) return _ = null, !0;
                    1 === j && Ma(lb, h[0]), 0 !== j || ga || fa || (b || ("mouseup" === a.type ? b = {
                        x: a.pageX,
                        y: a.pageY,
                        type: "mouse"
                    } : a.changedTouches && a.changedTouches[0] && (b = {
                        x: a.changedTouches[0].pageX,
                        y: a.changedTouches[0].pageY,
                        type: "touch"
                    })), Da("touchRelease", a, b));
                    var k = -1;
                    if (0 === j && (V = !1, e.unbind(window, p, f), zb(), aa ? k = 0 : -1 !== sb && (k = Ea() - sb)), 
                    sb = 1 === j ? Ea() : -1, g = -1 !== k && k < 150 ? "zoom" : "swipe", aa && j < 2 && (aa = !1, 
                    1 === j && (g = "zoomPointerUp"), Da("zoomGestureEnded")), _ = null, Y || X || fa || T) if (cb(), 
                    R || (R = Sb()), R.calculateSwipeSpeed("x"), T) {
                        var l = Ib();
                        if (l < i.verticalDragRange) f.close(); else {
                            var m = pa.y, n = ja;
                            db("verticalDrag", 0, 1, 300, e.easing.cubic.out, (function(a) {
                                pa.y = (f.currItem.initialPosition.y - m) * a + m, Fa((1 - n) * a + n), Ha();
                            })), Da("onVerticalDrag", 1);
                        }
                    } else {
                        if (($ || fa) && 0 === j) {
                            var o = Ub(g, R);
                            if (o) return;
                            g = "zoomPointerUp";
                        }
                        if (!fa) return "swipe" !== g ? void Wb() : void (!$ && s > f.currItem.fitRatio && Tb(R));
                    }
                }, Sb = function() {
                    var a, b, c = {
                        lastFlickOffset: {},
                        lastFlickDist: {},
                        lastFlickSpeed: {},
                        slowDownRatio: {},
                        slowDownRatioReverse: {},
                        speedDecelerationRatio: {},
                        speedDecelerationRatioAbs: {},
                        distanceOffset: {},
                        backAnimDestination: {},
                        backAnimStarted: {},
                        calculateSwipeSpeed: function(d) {
                            ob.length > 1 ? (a = Ea() - Q + 50, b = ob[ob.length - 2][d]) : (a = Ea() - P, b = lb[d]), 
                            c.lastFlickOffset[d] = kb[d] - b, c.lastFlickDist[d] = Math.abs(c.lastFlickOffset[d]), 
                            c.lastFlickDist[d] > 20 ? c.lastFlickSpeed[d] = c.lastFlickOffset[d] / a : c.lastFlickSpeed[d] = 0, 
                            Math.abs(c.lastFlickSpeed[d]) < .1 && (c.lastFlickSpeed[d] = 0), c.slowDownRatio[d] = .95, 
                            c.slowDownRatioReverse[d] = 1 - c.slowDownRatio[d], c.speedDecelerationRatio[d] = 1;
                        },
                        calculateOverBoundsAnimOffset: function(a, b) {
                            c.backAnimStarted[a] || (pa[a] > da.min[a] ? c.backAnimDestination[a] = da.min[a] : pa[a] < da.max[a] && (c.backAnimDestination[a] = da.max[a]), 
                            void 0 !== c.backAnimDestination[a] && (c.slowDownRatio[a] = .7, c.slowDownRatioReverse[a] = 1 - c.slowDownRatio[a], 
                            c.speedDecelerationRatioAbs[a] < .05 && (c.lastFlickSpeed[a] = 0, c.backAnimStarted[a] = !0, 
                            db("bounceZoomPan" + a, pa[a], c.backAnimDestination[a], b || 300, e.easing.sine.out, (function(b) {
                                pa[a] = b, Ha();
                            })))));
                        },
                        calculateAnimOffset: function(a) {
                            c.backAnimStarted[a] || (c.speedDecelerationRatio[a] = c.speedDecelerationRatio[a] * (c.slowDownRatio[a] + c.slowDownRatioReverse[a] - c.slowDownRatioReverse[a] * c.timeDiff / 10), 
                            c.speedDecelerationRatioAbs[a] = Math.abs(c.lastFlickSpeed[a] * c.speedDecelerationRatio[a]), 
                            c.distanceOffset[a] = c.lastFlickSpeed[a] * c.speedDecelerationRatio[a] * c.timeDiff, 
                            pa[a] += c.distanceOffset[a]);
                        },
                        panAnimLoop: function() {
                            if ($a.zoomPan && ($a.zoomPan.raf = H(c.panAnimLoop), c.now = Ea(), c.timeDiff = c.now - c.lastNow, 
                            c.lastNow = c.now, c.calculateAnimOffset("x"), c.calculateAnimOffset("y"), Ha(), 
                            c.calculateOverBoundsAnimOffset("x"), c.calculateOverBoundsAnimOffset("y"), c.speedDecelerationRatioAbs.x < .05 && c.speedDecelerationRatioAbs.y < .05)) return pa.x = Math.round(pa.x), 
                            pa.y = Math.round(pa.y), Ha(), void ab("zoomPan");
                        }
                    };
                    return c;
                }, Tb = function(a) {
                    return a.calculateSwipeSpeed("y"), da = f.currItem.bounds, a.backAnimDestination = {}, 
                    a.backAnimStarted = {}, Math.abs(a.lastFlickSpeed.x) <= .05 && Math.abs(a.lastFlickSpeed.y) <= .05 ? (a.speedDecelerationRatioAbs.x = a.speedDecelerationRatioAbs.y = 0, 
                    a.calculateOverBoundsAnimOffset("x"), a.calculateOverBoundsAnimOffset("y"), !0) : (bb("zoomPan"), 
                    a.lastNow = Ea(), void a.panAnimLoop());
                }, Ub = function(a, b) {
                    var c;
                    fa || (qb = m);
                    var d;
                    if ("swipe" === a) {
                        var g = kb.x - lb.x, h = b.lastFlickDist.x < 10;
                        g > fb && (h || b.lastFlickOffset.x > 20) ? d = -1 : g < -fb && (h || b.lastFlickOffset.x < -20) && (d = 1);
                    }
                    var j;
                    d && (m += d, m < 0 ? (m = i.loop ? ac() - 1 : 0, j = !0) : m >= ac() && (m = i.loop ? 0 : ac() - 1, 
                    j = !0), j && !i.loop || (ua += d, ra -= d, c = !0));
                    var k, l = ta.x * ra, n = Math.abs(l - tb.x);
                    return c || l > tb.x == b.lastFlickSpeed.x > 0 ? (k = Math.abs(b.lastFlickSpeed.x) > 0 ? n / Math.abs(b.lastFlickSpeed.x) : 333, 
                    k = Math.min(k, 400), k = Math.max(k, 250)) : k = 333, qb === m && (c = !1), fa = !0, 
                    Da("mainScrollAnimStart"), db("mainScroll", tb.x, l, k, e.easing.cubic.out, Ka, (function() {
                        cb(), fa = !1, qb = -1, (c || qb !== m) && f.updateCurrItem(), Da("mainScrollAnimComplete");
                    })), c && f.updateCurrItem(!0), c;
                }, Vb = function(a) {
                    return 1 / ca * a * t;
                }, Wb = function() {
                    var a = s, b = Ta(), c = Ua();
                    s < b ? a = b : s > c && (a = c);
                    var d, g = 1, h = ja;
                    return ia && !S && !ka && s < b ? (f.close(), !0) : (ia && (d = function(a) {
                        Fa((g - h) * a + h);
                    }), f.zoomTo(a, 0, 200, e.easing.cubic.out, d), !0);
                };
                za("Gestures", {
                    publicMethods: {
                        initGestures: function() {
                            var a = function(a, b, c, d, e) {
                                A = a + b, B = a + c, C = a + d, D = e ? a + e : "";
                            };
                            F = N.pointerEvent, F && N.touch && (N.touch = !1), F ? navigator.msPointerEnabled ? a("MSPointer", "Down", "Move", "Up", "Cancel") : a("pointer", "down", "move", "up", "cancel") : N.touch ? (a("touch", "start", "move", "end", "cancel"), 
                            G = !0) : a("mouse", "down", "move", "up"), p = B + " " + C + " " + D, q = A, F && !G && (G = navigator.maxTouchPoints > 1 || navigator.msMaxTouchPoints > 1), 
                            f.likelyTouchDevice = G, r[A] = Ob, r[B] = Pb, r[C] = Rb, D && (r[D] = r[C]), N.touch && (q += " mousedown", 
                            p += " mousemove mouseup", r.mousedown = r[A], r.mousemove = r[B], r.mouseup = r[C]), 
                            G || (i.allowPanToNext = !1);
                        }
                    }
                });
                var Xb, Yb, Zb, $b, _b, ac, cc = function(b, c, d, g) {
                    Xb && clearTimeout(Xb), $b = !0, Zb = !0;
                    var h;
                    b.initialLayout ? (h = b.initialLayout, b.initialLayout = null) : h = i.getThumbBoundsFn && i.getThumbBoundsFn(m);
                    var j = d ? i.hideAnimationDuration : i.showAnimationDuration, k = function() {
                        ab("initialZoom"), d ? (f.template.removeAttribute("style"), f.bg.removeAttribute("style")) : (Fa(1), 
                        c && (c.style.display = "block"), e.addClass(a, "pswp--animated-in"), Da("initialZoom" + (d ? "OutEnd" : "InEnd"))), 
                        g && g(), $b = !1;
                    };
                    if (!j || !h || void 0 === h.x) return Da("initialZoom" + (d ? "Out" : "In")), s = b.initialZoomLevel, 
                    Ma(pa, b.initialPosition), Ha(), a.style.opacity = d ? 0 : 1, Fa(1), void (j ? setTimeout((function() {
                        k();
                    }), j) : k());
                    var n = function() {
                        var c = l, g = !f.currItem.src || f.currItem.loadError || i.showHideOpacity;
                        b.miniImg && (b.miniImg.style.webkitBackfaceVisibility = "hidden"), d || (s = h.w / b.w, 
                        pa.x = h.x, pa.y = h.y - K, f[g ? "template" : "bg"].style.opacity = .001, Ha()), 
                        bb("initialZoom"), d && !c && e.removeClass(a, "pswp--animated-in"), g && (d ? e[(c ? "remove" : "add") + "Class"](a, "pswp--animate_opacity") : setTimeout((function() {
                            e.addClass(a, "pswp--animate_opacity");
                        }), 30)), Xb = setTimeout((function() {
                            if (Da("initialZoom" + (d ? "Out" : "In")), d) {
                                var f = h.w / b.w, i = {
                                    x: pa.x,
                                    y: pa.y
                                }, l = s, m = ja, n = function(b) {
                                    1 === b ? (s = f, pa.x = h.x, pa.y = h.y - M) : (s = (f - l) * b + l, pa.x = (h.x - i.x) * b + i.x, 
                                    pa.y = (h.y - M - i.y) * b + i.y), Ha(), g ? a.style.opacity = 1 - b : Fa(m - b * m);
                                };
                                c ? db("initialZoom", 0, 1, j, e.easing.cubic.out, n, k) : (n(1), Xb = setTimeout(k, j + 20));
                            } else s = b.initialZoomLevel, Ma(pa, b.initialPosition), Ha(), Fa(1), g ? a.style.opacity = 1 : Fa(1), 
                            Xb = setTimeout(k, j + 20);
                        }), d ? 25 : 90);
                    };
                    n();
                }, dc = {}, ec = [], fc = {
                    index: 0,
                    errorMsg: '<div class="pswp__error-msg"><a href="%url%" target="_blank">The image</a> could not be loaded.</div>',
                    forceProgressiveLoading: !1,
                    preload: [ 1, 1 ],
                    getNumItemsFn: function() {
                        return Yb.length;
                    }
                }, gc = function() {
                    return {
                        center: {
                            x: 0,
                            y: 0
                        },
                        max: {
                            x: 0,
                            y: 0
                        },
                        min: {
                            x: 0,
                            y: 0
                        }
                    };
                }, hc = function(a, b, c) {
                    var d = a.bounds;
                    d.center.x = Math.round((dc.x - b) / 2), d.center.y = Math.round((dc.y - c) / 2) + a.vGap.top, 
                    d.max.x = b > dc.x ? Math.round(dc.x - b) : d.center.x, d.max.y = c > dc.y ? Math.round(dc.y - c) + a.vGap.top : d.center.y, 
                    d.min.x = b > dc.x ? 0 : d.center.x, d.min.y = c > dc.y ? a.vGap.top : d.center.y;
                }, ic = function(a, b, c) {
                    if (a.src && !a.loadError) {
                        var d = !c;
                        if (d && (a.vGap || (a.vGap = {
                            top: 0,
                            bottom: 0
                        }), Da("parseVerticalMargin", a)), dc.x = b.x, dc.y = b.y - a.vGap.top - a.vGap.bottom, 
                        d) {
                            var e = dc.x / a.w, f = dc.y / a.h;
                            a.fitRatio = e < f ? e : f;
                            var g = i.scaleMode;
                            "orig" === g ? c = 1 : "fit" === g && (c = a.fitRatio), c > 1 && (c = 1), a.initialZoomLevel = c, 
                            a.bounds || (a.bounds = gc());
                        }
                        if (!c) return;
                        return hc(a, a.w * c, a.h * c), d && c === a.initialZoomLevel && (a.initialPosition = a.bounds.center), 
                        a.bounds;
                    }
                    return a.w = a.h = 0, a.initialZoomLevel = a.fitRatio = 1, a.bounds = gc(), a.initialPosition = a.bounds.center, 
                    a.bounds;
                }, jc = function(a, b, c, d, e, g) {
                    b.loadError || d && (b.imageAppended = !0, mc(b, d, b === f.currItem && ya), c.appendChild(d), 
                    g && setTimeout((function() {
                        b && b.loaded && b.placeholder && (b.placeholder.style.display = "none", b.placeholder = null);
                    }), 500));
                }, kc = function(a) {
                    a.loading = !0, a.loaded = !1;
                    var b = a.img = e.createEl("pswp__img", "img"), c = function() {
                        a.loading = !1, a.loaded = !0, a.loadComplete ? a.loadComplete(a) : a.img = null, 
                        b.onload = b.onerror = null, b = null;
                    };
                    return b.onload = c, b.onerror = function() {
                        a.loadError = !0, c();
                    }, b.src = a.src, b;
                }, lc = function(a, b) {
                    if (a.src && a.loadError && a.container) return b && (a.container.innerHTML = ""), 
                    a.container.innerHTML = i.errorMsg.replace("%url%", a.src), !0;
                }, mc = function(a, b, c) {
                    if (a.src) {
                        b || (b = a.container.lastChild);
                        var d = c ? a.w : Math.round(a.w * a.fitRatio), e = c ? a.h : Math.round(a.h * a.fitRatio);
                        a.placeholder && !a.loaded && (a.placeholder.style.width = d + "px", a.placeholder.style.height = e + "px"), 
                        b.style.width = d + "px", b.style.height = e + "px";
                    }
                }, nc = function() {
                    if (ec.length) {
                        for (var a, b = 0; b < ec.length; b++) a = ec[b], a.holder.index === a.index && jc(a.index, a.item, a.baseDiv, a.img, !1, a.clearPlaceholder);
                        ec = [];
                    }
                };
                za("Controller", {
                    publicMethods: {
                        lazyLoadItem: function(a) {
                            a = Aa(a);
                            var b = _b(a);
                            b && (!b.loaded && !b.loading || x) && (Da("gettingData", a, b), b.src && kc(b));
                        },
                        initController: function() {
                            e.extend(i, fc, !0), f.items = Yb = c, _b = f.getItemAt, ac = i.getNumItemsFn, i.loop, 
                            ac() < 3 && (i.loop = !1), Ca("beforeChange", (function(a) {
                                var b, c = i.preload, d = null === a || a >= 0, e = Math.min(c[0], ac()), g = Math.min(c[1], ac());
                                for (b = 1; b <= (d ? g : e); b++) f.lazyLoadItem(m + b);
                                for (b = 1; b <= (d ? e : g); b++) f.lazyLoadItem(m - b);
                            })), Ca("initialLayout", (function() {
                                f.currItem.initialLayout = i.getThumbBoundsFn && i.getThumbBoundsFn(m);
                            })), Ca("mainScrollAnimComplete", nc), Ca("initialZoomInEnd", nc), Ca("destroy", (function() {
                                for (var a, b = 0; b < Yb.length; b++) a = Yb[b], a.container && (a.container = null), 
                                a.placeholder && (a.placeholder = null), a.img && (a.img = null), a.preloader && (a.preloader = null), 
                                a.loadError && (a.loaded = a.loadError = !1);
                                ec = null;
                            }));
                        },
                        getItemAt: function(a) {
                            return a >= 0 && void 0 !== Yb[a] && Yb[a];
                        },
                        allowProgressiveImg: function() {
                            return i.forceProgressiveLoading || !G || i.mouseUsed || screen.width > 1200;
                        },
                        setContent: function(a, b) {
                            i.loop && (b = Aa(b));
                            var c = f.getItemAt(a.index);
                            c && (c.container = null);
                            var d, g = f.getItemAt(b);
                            if (!g) return void (a.el.innerHTML = "");
                            Da("gettingData", b, g), a.index = b, a.item = g;
                            var h = g.container = e.createEl("pswp__zoom-wrap");
                            if (!g.src && g.html && (g.html.tagName ? h.appendChild(g.html) : h.innerHTML = g.html), 
                            lc(g), ic(g, qa), !g.src || g.loadError || g.loaded) g.src && !g.loadError && (d = e.createEl("pswp__img", "img"), 
                            d.style.opacity = 1, d.src = g.src, mc(g, d), jc(b, g, h, d, !0)); else {
                                if (g.loadComplete = function(c) {
                                    if (j) {
                                        if (a && a.index === b) {
                                            if (lc(c, !0)) return c.loadComplete = c.img = null, ic(c, qa), Ia(c), void (a.index === m && f.updateCurrZoomItem());
                                            c.imageAppended ? !$b && c.placeholder && (c.placeholder.style.display = "none", 
                                            c.placeholder = null) : N.transform && (fa || $b) ? ec.push({
                                                item: c,
                                                baseDiv: h,
                                                img: c.img,
                                                index: b,
                                                holder: a,
                                                clearPlaceholder: !0
                                            }) : jc(b, c, h, c.img, fa || $b, !0);
                                        }
                                        c.loadComplete = null, c.img = null, Da("imageLoadComplete", b, c);
                                    }
                                }, e.features.transform) {
                                    var k = "pswp__img pswp__img--placeholder";
                                    k += g.msrc ? "" : " pswp__img--placeholder--blank";
                                    var l = e.createEl(k, g.msrc ? "img" : "");
                                    g.msrc && (l.src = g.msrc), mc(g, l), h.appendChild(l), g.placeholder = l;
                                }
                                g.loading || kc(g), f.allowProgressiveImg() && (!Zb && N.transform ? ec.push({
                                    item: g,
                                    baseDiv: h,
                                    img: g.img,
                                    index: b,
                                    holder: a
                                }) : jc(b, g, h, g.img, !0, !0));
                            }
                            Zb || b !== m ? Ia(g) : (ea = h.style, cc(g, d || g.img)), a.el.innerHTML = "", 
                            a.el.appendChild(h);
                        },
                        cleanSlide: function(a) {
                            a.img && (a.img.onload = a.img.onerror = null), a.loaded = a.loading = a.img = a.imageAppended = !1;
                        }
                    }
                });
                var oc, pc = {}, qc = function(a, b, c) {
                    var d = document.createEvent("CustomEvent"), e = {
                        origEvent: a,
                        target: a.target,
                        releasePoint: b,
                        pointerType: c || "touch"
                    };
                    d.initCustomEvent("pswpTap", !0, !0, e), a.target.dispatchEvent(d);
                };
                za("Tap", {
                    publicMethods: {
                        initTap: function() {
                            Ca("firstTouchStart", f.onTapStart), Ca("touchRelease", f.onTapRelease), Ca("destroy", (function() {
                                pc = {}, oc = null;
                            }));
                        },
                        onTapStart: function(a) {
                            a.length > 1 && (clearTimeout(oc), oc = null);
                        },
                        onTapRelease: function(a, b) {
                            if (b && !Y && !W && !_a) {
                                var c = b;
                                if (oc && (clearTimeout(oc), oc = null, xb(c, pc))) return void Da("doubleTap", c);
                                if ("mouse" === b.type) return void qc(a, b, "mouse");
                                var d = a.target.tagName.toUpperCase();
                                if ("BUTTON" === d || e.hasClass(a.target, "pswp__single-tap")) return void qc(a, b);
                                Ma(pc, c), oc = setTimeout((function() {
                                    qc(a, b), oc = null;
                                }), 300);
                            }
                        }
                    }
                });
                var rc;
                za("DesktopZoom", {
                    publicMethods: {
                        initDesktopZoom: function() {
                            L || (G ? Ca("mouseUsed", (function() {
                                f.setupDesktopZoom();
                            })) : f.setupDesktopZoom(!0));
                        },
                        setupDesktopZoom: function(b) {
                            rc = {};
                            var c = "wheel mousewheel DOMMouseScroll";
                            Ca("bindEvents", (function() {
                                e.bind(a, c, f.handleMouseWheel);
                            })), Ca("unbindEvents", (function() {
                                rc && e.unbind(a, c, f.handleMouseWheel);
                            })), f.mouseZoomedIn = !1;
                            var d, g = function() {
                                f.mouseZoomedIn && (e.removeClass(a, "pswp--zoomed-in"), f.mouseZoomedIn = !1), 
                                s < 1 ? e.addClass(a, "pswp--zoom-allowed") : e.removeClass(a, "pswp--zoom-allowed"), 
                                h();
                            }, h = function() {
                                d && (e.removeClass(a, "pswp--dragging"), d = !1);
                            };
                            Ca("resize", g), Ca("afterChange", g), Ca("pointerDown", (function() {
                                f.mouseZoomedIn && (d = !0, e.addClass(a, "pswp--dragging"));
                            })), Ca("pointerUp", h), b || g();
                        },
                        handleMouseWheel: function(a) {
                            if (s <= f.currItem.fitRatio) return i.modal && (!i.closeOnScroll || _a || V ? a.preventDefault() : E && Math.abs(a.deltaY) > 2 && (l = !0, 
                            f.close())), !0;
                            if (a.stopPropagation(), rc.x = 0, "deltaX" in a) 1 === a.deltaMode ? (rc.x = 18 * a.deltaX, 
                            rc.y = 18 * a.deltaY) : (rc.x = a.deltaX, rc.y = a.deltaY); else if ("wheelDelta" in a) a.wheelDeltaX && (rc.x = -.16 * a.wheelDeltaX), 
                            a.wheelDeltaY ? rc.y = -.16 * a.wheelDeltaY : rc.y = -.16 * a.wheelDelta; else {
                                if (!("detail" in a)) return;
                                rc.y = a.detail;
                            }
                            Sa(s, !0);
                            var b = pa.x - rc.x, c = pa.y - rc.y;
                            (i.modal || b <= da.min.x && b >= da.max.x && c <= da.min.y && c >= da.max.y) && a.preventDefault(), 
                            f.panTo(b, c);
                        },
                        toggleDesktopZoom: function(b) {
                            b = b || {
                                x: qa.x / 2 + sa.x,
                                y: qa.y / 2 + sa.y
                            };
                            var c = i.getDoubleTapZoom(!0, f.currItem), d = s === c;
                            f.mouseZoomedIn = !d, f.zoomTo(d ? f.currItem.initialZoomLevel : c, b, 333), e[(d ? "remove" : "add") + "Class"](a, "pswp--zoomed-in");
                        }
                    }
                });
                var sc, tc, uc, vc, wc, xc, yc, zc, Ac, Bc, Cc, Dc, Ec = {
                    history: !0,
                    galleryUID: 1
                }, Fc = function() {
                    return Cc.hash.substring(1);
                }, Gc = function() {
                    sc && clearTimeout(sc), uc && clearTimeout(uc);
                }, Hc = function() {
                    var a = Fc(), b = {};
                    if (a.length < 5) return b;
                    var c, d = a.split("&");
                    for (c = 0; c < d.length; c++) if (d[c]) {
                        var e = d[c].split("=");
                        e.length < 2 || (b[e[0]] = e[1]);
                    }
                    if (i.galleryPIDs) {
                        var f = b.pid;
                        for (b.pid = 0, c = 0; c < Yb.length; c++) if (Yb[c].pid === f) {
                            b.pid = c;
                            break;
                        }
                    } else b.pid = parseInt(b.pid, 10) - 1;
                    return b.pid < 0 && (b.pid = 0), b;
                }, Ic = function() {
                    if (uc && clearTimeout(uc), _a || V) return void (uc = setTimeout(Ic, 500));
                    vc ? clearTimeout(tc) : vc = !0;
                    var a = m + 1, b = _b(m);
                    b.hasOwnProperty("pid") && (a = b.pid);
                    var c = yc + "&gid=" + i.galleryUID + "&pid=" + a;
                    zc || -1 === Cc.hash.indexOf(c) && (Bc = !0);
                    var d = Cc.href.split("#")[0] + "#" + c;
                    Dc ? "#" + c !== window.location.hash && history[zc ? "replaceState" : "pushState"]("", document.title, d) : zc ? Cc.replace(d) : Cc.hash = c, 
                    zc = !0, tc = setTimeout((function() {
                        vc = !1;
                    }), 60);
                };
                za("History", {
                    publicMethods: {
                        initHistory: function() {
                            if (e.extend(i, Ec, !0), i.history) {
                                Cc = window.location, Bc = !1, Ac = !1, zc = !1, yc = Fc(), Dc = "pushState" in history, 
                                yc.indexOf("gid=") > -1 && (yc = yc.split("&gid=")[0], yc = yc.split("?gid=")[0]), 
                                Ca("afterChange", f.updateURL), Ca("unbindEvents", (function() {
                                    e.unbind(window, "hashchange", f.onHashChange);
                                }));
                                var a = function() {
                                    xc = !0, Ac || (Bc ? history.back() : yc ? Cc.hash = yc : Dc ? history.pushState("", document.title, Cc.pathname + Cc.search) : Cc.hash = ""), 
                                    Gc();
                                };
                                Ca("unbindEvents", (function() {
                                    l && a();
                                })), Ca("destroy", (function() {
                                    xc || a();
                                })), Ca("firstUpdate", (function() {
                                    m = Hc().pid;
                                }));
                                var b = yc.indexOf("pid=");
                                b > -1 && (yc = yc.substring(0, b), "&" === yc.slice(-1) && (yc = yc.slice(0, -1))), 
                                setTimeout((function() {
                                    j && e.bind(window, "hashchange", f.onHashChange);
                                }), 40);
                            }
                        },
                        onHashChange: function() {
                            return Fc() === yc ? (Ac = !0, void f.close()) : void (vc || (wc = !0, f.goTo(Hc().pid), 
                            wc = !1));
                        },
                        updateURL: function() {
                            Gc(), wc || (zc ? sc = setTimeout(Ic, 800) : Ic());
                        }
                    }
                }), e.extend(f, eb);
            };
            return a;
        }));
    },
    "../shared/browser/node_modules/query-string/index.js": (__unused_webpack_module, exports, __webpack_require__) => {
        "use strict";
        const strictUriEncode = __webpack_require__("../shared/browser/node_modules/strict-uri-encode/index.js");
        const decodeComponent = __webpack_require__("../shared/browser/node_modules/decode-uri-component/index.js");
        const splitOnFirst = __webpack_require__("../shared/browser/node_modules/split-on-first/index.js");
        const filterObject = __webpack_require__("../shared/browser/node_modules/filter-obj/index.js");
        const isNullOrUndefined = value => null === value || void 0 === value;
        const encodeFragmentIdentifier = Symbol("encodeFragmentIdentifier");
        function encoderForArrayFormat(options) {
            switch (options.arrayFormat) {
              case "index":
                return key => (result, value) => {
                    const index = result.length;
                    if (void 0 === value || options.skipNull && null === value || options.skipEmptyString && "" === value) return result;
                    if (null === value) return [ ...result, [ encode(key, options), "[", index, "]" ].join("") ];
                    return [ ...result, [ encode(key, options), "[", encode(index, options), "]=", encode(value, options) ].join("") ];
                };

              case "bracket":
                return key => (result, value) => {
                    if (void 0 === value || options.skipNull && null === value || options.skipEmptyString && "" === value) return result;
                    if (null === value) return [ ...result, [ encode(key, options), "[]" ].join("") ];
                    return [ ...result, [ encode(key, options), "[]=", encode(value, options) ].join("") ];
                };

              case "colon-list-separator":
                return key => (result, value) => {
                    if (void 0 === value || options.skipNull && null === value || options.skipEmptyString && "" === value) return result;
                    if (null === value) return [ ...result, [ encode(key, options), ":list=" ].join("") ];
                    return [ ...result, [ encode(key, options), ":list=", encode(value, options) ].join("") ];
                };

              case "comma":
              case "separator":
              case "bracket-separator":
                {
                    const keyValueSep = "bracket-separator" === options.arrayFormat ? "[]=" : "=";
                    return key => (result, value) => {
                        if (void 0 === value || options.skipNull && null === value || options.skipEmptyString && "" === value) return result;
                        value = null === value ? "" : value;
                        if (0 === result.length) return [ [ encode(key, options), keyValueSep, encode(value, options) ].join("") ];
                        return [ [ result, encode(value, options) ].join(options.arrayFormatSeparator) ];
                    };
                }

              default:
                return key => (result, value) => {
                    if (void 0 === value || options.skipNull && null === value || options.skipEmptyString && "" === value) return result;
                    if (null === value) return [ ...result, encode(key, options) ];
                    return [ ...result, [ encode(key, options), "=", encode(value, options) ].join("") ];
                };
            }
        }
        function parserForArrayFormat(options) {
            let result;
            switch (options.arrayFormat) {
              case "index":
                return (key, value, accumulator) => {
                    result = /\[(\d*)\]$/.exec(key);
                    key = key.replace(/\[\d*\]$/, "");
                    if (!result) {
                        accumulator[key] = value;
                        return;
                    }
                    if (void 0 === accumulator[key]) accumulator[key] = {};
                    accumulator[key][result[1]] = value;
                };

              case "bracket":
                return (key, value, accumulator) => {
                    result = /(\[\])$/.exec(key);
                    key = key.replace(/\[\]$/, "");
                    if (!result) {
                        accumulator[key] = value;
                        return;
                    }
                    if (void 0 === accumulator[key]) {
                        accumulator[key] = [ value ];
                        return;
                    }
                    accumulator[key] = [].concat(accumulator[key], value);
                };

              case "colon-list-separator":
                return (key, value, accumulator) => {
                    result = /(:list)$/.exec(key);
                    key = key.replace(/:list$/, "");
                    if (!result) {
                        accumulator[key] = value;
                        return;
                    }
                    if (void 0 === accumulator[key]) {
                        accumulator[key] = [ value ];
                        return;
                    }
                    accumulator[key] = [].concat(accumulator[key], value);
                };

              case "comma":
              case "separator":
                return (key, value, accumulator) => {
                    const isArray = "string" === typeof value && value.includes(options.arrayFormatSeparator);
                    const isEncodedArray = "string" === typeof value && !isArray && decode(value, options).includes(options.arrayFormatSeparator);
                    value = isEncodedArray ? decode(value, options) : value;
                    const newValue = isArray || isEncodedArray ? value.split(options.arrayFormatSeparator).map((item => decode(item, options))) : null === value ? value : decode(value, options);
                    accumulator[key] = newValue;
                };

              case "bracket-separator":
                return (key, value, accumulator) => {
                    const isArray = /(\[\])$/.test(key);
                    key = key.replace(/\[\]$/, "");
                    if (!isArray) {
                        accumulator[key] = value ? decode(value, options) : value;
                        return;
                    }
                    const arrayValue = null === value ? [] : value.split(options.arrayFormatSeparator).map((item => decode(item, options)));
                    if (void 0 === accumulator[key]) {
                        accumulator[key] = arrayValue;
                        return;
                    }
                    accumulator[key] = [].concat(accumulator[key], arrayValue);
                };

              default:
                return (key, value, accumulator) => {
                    if (void 0 === accumulator[key]) {
                        accumulator[key] = value;
                        return;
                    }
                    accumulator[key] = [].concat(accumulator[key], value);
                };
            }
        }
        function validateArrayFormatSeparator(value) {
            if ("string" !== typeof value || 1 !== value.length) throw new TypeError("arrayFormatSeparator must be single character string");
        }
        function encode(value, options) {
            if (options.encode) return options.strict ? strictUriEncode(value) : encodeURIComponent(value);
            return value;
        }
        function decode(value, options) {
            if (options.decode) return decodeComponent(value);
            return value;
        }
        function keysSorter(input) {
            if (Array.isArray(input)) return input.sort();
            if ("object" === typeof input) return keysSorter(Object.keys(input)).sort(((a, b) => Number(a) - Number(b))).map((key => input[key]));
            return input;
        }
        function removeHash(input) {
            const hashStart = input.indexOf("#");
            if (-1 !== hashStart) input = input.slice(0, hashStart);
            return input;
        }
        function getHash(url) {
            let hash = "";
            const hashStart = url.indexOf("#");
            if (-1 !== hashStart) hash = url.slice(hashStart);
            return hash;
        }
        function extract(input) {
            input = removeHash(input);
            const queryStart = input.indexOf("?");
            if (-1 === queryStart) return "";
            return input.slice(queryStart + 1);
        }
        function parseValue(value, options) {
            if (options.parseNumbers && !Number.isNaN(Number(value)) && "string" === typeof value && "" !== value.trim()) value = Number(value); else if (options.parseBooleans && null !== value && ("true" === value.toLowerCase() || "false" === value.toLowerCase())) value = "true" === value.toLowerCase();
            return value;
        }
        function parse(query, options) {
            options = Object.assign({
                decode: true,
                sort: true,
                arrayFormat: "none",
                arrayFormatSeparator: ",",
                parseNumbers: false,
                parseBooleans: false
            }, options);
            validateArrayFormatSeparator(options.arrayFormatSeparator);
            const formatter = parserForArrayFormat(options);
            const ret = Object.create(null);
            if ("string" !== typeof query) return ret;
            query = query.trim().replace(/^[?#&]/, "");
            if (!query) return ret;
            for (const param of query.split("&")) {
                if ("" === param) continue;
                let [key, value] = splitOnFirst(options.decode ? param.replace(/\+/g, " ") : param, "=");
                value = void 0 === value ? null : [ "comma", "separator", "bracket-separator" ].includes(options.arrayFormat) ? value : decode(value, options);
                formatter(decode(key, options), value, ret);
            }
            for (const key of Object.keys(ret)) {
                const value = ret[key];
                if ("object" === typeof value && null !== value) for (const k of Object.keys(value)) value[k] = parseValue(value[k], options); else ret[key] = parseValue(value, options);
            }
            if (false === options.sort) return ret;
            return (true === options.sort ? Object.keys(ret).sort() : Object.keys(ret).sort(options.sort)).reduce(((result, key) => {
                const value = ret[key];
                if (Boolean(value) && "object" === typeof value && !Array.isArray(value)) result[key] = keysSorter(value); else result[key] = value;
                return result;
            }), Object.create(null));
        }
        exports.extract = extract;
        exports.parse = parse;
        exports.stringify = (object, options) => {
            if (!object) return "";
            options = Object.assign({
                encode: true,
                strict: true,
                arrayFormat: "none",
                arrayFormatSeparator: ","
            }, options);
            validateArrayFormatSeparator(options.arrayFormatSeparator);
            const shouldFilter = key => options.skipNull && isNullOrUndefined(object[key]) || options.skipEmptyString && "" === object[key];
            const formatter = encoderForArrayFormat(options);
            const objectCopy = {};
            for (const key of Object.keys(object)) if (!shouldFilter(key)) objectCopy[key] = object[key];
            const keys = Object.keys(objectCopy);
            if (false !== options.sort) keys.sort(options.sort);
            return keys.map((key => {
                const value = object[key];
                if (void 0 === value) return "";
                if (null === value) return encode(key, options);
                if (Array.isArray(value)) {
                    if (0 === value.length && "bracket-separator" === options.arrayFormat) return encode(key, options) + "[]";
                    return value.reduce(formatter(key), []).join("&");
                }
                return encode(key, options) + "=" + encode(value, options);
            })).filter((x => x.length > 0)).join("&");
        };
        exports.parseUrl = (url, options) => {
            options = Object.assign({
                decode: true
            }, options);
            const [url_, hash] = splitOnFirst(url, "#");
            return Object.assign({
                url: url_.split("?")[0] || "",
                query: parse(extract(url), options)
            }, options && options.parseFragmentIdentifier && hash ? {
                fragmentIdentifier: decode(hash, options)
            } : {});
        };
        exports.stringifyUrl = (object, options) => {
            options = Object.assign({
                encode: true,
                strict: true,
                [encodeFragmentIdentifier]: true
            }, options);
            const url = removeHash(object.url).split("?")[0] || "";
            const queryFromUrl = exports.extract(object.url);
            const parsedQueryFromUrl = exports.parse(queryFromUrl, {
                sort: false
            });
            const query = Object.assign(parsedQueryFromUrl, object.query);
            let queryString = exports.stringify(query, options);
            if (queryString) queryString = `?${queryString}`;
            let hash = getHash(object.url);
            if (object.fragmentIdentifier) hash = `#${options[encodeFragmentIdentifier] ? encode(object.fragmentIdentifier, options) : object.fragmentIdentifier}`;
            return `${url}${queryString}${hash}`;
        };
        exports.pick = (input, filter, options) => {
            options = Object.assign({
                parseFragmentIdentifier: true,
                [encodeFragmentIdentifier]: false
            }, options);
            const {url, query, fragmentIdentifier} = exports.parseUrl(input, options);
            return exports.stringifyUrl({
                url,
                query: filterObject(query, filter),
                fragmentIdentifier
            }, options);
        };
        exports.exclude = (input, filter, options) => {
            const exclusionFilter = Array.isArray(filter) ? key => !filter.includes(key) : (key, value) => !filter(key, value);
            return exports.pick(input, exclusionFilter, options);
        };
    },
    "../shared/browser/node_modules/scroll-lock/dist/scroll-lock.js": function(module) {
        (function(root, factory) {
            if (true) module.exports = factory();
        })(0, (function() {
            return function(modules) {
                var installedModules = {};
                function __nested_webpack_require_607__(moduleId) {
                    if (installedModules[moduleId]) return installedModules[moduleId].exports;
                    var module = installedModules[moduleId] = {
                        i: moduleId,
                        l: false,
                        exports: {}
                    };
                    modules[moduleId].call(module.exports, module, module.exports, __nested_webpack_require_607__);
                    module.l = true;
                    return module.exports;
                }
                __nested_webpack_require_607__.m = modules;
                __nested_webpack_require_607__.c = installedModules;
                __nested_webpack_require_607__.d = function(exports, name, getter) {
                    if (!__nested_webpack_require_607__.o(exports, name)) Object.defineProperty(exports, name, {
                        enumerable: true,
                        get: getter
                    });
                };
                __nested_webpack_require_607__.r = function(exports) {
                    if ("undefined" !== typeof Symbol && Symbol.toStringTag) Object.defineProperty(exports, Symbol.toStringTag, {
                        value: "Module"
                    });
                    Object.defineProperty(exports, "__esModule", {
                        value: true
                    });
                };
                __nested_webpack_require_607__.t = function(value, mode) {
                    if (1 & mode) value = __nested_webpack_require_607__(value);
                    if (8 & mode) return value;
                    if (4 & mode && "object" === typeof value && value && value.__esModule) return value;
                    var ns = Object.create(null);
                    __nested_webpack_require_607__.r(ns);
                    Object.defineProperty(ns, "default", {
                        enumerable: true,
                        value
                    });
                    if (2 & mode && "string" != typeof value) for (var key in value) __nested_webpack_require_607__.d(ns, key, function(key) {
                        return value[key];
                    }.bind(null, key));
                    return ns;
                };
                __nested_webpack_require_607__.n = function(module) {
                    var getter = module && module.__esModule ? function() {
                        return module["default"];
                    } : function() {
                        return module;
                    };
                    __nested_webpack_require_607__.d(getter, "a", getter);
                    return getter;
                };
                __nested_webpack_require_607__.o = function(object, property) {
                    return Object.prototype.hasOwnProperty.call(object, property);
                };
                __nested_webpack_require_607__.p = "";
                return __nested_webpack_require_607__(__nested_webpack_require_607__.s = 0);
            }([ function(module, __webpack_exports__, __nested_webpack_require_5303__) {
                "use strict";
                __nested_webpack_require_5303__.r(__webpack_exports__);
                var argumentAsArray = function(argument) {
                    return Array.isArray(argument) ? argument : [ argument ];
                };
                var isElement = function(target) {
                    return target instanceof Node;
                };
                var isElementList = function(nodeList) {
                    return nodeList instanceof NodeList;
                };
                var eachNode = function(nodeList, callback) {
                    if (nodeList && callback) {
                        nodeList = isElementList(nodeList) ? nodeList : [ nodeList ];
                        for (var i = 0; i < nodeList.length; i++) if (true === callback(nodeList[i], i, nodeList.length)) break;
                    }
                };
                var throwError = function(message) {
                    return console.error("[scroll-lock] ".concat(message));
                };
                var arrayAsSelector = function(array) {
                    if (Array.isArray(array)) {
                        var selector = array.join(", ");
                        return selector;
                    }
                };
                var nodeListAsArray = function(nodeList) {
                    var nodes = [];
                    eachNode(nodeList, (function(node) {
                        return nodes.push(node);
                    }));
                    return nodes;
                };
                var findParentBySelector = function($el, selector) {
                    var self = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : true;
                    var $root = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : document;
                    if (self && -1 !== nodeListAsArray($root.querySelectorAll(selector)).indexOf($el)) return $el;
                    while (($el = $el.parentElement) && -1 === nodeListAsArray($root.querySelectorAll(selector)).indexOf($el)) ;
                    return $el;
                };
                var elementHasSelector = function($el, selector) {
                    var $root = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : document;
                    var has = -1 !== nodeListAsArray($root.querySelectorAll(selector)).indexOf($el);
                    return has;
                };
                var elementHasOverflowHidden = function($el) {
                    if ($el) {
                        var computedStyle = getComputedStyle($el);
                        var overflowIsHidden = "hidden" === computedStyle.overflow;
                        return overflowIsHidden;
                    }
                };
                var elementScrollTopOnStart = function($el) {
                    if ($el) {
                        if (elementHasOverflowHidden($el)) return true;
                        var scrollTop = $el.scrollTop;
                        return scrollTop <= 0;
                    }
                };
                var elementScrollTopOnEnd = function($el) {
                    if ($el) {
                        if (elementHasOverflowHidden($el)) return true;
                        var scrollTop = $el.scrollTop;
                        var scrollHeight = $el.scrollHeight;
                        var scrollTopWithHeight = scrollTop + $el.offsetHeight;
                        return scrollTopWithHeight >= scrollHeight;
                    }
                };
                var elementScrollLeftOnStart = function($el) {
                    if ($el) {
                        if (elementHasOverflowHidden($el)) return true;
                        var scrollLeft = $el.scrollLeft;
                        return scrollLeft <= 0;
                    }
                };
                var elementScrollLeftOnEnd = function($el) {
                    if ($el) {
                        if (elementHasOverflowHidden($el)) return true;
                        var scrollLeft = $el.scrollLeft;
                        var scrollWidth = $el.scrollWidth;
                        var scrollLeftWithWidth = scrollLeft + $el.offsetWidth;
                        return scrollLeftWithWidth >= scrollWidth;
                    }
                };
                var elementIsScrollableField = function($el) {
                    var selector = 'textarea, [contenteditable="true"]';
                    return elementHasSelector($el, selector);
                };
                var elementIsInputRange = function($el) {
                    var selector = 'input[type="range"]';
                    return elementHasSelector($el, selector);
                };
                __nested_webpack_require_5303__.d(__webpack_exports__, "disablePageScroll", (function() {
                    return disablePageScroll;
                }));
                __nested_webpack_require_5303__.d(__webpack_exports__, "enablePageScroll", (function() {
                    return enablePageScroll;
                }));
                __nested_webpack_require_5303__.d(__webpack_exports__, "getScrollState", (function() {
                    return getScrollState;
                }));
                __nested_webpack_require_5303__.d(__webpack_exports__, "clearQueueScrollLocks", (function() {
                    return clearQueueScrollLocks;
                }));
                __nested_webpack_require_5303__.d(__webpack_exports__, "getTargetScrollBarWidth", (function() {
                    return scroll_lock_getTargetScrollBarWidth;
                }));
                __nested_webpack_require_5303__.d(__webpack_exports__, "getCurrentTargetScrollBarWidth", (function() {
                    return scroll_lock_getCurrentTargetScrollBarWidth;
                }));
                __nested_webpack_require_5303__.d(__webpack_exports__, "getPageScrollBarWidth", (function() {
                    return getPageScrollBarWidth;
                }));
                __nested_webpack_require_5303__.d(__webpack_exports__, "getCurrentPageScrollBarWidth", (function() {
                    return getCurrentPageScrollBarWidth;
                }));
                __nested_webpack_require_5303__.d(__webpack_exports__, "addScrollableTarget", (function() {
                    return scroll_lock_addScrollableTarget;
                }));
                __nested_webpack_require_5303__.d(__webpack_exports__, "removeScrollableTarget", (function() {
                    return scroll_lock_removeScrollableTarget;
                }));
                __nested_webpack_require_5303__.d(__webpack_exports__, "addScrollableSelector", (function() {
                    return scroll_lock_addScrollableSelector;
                }));
                __nested_webpack_require_5303__.d(__webpack_exports__, "removeScrollableSelector", (function() {
                    return scroll_lock_removeScrollableSelector;
                }));
                __nested_webpack_require_5303__.d(__webpack_exports__, "addLockableTarget", (function() {
                    return scroll_lock_addLockableTarget;
                }));
                __nested_webpack_require_5303__.d(__webpack_exports__, "addLockableSelector", (function() {
                    return scroll_lock_addLockableSelector;
                }));
                __nested_webpack_require_5303__.d(__webpack_exports__, "setFillGapMethod", (function() {
                    return scroll_lock_setFillGapMethod;
                }));
                __nested_webpack_require_5303__.d(__webpack_exports__, "addFillGapTarget", (function() {
                    return scroll_lock_addFillGapTarget;
                }));
                __nested_webpack_require_5303__.d(__webpack_exports__, "removeFillGapTarget", (function() {
                    return scroll_lock_removeFillGapTarget;
                }));
                __nested_webpack_require_5303__.d(__webpack_exports__, "addFillGapSelector", (function() {
                    return scroll_lock_addFillGapSelector;
                }));
                __nested_webpack_require_5303__.d(__webpack_exports__, "removeFillGapSelector", (function() {
                    return scroll_lock_removeFillGapSelector;
                }));
                __nested_webpack_require_5303__.d(__webpack_exports__, "refillGaps", (function() {
                    return refillGaps;
                }));
                function _objectSpread(target) {
                    for (var i = 1; i < arguments.length; i++) {
                        var source = null != arguments[i] ? arguments[i] : {};
                        var ownKeys = Object.keys(source);
                        if ("function" === typeof Object.getOwnPropertySymbols) ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter((function(sym) {
                            return Object.getOwnPropertyDescriptor(source, sym).enumerable;
                        })));
                        ownKeys.forEach((function(key) {
                            _defineProperty(target, key, source[key]);
                        }));
                    }
                    return target;
                }
                function _defineProperty(obj, key, value) {
                    if (key in obj) Object.defineProperty(obj, key, {
                        value,
                        enumerable: true,
                        configurable: true,
                        writable: true
                    }); else obj[key] = value;
                    return obj;
                }
                var FILL_GAP_AVAILABLE_METHODS = [ "padding", "margin", "width", "max-width", "none" ];
                var TOUCH_DIRECTION_DETECT_OFFSET = 3;
                var state = {
                    scroll: true,
                    queue: 0,
                    scrollableSelectors: [ "[data-scroll-lock-scrollable]" ],
                    lockableSelectors: [ "body", "[data-scroll-lock-lockable]" ],
                    fillGapSelectors: [ "body", "[data-scroll-lock-fill-gap]", "[data-scroll-lock-lockable]" ],
                    fillGapMethod: FILL_GAP_AVAILABLE_METHODS[0],
                    startTouchY: 0,
                    startTouchX: 0
                };
                var disablePageScroll = function(target) {
                    if (state.queue <= 0) {
                        state.scroll = false;
                        scroll_lock_hideLockableOverflow();
                        fillGaps();
                    }
                    scroll_lock_addScrollableTarget(target);
                    state.queue++;
                };
                var enablePageScroll = function(target) {
                    state.queue > 0 && state.queue--;
                    if (state.queue <= 0) {
                        state.scroll = true;
                        scroll_lock_showLockableOverflow();
                        unfillGaps();
                    }
                    scroll_lock_removeScrollableTarget(target);
                };
                var getScrollState = function() {
                    return state.scroll;
                };
                var clearQueueScrollLocks = function() {
                    state.queue = 0;
                };
                var scroll_lock_getTargetScrollBarWidth = function($target) {
                    var onlyExists = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : false;
                    if (isElement($target)) {
                        var currentOverflowYProperty = $target.style.overflowY;
                        if (onlyExists) {
                            if (!getScrollState()) $target.style.overflowY = $target.getAttribute("data-scroll-lock-saved-overflow-y-property");
                        } else $target.style.overflowY = "scroll";
                        var width = scroll_lock_getCurrentTargetScrollBarWidth($target);
                        $target.style.overflowY = currentOverflowYProperty;
                        return width;
                    } else return 0;
                };
                var scroll_lock_getCurrentTargetScrollBarWidth = function($target) {
                    if (isElement($target)) if ($target === document.body) {
                        var documentWidth = document.documentElement.clientWidth;
                        var windowWidth = window.innerWidth;
                        var currentWidth = windowWidth - documentWidth;
                        return currentWidth;
                    } else {
                        var borderLeftWidthCurrentProperty = $target.style.borderLeftWidth;
                        var borderRightWidthCurrentProperty = $target.style.borderRightWidth;
                        $target.style.borderLeftWidth = "0px";
                        $target.style.borderRightWidth = "0px";
                        var _currentWidth = $target.offsetWidth - $target.clientWidth;
                        $target.style.borderLeftWidth = borderLeftWidthCurrentProperty;
                        $target.style.borderRightWidth = borderRightWidthCurrentProperty;
                        return _currentWidth;
                    } else return 0;
                };
                var getPageScrollBarWidth = function() {
                    var onlyExists = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : false;
                    return scroll_lock_getTargetScrollBarWidth(document.body, onlyExists);
                };
                var getCurrentPageScrollBarWidth = function() {
                    return scroll_lock_getCurrentTargetScrollBarWidth(document.body);
                };
                var scroll_lock_addScrollableTarget = function(target) {
                    if (target) {
                        var targets = argumentAsArray(target);
                        targets.map((function($targets) {
                            eachNode($targets, (function($target) {
                                if (isElement($target)) $target.setAttribute("data-scroll-lock-scrollable", ""); else throwError('"'.concat($target, '" is not a Element.'));
                            }));
                        }));
                    }
                };
                var scroll_lock_removeScrollableTarget = function(target) {
                    if (target) {
                        var targets = argumentAsArray(target);
                        targets.map((function($targets) {
                            eachNode($targets, (function($target) {
                                if (isElement($target)) $target.removeAttribute("data-scroll-lock-scrollable"); else throwError('"'.concat($target, '" is not a Element.'));
                            }));
                        }));
                    }
                };
                var scroll_lock_addScrollableSelector = function(selector) {
                    if (selector) {
                        var selectors = argumentAsArray(selector);
                        selectors.map((function(selector) {
                            state.scrollableSelectors.push(selector);
                        }));
                    }
                };
                var scroll_lock_removeScrollableSelector = function(selector) {
                    if (selector) {
                        var selectors = argumentAsArray(selector);
                        selectors.map((function(selector) {
                            state.scrollableSelectors = state.scrollableSelectors.filter((function(sSelector) {
                                return sSelector !== selector;
                            }));
                        }));
                    }
                };
                var scroll_lock_addLockableTarget = function(target) {
                    if (target) {
                        var targets = argumentAsArray(target);
                        targets.map((function($targets) {
                            eachNode($targets, (function($target) {
                                if (isElement($target)) $target.setAttribute("data-scroll-lock-lockable", ""); else throwError('"'.concat($target, '" is not a Element.'));
                            }));
                        }));
                        if (!getScrollState()) scroll_lock_hideLockableOverflow();
                    }
                };
                var scroll_lock_addLockableSelector = function(selector) {
                    if (selector) {
                        var selectors = argumentAsArray(selector);
                        selectors.map((function(selector) {
                            state.lockableSelectors.push(selector);
                        }));
                        if (!getScrollState()) scroll_lock_hideLockableOverflow();
                        scroll_lock_addFillGapSelector(selector);
                    }
                };
                var scroll_lock_setFillGapMethod = function(method) {
                    if (method) if (-1 !== FILL_GAP_AVAILABLE_METHODS.indexOf(method)) {
                        state.fillGapMethod = method;
                        refillGaps();
                    } else {
                        var methods = FILL_GAP_AVAILABLE_METHODS.join(", ");
                        throwError('"'.concat(method, '" method is not available!\nAvailable fill gap methods: ').concat(methods, "."));
                    }
                };
                var scroll_lock_addFillGapTarget = function(target) {
                    if (target) {
                        var targets = argumentAsArray(target);
                        targets.map((function($targets) {
                            eachNode($targets, (function($target) {
                                if (isElement($target)) {
                                    $target.setAttribute("data-scroll-lock-fill-gap", "");
                                    if (!state.scroll) scroll_lock_fillGapTarget($target);
                                } else throwError('"'.concat($target, '" is not a Element.'));
                            }));
                        }));
                    }
                };
                var scroll_lock_removeFillGapTarget = function(target) {
                    if (target) {
                        var targets = argumentAsArray(target);
                        targets.map((function($targets) {
                            eachNode($targets, (function($target) {
                                if (isElement($target)) {
                                    $target.removeAttribute("data-scroll-lock-fill-gap");
                                    if (!state.scroll) scroll_lock_unfillGapTarget($target);
                                } else throwError('"'.concat($target, '" is not a Element.'));
                            }));
                        }));
                    }
                };
                var scroll_lock_addFillGapSelector = function(selector) {
                    if (selector) {
                        var selectors = argumentAsArray(selector);
                        selectors.map((function(selector) {
                            if (-1 === state.fillGapSelectors.indexOf(selector)) {
                                state.fillGapSelectors.push(selector);
                                if (!state.scroll) scroll_lock_fillGapSelector(selector);
                            }
                        }));
                    }
                };
                var scroll_lock_removeFillGapSelector = function(selector) {
                    if (selector) {
                        var selectors = argumentAsArray(selector);
                        selectors.map((function(selector) {
                            state.fillGapSelectors = state.fillGapSelectors.filter((function(fSelector) {
                                return fSelector !== selector;
                            }));
                            if (!state.scroll) scroll_lock_unfillGapSelector(selector);
                        }));
                    }
                };
                var refillGaps = function() {
                    if (!state.scroll) fillGaps();
                };
                var scroll_lock_hideLockableOverflow = function() {
                    var selector = arrayAsSelector(state.lockableSelectors);
                    scroll_lock_hideLockableOverflowSelector(selector);
                };
                var scroll_lock_showLockableOverflow = function() {
                    var selector = arrayAsSelector(state.lockableSelectors);
                    scroll_lock_showLockableOverflowSelector(selector);
                };
                var scroll_lock_hideLockableOverflowSelector = function(selector) {
                    var $targets = document.querySelectorAll(selector);
                    eachNode($targets, (function($target) {
                        scroll_lock_hideLockableOverflowTarget($target);
                    }));
                };
                var scroll_lock_showLockableOverflowSelector = function(selector) {
                    var $targets = document.querySelectorAll(selector);
                    eachNode($targets, (function($target) {
                        scroll_lock_showLockableOverflowTarget($target);
                    }));
                };
                var scroll_lock_hideLockableOverflowTarget = function($target) {
                    if (isElement($target) && "true" !== $target.getAttribute("data-scroll-lock-locked")) {
                        var computedStyle = window.getComputedStyle($target);
                        $target.setAttribute("data-scroll-lock-saved-overflow-y-property", computedStyle.overflowY);
                        $target.setAttribute("data-scroll-lock-saved-inline-overflow-property", $target.style.overflow);
                        $target.setAttribute("data-scroll-lock-saved-inline-overflow-y-property", $target.style.overflowY);
                        $target.style.overflow = "hidden";
                        $target.setAttribute("data-scroll-lock-locked", "true");
                    }
                };
                var scroll_lock_showLockableOverflowTarget = function($target) {
                    if (isElement($target) && "true" === $target.getAttribute("data-scroll-lock-locked")) {
                        $target.style.overflow = $target.getAttribute("data-scroll-lock-saved-inline-overflow-property");
                        $target.style.overflowY = $target.getAttribute("data-scroll-lock-saved-inline-overflow-y-property");
                        $target.removeAttribute("data-scroll-lock-saved-overflow-property");
                        $target.removeAttribute("data-scroll-lock-saved-inline-overflow-property");
                        $target.removeAttribute("data-scroll-lock-saved-inline-overflow-y-property");
                        $target.removeAttribute("data-scroll-lock-locked");
                    }
                };
                var fillGaps = function() {
                    state.fillGapSelectors.map((function(selector) {
                        scroll_lock_fillGapSelector(selector);
                    }));
                };
                var unfillGaps = function() {
                    state.fillGapSelectors.map((function(selector) {
                        scroll_lock_unfillGapSelector(selector);
                    }));
                };
                var scroll_lock_fillGapSelector = function(selector) {
                    var $targets = document.querySelectorAll(selector);
                    var isLockable = -1 !== state.lockableSelectors.indexOf(selector);
                    eachNode($targets, (function($target) {
                        scroll_lock_fillGapTarget($target, isLockable);
                    }));
                };
                var scroll_lock_fillGapTarget = function($target) {
                    var isLockable = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : false;
                    if (isElement($target)) {
                        var scrollBarWidth;
                        if ("" === $target.getAttribute("data-scroll-lock-lockable") || isLockable) scrollBarWidth = scroll_lock_getTargetScrollBarWidth($target, true); else {
                            var $lockableParent = findParentBySelector($target, arrayAsSelector(state.lockableSelectors));
                            scrollBarWidth = scroll_lock_getTargetScrollBarWidth($lockableParent, true);
                        }
                        if ("true" === $target.getAttribute("data-scroll-lock-filled-gap")) scroll_lock_unfillGapTarget($target);
                        var computedStyle = window.getComputedStyle($target);
                        $target.setAttribute("data-scroll-lock-filled-gap", "true");
                        $target.setAttribute("data-scroll-lock-current-fill-gap-method", state.fillGapMethod);
                        if ("margin" === state.fillGapMethod) {
                            var currentMargin = parseFloat(computedStyle.marginRight);
                            $target.style.marginRight = "".concat(currentMargin + scrollBarWidth, "px");
                        } else if ("width" === state.fillGapMethod) $target.style.width = "calc(100% - ".concat(scrollBarWidth, "px)"); else if ("max-width" === state.fillGapMethod) $target.style.maxWidth = "calc(100% - ".concat(scrollBarWidth, "px)"); else if ("padding" === state.fillGapMethod) {
                            var currentPadding = parseFloat(computedStyle.paddingRight);
                            $target.style.paddingRight = "".concat(currentPadding + scrollBarWidth, "px");
                        }
                    }
                };
                var scroll_lock_unfillGapSelector = function(selector) {
                    var $targets = document.querySelectorAll(selector);
                    eachNode($targets, (function($target) {
                        scroll_lock_unfillGapTarget($target);
                    }));
                };
                var scroll_lock_unfillGapTarget = function($target) {
                    if (isElement($target)) if ("true" === $target.getAttribute("data-scroll-lock-filled-gap")) {
                        var currentFillGapMethod = $target.getAttribute("data-scroll-lock-current-fill-gap-method");
                        $target.removeAttribute("data-scroll-lock-filled-gap");
                        $target.removeAttribute("data-scroll-lock-current-fill-gap-method");
                        if ("margin" === currentFillGapMethod) $target.style.marginRight = ""; else if ("width" === currentFillGapMethod) $target.style.width = ""; else if ("max-width" === currentFillGapMethod) $target.style.maxWidth = ""; else if ("padding" === currentFillGapMethod) $target.style.paddingRight = "";
                    }
                };
                var onResize = function(e) {
                    refillGaps();
                };
                var onTouchStart = function(e) {
                    if (!state.scroll) {
                        state.startTouchY = e.touches[0].clientY;
                        state.startTouchX = e.touches[0].clientX;
                    }
                };
                var scroll_lock_onTouchMove = function(e) {
                    if (!state.scroll) {
                        var startTouchY = state.startTouchY, startTouchX = state.startTouchX;
                        var currentClientY = e.touches[0].clientY;
                        var currentClientX = e.touches[0].clientX;
                        if (e.touches.length < 2) {
                            var selector = arrayAsSelector(state.scrollableSelectors);
                            var direction = {
                                up: startTouchY < currentClientY,
                                down: startTouchY > currentClientY,
                                left: startTouchX < currentClientX,
                                right: startTouchX > currentClientX
                            };
                            var directionWithOffset = {
                                up: startTouchY + TOUCH_DIRECTION_DETECT_OFFSET < currentClientY,
                                down: startTouchY - TOUCH_DIRECTION_DETECT_OFFSET > currentClientY,
                                left: startTouchX + TOUCH_DIRECTION_DETECT_OFFSET < currentClientX,
                                right: startTouchX - TOUCH_DIRECTION_DETECT_OFFSET > currentClientX
                            };
                            var handle = function handle($el) {
                                var skip = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : false;
                                if ($el) {
                                    var parentScrollableEl = findParentBySelector($el, selector, false);
                                    if (elementIsInputRange($el)) return false;
                                    if (skip || elementIsScrollableField($el) && findParentBySelector($el, selector) || elementHasSelector($el, selector)) {
                                        var prevent = false;
                                        if (elementScrollLeftOnStart($el) && elementScrollLeftOnEnd($el)) {
                                            if (direction.up && elementScrollTopOnStart($el) || direction.down && elementScrollTopOnEnd($el)) prevent = true;
                                        } else if (elementScrollTopOnStart($el) && elementScrollTopOnEnd($el)) {
                                            if (direction.left && elementScrollLeftOnStart($el) || direction.right && elementScrollLeftOnEnd($el)) prevent = true;
                                        } else if (directionWithOffset.up && elementScrollTopOnStart($el) || directionWithOffset.down && elementScrollTopOnEnd($el) || directionWithOffset.left && elementScrollLeftOnStart($el) || directionWithOffset.right && elementScrollLeftOnEnd($el)) prevent = true;
                                        if (prevent) if (parentScrollableEl) handle(parentScrollableEl, true); else if (e.cancelable) e.preventDefault();
                                    } else handle(parentScrollableEl);
                                } else if (e.cancelable) e.preventDefault();
                            };
                            handle(e.target);
                        }
                    }
                };
                var onTouchEnd = function(e) {
                    if (!state.scroll) {
                        state.startTouchY = 0;
                        state.startTouchX = 0;
                    }
                };
                if ("undefined" !== typeof window) window.addEventListener("resize", onResize);
                if ("undefined" !== typeof document) {
                    document.addEventListener("touchstart", onTouchStart);
                    document.addEventListener("touchmove", scroll_lock_onTouchMove, {
                        passive: false
                    });
                    document.addEventListener("touchend", onTouchEnd);
                }
                var deprecatedMethods = {
                    hide: function(target) {
                        throwError('"hide" is deprecated! Use "disablePageScroll" instead. \n https://github.com/FL3NKEY/scroll-lock#disablepagescrollscrollabletarget');
                        disablePageScroll(target);
                    },
                    show: function(target) {
                        throwError('"show" is deprecated! Use "enablePageScroll" instead. \n https://github.com/FL3NKEY/scroll-lock#enablepagescrollscrollabletarget');
                        enablePageScroll(target);
                    },
                    toggle: function(target) {
                        throwError('"toggle" is deprecated! Do not use it.');
                        if (getScrollState()) disablePageScroll(); else enablePageScroll(target);
                    },
                    getState: function() {
                        throwError('"getState" is deprecated! Use "getScrollState" instead. \n https://github.com/FL3NKEY/scroll-lock#getscrollstate');
                        return getScrollState();
                    },
                    getWidth: function() {
                        throwError('"getWidth" is deprecated! Use "getPageScrollBarWidth" instead. \n https://github.com/FL3NKEY/scroll-lock#getpagescrollbarwidth');
                        return getPageScrollBarWidth();
                    },
                    getCurrentWidth: function() {
                        throwError('"getCurrentWidth" is deprecated! Use "getCurrentPageScrollBarWidth" instead. \n https://github.com/FL3NKEY/scroll-lock#getcurrentpagescrollbarwidth');
                        return getCurrentPageScrollBarWidth();
                    },
                    setScrollableTargets: function(target) {
                        throwError('"setScrollableTargets" is deprecated! Use "addScrollableTarget" instead. \n https://github.com/FL3NKEY/scroll-lock#addscrollabletargetscrollabletarget');
                        scroll_lock_addScrollableTarget(target);
                    },
                    setFillGapSelectors: function(selector) {
                        throwError('"setFillGapSelectors" is deprecated! Use "addFillGapSelector" instead. \n https://github.com/FL3NKEY/scroll-lock#addfillgapselectorfillgapselector');
                        scroll_lock_addFillGapSelector(selector);
                    },
                    setFillGapTargets: function(target) {
                        throwError('"setFillGapTargets" is deprecated! Use "addFillGapTarget" instead. \n https://github.com/FL3NKEY/scroll-lock#addfillgaptargetfillgaptarget');
                        scroll_lock_addFillGapTarget(target);
                    },
                    clearQueue: function() {
                        throwError('"clearQueue" is deprecated! Use "clearQueueScrollLocks" instead. \n https://github.com/FL3NKEY/scroll-lock#clearqueuescrolllocks');
                        clearQueueScrollLocks();
                    }
                };
                var scrollLock = _objectSpread({
                    disablePageScroll,
                    enablePageScroll,
                    getScrollState,
                    clearQueueScrollLocks,
                    getTargetScrollBarWidth: scroll_lock_getTargetScrollBarWidth,
                    getCurrentTargetScrollBarWidth: scroll_lock_getCurrentTargetScrollBarWidth,
                    getPageScrollBarWidth,
                    getCurrentPageScrollBarWidth,
                    addScrollableSelector: scroll_lock_addScrollableSelector,
                    removeScrollableSelector: scroll_lock_removeScrollableSelector,
                    addScrollableTarget: scroll_lock_addScrollableTarget,
                    removeScrollableTarget: scroll_lock_removeScrollableTarget,
                    addLockableSelector: scroll_lock_addLockableSelector,
                    addLockableTarget: scroll_lock_addLockableTarget,
                    addFillGapSelector: scroll_lock_addFillGapSelector,
                    removeFillGapSelector: scroll_lock_removeFillGapSelector,
                    addFillGapTarget: scroll_lock_addFillGapTarget,
                    removeFillGapTarget: scroll_lock_removeFillGapTarget,
                    setFillGapMethod: scroll_lock_setFillGapMethod,
                    refillGaps,
                    _state: state
                }, deprecatedMethods);
                __webpack_exports__["default"] = scrollLock;
            } ])["default"];
        }));
    },
    "../shared/browser/node_modules/split-on-first/index.js": module => {
        "use strict";
        module.exports = (string, separator) => {
            if (!("string" === typeof string && "string" === typeof separator)) throw new TypeError("Expected the arguments to be of type `string`");
            if ("" === separator) return [ string ];
            const separatorIndex = string.indexOf(separator);
            if (-1 === separatorIndex) return [ string ];
            return [ string.slice(0, separatorIndex), string.slice(separatorIndex + separator.length) ];
        };
    },
    "../shared/browser/node_modules/strict-uri-encode/index.js": module => {
        "use strict";
        module.exports = str => encodeURIComponent(str).replace(/[!'()*]/g, (x => `%${x.charCodeAt(0).toString(16).toUpperCase()}`));
    },
    "../shared/browser/node_modules/uuid/index.js": (module, __unused_webpack_exports, __webpack_require__) => {
        var v1 = __webpack_require__("../shared/browser/node_modules/uuid/v1.js");
        var v4 = __webpack_require__("../shared/browser/node_modules/uuid/v4.js");
        var uuid = v4;
        uuid.v1 = v1;
        uuid.v4 = v4;
        module.exports = uuid;
    },
    "../shared/browser/node_modules/uuid/lib/bytesToUuid.js": module => {
        var byteToHex = [];
        for (var i = 0; i < 256; ++i) byteToHex[i] = (i + 256).toString(16).substr(1);
        function bytesToUuid(buf, offset) {
            var i = offset || 0;
            var bth = byteToHex;
            return [ bth[buf[i++]], bth[buf[i++]], bth[buf[i++]], bth[buf[i++]], "-", bth[buf[i++]], bth[buf[i++]], "-", bth[buf[i++]], bth[buf[i++]], "-", bth[buf[i++]], bth[buf[i++]], "-", bth[buf[i++]], bth[buf[i++]], bth[buf[i++]], bth[buf[i++]], bth[buf[i++]], bth[buf[i++]] ].join("");
        }
        module.exports = bytesToUuid;
    },
    "../shared/browser/node_modules/uuid/lib/rng-browser.js": module => {
        var getRandomValues = "undefined" != typeof crypto && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || "undefined" != typeof msCrypto && "function" == typeof window.msCrypto.getRandomValues && msCrypto.getRandomValues.bind(msCrypto);
        if (getRandomValues) {
            var rnds8 = new Uint8Array(16);
            module.exports = function() {
                getRandomValues(rnds8);
                return rnds8;
            };
        } else {
            var rnds = new Array(16);
            module.exports = function() {
                for (var r, i = 0; i < 16; i++) {
                    if (0 === (3 & i)) r = 4294967296 * Math.random();
                    rnds[i] = r >>> ((3 & i) << 3) & 255;
                }
                return rnds;
            };
        }
    },
    "../shared/browser/node_modules/uuid/v1.js": (module, __unused_webpack_exports, __webpack_require__) => {
        var rng = __webpack_require__("../shared/browser/node_modules/uuid/lib/rng-browser.js");
        var bytesToUuid = __webpack_require__("../shared/browser/node_modules/uuid/lib/bytesToUuid.js");
        var _nodeId;
        var _clockseq;
        var _lastMSecs = 0;
        var _lastNSecs = 0;
        function v1(options, buf, offset) {
            var i = buf && offset || 0;
            var b = buf || [];
            options = options || {};
            var node = options.node || _nodeId;
            var clockseq = void 0 !== options.clockseq ? options.clockseq : _clockseq;
            if (null == node || null == clockseq) {
                var seedBytes = rng();
                if (null == node) node = _nodeId = [ 1 | seedBytes[0], seedBytes[1], seedBytes[2], seedBytes[3], seedBytes[4], seedBytes[5] ];
                if (null == clockseq) clockseq = _clockseq = 16383 & (seedBytes[6] << 8 | seedBytes[7]);
            }
            var msecs = void 0 !== options.msecs ? options.msecs : (new Date).getTime();
            var nsecs = void 0 !== options.nsecs ? options.nsecs : _lastNSecs + 1;
            var dt = msecs - _lastMSecs + (nsecs - _lastNSecs) / 1e4;
            if (dt < 0 && void 0 === options.clockseq) clockseq = clockseq + 1 & 16383;
            if ((dt < 0 || msecs > _lastMSecs) && void 0 === options.nsecs) nsecs = 0;
            if (nsecs >= 1e4) throw new Error("uuid.v1(): Can't create more than 10M uuids/sec");
            _lastMSecs = msecs;
            _lastNSecs = nsecs;
            _clockseq = clockseq;
            msecs += 122192928e5;
            var tl = (1e4 * (268435455 & msecs) + nsecs) % 4294967296;
            b[i++] = tl >>> 24 & 255;
            b[i++] = tl >>> 16 & 255;
            b[i++] = tl >>> 8 & 255;
            b[i++] = 255 & tl;
            var tmh = msecs / 4294967296 * 1e4 & 268435455;
            b[i++] = tmh >>> 8 & 255;
            b[i++] = 255 & tmh;
            b[i++] = tmh >>> 24 & 15 | 16;
            b[i++] = tmh >>> 16 & 255;
            b[i++] = clockseq >>> 8 | 128;
            b[i++] = 255 & clockseq;
            for (var n = 0; n < 6; ++n) b[i + n] = node[n];
            return buf ? buf : bytesToUuid(b);
        }
        module.exports = v1;
    },
    "../shared/browser/node_modules/uuid/v4.js": (module, __unused_webpack_exports, __webpack_require__) => {
        var rng = __webpack_require__("../shared/browser/node_modules/uuid/lib/rng-browser.js");
        var bytesToUuid = __webpack_require__("../shared/browser/node_modules/uuid/lib/bytesToUuid.js");
        function v4(options, buf, offset) {
            var i = buf && offset || 0;
            if ("string" == typeof options) {
                buf = "binary" === options ? new Array(16) : null;
                options = null;
            }
            options = options || {};
            var rnds = options.random || (options.rng || rng)();
            rnds[6] = 15 & rnds[6] | 64;
            rnds[8] = 63 & rnds[8] | 128;
            if (buf) for (var ii = 0; ii < 16; ++ii) buf[i + ii] = rnds[ii];
            return buf || bytesToUuid(rnds);
        }
        module.exports = v4;
    },
    "../shared/browser/node_modules/yt-player/index.js": (module, __unused_webpack_exports, __webpack_require__) => {
        const EventEmitter = __webpack_require__("./node_modules/events/events.js").EventEmitter;
        const loadScript = __webpack_require__("../shared/browser/node_modules/load-script2/index.js");
        const YOUTUBE_IFRAME_API_SRC = "https://www.youtube.com/iframe_api";
        const YOUTUBE_STATES = {
            "-1": "unstarted",
            0: "ended",
            1: "playing",
            2: "paused",
            3: "buffering",
            5: "cued"
        };
        const YOUTUBE_ERROR = {
            INVALID_PARAM: 2,
            HTML5_ERROR: 5,
            NOT_FOUND: 100,
            UNPLAYABLE_1: 101,
            UNPLAYABLE_2: 150
        };
        const loadIframeAPICallbacks = [];
        class YouTubePlayer extends EventEmitter {
            constructor(element, opts) {
                super();
                const elem = "string" === typeof element ? document.querySelector(element) : element;
                if (elem.id) this._id = elem.id; else this._id = elem.id = "ytplayer-" + Math.random().toString(16).slice(2, 8);
                this._opts = Object.assign({
                    width: 640,
                    height: 360,
                    autoplay: false,
                    captions: void 0,
                    controls: true,
                    keyboard: true,
                    fullscreen: true,
                    annotations: true,
                    modestBranding: false,
                    related: true,
                    timeupdateFrequency: 1e3,
                    playsInline: true,
                    start: 0
                }, opts);
                this.videoId = null;
                this.destroyed = false;
                this._api = null;
                this._autoplay = false;
                this._player = null;
                this._ready = false;
                this._queue = [];
                this._interval = null;
                this._startInterval = this._startInterval.bind(this);
                this._stopInterval = this._stopInterval.bind(this);
                this.on("playing", this._startInterval);
                this.on("unstarted", this._stopInterval);
                this.on("ended", this._stopInterval);
                this.on("paused", this._stopInterval);
                this.on("buffering", this._stopInterval);
                this._loadIframeAPI(((err, api) => {
                    if (err) return this._destroy(new Error("YouTube Iframe API failed to load"));
                    this._api = api;
                    if (this.videoId) this.load(this.videoId, this._autoplay, this._start);
                }));
            }
            load(videoId, autoplay = false, start = 0) {
                if (this.destroyed) return;
                this.videoId = videoId;
                this._autoplay = autoplay;
                this._start = start;
                if (!this._api) return;
                if (!this._player) {
                    this._createPlayer(videoId);
                    return;
                }
                if (!this._ready) return;
                if (autoplay) this._player.loadVideoById(videoId, start); else this._player.cueVideoById(videoId, start);
            }
            play() {
                if (this._ready) this._player.playVideo(); else this._queueCommand("play");
            }
            pause() {
                if (this._ready) this._player.pauseVideo(); else this._queueCommand("pause");
            }
            stop() {
                if (this._ready) this._player.stopVideo(); else this._queueCommand("stop");
            }
            seek(seconds) {
                if (this._ready) this._player.seekTo(seconds, true); else this._queueCommand("seek", seconds);
            }
            setVolume(volume) {
                if (this._ready) this._player.setVolume(volume); else this._queueCommand("setVolume", volume);
            }
            getVolume() {
                return this._ready && this._player.getVolume() || 0;
            }
            mute() {
                if (this._ready) this._player.mute(); else this._queueCommand("mute");
            }
            unMute() {
                if (this._ready) this._player.unMute(); else this._queueCommand("unMute");
            }
            isMuted() {
                return this._ready && this._player.isMuted() || false;
            }
            setSize(width, height) {
                if (this._ready) this._player.setSize(width, height); else this._queueCommand("setSize", width, height);
            }
            setPlaybackRate(rate) {
                if (this._ready) this._player.setPlaybackRate(rate); else this._queueCommand("setPlaybackRate", rate);
            }
            setPlaybackQuality(suggestedQuality) {
                if (this._ready) this._player.setPlaybackQuality(suggestedQuality); else this._queueCommand("setPlaybackQuality", suggestedQuality);
            }
            getPlaybackRate() {
                return this._ready && this._player.getPlaybackRate() || 1;
            }
            getAvailablePlaybackRates() {
                return this._ready && this._player.getAvailablePlaybackRates() || [ 1 ];
            }
            getDuration() {
                return this._ready && this._player.getDuration() || 0;
            }
            getProgress() {
                return this._ready && this._player.getVideoLoadedFraction() || 0;
            }
            getState() {
                return this._ready && YOUTUBE_STATES[this._player.getPlayerState()] || "unstarted";
            }
            getCurrentTime() {
                return this._ready && this._player.getCurrentTime() || 0;
            }
            destroy() {
                this._destroy();
            }
            _destroy(err) {
                if (this.destroyed) return;
                this.destroyed = true;
                if (this._player) {
                    this._player.stopVideo && this._player.stopVideo();
                    this._player.destroy();
                }
                this.videoId = null;
                this._id = null;
                this._opts = null;
                this._api = null;
                this._player = null;
                this._ready = false;
                this._queue = null;
                this._stopInterval();
                this.removeListener("playing", this._startInterval);
                this.removeListener("paused", this._stopInterval);
                this.removeListener("buffering", this._stopInterval);
                this.removeListener("unstarted", this._stopInterval);
                this.removeListener("ended", this._stopInterval);
                if (err) this.emit("error", err);
            }
            _queueCommand(command, ...args) {
                if (this.destroyed) return;
                this._queue.push([ command, args ]);
            }
            _flushQueue() {
                while (this._queue.length) {
                    const command = this._queue.shift();
                    this[command[0]].apply(this, command[1]);
                }
            }
            _loadIframeAPI(cb) {
                if (window.YT && "function" === typeof window.YT.Player) return cb(null, window.YT);
                loadIframeAPICallbacks.push(cb);
                const scripts = Array.from(document.getElementsByTagName("script"));
                const isLoading = scripts.some((script => script.src === YOUTUBE_IFRAME_API_SRC));
                if (!isLoading) loadScript(YOUTUBE_IFRAME_API_SRC).catch((err => {
                    while (loadIframeAPICallbacks.length) {
                        const loadCb = loadIframeAPICallbacks.shift();
                        loadCb(err);
                    }
                }));
                const prevOnYouTubeIframeAPIReady = window.onYouTubeIframeAPIReady;
                window.onYouTubeIframeAPIReady = () => {
                    if ("function" === typeof prevOnYouTubeIframeAPIReady) prevOnYouTubeIframeAPIReady();
                    while (loadIframeAPICallbacks.length) {
                        const loadCb = loadIframeAPICallbacks.shift();
                        loadCb(null, window.YT);
                    }
                };
            }
            _createPlayer(videoId) {
                if (this.destroyed) return;
                const opts = this._opts;
                this._player = new this._api.Player(this._id, {
                    width: opts.width,
                    height: opts.height,
                    videoId,
                    host: opts.host,
                    playerVars: {
                        autoplay: opts.autoplay ? 1 : 0,
                        cc_load_policy: null != opts.captions ? false !== opts.captions ? 1 : 0 : void 0,
                        hl: null != opts.captions && false !== opts.captions ? opts.captions : void 0,
                        cc_lang_pref: null != opts.captions && false !== opts.captions ? opts.captions : void 0,
                        controls: opts.controls ? 2 : 0,
                        disablekb: opts.keyboard ? 0 : 1,
                        enablejsapi: 1,
                        fs: opts.fullscreen ? 1 : 0,
                        iv_load_policy: opts.annotations ? 1 : 3,
                        modestbranding: opts.modestBranding ? 1 : 0,
                        origin: window.location.origin,
                        playsinline: opts.playsInline ? 1 : 0,
                        rel: opts.related ? 1 : 0,
                        wmode: "opaque",
                        start: opts.start
                    },
                    events: {
                        onReady: () => this._onReady(videoId),
                        onStateChange: data => this._onStateChange(data),
                        onPlaybackQualityChange: data => this._onPlaybackQualityChange(data),
                        onPlaybackRateChange: data => this._onPlaybackRateChange(data),
                        onError: data => this._onError(data)
                    }
                });
            }
            _onReady(videoId) {
                if (this.destroyed) return;
                this._ready = true;
                this.load(this.videoId, this._autoplay, this._start);
                this._flushQueue();
            }
            _onStateChange(data) {
                if (this.destroyed) return;
                const state = YOUTUBE_STATES[data.data];
                if (state) {
                    if ([ "paused", "buffering", "ended" ].includes(state)) this._onTimeupdate();
                    this.emit(state);
                    if ([ "unstarted", "playing", "cued" ].includes(state)) this._onTimeupdate();
                } else throw new Error("Unrecognized state change: " + data);
            }
            _onPlaybackQualityChange(data) {
                if (this.destroyed) return;
                this.emit("playbackQualityChange", data.data);
            }
            _onPlaybackRateChange(data) {
                if (this.destroyed) return;
                this.emit("playbackRateChange", data.data);
            }
            _onError(data) {
                if (this.destroyed) return;
                const code = Number(data.data);
                if (code === YOUTUBE_ERROR.HTML5_ERROR) return;
                if (code === YOUTUBE_ERROR.UNPLAYABLE_1 || code === YOUTUBE_ERROR.UNPLAYABLE_2 || code === YOUTUBE_ERROR.NOT_FOUND || code === YOUTUBE_ERROR.INVALID_PARAM) return this.emit("unplayable", this.videoId);
                this._destroy(new Error("YouTube Player Error. Unknown error code: " + code));
            }
            _onTimeupdate() {
                this.emit("timeupdate", this.getCurrentTime());
            }
            _startInterval() {
                this._interval = setInterval((() => this._onTimeupdate()), this._opts.timeupdateFrequency);
            }
            _stopInterval() {
                clearInterval(this._interval);
                this._interval = null;
            }
        }
        module.exports = YouTubePlayer;
    },
    "../shared/browser/report/common/baseReport.js": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
        "use strict";
        __webpack_require__.d(__webpack_exports__, {
            findSectionId: () => findSectionId,
            BaseReport: () => BaseReport
        });
        var _yy_sl_theme_shared_utils_report_page__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("../shared/browser/utils/report/page.js");
        var _yy_sl_theme_shared_utils_report_tool__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("../shared/browser/utils/report/tool.js");
        function findSectionId(selector) {
            if (!selector || !__SL_$__(selector)) return;
            const id = __SL_$__(selector).closest(".shopline-section").attr("id");
            const trueId = id ? id.replace("shopline-section-", "") : "";
            return trueId;
        }
        class BaseReport {
            static getPage() {
                const alias = window.SL_State.get("templateAlias");
                const template = window.SL_State.get("template");
                if ("Page" !== alias) return _yy_sl_theme_shared_utils_report_page__WEBPACK_IMPORTED_MODULE_0__["default"][alias] || alias;
                const isCustomPage = template.toLowerCase() === alias.toLowerCase();
                return isCustomPage ? _yy_sl_theme_shared_utils_report_page__WEBPACK_IMPORTED_MODULE_0__["default"].Page.custom_page : _yy_sl_theme_shared_utils_report_page__WEBPACK_IMPORTED_MODULE_0__["default"].Page.smart_landing_page;
            }
            constructor(page) {
                this.page = page || BaseReport.getPage() || "";
            }
            static collect(params) {
                if (!window.HdSdk) return;
                window.HdSdk.shopTracker.collect(params);
            }
            static expose(params) {
                if (!window.HdSdk) return;
                window.HdSdk.shopTracker.expose(params);
            }
            click(customParams) {
                if (!window.HdSdk) return;
                const params = {
                    page: this.page,
                    action_type: 102,
                    event_name: "Click",
                    ...customParams
                };
                window.HdSdk.shopTracker.collect(params);
            }
            handleView({selector, targetList, threshold, duration, reportOnce, customParams, viewType = "view"}) {
                if (!window.HdSdk) return;
                const commonParams = {
                    page: this.page
                };
                const objectParams = {
                    ...commonParams,
                    ...customParams
                };
                const funcParams = target => {
                    const funcCustomParams = customParams(target);
                    return {
                        ...commonParams,
                        ...funcCustomParams
                    };
                };
                window.HdSdk.shopTracker.expose({
                    selector,
                    targetList,
                    [viewType]: {
                        reportOnce,
                        threshold,
                        duration,
                        params: "function" === typeof customParams ? funcParams : objectParams
                    }
                });
            }
            view({selector, targetList, reportOnce = true, duration, threshold, customParams}) {
                this.handleView({
                    selector,
                    targetList,
                    reportOnce,
                    duration,
                    threshold,
                    customParams,
                    viewType: "view"
                });
            }
            viewSuccess({selector, targetList, threshold = .5, duration = 500, reportOnce = true, customParams}) {
                this.handleView({
                    selector,
                    targetList,
                    reportOnce,
                    duration,
                    threshold,
                    customParams,
                    viewType: "viewSuccess"
                });
            }
            viewContent({selector, targetList, reportOnce, threshold, customParams}) {
                const params = {
                    component: -999,
                    event_name: "ViewContent",
                    action_type: "ViewContent",
                    ...customParams
                };
                this.view({
                    selector,
                    targetList,
                    reportOnce,
                    threshold,
                    customParams: params
                });
            }
            viewItemList({selector, customParams}) {
                const params = {
                    page: this.page,
                    module: -999,
                    component: -999,
                    action_type: "",
                    event_name: "ViewItemList",
                    event_id: `ViewItemList${(0, _yy_sl_theme_shared_utils_report_tool__WEBPACK_IMPORTED_MODULE_1__.getEventID)()}`,
                    ...customParams
                };
                this.view({
                    selector,
                    customParams: params
                });
            }
            selectContent({baseParams, customParams}) {
                const pageItemMap = {
                    101: {
                        module: 900,
                        component: 101
                    },
                    102: {
                        module: 109,
                        component: 101,
                        action_type: ""
                    },
                    103: {
                        module: 109,
                        component: 101
                    },
                    105: {
                        module: 108,
                        component: 101
                    }
                };
                const params = {
                    page: this.page,
                    event_name: "SelectContent",
                    current_source_page: BaseReport.getPage(),
                    ...pageItemMap[this.page],
                    ...baseParams,
                    ...customParams
                };
                BaseReport.collect(params);
            }
            searchResults({baseParams, customParams}) {
                const params = {
                    page: this.page,
                    module: -999,
                    component: -999,
                    action_type: "",
                    event_name: "SearchResults",
                    ...baseParams,
                    ...customParams
                };
                BaseReport.collect(params);
            }
        }
    },
    "../shared/browser/report/product/product-item.js": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
        "use strict";
        __webpack_require__.d(__webpack_exports__, {
            default: () => ProductItemReport,
            hdProductItemSelect: () => hdProductItemSelect,
            hdProductItemView: () => hdProductItemView
        });
        var _yy_sl_theme_shared_report_common_baseReport__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("../shared/browser/report/common/baseReport.js");
        var _yy_sl_theme_shared_report_product_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("../shared/browser/report/product/utils/index.js");
        var _yy_sl_theme_shared_utils_newCurrency__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("../shared/browser/utils/newCurrency/index.js");
        var lodash_get__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("../shared/browser/node_modules/lodash/get.js");
        var lodash_get__WEBPACK_IMPORTED_MODULE_3___default = __webpack_require__.n(lodash_get__WEBPACK_IMPORTED_MODULE_3__);
        var _stage_const__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__("../shared/browser/report/stage/const.js");
        var _utils_syntax_patch__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__("../shared/browser/utils/syntax-patch.js");
        function tryDecodeURIComponent(str) {
            try {
                return decodeURIComponent(str);
            } catch (e) {
                return str;
            }
        }
        const getTagBrandTypeReportCollectionName = title => {
            const {pathname, search} = window.location;
            let collectionName = title;
            if ("/collections/types" === pathname || "/collections/brands" === pathname) collectionName = tryDecodeURIComponent(pathname.replace("/collections/", "") + search); else {
                const pathnameArr = pathname.split("/");
                if ("" === pathnameArr[pathnameArr.length - 1]) pathnameArr.pop();
                if ("collections" === pathnameArr[1] && 4 === pathnameArr.length) collectionName += tryDecodeURIComponent(pathname.replace("/collections/", "") + search);
            }
            return collectionName;
        };
        const {formatCurrency} = _yy_sl_theme_shared_utils_newCurrency__WEBPACK_IMPORTED_MODULE_2__["default"];
        const pageItemMap = {
            101: {
                module: 900,
                component: 101,
                component_ID: (0, _yy_sl_theme_shared_report_common_baseReport__WEBPACK_IMPORTED_MODULE_0__.findSectionId)("[data-plugin-product-item-a]")
            },
            102: {
                module: 109,
                component: 101,
                action_type: ""
            },
            103: {
                module: 109,
                component: 101
            },
            105: {
                module: 108,
                component: 101
            }
        };
        class ProductItemReport extends _yy_sl_theme_shared_report_common_baseReport__WEBPACK_IMPORTED_MODULE_0__.BaseReport {
            itemListView(reportData) {
                (0, _yy_sl_theme_shared_report_product_utils__WEBPACK_IMPORTED_MODULE_1__.validParams)(reportData);
                const {baseParams = {}, productsInfo} = reportData;
                const {productSortation, productList} = productsInfo;
                const productsInfoParams = {
                    list_name: productSortation.id ? productSortation.sortation.sortation.title : "All Products",
                    items: productList.map((({reportSkuId, spuSeq, productMinPrice}, index) => ({
                        sku_id: reportSkuId,
                        spu_id: spuSeq,
                        position: index + 1,
                        collection_id: (0, _utils_syntax_patch__WEBPACK_IMPORTED_MODULE_5__.nullishCoalescingOperator)(lodash_get__WEBPACK_IMPORTED_MODULE_3___default()(productSortation, "sortation.sortation.sortationId"), ""),
                        collection_name: getTagBrandTypeReportCollectionName((0, _utils_syntax_patch__WEBPACK_IMPORTED_MODULE_5__.nullishCoalescingOperator)(lodash_get__WEBPACK_IMPORTED_MODULE_3___default()(productSortation, "sortation.sortation.title"), "")),
                        price: formatCurrency(productMinPrice),
                        quantity: 1
                    })))
                };
                const customParams = {
                    ...productsInfoParams
                };
                super.viewItemList({
                    selector: `.__sl-custom-track-${productSortation.id ? productSortation.id : "all-products"}`,
                    ...baseParams,
                    customParams
                });
            }
            itemView(reportData) {
                (0, _yy_sl_theme_shared_report_product_utils__WEBPACK_IMPORTED_MODULE_1__.validParams)(reportData);
                const {baseParams = {}, productInfo = {}, extInfo = {}} = reportData;
                const {reportSkuId, spuSeq, productMinPrice, index, soldOut} = productInfo;
                const productInfoParams = {
                    sku_id: reportSkuId,
                    spu_id: spuSeq,
                    price: formatCurrency(productMinPrice),
                    position: index + 1,
                    status: soldOut ? 102 : 101
                };
                const params = {
                    page: this.page,
                    ...baseParams,
                    ...productInfoParams,
                    ...extInfo
                };
                super.view({
                    selector: `.__sl-custom-track-product-item-${spuSeq}`,
                    customParams: params
                });
            }
            itemSelect(reportData) {
                (0, _yy_sl_theme_shared_report_product_utils__WEBPACK_IMPORTED_MODULE_1__.validParams)(reportData);
                const {baseParams = {}, productInfo} = reportData;
                const {id, skuId, price, index, name, moduleType} = productInfo;
                const productInfoParams = {
                    content_ids: id,
                    sku_id: skuId,
                    content_name: name,
                    currency: window.SL_State.get("storeInfo.currency"),
                    value: formatCurrency(price),
                    position: index + 1
                };
                const params = {
                    ...baseParams,
                    ...productInfoParams
                };
                if (101 === this.page) Object.assign(params, {
                    ...pageItemMap[101],
                    module_type: (0, _utils_syntax_patch__WEBPACK_IMPORTED_MODULE_5__.nullishCoalescingOperator)(_stage_const__WEBPACK_IMPORTED_MODULE_4__.sectionTypeEnum[moduleType], moduleType)
                });
                super.selectContent({
                    customParams: params
                });
            }
        }
        function hdProductItemSelect(reportData) {
            const hdReport = new ProductItemReport;
            const {baseParams = {}, productInfo} = reportData;
            hdReport.itemSelect({
                baseParams: {
                    component_ID: (0, _yy_sl_theme_shared_report_common_baseReport__WEBPACK_IMPORTED_MODULE_0__.findSectionId)("[data-plugin-product-item-a]"),
                    ...baseParams
                },
                productInfo
            });
        }
        function hdProductItemView(params) {
            const hdReport = new ProductItemReport;
            const {sectionClass, moreInfo} = params;
            hdReport.view({
                selector: `${sectionClass} .product-item`,
                customParams: {
                    ...pageItemMap[hdReport.page],
                    ...moreInfo
                }
            });
        }
    },
    "../shared/browser/report/product/utils/index.js": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
        "use strict";
        __webpack_require__.d(__webpack_exports__, {
            getCartId: () => getCartId,
            validParams: () => validParams
        });
        __webpack_require__("../shared/browser/utils/report/page.js");
        var lodash_isPlainObject__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("../shared/browser/node_modules/lodash/isPlainObject.js");
        var lodash_isPlainObject__WEBPACK_IMPORTED_MODULE_1___default = __webpack_require__.n(lodash_isPlainObject__WEBPACK_IMPORTED_MODULE_1__);
        function getCartId() {
            return new Promise(((resolve, reject) => {
                if (window.Shopline && window.Shopline.event && window.Shopline.event.emit) window.Shopline.event.emit("Cart::GetCartId", {
                    onSuccess(res) {
                        if (res && res.success) {
                            const ownerId = res.data;
                            resolve(ownerId);
                        }
                        reject(res);
                    },
                    onError(error) {
                        reject(error);
                    }
                });
            }));
        }
        function validParams(target) {
            try {
                if (!target || !lodash_isPlainObject__WEBPACK_IMPORTED_MODULE_1___default()(target)) throw new Error;
            } catch (error) {
                throw new Error(`report function params must be object ${error}`);
            }
        }
    },
    "../shared/browser/report/stage/const.js": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
        "use strict";
        __webpack_require__.d(__webpack_exports__, {
            sectionTypeEnum: () => sectionTypeEnum,
            virtualComponentEnum: () => virtualComponentEnum,
            virtualPageEnum: () => virtualPageEnum
        });
        const sectionTypeEnum = {
            header: "页头",
            footer: "页脚",
            "collection-list": "商品分类",
            "custom-html": "自定义HTML",
            faqs: "常见问题",
            "featured-collection": "精选商品",
            "image-with-text": "图文模块",
            "large-image-with-text-box": "单图",
            "logo-list": "图标申明",
            slideshow: "轮播图",
            "text-columns-with-images": "图文列表",
            video: "视频",
            "footer-promotion": "页脚推广",
            "featured-product": "单个商品",
            "rich-text": "富文本",
            "sign-up-and-save": "邮箱订阅",
            "icon-list": "商标列表",
            "promotion-grid": "活动推广",
            "split-slideshow": "特色轮播图",
            grid: "图文网格",
            mosaic: "特色推荐",
            "multilevel-filter": "多级筛选",
            "shoppable-image": "购物图片",
            testimonials: "评论模块",
            timeline: "时间线",
            blog: "博客",
            "contact-form": "联系我们表单",
            "image-banner": "图片横幅",
            "multi-media-splicing": "媒体拼接",
            "custom-page": "自定义页面",
            map: "地图",
            "carousel-collection-list": "轮播商品分类",
            "carousel-images-with-text": "图文轮播",
            "featured-logo-list": "特色图标申明",
            "collection-with-image": "带封面的精选商品",
            offers: "优惠横幅",
            "product-list": "商品列表"
        };
        const virtualComponentEnum = {
            user: 101,
            cart: 102,
            search: 103,
            localeItem: 104,
            locale: 105,
            currencyItem: 106,
            currency: 107,
            navItem: 108,
            announcement: 109,
            socialItem: 110,
            newsletter: 111
        };
        const virtualPageEnum = {
            fixedSction: 132,
            dynamicSection: 145
        };
    },
    "../shared/browser/report/stage/index.js": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
        "use strict";
        __webpack_require__.d(__webpack_exports__, {
            StageReport: () => StageReport
        });
        var baseReport = __webpack_require__("../shared/browser/report/common/baseReport.js");
        class InputReport {
            constructor({selector, params}) {
                this.$el = __SL_$__(selector);
                this.params = params;
                this.changed = false;
                this.init();
            }
            init() {
                this.bindInput();
                this.bindBlur();
            }
            bindInput() {
                this.$el.on("input", (() => {
                    this.changed = true;
                }));
            }
            bindBlur() {
                this.$el.on("blur", (e => {
                    if (!this.changed || !window.HdSdk) return;
                    const params = {
                        ...this.params,
                        component_ID: (0, baseReport.findSectionId)(e.target)
                    };
                    window.HdSdk.shopTracker.collect(params);
                    this.changed = false;
                }));
            }
        }
        class HoverReport {
            constructor({selector, params}) {
                this.$el = __SL_$__(selector);
                this.params = params;
                this.init();
            }
            init() {
                this.bindMouseenter();
            }
            bindMouseenter() {
                this.$el.on("mouseenter", (e => {
                    const $target = __SL_$__(e.target);
                    const isTarget = $target.attr("class") === this.$el.attr("class");
                    if (!isTarget) return;
                    const params = {
                        ...this.params,
                        component_ID: (0, baseReport.findSectionId)(e.target)
                    };
                    window.HdSdk && window.HdSdk.shopTracker.collect(params);
                    this.changed = false;
                }));
            }
        }
        var stage_const = __webpack_require__("../shared/browser/report/stage/const.js");
        class StageReport extends baseReport.BaseReport {
            constructor() {
                super();
                this.defaultParams = {
                    current_source_page: baseReport.BaseReport.getPage()
                };
                this.inputReportMap = {};
                this.hoverReportMap = {};
            }
            click(params) {
                super.click({
                    ...this.defaultParams,
                    ...params
                });
            }
            expose({selector, moreInfo}) {
                const $els = __SL_$__(selector);
                if (!$els.length) return;
                const paramsFn = target => {
                    const id = (0, baseReport.findSectionId)(target);
                    const params = {
                        component_ID: id,
                        ...this.defaultParams,
                        ...moreInfo
                    };
                    return params;
                };
                const view = {
                    reportOnce: true,
                    threshold: 0,
                    params: paramsFn
                };
                const viewSuccess = {
                    reportOnce: true,
                    threshold: .5,
                    duration: 500,
                    params: paramsFn
                };
                baseReport.BaseReport.expose({
                    targetList: document.querySelectorAll(selector),
                    view,
                    viewSuccess
                });
            }
            bindFallbackClick({wrapperSel, targetSel, fallbackSel, moreInfo}) {
                __SL_$__(wrapperSel).on("click", (e => {
                    const id = (0, baseReport.findSectionId)(e.target);
                    const params = {
                        component_ID: id,
                        ...this.defaultParams,
                        ...moreInfo
                    };
                    const $target = __SL_$__(e.target);
                    const $wrapper = $target.closest(wrapperSel);
                    const hasTarget = $wrapper.find(targetSel).length > 0;
                    const clickOnTarget = $target.closest(targetSel).length > 0;
                    const clickOnFallback = $target.closest(fallbackSel).length > 0;
                    if (hasTarget && !clickOnTarget) return;
                    if (!hasTarget && clickOnFallback) {
                        this.click(params);
                        return;
                    }
                    if (clickOnTarget) this.click(params);
                }));
            }
            bindClick({selector, moreInfo, customHandler}) {
                if (!selector) return;
                __SL_$__(document.body).on("click", selector, (e => {
                    const id = (0, baseReport.findSectionId)(e.target);
                    const params = {
                        component_ID: id,
                        ...this.defaultParams,
                        ...moreInfo
                    };
                    if (customHandler) customHandler(e, params); else this.click(params);
                }));
            }
            bindInput({selector, type = "", moreInfo}) {
                const params = {
                    ...this.defaultParams,
                    module_type: stage_const.sectionTypeEnum[type] || type,
                    action_type: 103,
                    event_name: "Input",
                    ...moreInfo
                };
                const instance = new InputReport({
                    selector,
                    params
                });
                this.inputReportMap[selector] = instance;
            }
            bindHover({selector, type = ""}) {
                const params = {
                    ...this.defaultParams,
                    module_type: stage_const.sectionTypeEnum[type] || type,
                    action_type: 109,
                    event_name: "Hover"
                };
                const instance = new HoverReport({
                    selector,
                    params
                });
                this.hoverReportMap[selector] = instance;
            }
            collect(params) {
                window.HdSdk && window.HdSdk.shopTracker.collect({
                    ...this.defaultParams,
                    ...params
                });
            }
        }
    },
    "../shared/browser/utils/checkout.js": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
        "use strict";
        __webpack_require__.d(__webpack_exports__, {
            default: () => __WEBPACK_DEFAULT_EXPORT__
        });
        var _yy_sl_theme_shared_utils_logger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("../shared/browser/utils/logger/index.js");
        var _yy_sl_theme_shared_utils_i18n__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("../shared/browser/utils/i18n.js");
        var _createLogger__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("../shared/browser/utils/createLogger.js");
        var _request__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("../shared/browser/utils/request.js");
        var _state_selector__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__("../shared/browser/utils/state-selector.js");
        var _url_adaptor__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__("../shared/browser/utils/url-adaptor.js");
        var _tradeReport__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__("../shared/browser/utils/tradeReport/index.js");
        var _tradeReport_const__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__("../shared/browser/utils/tradeReport/const.js");
        var _event_bus__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__("../shared/browser/utils/event-bus.js");
        var _dataAccessor__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__("../shared/browser/utils/dataAccessor.js");
        var _components_hbs_shared_components_toast__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__("../shared/browser/components/hbs/shared/components/toast/index.js");
        const {GO_TO_CHECKOUT} = _tradeReport_const__WEBPACK_IMPORTED_MODULE_7__.HD_EVENT_NAME;
        function isJsonParse(str) {
            try {
                JSON.parse(str);
            } catch (e) {
                return false;
            }
            return true;
        }
        const helperConsole = {
            checkout: (0, _createLogger__WEBPACK_IMPORTED_MODULE_2__["default"])("checkout")
        };
        const logger = _yy_sl_theme_shared_utils_logger__WEBPACK_IMPORTED_MODULE_0__["default"].pipeOwner({
            owner: "checkout",
            onTag: key => {
                switch (key) {
                  case "orderFrom":
                  case "code":
                    return true;

                  default:
                    return false;
                }
            }
        });
        const services = {
            save: async (products, {associateCart = false, useMemberPoint = null, discountCode = null, bundledActivitySeq = null, orderFrom = null, dataReportReq} = {}) => _request__WEBPACK_IMPORTED_MODULE_3__["default"].post("/trade/center/order/abandoned/save", {
                products,
                associateCart,
                discountCodes: Array.isArray(discountCode) ? discountCode : [ discountCode ],
                bundledActivitySeq,
                useMemberPoint,
                orderFrom,
                dataReportReq
            })
        };
        const RouterPath = {
            SignIn: "/user/signIn",
            Checkout: "/trade/checkout",
            Checkouts: "/checkouts"
        };
        const ADD_TO_CART_EVENT_KEY = "Symbol(ADD_TO_CART)";
        const getCheckoutUrl = (data, {query = {}, associateCart, abandonedOrderMark = ""} = {}) => {
            const urlPrefix = `${window.location.protocol}//${window.location.host}`;
            const {storeId, checkoutToken, seq} = data;
            const {url} = (0, _url_adaptor__WEBPACK_IMPORTED_MODULE_5__.adaptor)(checkoutToken ? `${urlPrefix}/${storeId}${RouterPath.Checkouts}/${checkoutToken}` : `${urlPrefix}${RouterPath.Checkout}/${seq}`, {
                query: {
                    buyScence: associateCart ? "cart" : "detail",
                    ...query,
                    mark: abandonedOrderMark
                },
                fullQuery: false
            });
            return url;
        };
        const save = async (products, extra = {}) => {
            const {stage, query = {}, associateCart = false, abandonedOrderSeq, abandonedOrderMark} = extra;
            try {
                const settleConfig = _state_selector__WEBPACK_IMPORTED_MODULE_4__.SL_State.get("tradeSettleConfig");
                const isLogin = _state_selector__WEBPACK_IMPORTED_MODULE_4__.SL_State.get("request.cookie.osudb_uid");
                const {onBeforeJump, report, needReport, reportParamsExt, abandonedOrderSeq, abandonedOrderMark} = extra;
                const needLogin = settleConfig && "ONLY_LOGIN" === settleConfig.loginType;
                const {discountCode, ...rest} = extra;
                let _discountCode = discountCode;
                if (!associateCart) {
                    const tradeExtraInfoStr = sessionStorage.getItem("tradeExtraInfo");
                    const tradeExtraInfo = isJsonParse(tradeExtraInfoStr) ? JSON.parse(tradeExtraInfoStr) : {};
                    _discountCode = tradeExtraInfo && tradeExtraInfo.discountCode && tradeExtraInfo.discountCode.value;
                }
                const reqParams = {
                    associateCart,
                    discountCode: _discountCode,
                    orderFrom: (0, _dataAccessor__WEBPACK_IMPORTED_MODULE_10__.getSyncData)("orderFrom"),
                    dataReportReq: reportParamsExt,
                    ...rest
                };
                if (!abandonedOrderSeq) {
                    const isDismissParams = [ "orderFrom" ].some((key => !reqParams[key] && 0 !== reqParams[key]));
                    if (isDismissParams) logger.info("[成单请求参数缺失，请检查]", {
                        ...reqParams
                    });
                    logger.debug("[成单请求参数初始化]", {
                        ...reqParams
                    });
                }
                const response = abandonedOrderSeq ? await Promise.resolve({
                    data: {
                        seq: abandonedOrderSeq,
                        mark: abandonedOrderMark
                    }
                }) : await services.save(products, reqParams);
                logger.debug("[成单请求响应数据]", {
                    ...response && response.data
                });
                helperConsole.checkout.info({
                    ...response && response.data
                });
                const redirectToSignIn = !isLogin && needLogin;
                const checkoutUrl = getCheckoutUrl({
                    storeId: _state_selector__WEBPACK_IMPORTED_MODULE_4__.SL_State.get("storeInfo.storeId"),
                    checkoutToken: response.data.checkoutToken,
                    seq: response.data.seq
                }, {
                    query: {
                        ...query,
                        spb: redirectToSignIn ? null : query.spb
                    },
                    abandonedOrderMark,
                    associateCart
                });
                _event_bus__WEBPACK_IMPORTED_MODULE_8__.SL_EventBus.emit(GO_TO_CHECKOUT, {
                    data: {
                        event_status: response && response.data && response.data.seq ? _tradeReport_const__WEBPACK_IMPORTED_MODULE_7__.hiidoEventStatus.SUCCESS : _tradeReport_const__WEBPACK_IMPORTED_MODULE_7__.hiidoEventStatus.ERROR,
                        stage,
                        isCart: associateCart,
                        products,
                        spb: query && query.spb
                    }
                });
                (0, _tradeReport__WEBPACK_IMPORTED_MODULE_6__.setIniiateCheckout)(response.data.seq, needReport);
                const urlPrefix = `${window.location.protocol}//${window.location.host}`;
                if (redirectToSignIn) {
                    const {url} = (0, _url_adaptor__WEBPACK_IMPORTED_MODULE_5__.adaptor)(`${urlPrefix}${RouterPath.SignIn}`, {
                        query: {
                            redirectUrl: checkoutUrl
                        },
                        fullQuery: false
                    });
                    "function" === typeof onBeforeJump && onBeforeJump();
                    try {
                        (0, _tradeReport__WEBPACK_IMPORTED_MODULE_6__.reportCheckout)({
                            products,
                            isCart: associateCart,
                            report
                        });
                        if (associateCart) window.SL_EventBus && window.SL_EventBus.emit("global:hdReport:exit", [ "60006254", {
                            event_name: "999",
                            page_dest: `${window.location.href}`
                        } ]);
                    } catch (e) {
                        console.error(e);
                    }
                    return Promise.resolve({
                        ...response.data,
                        url,
                        needLogin
                    });
                }
                "function" === typeof onBeforeJump && onBeforeJump();
                try {
                    (0, _tradeReport__WEBPACK_IMPORTED_MODULE_6__.reportCheckout)({
                        products,
                        isCart: associateCart,
                        report,
                        needReport
                    });
                    if (associateCart && "/cart" === window.location.pathname) window.SL_EventBus && window.SL_EventBus.emit("global:hdReport:exit", [ "60006254", {
                        event_name: "999",
                        page_dest: `${window.location.href}`
                    } ]);
                } catch (e) {
                    helperConsole.checkout.info(e);
                }
                return Promise.resolve({
                    url: checkoutUrl,
                    needLogin: false,
                    abandonedInfo: response.data
                });
            } catch (error) {
                _event_bus__WEBPACK_IMPORTED_MODULE_8__.SL_EventBus.emit(GO_TO_CHECKOUT, {
                    data: {
                        event_status: 0,
                        stage,
                        isCart: associateCart,
                        products,
                        spb: query && query.spb
                    }
                });
                const {code, message} = error || {};
                logger.error(`[成单请求报错]${code ? `[code: ${code}` : ""}${message ? `[msg: ${message}]` : ""}`, {
                    error,
                    abandonedOrderSeq,
                    abandonedOrderMark
                });
                if ("TCTDEXCEEDED_MAX_AMOUNT_LIMIT" === code) _components_hbs_shared_components_toast__WEBPACK_IMPORTED_MODULE_9__["default"].init({
                    content: (0, _yy_sl_theme_shared_utils_i18n__WEBPACK_IMPORTED_MODULE_1__.t)("cart.checkout.max_amount_limit")
                });
                return Promise.reject(error);
            }
        };
        const jump = async (products, extra = {}) => {
            const {url} = await save(products, extra);
            window.location.href = url;
        };
        let hasBoundAddToCartEvent = false;
        let addToCartEventName;
        const getAddToCartEventName = () => {
            if (addToCartEventName) return addToCartEventName;
            const eventNameList = window.SL_EventBus.eventNames() || [];
            return eventNameList.find((name => name.toString() === ADD_TO_CART_EVENT_KEY));
        };
        const addToCart = data => window.SL_EventBus.emit(getAddToCartEventName(), data);
        if (!hasBoundAddToCartEvent) {
            hasBoundAddToCartEvent = true;
            window.__SL_TRADE_EVENT__ = window.__SL_TRADE_EVENT__ || {};
            window.__SL_TRADE_EVENT__.addToCart = window.__SL_TRADE_EVENT__.addToCart || addToCart;
        }
        const __WEBPACK_DEFAULT_EXPORT__ = {
            jump,
            save
        };
    },
    "../shared/browser/utils/dataAccessor.js": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
        "use strict";
        __webpack_require__.d(__webpack_exports__, {
            getSyncData: () => getSyncData,
            setSyncData: () => setSyncData
        });
        function getSyncData(key) {
            if (!window.__SL_BUSINESS_DATA__) return null;
            return window.__SL_BUSINESS_DATA__[key] || null;
        }
        function setSyncData(payload) {
            if (!window.__SL_BUSINESS_DATA__) window.__SL_BUSINESS_DATA__ = {};
            Object.keys(payload).forEach((key => {
                window.__SL_BUSINESS_DATA__[key] = payload[key];
            }));
        }
    },
    "../shared/browser/utils/dataReport/ads.js": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
        "use strict";
        __webpack_require__.d(__webpack_exports__, {
            clickAdsData: () => clickAdsData,
            loadAdsData: () => loadAdsData
        });
        var js_cookie__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("../shared/browser/node_modules/js-cookie/src/js.cookie.js");
        var js_cookie__WEBPACK_IMPORTED_MODULE_0___default = __webpack_require__.n(js_cookie__WEBPACK_IMPORTED_MODULE_0__);
        var _report_const__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("../shared/browser/utils/report/const.js");
        const sendConversion = data => {
            const params = {
                ...data
            };
            if (params && !params.currency) params.currency = js_cookie__WEBPACK_IMPORTED_MODULE_0___default().get("currency_code");
            return [ "event", "conversion", params ];
        };
        const clickAdsData = (page, type) => {
            const res = [];
            switch (page) {
              case _report_const__WEBPACK_IMPORTED_MODULE_1__.PageType.ProductDetail:
                switch (type) {
                  case _report_const__WEBPACK_IMPORTED_MODULE_1__.ClickType.AddToCart:
                  case _report_const__WEBPACK_IMPORTED_MODULE_1__.ClickType.BeginCheckout:
                    break;

                  default:
                    return res;
                }
                break;

              case _report_const__WEBPACK_IMPORTED_MODULE_1__.PageType.MiniCart:
              case _report_const__WEBPACK_IMPORTED_MODULE_1__.PageType.Cart:
                if (type === _report_const__WEBPACK_IMPORTED_MODULE_1__.ClickType.BeginCheckout) ; else return res;
                break;

              case _report_const__WEBPACK_IMPORTED_MODULE_1__.PageType.CheckoutProgress:
                if (type === _report_const__WEBPACK_IMPORTED_MODULE_1__.ClickType.CheckoutProgress) ; else return res;
                break;

              case _report_const__WEBPACK_IMPORTED_MODULE_1__.PageType.CheckoutConfirm:
                if (type === _report_const__WEBPACK_IMPORTED_MODULE_1__.ClickType.PlaceOrder) ; else return res;
                break;

              case _report_const__WEBPACK_IMPORTED_MODULE_1__.PageType.OneShop:
                if (type === _report_const__WEBPACK_IMPORTED_MODULE_1__.ClickType.BeginCheckout) ; else return res;
                break;

              default:
                return res;
            }
            res.push(sendConversion());
            return res;
        };
        const loadAdsData = (page, params) => {
            let value = null;
            const data = [];
            switch (page) {
              case _report_const__WEBPACK_IMPORTED_MODULE_1__.PageType.Cart:
              case _report_const__WEBPACK_IMPORTED_MODULE_1__.PageType.CheckoutProgress:
              case _report_const__WEBPACK_IMPORTED_MODULE_1__.PageType.CheckoutConfirm:
              case _report_const__WEBPACK_IMPORTED_MODULE_1__.PageType.SalesPromotion:
                break;

              case _report_const__WEBPACK_IMPORTED_MODULE_1__.PageType.OrderConfirm:
                value = {
                    value: params.price,
                    currency: params.currency
                };
                break;

              default:
                return data;
            }
            data.push(sendConversion(value));
            return data;
        };
    },
    "../shared/browser/utils/dataReport/fb.js": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
        "use strict";
        __webpack_require__.d(__webpack_exports__, {
            clickFbData: () => clickFbData,
            loadFbData: () => loadFbData
        });
        var js_cookie__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("../shared/browser/node_modules/js-cookie/src/js.cookie.js");
        var _syntax_patch__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("../shared/browser/utils/syntax-patch.js");
        var _report_const__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("../shared/browser/utils/report/const.js");
        const clickFbData = (type, params) => {
            let value = null;
            let event = null;
            let evid = null;
            let res = [];
            if (type === _report_const__WEBPACK_IMPORTED_MODULE_2__.ClickType.AddToCart) {
                value = {
                    content_type: "product_group",
                    content_category: params && params.category,
                    content_ids: params && params.skuId,
                    content_name: params && params.name,
                    value: params && params.price,
                    currency: (0, _syntax_patch__WEBPACK_IMPORTED_MODULE_1__.nullishCoalescingOperator)(params && params.currency, js_cookie__WEBPACK_IMPORTED_MODULE_0__.get("currency_code"))
                };
                event = "AddToCart";
                evid = {
                    eventID: params && params.eventId
                };
                res.push([ "track", event, value, evid ]);
            } else res = [];
            return res;
        };
        const loadFbData = (page, params) => {
            let res = [];
            if (page === _report_const__WEBPACK_IMPORTED_MODULE_2__.PageType.OrderConfirm) res.push([ "track", "Purchase", {
                content_type: "product_group",
                content_ids: params && params.skuIds,
                value: params && params.amount,
                quantity: params && params.quantity,
                currency: (0, _syntax_patch__WEBPACK_IMPORTED_MODULE_1__.nullishCoalescingOperator)(params && params.currency, js_cookie__WEBPACK_IMPORTED_MODULE_0__.get("currency_code"))
            }, {
                eventID: params && params.eventId
            } ]); else res = [];
            return res;
        };
    },
    "../shared/browser/utils/dataReport/ga.js": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
        "use strict";
        __webpack_require__.d(__webpack_exports__, {
            default: () => __WEBPACK_DEFAULT_EXPORT__
        });
        var js_cookie__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("../shared/browser/node_modules/js-cookie/src/js.cookie.js");
        var js_cookie__WEBPACK_IMPORTED_MODULE_0___default = __webpack_require__.n(js_cookie__WEBPACK_IMPORTED_MODULE_0__);
        var _report_const__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("../shared/browser/utils/report/const.js");
        var _newCurrency__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("../shared/browser/utils/newCurrency/index.js");
        class GoogleAnalysis {
            constructor(config) {
                this.config = config;
            }
            sendEventLog(eventType, data) {
                const params = {
                    ...data
                };
                if (params && !params.currency) params.currency = js_cookie__WEBPACK_IMPORTED_MODULE_0___default().get("currency_code");
                return [ "event", eventType, params ];
            }
            clickForEnhancedEcom(page, clickType, params) {
                let event;
                let value;
                let res = [];
                switch (clickType) {
                  case _report_const__WEBPACK_IMPORTED_MODULE_1__.PageType.CheckoutProgress:
                  case _report_const__WEBPACK_IMPORTED_MODULE_1__.PageType.PlaceOrder:
                    event = _report_const__WEBPACK_IMPORTED_MODULE_1__.eventType.SetCheckoutOption;
                    value = {
                        value: params.amount,
                        checkout_step: params.step
                    };
                    break;

                  default:
                    return res;
                }
                res = this.sendEventLog(event, value);
                return res;
            }
            click(page, type, params) {
                let value;
                let event;
                const res = [];
                switch (type) {
                  case _report_const__WEBPACK_IMPORTED_MODULE_1__.ClickType.SelectContent:
                    event = _report_const__WEBPACK_IMPORTED_MODULE_1__.eventType.SelectContent;
                    value = {
                        content_type: "product",
                        items: [ {
                            id: params.skuId,
                            name: params.name,
                            price: params.price,
                            variant: params.variant
                        } ]
                    };
                    break;

                  case _report_const__WEBPACK_IMPORTED_MODULE_1__.ClickType.AddToCart:
                    event = _report_const__WEBPACK_IMPORTED_MODULE_1__.eventType.AddToCart;
                    value = {
                        items: [ {
                            id: params.skuId,
                            name: params.name,
                            price: params.price
                        } ]
                    };
                    break;

                  case _report_const__WEBPACK_IMPORTED_MODULE_1__.ClickType.RemoveFromCart:
                    event = _report_const__WEBPACK_IMPORTED_MODULE_1__.eventType.RemoveFromCart;
                    value = {
                        items: []
                    };
                    if (Array.isArray(params.productItems)) params.productItems.forEach((({skuId, name, price, quantity, variant}) => {
                        value.items.push({
                            id: skuId,
                            name,
                            price,
                            quantity,
                            variant: variant || ""
                        });
                    }));
                    break;

                  default:
                    return [];
                }
                res.push(this.sendEventLog(event, value));
                if (this.config.enableEnhancedEcom) res.push(this.clickForEnhancedEcom(page, type, params));
                return res;
            }
            clickGa4({actionType, params}) {
                let value;
                let event;
                const res = [];
                switch (actionType) {
                  case _report_const__WEBPACK_IMPORTED_MODULE_1__.ClickType.SelectContent:
                    event = _report_const__WEBPACK_IMPORTED_MODULE_1__.eventType.SelectContent;
                    value = {
                        content_type: "product",
                        item_id: params.skuId
                    };
                    break;

                  case _report_const__WEBPACK_IMPORTED_MODULE_1__.ClickType.AddToCart:
                    event = _report_const__WEBPACK_IMPORTED_MODULE_1__.eventType.AddToCart;
                    value = {
                        value: params.amount,
                        items: [ {
                            item_id: params.itemNo || params.skuId,
                            item_name: params.name,
                            price: params.price,
                            quantity: params.productNum,
                            item_variant: (params.productSkuAttrList || []).join(",")
                        } ]
                    };
                    break;

                  case _report_const__WEBPACK_IMPORTED_MODULE_1__.ClickType.RemoveFromCart:
                    event = _report_const__WEBPACK_IMPORTED_MODULE_1__.eventType.RemoveFromCart;
                    value = {
                        value: params.value,
                        items: []
                    };
                    if (Array.isArray(params.productItems)) params.productItems.forEach((({skuId, name, price, quantity, variant}) => {
                        value.items.push({
                            item_id: skuId,
                            item_name: name,
                            price,
                            quantity,
                            item_variant: variant || ""
                        });
                    }));
                    break;

                  case _report_const__WEBPACK_IMPORTED_MODULE_1__.ClickType.ViewCart:
                    event = _report_const__WEBPACK_IMPORTED_MODULE_1__.eventType.ViewCart;
                    value = {
                        value: params.amount,
                        items: params.items && params.items.map((item => ({
                            item_id: item.itemNo || item.productId,
                            item_name: item.name,
                            price: _newCurrency__WEBPACK_IMPORTED_MODULE_2__["default"].formatCurrency(item.price),
                            quantity: item.num,
                            item_variant: (item.skuAttr || []).join(",")
                        })))
                    };
                    break;

                  default:
                    return [];
                }
                res.push(this.sendEventLog(event, value));
                return res;
            }
        }
        const ga = new GoogleAnalysis({});
        const __WEBPACK_DEFAULT_EXPORT__ = ga;
    },
    "../shared/browser/utils/form/form.js": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
        "use strict";
        __webpack_require__.d(__webpack_exports__, {
            ValidateTrigger: () => ValidateTrigger,
            default: () => __WEBPACK_DEFAULT_EXPORT__
        });
        var _yy_sl_theme_shared_utils_event_bus__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("../shared/browser/utils/event-bus.js");
        const ValidateTrigger = {
            ONCHANGE: "onChange",
            MANUAL: "manual",
            ONBLUR: "manual",
            ONNATIVECHANGE: "onNativeChange"
        };
        const isPromiseFulfilledResult = result => "fulfilled" === result.status;
        const formItemName = "sl-form-item-name";
        const REQUIRED_SYMBOL = Symbol("required");
        class CustomForm {
            constructor(fid = "", {onDestory} = {
                onDestory: () => {}
            }) {
                this.fid = fid;
                this.onDestory = onDestory;
                this.formEntity = null;
                this.validateRecord = {};
                this.config = {
                    validateTrigger: ValidateTrigger.MANUAL,
                    requiredErrMsg: `这是必填字段!`,
                    defaultErrMsg: "请输入合法的值",
                    errContainerClss: "errClass",
                    validateWhenInit: false,
                    emitChangeWhenInit: false
                };
                this.canValidate = false;
                this.canEmitChange = true;
                this.hadInit = false;
                this.el = document.querySelector(`#${fid}`);
                const eventBus = new _yy_sl_theme_shared_utils_event_bus__WEBPACK_IMPORTED_MODULE_0__.SL_EventEmitter;
                this.eventBus = eventBus;
                this.on = this.eventBus.on.bind(eventBus);
                this.emit = this.eventBus.emit.bind(eventBus);
            }
            init(config) {
                if (this.hadInit) return false;
                try {
                    this.initFormConfig(config);
                    const formItems = this.el.querySelectorAll(`[${formItemName}]`);
                    const {initialData, childrenProps} = this.calculatePropsAndInitialData(formItems);
                    this.formEntity = {
                        data: initialData,
                        childrenProps,
                        el: this.el
                    };
                    this.initEventListener(this.el);
                    this.hadInit = true;
                } catch (e) {
                    console.warn(`${this.fid} is not found, ${e}`);
                }
            }
            initFormConfig(config) {
                if (config) {
                    Object.assign(this.config, config);
                    if (config && config.validateWhenInit) this.canValidate = true;
                    if (config && config.emitChangeWhenInit) this.canEmitChange = true;
                }
            }
            initEventListener(el) {
                el.addEventListener("input", (e => this.handleFormInputEvent(e)));
                const formItems = el.querySelectorAll(`[${formItemName}]`);
                formItems.forEach((el => {
                    const inp = el.querySelector("input,textarea");
                    if (inp) {
                        inp.addEventListener("change", (e => {
                            console.log("input-change", this.config.validateTrigger);
                            if (this.config.validateTrigger === ValidateTrigger.ONNATIVECHANGE) {
                                const target = e.target;
                                const parentNode = this.recursionFindParent(target, formItemName);
                                if (!parentNode) return;
                                const targetName = parentNode.getAttribute(formItemName);
                                this.validateFields([ targetName ]);
                            }
                        }));
                        inp.addEventListener("blur", (e => {
                            const target = e.target;
                            const parentNode = this.recursionFindParent(target, formItemName);
                            if (!parentNode) return;
                            const targetName = parentNode.getAttribute(formItemName);
                            if (this.config.validateTrigger === ValidateTrigger.ONBLUR) this.validateFields([ targetName ]);
                            if (this.config.blurSucHandler || this.config.blurErrHandler) this.validateFields([ targetName ], false).then((res => {
                                if (!res) return;
                                if (res.pass) this.config && this.config.blurSucHandler && this.config.blurSucHandler(targetName, target.value, this.formEntity.data); else this.config && this.config.blurErrHandler && this.config.blurErrHandler(res);
                            }));
                        }));
                    }
                }));
            }
            handleFormInputEvent(e) {
                if (!this.fid) return;
                const target = e.target;
                const parentNode = this.recursionFindParent(target, formItemName);
                if (!parentNode) return;
                const targetName = parentNode.getAttribute(formItemName);
                if (targetName) {
                    this.canValidate = true;
                    if (this.isRadioOrCheckbox(target, [ "checkbox" ])) this.setLocalsValue(targetName, target.checked); else this.setLocalsValue(targetName, target.value);
                }
            }
            recursionFindParent(el, attr) {
                const parent = el.parentElement;
                if (!parent) return null;
                const val = parent.getAttribute(attr);
                if (val) return parent;
                return this.recursionFindParent(parent, attr);
            }
            calculatePropsAndInitialData(nodeList) {
                if (0 === nodeList.length) return {
                    initialData: {},
                    childrenProps: []
                };
                let childrenProps = [];
                const initialData = {};
                try {
                    childrenProps = Array.from(nodeList).map((formItem => {
                        const name = formItem.getAttribute(formItemName);
                        const child = formItem.querySelector("input,select,textarea");
                        const attrs = child.getAttributeNames();
                        const childAttrs = attrs.reduce(((acc, curAttr) => {
                            if ("value" === curAttr) initialData[name] = child.getAttribute(curAttr) || child.value;
                            return {
                                ...acc,
                                [curAttr]: child.getAttribute(curAttr)
                            };
                        }), {});
                        return Object.assign(childAttrs, {
                            name
                        });
                    }));
                } catch (e) {
                    console.error(`${this.fid} calculate form item error: `, e);
                }
                return {
                    initialData,
                    childrenProps
                };
            }
            setValues(fields) {
                fields.forEach((({name, value, rules}) => {
                    this.setDomValue(this.el, name, value);
                    this.setRule(rules, name);
                    this.setLocalsValue(name, value);
                }));
            }
            setRule(rules, name) {
                const target = this.formEntity.childrenProps.find((prop => prop.name === name));
                if (target) target.rules = rules || [];
            }
            isRadioOrCheckbox(target, nodeTypeList = [ "radio", "checkbox" ]) {
                const nodeType = target && target.getAttribute("type");
                if (!nodeType) return false;
                return "input" === target.nodeName.toLocaleLowerCase() && nodeTypeList.includes(nodeType);
            }
            setDomValue(parent, name, value) {
                const targets = parent.querySelectorAll(`[${formItemName}=${name}] input,[${formItemName}=${name}] select,[${formItemName}=${name}] textarea`);
                if (targets.length) targets.forEach((target => {
                    if (this.isRadioOrCheckbox(target)) {
                        if (target.value === value) target.click();
                    } else if (!target.name || target.name === name) target.value = null !== value && void 0 !== value ? value : "";
                }));
            }
            setLocalsValue(name, value) {
                const changedValue = {
                    [name]: value
                };
                const allValues = Object.assign(this.formEntity && this.formEntity.data, changedValue);
                let validateResultPro = null;
                if (this.canValidate && this.config.validateTrigger === ValidateTrigger.ONCHANGE) validateResultPro = this.validateFields([ name ]);
                if (this.canEmitChange) this.eventBus.emit("valuesChange", {
                    changedValue,
                    allValues,
                    validateResult: validateResultPro
                });
            }
            flattenRulesList(list) {
                return list.reduce(((acc, field) => {
                    const subRules = field && field.rules.map((rule => ({
                        ...rule,
                        name: field.name
                    }))) || [];
                    return [ ...acc, ...subRules ];
                }), []);
            }
            getErrTmpStr(messages, className = "") {
                return messages.reduce(((acc, message) => acc + `<div class="${className}" style="margin-top: 6px;color: #f04949;font-size: 12px;line-height: 1.4;">${message}</div>`), "");
            }
            getErrListContainer(id, formItemContainer) {
                const target = this.el.querySelector(`[${id}]`);
                if (target) return target;
                const div = document.createElement("div");
                div.setAttribute(id, "1");
                formItemContainer.appendChild(div);
                return div;
            }
            setErrMsgIntoDom(errFields) {
                errFields.forEach((({name, messages}) => {
                    const errTmp = this.getErrTmpStr(messages, this.config.errContainerClss);
                    const id = `cf-${this.fid}-${name}`;
                    const target = this.el.querySelector(`[${formItemName}=${name}]`);
                    if (!Array.from(target.classList).includes(this.config.errContainerClss)) target.classList.add(this.config.errContainerClss);
                    const container = this.getErrListContainer(id, target);
                    container.innerHTML = errTmp;
                }));
            }
            removeErrList(fields) {
                fields.forEach((name => {
                    const target = this.el.querySelector(`[cf-${this.fid}-${name}]`);
                    if (target) target.remove();
                    if (this.config.errContainerClss) {
                        const formItemWrapper = this.el.querySelector(`[${formItemName}=${name}]`);
                        formItemWrapper && formItemWrapper.classList && formItemWrapper.classList.remove && formItemWrapper.classList.remove(this.config.errContainerClss);
                    }
                }));
            }
            setErrFields(target, errFields, name, errMsg) {
                if (!target) errFields.push({
                    name,
                    messages: [ errMsg ]
                }); else target.messages.push(errMsg);
            }
            setFields(fields, callback, needEmit = true, needValidate = false) {
                try {
                    this.canValidate = needValidate;
                    this.canEmitChange = needEmit;
                    this.setValues(fields);
                    callback && callback();
                } catch (e) {
                    console.warn(`${this.fid} set fields fail,`, e);
                } finally {
                    this.canEmitChange = true;
                }
            }
            setRules(rulesField) {
                rulesField.forEach((({name, rules}) => {
                    this.setRule(rules, name);
                }));
            }
            getFieldValue(fieldName) {
                this.init();
                return this.formEntity.data[fieldName];
            }
            getFieldsValue() {
                this.init();
                return this.formEntity && this.formEntity.data;
            }
            async getLegalFieldsValue() {
                const result = await this.validateFields([], false);
                if (result && result.pass) return this.formEntity && this.formEntity.data;
                const unPassFields = result && result.errFields && result.errFields.map((field => field.name));
                return Object.entries(this.formEntity.data).reduce(((acc, [k, v]) => {
                    if (unPassFields.includes(k)) return acc;
                    return {
                        ...acc,
                        [k]: v
                    };
                }), {});
            }
            async validateFields(fields, handleError = true) {
                if (!this.formEntity) return null;
                const {childrenProps} = this.formEntity;
                const data = JSON.parse(JSON.stringify(this.formEntity.data));
                const needValidateFieldsName = fields && fields.length ? fields : Object.keys(this.formEntity.data);
                const needValidatefields = childrenProps.filter((prop => prop.rules && prop.rules.length > 0 && needValidateFieldsName && needValidateFieldsName.includes(prop.name)));
                const validateList = [];
                const needValidateRules = this.flattenRulesList(needValidatefields);
                try {
                    needValidateRules.forEach((rule => {
                        const {required, validator, pattern, name} = rule || {};
                        const value = data[name];
                        this.validateRecord[name] = value;
                        if (value) if (validator) validateList.push(validator(value, data)); else if (pattern) validateList.push(new RegExp(pattern).test(value)); else validateList.push(true); else if (validator && required) validateList.push(validator(value, data)); else validateList.push(required ? REQUIRED_SYMBOL : true);
                    }));
                } catch (e) {
                    console.warn(`${this.fid} calculate validator list fail:`, e);
                }
                const validateResult = await Promise.allSettled(validateList);
                const errFields = [];
                const successFields = new Set;
                for (let i = 0; i < validateResult.length; i++) {
                    const {name, message} = needValidateRules[i];
                    if (this.validateRecord[name] !== data[name]) return null;
                    const result = validateResult[i];
                    const target = errFields.find((err => err.name === name));
                    if (isPromiseFulfilledResult(result)) if (result.value === REQUIRED_SYMBOL) {
                        const requiredErrMsg = needValidateRules[i] && needValidateRules[i].message || this.config.requiredErrMsg;
                        if (!target) errFields.push({
                            name,
                            messages: [ requiredErrMsg ]
                        });
                    } else if (false === result.value) {
                        const errMsg = message || this.config.defaultErrMsg;
                        this.setErrFields(target, errFields, name, errMsg);
                    } else successFields.add(name); else {
                        const errMsg = message || result.reason || this.config.defaultErrMsg;
                        this.setErrFields(target, errFields, name, errMsg);
                    }
                }
                if (handleError) {
                    this.removeErrList(successFields);
                    this.setErrMsgIntoDom(errFields);
                    if (errFields.length) this.config.validateTrigger = this.config.validateTriggerAfterValidationFailed || ValidateTrigger.ONCHANGE;
                }
                return errFields.length ? {
                    pass: false,
                    errFields
                } : {
                    pass: true
                };
            }
            resetErrStatus(fields = Object.keys(this.formEntity.data)) {
                this.removeErrList(fields);
            }
            destroy() {
                this.el.removeEventListener("input", this.handleFormInputEvent);
                this.hadInit = false;
                this.el = null;
                this.eventBus = null;
                this.formEntity = null;
                this.onDestory && this.onDestory(this.fid);
                this.fid = null;
            }
        }
        const __WEBPACK_DEFAULT_EXPORT__ = CustomForm;
    },
    "../shared/browser/utils/form/index.js": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
        "use strict";
        __webpack_require__.d(__webpack_exports__, {
            default: () => __WEBPACK_DEFAULT_EXPORT__
        });
        var _form__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("../shared/browser/utils/form/form.js");
        function _defineProperty(obj, key, value) {
            if (key in obj) Object.defineProperty(obj, key, {
                value,
                enumerable: true,
                configurable: true,
                writable: true
            }); else obj[key] = value;
            return obj;
        }
        class Form {
            static takeForm(fid) {
                if (this.formInstanceList[fid]) return this.formInstanceList[fid];
                this.formInstanceList[fid] = new _form__WEBPACK_IMPORTED_MODULE_0__["default"](fid, {
                    onDestory: fid => {
                        Reflect.deleteProperty(this.formInstanceList, fid);
                    }
                });
                return this.formInstanceList[fid];
            }
        }
        _defineProperty(Form, "formInstanceList", {});
        const __WEBPACK_DEFAULT_EXPORT__ = Form;
    },
    "../shared/browser/utils/i18n.js": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
        "use strict";
        __webpack_require__.d(__webpack_exports__, {
            t: () => t
        });
        var _syntax_patch__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("../shared/browser/utils/syntax-patch.js");
        function parsePathToArray(path) {
            if ("string" !== typeof path) throw new TypeError("path must be string");
            return path.replace(/\]/, "").split(/[.[]/);
        }
        function t(path, hash) {
            const keys = parsePathToArray(path);
            const value = keys.reduce(((prev, current) => {
                if (!prev) return;
                return prev && prev.string ? prev.string[current] : prev[current];
            }), window.__I18N__);
            const regExp = /\{\{([^{}]+)\}\}/g;
            return (0, _syntax_patch__WEBPACK_IMPORTED_MODULE_0__.nullishCoalescingOperator)((0, 
            _syntax_patch__WEBPACK_IMPORTED_MODULE_0__.get_func)(value, "replace").exec(regExp, ((...args) => (0, 
            _syntax_patch__WEBPACK_IMPORTED_MODULE_0__.nullishCoalescingOperator)((0, _syntax_patch__WEBPACK_IMPORTED_MODULE_0__.get)(hash, args[1]), args[0]))), path);
        }
    },
    "../shared/browser/utils/img-size.js": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
        "use strict";
        __webpack_require__.d(__webpack_exports__, {
            default: () => img_size
        });
        var url__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("./node_modules/url/url.js");
        var query_string__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("../shared/browser/node_modules/query-string/index.js");
        function img_size(url) {
            const urlParse = url__WEBPACK_IMPORTED_MODULE_0__.parse(url);
            const urlQuery = query_string__WEBPACK_IMPORTED_MODULE_1__.parse(urlParse && urlParse.query) || {};
            const radix = 10;
            const fixed = 2;
            const width = Number.parseInt(urlQuery.w, radix);
            const height = Number.parseInt(urlQuery.h, radix);
            let ratio = null;
            if (Number.isInteger(width) && Number.isInteger(height) && 0 !== width) ratio = `${Number(Number.parseFloat(height / width * 100).toFixed(fixed))}%`;
            return {
                width: Number.isInteger(width) ? width : null,
                height: Number.isInteger(height) ? height : null,
                ratio
            };
        }
    },
    "../shared/browser/utils/load-script.js": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
        "use strict";
        __webpack_require__.d(__webpack_exports__, {
            default: () => __WEBPACK_DEFAULT_EXPORT__
        });
        var lodash_isObject__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("../shared/browser/node_modules/lodash/isObject.js");
        var lodash_isObject__WEBPACK_IMPORTED_MODULE_0___default = __webpack_require__.n(lodash_isObject__WEBPACK_IMPORTED_MODULE_0__);
        const loadScript = (src, options) => new Promise((resolve => {
            const scriptTag = document.createElement("script");
            scriptTag.src = src;
            if (options && lodash_isObject__WEBPACK_IMPORTED_MODULE_0___default()(options)) Object.entries(options).forEach((([key, value]) => {
                scriptTag[key] = value;
            }));
            const handler = () => {
                scriptTag.removeEventListener("load", handler);
                resolve();
            };
            scriptTag.addEventListener("load", handler);
            if (document.head) document.head.appendChild(scriptTag);
        }));
        const __WEBPACK_DEFAULT_EXPORT__ = loadScript;
    },
    "../shared/browser/utils/logger/env.js": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
        "use strict";
        __webpack_require__.d(__webpack_exports__, {
            default: () => __WEBPACK_DEFAULT_EXPORT__
        });
        var _get_env__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("../shared/browser/utils/get-env.js");
        const envConst = {
            DEBUG: "DEBUG",
            APP_ENV: "APP_ENV",
            APP_ENV__DEVELOP: "develop",
            APP_ENV__STAGING: "staging",
            APP_ENV__PREVIEW: "preview",
            APP_ENV__PRODUCT: "product"
        };
        function get(key) {
            return (0, _get_env__WEBPACK_IMPORTED_MODULE_0__["default"])()[key];
        }
        function isDebugMode() {
            const value = get(envConst.DEBUG);
            return "true" === value || "1" === value;
        }
        function appEnvQuery() {
            return get(envConst.APP_ENV) || "";
        }
        function appEnvInDevelop() {
            return appEnvQuery() === envConst.APP_ENV__DEVELOP;
        }
        function appEnvInStaging() {
            return appEnvQuery() === envConst.APP_ENV__STAGING;
        }
        const __WEBPACK_DEFAULT_EXPORT__ = {
            isDebugMode,
            appEnvQuery,
            appEnvInDevelop,
            appEnvInStaging
        };
    },
    "../shared/browser/utils/logger/index.js": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
        "use strict";
        __webpack_require__.d(__webpack_exports__, {
            default: () => __WEBPACK_DEFAULT_EXPORT__
        });
        var _funnyecho_logger__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("../shared/browser/node_modules/@funnyecho/logger/dist/index.js");
        var _funnyecho_logger__WEBPACK_IMPORTED_MODULE_1___default = __webpack_require__.n(_funnyecho_logger__WEBPACK_IMPORTED_MODULE_1__);
        var _transports__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("../shared/browser/utils/logger/transports.js");
        const loggerGetter = function() {
            let _logger;
            return function() {
                if (_logger) return _logger;
                _logger = _funnyecho_logger__WEBPACK_IMPORTED_MODULE_1___default().withLogger(null, _funnyecho_logger__WEBPACK_IMPORTED_MODULE_1___default().pipeTransport(...(0, 
                _transports__WEBPACK_IMPORTED_MODULE_0__.withShoplineTrackingTransport)(), ...(0, 
                _transports__WEBPACK_IMPORTED_MODULE_0__.withSentryTransport)(), ...(0, _transports__WEBPACK_IMPORTED_MODULE_0__.withStdoutTransport)()));
                _funnyecho_logger__WEBPACK_IMPORTED_MODULE_1___default().withGlobalLogger(_logger);
                return _logger;
            };
        }();
        const __WEBPACK_DEFAULT_EXPORT__ = {
            get logger() {
                return loggerGetter();
            },
            pipeOwner(data) {
                if ("object" !== typeof data) {
                    console.warn("[logger.pipeOwner]的入参需为object");
                    return;
                }
                const {owner, base = loggerGetter(), onTag} = data;
                if (false) ;
                return _funnyecho_logger__WEBPACK_IMPORTED_MODULE_1___default().withLogger(base, _funnyecho_logger__WEBPACK_IMPORTED_MODULE_1___default().pipeOwner(owner));
            }
        };
    },
    "../shared/browser/utils/logger/sentry.js": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
        "use strict";
        __webpack_require__.d(__webpack_exports__, {
            default: () => __WEBPACK_DEFAULT_EXPORT__
        });
        var _sl_logger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("../shared/browser/node_modules/@sl/logger/lib/index.es.js");
        var _sl_logger_sentry__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("../shared/browser/node_modules/@sl/logger-sentry/lib/index.es.js");
        var _env__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("../shared/browser/utils/logger/env.js");
        const transports = [ _sl_logger_sentry__WEBPACK_IMPORTED_MODULE_1__["default"] ];
        if (_env__WEBPACK_IMPORTED_MODULE_2__["default"].appEnvInDevelop()) transports.unshift(_sl_logger__WEBPACK_IMPORTED_MODULE_0__.consoleTransport);
        const baseLogger = _sl_logger__WEBPACK_IMPORTED_MODULE_0__["default"].pipeTransport(...transports);
        const __WEBPACK_DEFAULT_EXPORT__ = baseLogger;
    },
    "../shared/browser/utils/logger/sentryReport.js": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
        "use strict";
        __webpack_require__.d(__webpack_exports__, {
            Owner: () => Owner,
            Action: () => Action
        });
        const Owner = {
            MiniCart: "Checkouts.cart.mini",
            MainCart: "Checkouts.cart.main",
            Cart: "Checkouts.common.cart",
            Coupon: "Checkouts.common.coupon",
            Checkout: "Checkouts.checkout",
            Processing: "Checkouts.processing",
            Thankyou: "Checkouts.thankyou",
            Order: "Checkouts.order",
            ExpressCallback: "Checkouts.expressCallback",
            Error: "Checkouts.error"
        };
        const ActionOwner = {
            Cart: "Cart",
            Checkout: "Checkout",
            Processing: "Processing",
            Thankyou: "Thankyou",
            Order: "Order",
            ExpressCallback: "ExpressCallback",
            Error: "Error"
        };
        const commonAction = actionOwner => ({
            [`Init${actionOwner}`]: `init${actionOwner}`,
            [`Take${actionOwner}`]: `take${actionOwner}`,
            [`Edit${actionOwner}`]: `edit${actionOwner}`,
            [`CallingInterface${actionOwner}`]: `callingInterface${actionOwner}`,
            [`CalculatePrice${actionOwner}`]: `calculatePrice${actionOwner}`,
            [`Report${actionOwner}`]: `report${actionOwner}`
        });
        const CartActions = {
            ...commonAction(ActionOwner.Cart),
            OpenCart: "openCart",
            Add2Cart: "add2Cart",
            DeleteCart: "deleteCart",
            ClearCart: "clearCart",
            EditCoupon: "editCoupon"
        };
        const CheckoutActions = {
            ...commonAction(ActionOwner.Checkout),
            EditCoupon: "editCoupon",
            ChangePage: "changePage",
            CompleteOrder: "CompleteOrder"
        };
        const Action = {
            ...CartActions,
            ...CheckoutActions,
            ...commonAction(ActionOwner.ExpressCallback),
            ...commonAction(ActionOwner.Processing),
            ...commonAction(ActionOwner.Thankyou),
            ...commonAction(ActionOwner.Order),
            ...commonAction(ActionOwner.Error)
        };
    },
    "../shared/browser/utils/logger/transports.js": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
        "use strict";
        __webpack_require__.d(__webpack_exports__, {
            withShoplineTrackingTransport: () => withShoplineTrackingTransport,
            withStdoutTransport: () => withStdoutTransport,
            withSentryTransport: () => withSentryTransport
        });
        var _funnyecho_logger__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("../shared/browser/node_modules/@funnyecho/logger/dist/index.js");
        var _funnyecho_logger__WEBPACK_IMPORTED_MODULE_1___default = __webpack_require__.n(_funnyecho_logger__WEBPACK_IMPORTED_MODULE_1__);
        var _funnyecho_logger_transports__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("../shared/browser/node_modules/@funnyecho/logger/dist/transports/index.js");
        var _funnyecho_logger_transports__WEBPACK_IMPORTED_MODULE_2___default = __webpack_require__.n(_funnyecho_logger_transports__WEBPACK_IMPORTED_MODULE_2__);
        var _env__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("../shared/browser/utils/logger/env.js");
        function withShoplineTrackingTransport() {
            const breadCrumbs = [];
            const addBreadCrumbs = payload => {
                breadCrumbs.push(payload);
            };
            const getBreadCrumbs = _breadCrumbs => _breadCrumbs.map((bs => {
                const {category: type, message, eventId} = bs;
                return {
                    type,
                    message,
                    eventId
                };
            }));
            function bubble() {
                return {
                    bubble: (ctx, entry) => {
                        const {owner, level, fields} = entry;
                        const message = `${entry.message}`;
                        const extra = _funnyecho_logger__WEBPACK_IMPORTED_MODULE_1___default().mapFieldList(fields);
                        let data = {};
                        switch (level) {
                          case _funnyecho_logger__WEBPACK_IMPORTED_MODULE_1___default().LevelEnum.error:
                          case _funnyecho_logger__WEBPACK_IMPORTED_MODULE_1___default().LevelEnum.fatal:
                            data = {
                                message,
                                breadCrumbs: getBreadCrumbs(breadCrumbs),
                                owner,
                                extra
                            };
                            window.__SL_Track__.error(owner, data);
                            breadCrumbs.length = 0;
                            break;

                          case _funnyecho_logger__WEBPACK_IMPORTED_MODULE_1___default().LevelEnum.info:
                            data = {
                                message,
                                breadCrumbs: getBreadCrumbs(breadCrumbs),
                                owner,
                                extra
                            };
                            window.__SL_Track__.info(owner, data);
                            breadCrumbs.length = 0;
                            break;

                          case _funnyecho_logger__WEBPACK_IMPORTED_MODULE_1___default().LevelEnum.debug:
                          default:
                            addBreadCrumbs({
                                message: `${message} ${Object.keys(extra).length ? JSON.stringify(extra) : ""}`,
                                category: "debug",
                                eventId: Date.now()
                            });
                        }
                    }
                };
            }
            if (true) return [ bubble() ];
            return [];
        }
        function withStdoutTransport() {
            if (!(_env__WEBPACK_IMPORTED_MODULE_0__["default"].appEnvInDevelop() || _env__WEBPACK_IMPORTED_MODULE_0__["default"].appEnvInStaging())) return [];
            return [ _funnyecho_logger_transports__WEBPACK_IMPORTED_MODULE_2___default().withStdout() ];
        }
        function withSentryTransport() {
            if (false) ;
            return [];
        }
    },
    "../shared/browser/utils/newCurrency/CurrencyConvert.js": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
        "use strict";
        __webpack_require__.d(__webpack_exports__, {
            convertFormat: () => convertFormat,
            convertFormatWithoutCurrency: () => convertFormatWithoutCurrency,
            getConvertPrice: () => getConvertPrice
        });
        var _sl_currency_tools_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("../shared/browser/node_modules/@sl/currency-tools-core/lib/index.js");
        var _state_selector__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("../shared/browser/utils/state-selector.js");
        const storeCurrency = _state_selector__WEBPACK_IMPORTED_MODULE_1__.SL_State.get("storeInfo.currency");
        const toDefault = _state_selector__WEBPACK_IMPORTED_MODULE_1__.SL_State.get("currencyCode") || storeCurrency;
        const {currencyDetailList} = window.Shopline.currencyConfig;
        (0, _sl_currency_tools_core__WEBPACK_IMPORTED_MODULE_0__.setCurrencyConfig)(currencyDetailList);
        (0, _sl_currency_tools_core__WEBPACK_IMPORTED_MODULE_0__.setStoreCurrency)(storeCurrency);
        (0, _sl_currency_tools_core__WEBPACK_IMPORTED_MODULE_0__.setDefaultToCurrency)(toDefault);
        _state_selector__WEBPACK_IMPORTED_MODULE_1__.SL_State.on("currencyCode", (code => {
            (0, _sl_currency_tools_core__WEBPACK_IMPORTED_MODULE_0__.setDefaultToCurrency)(code);
        }));
        const setDefault = () => {
            const toDefault = _state_selector__WEBPACK_IMPORTED_MODULE_1__.SL_State.get("currencyCode") || _state_selector__WEBPACK_IMPORTED_MODULE_1__.SL_State.get("storeInfo.currency");
            (0, _sl_currency_tools_core__WEBPACK_IMPORTED_MODULE_0__.setDefaultToCurrency)(toDefault);
        };
        const convertFormat = (...args) => {
            setDefault();
            return (0, _sl_currency_tools_core__WEBPACK_IMPORTED_MODULE_0__.convertFormat)(...args);
        };
        const getConvertPrice = (...args) => {
            setDefault();
            return (0, _sl_currency_tools_core__WEBPACK_IMPORTED_MODULE_0__.getConvertPrice)(...args);
        };
        const convertFormatWithoutCurrency = (...args) => {
            setDefault();
            return (0, _sl_currency_tools_core__WEBPACK_IMPORTED_MODULE_0__.convertFormatWithoutCurrency)(...args);
        };
    },
    "../shared/browser/utils/newCurrency/index.js": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
        "use strict";
        __webpack_require__.d(__webpack_exports__, {
            default: () => __WEBPACK_DEFAULT_EXPORT__
        });
        var _sl_currency_tools_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("../shared/browser/node_modules/@sl/currency-tools-core/lib/index.js");
        var _CurrencyConvert__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("../shared/browser/utils/newCurrency/CurrencyConvert.js");
        const __WEBPACK_DEFAULT_EXPORT__ = {
            format: _sl_currency_tools_core__WEBPACK_IMPORTED_MODULE_0__.format,
            unformatNumber: _sl_currency_tools_core__WEBPACK_IMPORTED_MODULE_0__.unformatNumber,
            formatNumber: _sl_currency_tools_core__WEBPACK_IMPORTED_MODULE_0__.formatNumber,
            unformatCurrency: _sl_currency_tools_core__WEBPACK_IMPORTED_MODULE_0__.unformatCurrency,
            unformatPercent: _sl_currency_tools_core__WEBPACK_IMPORTED_MODULE_0__.unformatPercent,
            formatCurrency: _sl_currency_tools_core__WEBPACK_IMPORTED_MODULE_0__.formatCurrency,
            formatPercent: _sl_currency_tools_core__WEBPACK_IMPORTED_MODULE_0__.formatPercent,
            getDigitsByCode: _sl_currency_tools_core__WEBPACK_IMPORTED_MODULE_0__.getDigitsByCode,
            getSymbolByCode: _sl_currency_tools_core__WEBPACK_IMPORTED_MODULE_0__.getSymbolByCode,
            getSymbolOrderByCode: _sl_currency_tools_core__WEBPACK_IMPORTED_MODULE_0__.getSymbolOrderByCode,
            getDecimalSymbolByCode: _sl_currency_tools_core__WEBPACK_IMPORTED_MODULE_0__.getDecimalSymbolByCode,
            getGroupSymbolByCode: _sl_currency_tools_core__WEBPACK_IMPORTED_MODULE_0__.getGroupSymbolByCode,
            getFormatParts: _sl_currency_tools_core__WEBPACK_IMPORTED_MODULE_0__.getFormatParts,
            getConvertPrice: _CurrencyConvert__WEBPACK_IMPORTED_MODULE_1__.getConvertPrice,
            convertFormat: _CurrencyConvert__WEBPACK_IMPORTED_MODULE_1__.convertFormat,
            covertCalc: _sl_currency_tools_core__WEBPACK_IMPORTED_MODULE_0__.covertCalc,
            convertFormatWithoutCurrency: _CurrencyConvert__WEBPACK_IMPORTED_MODULE_1__.convertFormatWithoutCurrency,
            formatWithoutCurrency: _sl_currency_tools_core__WEBPACK_IMPORTED_MODULE_0__.formatWithoutCurrency,
            formatMoneyWithoutCurrency: _sl_currency_tools_core__WEBPACK_IMPORTED_MODULE_0__.formatMoneyWithoutCurrency
        };
    },
    "../shared/browser/utils/report/hd-const.js": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
        "use strict";
        __webpack_require__.d(__webpack_exports__, {
            paramsMapping: () => paramsMapping,
            paramsMappingToArrayKeys: () => paramsMappingToArrayKeys
        });
        const eventName = {
            view: "101",
            additem: "102",
            updateitem: "103",
            removeitem: "104",
            checkout: "105",
            recommenditem: "106",
            proceed_to_checkout: "107",
            place_order: "108",
            click_component: "109",
            product_view: "110",
            product_share: "111",
            buy_now: "112",
            select_product: "113",
            deselect_product: "114",
            menu_view: "115",
            menu_click: "116",
            catalog_view: "117",
            catalog_click: "118",
            sku_click: "119",
            component_view: "120",
            display_click: "121",
            sort_click: "122",
            select_bundling: "123",
            add_wishlist: "124",
            cancel_wishlist: "125",
            proceed_to_delivery_payment: "126",
            proceed_to_pay: "127",
            proceed_to_delivery: "128",
            quick_payment: "129",
            click_product: "130",
            search_suggest: "131",
            paypal: "132",
            input: "133",
            modify: "134",
            select_shipping: "135",
            select_payment: "136",
            inventory_shortage: "137",
            login_success: "138",
            view_cart: "139",
            leave: "999"
        };
        const eventCategory = {
            order: "101",
            cart: "102",
            email: "103",
            expresscheckoutpage: "104"
        };
        const productType = {
            product: "101",
            addon: "102",
            subscription: "103"
        };
        const status = {
            soldout: "101",
            selling: "102"
        };
        const purchaseSource = {
            common_store: "101",
            one_page_store: "102"
        };
        const page = {
            homepage: "101",
            pdp: "102",
            cart: "103",
            order_check_out: "104",
            transaction: "105",
            product_search: "106",
            product_list: "107",
            user_page: "108",
            email: "109",
            expresscheckout: "110",
            "404page": "111",
            call_to_action: "112",
            consumer_home: "113",
            onepage_checkout: "114",
            address_confirm: "115",
            delivery_payment_confirm: "116",
            delivery_confirm: "117",
            payment_confirm: "118",
            addon: "119",
            other: "120",
            landing_page: "121"
        };
        const generalComponent = {
            catalog: "101",
            logo: "102",
            search: "103",
            sign_in_bottom: "104",
            message: "105",
            cart: "106",
            store_language: "107",
            currency: "108",
            search_product: "109",
            H1: "110",
            paragraph: "111",
            single_image: "112",
            slider: "113",
            poster: "114",
            gallery: "115",
            media_lr: "116",
            media_ud: "117",
            end_payment: "118",
            end_email: "119",
            end_fb: "120",
            end_ins: "121",
            end_twitter: "122",
            end_snapchat: "123",
            end_pinterest: "124",
            end_line: "125",
            theme: "126",
            free_layout: "127",
            search_pop: "128",
            search_bar: "129"
        };
        const customComponent = {
            sign_up_tab: "101",
            sign_in_tab: "102",
            line_signin: "103",
            fb_signin: "104",
            sign_in_105: "105",
            sign_up: "106",
            title_component: "107",
            content_component: "108",
            productmoduel_component: "109",
            productlist_component: "110",
            QRcode_component: "111",
            ins_component: "112",
            googlemap_component: "113",
            facebook_component: "114",
            video_component: "115",
            pic_component: "116",
            product_menu: "117",
            pre_order: "118",
            gotoamazon: "119",
            wishlist: "120",
            product_descri: "121",
            deliver_payment: "122",
            score: "123",
            reviews: "123",
            share: "124",
            recommendation: "125",
            checkout: "126",
            removement: "127",
            sign_in_128: "128",
            proceed_to_checkout: "129",
            select_all: "130",
            deselect_all: "131",
            select: "132",
            deselect: "133",
            product_edit: "134",
            subscribe_line: "135",
            back_to_cart: "136",
            place_order: "137",
            buy_now: "138",
            view_more: "139",
            play_video: "140",
            more_bundling: "141",
            rec_turn_page: "142",
            arrival_notice: "143",
            more_reviews: "144",
            consumer_info: "145",
            message: "146",
            order: "147",
            return_order: "148",
            wishlist_149: "149",
            wishlist_turn_page: "150",
            use_coupon: "151",
            sign_in: "152",
            subscription: "153",
            back: "154",
            continue: "155"
        };
        const displayIterm = {
            24: "101",
            48: "102",
            72: "103"
        };
        const sortBy = {
            newestToOldest: "101",
            oldestToNewest: "102",
            priceHighToLow: "103",
            priceLowToHigh: "104",
            default: "999"
        };
        const proListType = {
            category: "101",
            all_product: "102",
            chosen_product: "103"
        };
        const shareDest = {
            line: "101",
            fb: "102",
            message: "103",
            link: "104",
            whatsapp: "105",
            twitter: "106"
        };
        const signinSource = {
            sign_in_bottom: "101",
            order_edit: "102"
        };
        const searchType = {
            user_search: "101",
            suggest_ai: "102",
            suggest_search: "103"
        };
        const inputBox = {
            email: "101",
            first_name: "102",
            last_name: "103",
            country: "104",
            province: "105",
            city: "106",
            district: "107",
            address1: "108",
            address2: "108",
            postcode: "109",
            phone: "110",
            same_address: "111",
            another_address: "112",
            remark: "113"
        };
        const objectType = {
            info: "101",
            address: "102",
            shipping: "103"
        };
        const isFirst = {
            yes: "1",
            no: "0"
        };
        const loginResult = {
            success: "1",
            fail: "0"
        };
        const paramsMapping = {
            event_name: eventName,
            event_category: eventCategory,
            product_type: productType,
            status,
            purchase_source: purchaseSource,
            page,
            general_component: generalComponent,
            custom_component: customComponent,
            display_iterm: displayIterm,
            sort_by: sortBy,
            pro_list_type: proListType,
            share_dest: shareDest,
            signin_source: signinSource,
            search_type: searchType,
            input_box: inputBox,
            object: objectType,
            isFirst,
            loginResult
        };
        const paramsMappingToArrayKeys = [ "general_component", "custom_component", "status", "product_type" ];
    },
    "../shared/browser/utils/report/page.js": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
        "use strict";
        __webpack_require__.d(__webpack_exports__, {
            default: () => __WEBPACK_DEFAULT_EXPORT__
        });
        const __WEBPACK_DEFAULT_EXPORT__ = {
            Home: 101,
            ProductsSearch: 102,
            Products: 103,
            ProductsDetail: 105,
            AllCollections: 174,
            Activity: 115,
            Page: {
                custom_page: 118,
                smart_landing_page: 147
            },
            BlogsList: 119,
            BlogsDetail: 120,
            404: 130,
            Center: 123,
            SignIn: 128,
            SignUp: 129,
            Cart: 106,
            Thankyou: 114
        };
    },
    "../shared/browser/utils/report/pageMapping.js": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
        "use strict";
        __webpack_require__.d(__webpack_exports__, {
            default: () => __WEBPACK_DEFAULT_EXPORT__
        });
        const __WEBPACK_DEFAULT_EXPORT__ = {
            Home: "homepage",
            Products: "product_list",
            ProductsDetail: "pdp",
            ProductsSearch: "product_search",
            OneShop: "expresscheckout",
            Cart: "cart",
            Checkout: "order_check_out",
            Comfirm: "transaction",
            Center: "user_page",
            Activity: "addon",
            Page: {
                custom_page: 124,
                smart_landing_page: 125
            }
        };
    },
    "../shared/browser/utils/report/tool.js": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
        "use strict";
        __webpack_require__.d(__webpack_exports__, {
            getEventID: () => getEventID
        });
        var uuid__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("../shared/browser/node_modules/uuid/index.js");
        function getEventID() {
            return `${Date.now()}_${(0, uuid__WEBPACK_IMPORTED_MODULE_0__.v4)().replace(/-/g, "")}`;
        }
    },
    "../shared/browser/utils/request.js": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
        "use strict";
        __webpack_require__.d(__webpack_exports__, {
            default: () => __WEBPACK_DEFAULT_EXPORT__
        });
        var axios__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("../shared/browser/node_modules/axios/index.js");
        var axios__WEBPACK_IMPORTED_MODULE_0___default = __webpack_require__.n(axios__WEBPACK_IMPORTED_MODULE_0__);
        var query_string__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("../shared/browser/node_modules/query-string/index.js");
        const instance = axios__WEBPACK_IMPORTED_MODULE_0___default().create({
            baseURL: "/leproxy/api",
            timeout: 3e4,
            withCredentials: true,
            paramsSerializer(params) {
                return query_string__WEBPACK_IMPORTED_MODULE_1__.stringify(params);
            }
        });
        instance.interceptors.response.use((res => {
            const {status, data, config} = res;
            if ("/leproxy" === config.baseURL) {
                if (200 !== status || "0" !== data.rescode) return Promise.reject({
                    message: data.resmsg,
                    ...data
                });
            } else if (200 !== status || !(data.success || "SUCCESS" === data.code)) return Promise.reject(data);
            return data;
        }), (error => Promise.reject(error)));
        const __WEBPACK_DEFAULT_EXPORT__ = instance;
    },
    "../shared/browser/utils/sectionsLoad/index.js": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
        "use strict";
        __webpack_require__.d(__webpack_exports__, {
            registrySectionConstructor: () => registrySectionConstructor
        });
        class SectionsLoad {
            constructor() {
                this.sectionInstances = new Map;
                this.constructorMap = new Map;
                window.document.addEventListener("shopline:section:load", this._onSectionLoad.bind(this));
                window.document.addEventListener("shopline:section:unload", this._onSectionUnload.bind(this));
                window.document.addEventListener("shopline:section:select", this._onSectionSelect.bind(this));
                window.document.addEventListener("shopline:section:deselect", this._onSectionDeselect.bind(this));
                window.document.addEventListener("shopline:block:select", this._onBlockSelect.bind(this));
                window.document.addEventListener("shopline:block:deselect", this._onBlockDeselect.bind(this));
            }
            _createInstace(container, constructorParam) {
                const id = container.data("section-id");
                if (!id) return;
                const constructor = constructorParam || this.constructorMap.get(container.data("section-type"));
                if ("function" !== typeof constructor) return;
                this.sectionInstances.set(id, new constructor(container));
            }
            _onSectionLoad(e) {
                const {sectionId} = e.detail;
                if (this.sectionInstances.has(sectionId)) {
                    const instance = this.sectionInstances.get(sectionId);
                    if ("function" === typeof instance.onUnload) instance.onUnload.call(instance);
                }
                const $container = __SL_$__(`[data-section-id='${sectionId}']`);
                this._createInstace($container);
            }
            _onSectionUnload(e) {
                const {sectionId} = e.detail;
                if (this.sectionInstances.has(sectionId)) {
                    const instance = this.sectionInstances.get(sectionId);
                    if ("function" === typeof instance.onUnload) {
                        instance.onUnload.call(instance);
                        this.sectionInstances.delete(sectionId);
                    }
                }
            }
            _onSectionSelect(e) {
                const {sectionId} = e.detail;
                if (this.sectionInstances.has(sectionId)) {
                    const instance = this.sectionInstances.get(sectionId);
                    if ("function" === typeof instance.onSectionSelect) instance.onSectionSelect(e);
                }
            }
            _onSectionDeselect(e) {
                const {sectionId} = e.detail;
                if (this.sectionInstances.has(sectionId)) {
                    const instance = this.sectionInstances.get(sectionId);
                    if ("function" === typeof instance.onSectionDeselect) instance.onSectionDeselect(e);
                }
            }
            _onBlockSelect(e) {
                const {sectionId} = e.detail;
                if (this.sectionInstances.has(sectionId)) {
                    const instance = this.sectionInstances.get(sectionId);
                    if ("function" === typeof instance.onBlockSelect) instance.onBlockSelect(e);
                }
            }
            _onBlockDeselect(e) {
                const {sectionId} = e.detail;
                if (this.sectionInstances.has(sectionId)) {
                    const instance = this.sectionInstances.get(sectionId);
                    if ("function" === typeof instance.onBlockDeselect) instance.onBlockDeselect(e);
                }
            }
        }
        window.__section_load__ = new SectionsLoad;
        const registrySectionConstructor = (type, constructor) => {
            if (window.__section_load__.constructorMap.get(type)) return;
            window.__section_load__.constructorMap.set(type, constructor);
            const $sections = __SL_$__(`[data-section-type='${type}']`);
            $sections.each((function() {
                const $container = __SL_$__(this);
                window.__section_load__._createInstace($container, constructor);
            }));
        };
    },
    "../shared/browser/utils/sku/DataWatcher.js": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
        "use strict";
        __webpack_require__.d(__webpack_exports__, {
            default: () => DataWatcher
        });
        class DataWatcher {
            constructor() {
                Object.defineProperty(this, "$watcher", {
                    value: {}
                });
                Object.defineProperty(this, "$afterWatcher", {
                    value: {}
                });
                Object.defineProperty(this, "$data", {
                    value: {}
                });
                const bindWatcher = type => (keys, callback) => {
                    const props = {};
                    keys.forEach((key => {
                        if (!this.$watcher[key]) this.$watcher[key] = [];
                        if (!this.$afterWatcher[key]) this.$afterWatcher[key] = [];
                        if ("watch" === type) this.$watcher[key].push(callback); else if ("watchAfter" === type) this.$afterWatcher[key].push(callback);
                        if (Object.prototype.hasOwnProperty.call(this.$data, key)) return;
                        this.$data[key] = this[key];
                        delete this[key];
                        props[key] = {
                            set: value => {
                                this.$data[key] = value;
                                this.$watcher[key].forEach((w => {
                                    try {
                                        w && w(value, key);
                                    } catch (e) {
                                        console.error(e);
                                    }
                                }));
                                this.$afterWatcher[key].forEach((w => {
                                    try {
                                        w && w(value, key);
                                    } catch (e) {
                                        console.error(e);
                                    }
                                }));
                            },
                            get: () => this.$data[key]
                        };
                    }));
                    Object.defineProperties(this, props);
                };
                Object.defineProperty(this, "watch", {
                    value: bindWatcher("watch")
                });
                Object.defineProperty(this, "watchAfter", {
                    value: bindWatcher("watchAfter")
                });
            }
        }
    },
    "../shared/browser/utils/tradeReport/const.js": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
        "use strict";
        __webpack_require__.d(__webpack_exports__, {
            HD_EVENT_NAME: () => HD_EVENT_NAME,
            pageMap: () => pageMap,
            pageMapV2: () => pageMapV2,
            cartPage: () => cartPage,
            hiidoEventStatus: () => hiidoEventStatus,
            HdModule: () => HdModule,
            ActionType: () => ActionType,
            HdComponent: () => HdComponent
        });
        const HD_EVENT_NAME = {
            GO_TO_CHECKOUT: "trade:goToCheckout:report",
            PAYPAL_CHECKOUT: "trade:spb:report",
            COUPON_INPUT: "trade:coupon:input:report",
            COUPON_APPLY: "trade:coupon:apply:report",
            PAYPAL_CHECKOUT_V2: "trade:spb:report:hiidov2"
        };
        const pageMap = {
            Cart: 60006254,
            MiniCart: 60006262
        };
        const pageMapV2 = {
            Cart: 106,
            MiniCart: 108
        };
        const cartPage = {
            Cart: "Cart",
            MiniCart: "MiniCart",
            FilterModal: "FilterModal"
        };
        const hiidoEventStatus = {
            SUCCESS: 1,
            ERROR: 0
        };
        const HdModule = {
            checkout: 112,
            couponCode: 118,
            normal: -999
        };
        const ActionType = {
            click: 102,
            input: 103
        };
        const HdComponent = {
            couponCodeInput: 133,
            couponCodeUse: 134,
            checkout: 101,
            paypalBtn: 102,
            paylater: 129,
            continueShopping: 146
        };
    },
    "../shared/browser/utils/tradeReport/hdReport.js": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
        "use strict";
        __webpack_require__.d(__webpack_exports__, {
            hidooRp: () => hidooRp,
            TradeHdReport: () => TradeHdReport
        });
        var _syntax_patch__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("../shared/browser/utils/syntax-patch.js");
        var _report_hd_const__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("../shared/browser/utils/report/hd-const.js");
        class TradeHdReport {
            constructor() {
                this.paramsMapping = _report_hd_const__WEBPACK_IMPORTED_MODULE_1__.paramsMapping;
                this.paramsMappingToArrayKeys = _report_hd_const__WEBPACK_IMPORTED_MODULE_1__.paramsMappingToArrayKeys;
            }
            setReportContent(params) {
                const reportContent = {
                    ...params
                };
                const that = this;
                if (reportContent.products && Array.isArray(reportContent.products)) {
                    const keys = [ "product_type", "product_id", "variantion_id", "product_name", "product_price", "position", "status", "quantity", "update_quantity", "price" ];
                    reportContent.products.forEach((spu => {
                        keys.forEach((key => {
                            if (spu[key]) {
                                if (!reportContent[key]) reportContent[key] = [];
                                reportContent[key].push(spu[key]);
                            }
                        }));
                    }));
                    delete reportContent.products;
                }
                Object.entries(reportContent).forEach((([key, value]) => {
                    let trueValue = value;
                    if (key in that.paramsMapping) if (Array.isArray(value)) {
                        if (that.paramsMappingToArrayKeys.indexOf(key) > -1) trueValue = (value || []).map((v => that.paramsMapping[key][v])).join(",");
                    } else trueValue = that.paramsMapping[key][value] || value;
                    if (Array.isArray(trueValue)) trueValue = trueValue.join(",");
                    reportContent[key] = trueValue;
                }));
                const data = {
                    ...(0, _syntax_patch__WEBPACK_IMPORTED_MODULE_0__.nullishCoalescingOperator)(reportContent, {})
                };
                return data;
            }
            event(reportContent, id) {
                const data = this.setReportContent(reportContent);
                window.HdSdk && window.HdSdk.shopTracker && window.HdSdk.shopTracker.report(id, data);
            }
        }
        const hidooRp = new TradeHdReport;
    },
    "../shared/browser/utils/tradeReport/index.js": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
        "use strict";
        __webpack_require__.d(__webpack_exports__, {
            TradeReport: () => TradeReport,
            reportCheckout: () => reportCheckout,
            setIniiateCheckout: () => setIniiateCheckout,
            setAddtoCart: () => setAddtoCart,
            setPayPalReportReq: () => setPayPalReportReq
        });
        var js_cookie__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("../shared/browser/node_modules/js-cookie/src/js.cookie.js");
        var _newCurrency__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("../shared/browser/utils/newCurrency/index.js");
        var _event_bus__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("../shared/browser/utils/event-bus.js");
        var _dataReport_ga__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("../shared/browser/utils/dataReport/ga.js");
        var _dataReport_ads__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__("../shared/browser/utils/dataReport/ads.js");
        var _dataReport_fb__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__("../shared/browser/utils/dataReport/fb.js");
        var _report_tool__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__("../shared/browser/utils/report/tool.js");
        var _const__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__("../shared/browser/utils/tradeReport/const.js");
        Symbol("REPORT_ADD_CART");
        Symbol("PAYPAL_CLICK");
        const encode = str => {
            if ("undefined" === typeof window) return "";
            const ec = window && window.encodeURI(str);
            return window && window.btoa(ec);
        };
        const isFn = object => "function" === typeof object;
        const templateAlias = window.Shopline.uri.alias;
        class TradeReport {
            constructor() {
                this.eventBus = _event_bus__WEBPACK_IMPORTED_MODULE_2__.SL_EventBus;
                this.storeCurrency = js_cookie__WEBPACK_IMPORTED_MODULE_0__.get("currency_code");
                this.hdPage = {
                    Cart: "cart",
                    MiniCart: "cart"
                };
            }
            touch(data) {
                const {pageType, actionType, value} = data;
                const val = {
                    ...value,
                    currency: this.storeCurrency
                };
                const gaParam = _dataReport_ga__WEBPACK_IMPORTED_MODULE_3__["default"].click(pageType, actionType, val);
                const ga4Param = _dataReport_ga__WEBPACK_IMPORTED_MODULE_3__["default"].clickGa4({
                    pageType,
                    actionType,
                    params: val
                });
                const adsParams = (0, _dataReport_ads__WEBPACK_IMPORTED_MODULE_4__.clickAdsData)(pageType, actionType, val);
                const fbParams = (0, _dataReport_fb__WEBPACK_IMPORTED_MODULE_5__.clickFbData)(actionType, val);
                const params = {
                    GAAds: adsParams,
                    GA: gaParam,
                    GA4: ga4Param,
                    FBPixel: fbParams
                };
                this.eventBus && this.eventBus.emit("global:thirdPartReport", params);
            }
            reportViewCart(data) {
                const ga4Param = _dataReport_ga__WEBPACK_IMPORTED_MODULE_3__["default"].clickGa4(data);
                const newParams = {
                    GA4: ga4Param
                };
                this.eventBus && this.eventBus.emit("global:thirdPartReport", newParams);
            }
        }
        const setAddtoCart = (payAmount, currency, eid, extra = {}) => {
            const {eventID, ...ext} = extra;
            const params = {
                ...ext,
                payAmount,
                currency,
                eventId: eid || `addToCart${eventID}` || `addToCart${(0, _report_tool__WEBPACK_IMPORTED_MODULE_6__.getEventID)()}`,
                eventTime: Date.now()
            };
            return params;
        };
        const hdRpCheckout = (data, id) => {
            const products = data && data.map((item => ({
                product_id: item.productSeq,
                variantion_id: item.productSku,
                quantity: item.productNum,
                price: `${_newCurrency__WEBPACK_IMPORTED_MODULE_1__["default"].formatNumber(Number(item && item.productPrice) || 0)}`,
                product_name: item.productName
            })));
            window.HdSdk && window.HdSdk.shopTracker && window.HdSdk.shopTracker.report(id, {
                event_name: "105",
                page: "cart",
                products
            });
        };
        const getNeedReportData = callback => {
            if (isFn(callback)) {
                const data = callback();
                if ("string" === typeof data) return {
                    eventID: data
                };
                return data;
            }
            return {};
        };
        const setPayPalReportReq = ({needReport, products, extra}) => {
            const resData = getNeedReportData(needReport);
            const {eventID, ...extData} = resData;
            let price = 0;
            products.forEach((item => {
                price += Number(item.productPrice);
            }));
            const dataReportReq = setAddtoCart(price, window && window.SL_State.get("storeInfo.currency"), `addToCart${eventID}`, {
                ...extra,
                ...extData
            });
            return dataReportReq;
        };
        const setIniiateCheckout = (seq, needReport) => {
            const resData = getNeedReportData(needReport);
            const {eventID} = resData;
            const cookieMap = js_cookie__WEBPACK_IMPORTED_MODULE_0__.get();
            Object.keys(cookieMap).forEach((key => {
                if (/^\d+_fb_data$/.test(key)) js_cookie__WEBPACK_IMPORTED_MODULE_0__.remove(key);
            }));
            js_cookie__WEBPACK_IMPORTED_MODULE_0__.set(`${seq}_fb_data`, {
                tp: eventID ? 2 : 1,
                et: Date.now(),
                ed: eventID || (0, _report_tool__WEBPACK_IMPORTED_MODULE_6__.getEventID)()
            });
        };
        const reportCheckout = data => {
            const {isCart, report, products} = data;
            if (isCart) {
                const event_id = _const__WEBPACK_IMPORTED_MODULE_7__.pageMap[templateAlias] ? _const__WEBPACK_IMPORTED_MODULE_7__.pageMap[templateAlias] : _const__WEBPACK_IMPORTED_MODULE_7__.pageMap.MiniCart;
                hdRpCheckout(products, event_id);
            }
            if (isFn(report)) report();
            sessionStorage.setItem(encode("checkout_track"), "[]");
        };
        new TradeReport;
    },
    "../shared/browser/utils/url-adaptor.js": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
        "use strict";
        __webpack_require__.d(__webpack_exports__, {
            adaptor: () => adaptor
        });
        var query_string__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("../shared/browser/node_modules/query-string/index.js");
        const queryStringConfig = {
            options: {
                skipNull: true,
                skipEmptyString: true
            }
        };
        const adaptor = (url, {query, fragmentIdentifier, fullQuery = true} = {}) => {
            const currentUrl = query_string__WEBPACK_IMPORTED_MODULE_0__.parseUrl(window.location.href, {
                ...queryStringConfig.options,
                parseFragmentIdentifier: true
            });
            const allQuery = fullQuery ? {
                ...currentUrl.query || {},
                ...query || {}
            } : {
                ...query
            };
            const passUrl = query_string__WEBPACK_IMPORTED_MODULE_0__.stringifyUrl({
                url,
                query: allQuery,
                fragmentIdentifier: fragmentIdentifier || currentUrl.fragmentIdentifier
            }, queryStringConfig.options);
            const wholeUrl = `${window.location.protocol}//${window.location.host}${passUrl}`;
            return {
                originUrl: url,
                ...currentUrl,
                query: allQuery,
                url: passUrl,
                wholeUrl
            };
        };
    },
    "./node_modules/swiper/swiper-bundle.css": () => {
        "use strict";
    },
    "./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
        "use strict";
        __webpack_require__.d(__webpack_exports__, {
            default: () => _asyncToGenerator
        });
        function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {
            try {
                var info = gen[key](arg);
                var value = info.value;
            } catch (error) {
                reject(error);
                return;
            }
            if (info.done) resolve(value); else Promise.resolve(value).then(_next, _throw);
        }
        function _asyncToGenerator(fn) {
            return function() {
                var self = this, args = arguments;
                return new Promise((function(resolve, reject) {
                    var gen = fn.apply(self, args);
                    function _next(value) {
                        asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value);
                    }
                    function _throw(err) {
                        asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err);
                    }
                    _next(void 0);
                }));
            };
        }
    },
    "./node_modules/@babel/runtime/helpers/esm/defineProperty.js": (__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
        "use strict";
        __webpack_require__.d(__webpack_exports__, {
            default: () => _defineProperty
        });
        function _defineProperty(obj, key, value) {
            if (key in obj) Object.defineProperty(obj, key, {
                value,
                enumerable: true,
                configurable: true,
                writable: true
            }); else obj[key] = value;
            return obj;
        }
    },
    "./node_modules/axios/package.json": module => {
        "use strict";
        module.exports = JSON.parse('{"name":"axios","version":"0.21.4","description":"Promise based HTTP client for the browser and node.js","main":"index.js","scripts":{"test":"grunt test","start":"node ./sandbox/server.js","build":"NODE_ENV=production grunt build","preversion":"npm test","version":"npm run build && grunt version && git add -A dist && git add CHANGELOG.md bower.json package.json","postversion":"git push && git push --tags","examples":"node ./examples/server.js","coveralls":"cat coverage/lcov.info | ./node_modules/coveralls/bin/coveralls.js","fix":"eslint --fix lib/**/*.js"},"repository":{"type":"git","url":"https://github.com/axios/axios.git"},"keywords":["xhr","http","ajax","promise","node"],"author":"Matt Zabriskie","license":"MIT","bugs":{"url":"https://github.com/axios/axios/issues"},"homepage":"https://axios-http.com","devDependencies":{"coveralls":"^3.0.0","es6-promise":"^4.2.4","grunt":"^1.3.0","grunt-banner":"^0.6.0","grunt-cli":"^1.2.0","grunt-contrib-clean":"^1.1.0","grunt-contrib-watch":"^1.0.0","grunt-eslint":"^23.0.0","grunt-karma":"^4.0.0","grunt-mocha-test":"^0.13.3","grunt-ts":"^6.0.0-beta.19","grunt-webpack":"^4.0.2","istanbul-instrumenter-loader":"^1.0.0","jasmine-core":"^2.4.1","karma":"^6.3.2","karma-chrome-launcher":"^3.1.0","karma-firefox-launcher":"^2.1.0","karma-jasmine":"^1.1.1","karma-jasmine-ajax":"^0.1.13","karma-safari-launcher":"^1.0.0","karma-sauce-launcher":"^4.3.6","karma-sinon":"^1.0.5","karma-sourcemap-loader":"^0.3.8","karma-webpack":"^4.0.2","load-grunt-tasks":"^3.5.2","minimist":"^1.2.0","mocha":"^8.2.1","sinon":"^4.5.0","terser-webpack-plugin":"^4.2.3","typescript":"^4.0.5","url-search-params":"^0.10.0","webpack":"^4.44.2","webpack-dev-server":"^3.11.0"},"browser":{"./lib/adapters/http.js":"./lib/adapters/xhr.js"},"jsdelivr":"dist/axios.min.js","unpkg":"dist/axios.min.js","typings":"./index.d.ts","dependencies":{"follow-redirects":"^1.14.0"},"bundlesize":[{"path":"./dist/axios.min.js","threshold":"5kB"}]}');
    },
    "../shared/browser/node_modules/axios/package.json": module => {
        "use strict";
        module.exports = JSON.parse('{"name":"axios","version":"0.21.4","description":"Promise based HTTP client for the browser and node.js","main":"index.js","scripts":{"test":"grunt test","start":"node ./sandbox/server.js","build":"NODE_ENV=production grunt build","preversion":"npm test","version":"npm run build && grunt version && git add -A dist && git add CHANGELOG.md bower.json package.json","postversion":"git push && git push --tags","examples":"node ./examples/server.js","coveralls":"cat coverage/lcov.info | ./node_modules/coveralls/bin/coveralls.js","fix":"eslint --fix lib/**/*.js"},"repository":{"type":"git","url":"https://github.com/axios/axios.git"},"keywords":["xhr","http","ajax","promise","node"],"author":"Matt Zabriskie","license":"MIT","bugs":{"url":"https://github.com/axios/axios/issues"},"homepage":"https://axios-http.com","devDependencies":{"coveralls":"^3.0.0","es6-promise":"^4.2.4","grunt":"^1.3.0","grunt-banner":"^0.6.0","grunt-cli":"^1.2.0","grunt-contrib-clean":"^1.1.0","grunt-contrib-watch":"^1.0.0","grunt-eslint":"^23.0.0","grunt-karma":"^4.0.0","grunt-mocha-test":"^0.13.3","grunt-ts":"^6.0.0-beta.19","grunt-webpack":"^4.0.2","istanbul-instrumenter-loader":"^1.0.0","jasmine-core":"^2.4.1","karma":"^6.3.2","karma-chrome-launcher":"^3.1.0","karma-firefox-launcher":"^2.1.0","karma-jasmine":"^1.1.1","karma-jasmine-ajax":"^0.1.13","karma-safari-launcher":"^1.0.0","karma-sauce-launcher":"^4.3.6","karma-sinon":"^1.0.5","karma-sourcemap-loader":"^0.3.8","karma-webpack":"^4.0.2","load-grunt-tasks":"^3.5.2","minimist":"^1.2.0","mocha":"^8.2.1","sinon":"^4.5.0","terser-webpack-plugin":"^4.2.3","typescript":"^4.0.5","url-search-params":"^0.10.0","webpack":"^4.44.2","webpack-dev-server":"^3.11.0"},"browser":{"./lib/adapters/http.js":"./lib/adapters/xhr.js"},"jsdelivr":"dist/axios.min.js","unpkg":"dist/axios.min.js","typings":"./index.d.ts","dependencies":{"follow-redirects":"^1.14.0"},"bundlesize":[{"path":"./dist/axios.min.js","threshold":"5kB"}]}');
    }
}, __webpack_require__ => {
    var __webpack_exec__ = moduleId => __webpack_require__(__webpack_require__.s = moduleId);
    __webpack_exec__("./src/assets/vendor/global.js");
} ]);