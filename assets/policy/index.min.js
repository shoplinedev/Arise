(() => {
    var __webpack_modules__ = {
        "../shared/browser/node_modules/@sentry/browser/esm/client.js": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.d(__webpack_exports__, {
                BrowserClient: () => BrowserClient
            });
            var tslib_es6 = __webpack_require__("../shared/browser/node_modules/tslib/tslib.es6.js");
            var esm_scope = __webpack_require__("../shared/browser/node_modules/@sentry/hub/esm/scope.js");
            var dsn = __webpack_require__("../shared/browser/node_modules/@sentry/utils/esm/dsn.js");
            var misc = __webpack_require__("../shared/browser/node_modules/@sentry/utils/esm/misc.js");
            var logger = __webpack_require__("../shared/browser/node_modules/@sentry/utils/esm/logger.js");
            var is = __webpack_require__("../shared/browser/node_modules/@sentry/utils/esm/is.js");
            var syncpromise = __webpack_require__("../shared/browser/node_modules/@sentry/utils/esm/syncpromise.js");
            var time = __webpack_require__("../shared/browser/node_modules/@sentry/utils/esm/time.js");
            var normalize = __webpack_require__("../shared/browser/node_modules/@sentry/utils/esm/normalize.js");
            var string = __webpack_require__("../shared/browser/node_modules/@sentry/utils/esm/string.js");
            var error = __webpack_require__("../shared/browser/node_modules/@sentry/utils/esm/error.js");
            var flags = __webpack_require__("../shared/browser/node_modules/@sentry/core/esm/flags.js");
            var hub = __webpack_require__("../shared/browser/node_modules/@sentry/hub/esm/hub.js");
            var object = __webpack_require__("../shared/browser/node_modules/@sentry/utils/esm/object.js");
            var installedIntegrations = [];
            function filterDuplicates(integrations) {
                return integrations.reduce((function(acc, integrations) {
                    if (acc.every((function(accIntegration) {
                        return integrations.name !== accIntegration.name;
                    }))) acc.push(integrations);
                    return acc;
                }), []);
            }
            function getIntegrationsToSetup(options) {
                var defaultIntegrations = options.defaultIntegrations && (0, tslib_es6.__spread)(options.defaultIntegrations) || [];
                var userIntegrations = options.integrations;
                var integrations = (0, tslib_es6.__spread)(filterDuplicates(defaultIntegrations));
                if (Array.isArray(userIntegrations)) integrations = (0, tslib_es6.__spread)(integrations.filter((function(integrations) {
                    return userIntegrations.every((function(userIntegration) {
                        return userIntegration.name !== integrations.name;
                    }));
                })), filterDuplicates(userIntegrations)); else if ("function" === typeof userIntegrations) {
                    integrations = userIntegrations(integrations);
                    integrations = Array.isArray(integrations) ? integrations : [ integrations ];
                }
                var integrationsNames = integrations.map((function(i) {
                    return i.name;
                }));
                var alwaysLastToRun = "Debug";
                if (-1 !== integrationsNames.indexOf(alwaysLastToRun)) integrations.push.apply(integrations, (0, 
                tslib_es6.__spread)(integrations.splice(integrationsNames.indexOf(alwaysLastToRun), 1)));
                return integrations;
            }
            function setupIntegration(integration) {
                if (-1 !== installedIntegrations.indexOf(integration.name)) return;
                integration.setupOnce(esm_scope.addGlobalEventProcessor, hub.getCurrentHub);
                installedIntegrations.push(integration.name);
                flags.IS_DEBUG_BUILD && logger.logger.log("Integration installed: " + integration.name);
            }
            function setupIntegrations(options) {
                var integrations = {};
                getIntegrationsToSetup(options).forEach((function(integration) {
                    integrations[integration.name] = integration;
                    setupIntegration(integration);
                }));
                (0, object.addNonEnumerableProperty)(integrations, "initialized", true);
                return integrations;
            }
            var ALREADY_SEEN_ERROR = "Not capturing exception because it's already been captured.";
            var BaseClient = function() {
                function BaseClient(backendClass, options) {
                    this._integrations = {};
                    this._numProcessing = 0;
                    this._backend = new backendClass(options);
                    this._options = options;
                    if (options.dsn) this._dsn = (0, dsn.makeDsn)(options.dsn);
                }
                BaseClient.prototype.captureException = function(exception, hint, scope) {
                    var _this = this;
                    if ((0, misc.checkOrSetAlreadyCaught)(exception)) {
                        flags.IS_DEBUG_BUILD && logger.logger.log(ALREADY_SEEN_ERROR);
                        return;
                    }
                    var eventId = hint && hint.event_id;
                    this._process(this._getBackend().eventFromException(exception, hint).then((function(event) {
                        return _this._captureEvent(event, hint, scope);
                    })).then((function(result) {
                        eventId = result;
                    })));
                    return eventId;
                };
                BaseClient.prototype.captureMessage = function(message, level, hint, scope) {
                    var _this = this;
                    var eventId = hint && hint.event_id;
                    var promisedEvent = (0, is.isPrimitive)(message) ? this._getBackend().eventFromMessage(String(message), level, hint) : this._getBackend().eventFromException(message, hint);
                    this._process(promisedEvent.then((function(event) {
                        return _this._captureEvent(event, hint, scope);
                    })).then((function(result) {
                        eventId = result;
                    })));
                    return eventId;
                };
                BaseClient.prototype.captureEvent = function(event, hint, scope) {
                    if (hint && hint.originalException && (0, misc.checkOrSetAlreadyCaught)(hint.originalException)) {
                        flags.IS_DEBUG_BUILD && logger.logger.log(ALREADY_SEEN_ERROR);
                        return;
                    }
                    var eventId = hint && hint.event_id;
                    this._process(this._captureEvent(event, hint, scope).then((function(result) {
                        eventId = result;
                    })));
                    return eventId;
                };
                BaseClient.prototype.captureSession = function(session) {
                    if (!this._isEnabled()) {
                        flags.IS_DEBUG_BUILD && logger.logger.warn("SDK not enabled, will not capture session.");
                        return;
                    }
                    if (!("string" === typeof session.release)) flags.IS_DEBUG_BUILD && logger.logger.warn("Discarded session because of missing or non-string release"); else {
                        this._sendSession(session);
                        session.update({
                            init: false
                        });
                    }
                };
                BaseClient.prototype.getDsn = function() {
                    return this._dsn;
                };
                BaseClient.prototype.getOptions = function() {
                    return this._options;
                };
                BaseClient.prototype.getTransport = function() {
                    return this._getBackend().getTransport();
                };
                BaseClient.prototype.flush = function(timeout) {
                    var _this = this;
                    return this._isClientDoneProcessing(timeout).then((function(clientFinished) {
                        return _this.getTransport().close(timeout).then((function(transportFlushed) {
                            return clientFinished && transportFlushed;
                        }));
                    }));
                };
                BaseClient.prototype.close = function(timeout) {
                    var _this = this;
                    return this.flush(timeout).then((function(result) {
                        _this.getOptions().enabled = false;
                        return result;
                    }));
                };
                BaseClient.prototype.setupIntegrations = function() {
                    if (this._isEnabled() && !this._integrations.initialized) this._integrations = setupIntegrations(this._options);
                };
                BaseClient.prototype.getIntegration = function(integration) {
                    try {
                        return this._integrations[integration.id] || null;
                    } catch (_oO) {
                        flags.IS_DEBUG_BUILD && logger.logger.warn("Cannot retrieve integration " + integration.id + " from the current Client");
                        return null;
                    }
                };
                BaseClient.prototype._updateSessionFromEvent = function(session, event) {
                    var e_1, _a;
                    var crashed = false;
                    var errored = false;
                    var exceptions = event.exception && event.exception.values;
                    if (exceptions) {
                        errored = true;
                        try {
                            for (var exceptions_1 = (0, tslib_es6.__values)(exceptions), exceptions_1_1 = exceptions_1.next(); !exceptions_1_1.done; exceptions_1_1 = exceptions_1.next()) {
                                var ex = exceptions_1_1.value;
                                var mechanism = ex.mechanism;
                                if (mechanism && false === mechanism.handled) {
                                    crashed = true;
                                    break;
                                }
                            }
                        } catch (e_1_1) {
                            e_1 = {
                                error: e_1_1
                            };
                        } finally {
                            try {
                                if (exceptions_1_1 && !exceptions_1_1.done && (_a = exceptions_1.return)) _a.call(exceptions_1);
                            } finally {
                                if (e_1) throw e_1.error;
                            }
                        }
                    }
                    var sessionNonTerminal = "ok" === session.status;
                    var shouldUpdateAndSend = sessionNonTerminal && 0 === session.errors || sessionNonTerminal && crashed;
                    if (shouldUpdateAndSend) {
                        session.update((0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, crashed && {
                            status: "crashed"
                        }), {
                            errors: session.errors || Number(errored || crashed)
                        }));
                        this.captureSession(session);
                    }
                };
                BaseClient.prototype._sendSession = function(session) {
                    this._getBackend().sendSession(session);
                };
                BaseClient.prototype._isClientDoneProcessing = function(timeout) {
                    var _this = this;
                    return new syncpromise.SyncPromise((function(resolve) {
                        var ticked = 0;
                        var tick = 1;
                        var interval = setInterval((function() {
                            if (0 == _this._numProcessing) {
                                clearInterval(interval);
                                resolve(true);
                            } else {
                                ticked += tick;
                                if (timeout && ticked >= timeout) {
                                    clearInterval(interval);
                                    resolve(false);
                                }
                            }
                        }), tick);
                    }));
                };
                BaseClient.prototype._getBackend = function() {
                    return this._backend;
                };
                BaseClient.prototype._isEnabled = function() {
                    return false !== this.getOptions().enabled && void 0 !== this._dsn;
                };
                BaseClient.prototype._prepareEvent = function(event, scope, hint) {
                    var _this = this;
                    var _a = this.getOptions(), _b = _a.normalizeDepth, normalizeDepth = void 0 === _b ? 3 : _b, _c = _a.normalizeMaxBreadth, normalizeMaxBreadth = void 0 === _c ? 1e3 : _c;
                    var prepared = (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, event), {
                        event_id: event.event_id || (hint && hint.event_id ? hint.event_id : (0, misc.uuid4)()),
                        timestamp: event.timestamp || (0, time.dateTimestampInSeconds)()
                    });
                    this._applyClientOptions(prepared);
                    this._applyIntegrationsMetadata(prepared);
                    var finalScope = scope;
                    if (hint && hint.captureContext) finalScope = esm_scope.Scope.clone(finalScope).update(hint.captureContext);
                    var result = (0, syncpromise.resolvedSyncPromise)(prepared);
                    if (finalScope) result = finalScope.applyToEvent(prepared, hint);
                    return result.then((function(evt) {
                        if (evt) evt.sdkProcessingMetadata = (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, evt.sdkProcessingMetadata), {
                            normalizeDepth: (0, normalize.normalize)(normalizeDepth) + " (" + typeof normalizeDepth + ")"
                        });
                        if ("number" === typeof normalizeDepth && normalizeDepth > 0) return _this._normalizeEvent(evt, normalizeDepth, normalizeMaxBreadth);
                        return evt;
                    }));
                };
                BaseClient.prototype._normalizeEvent = function(event, depth, maxBreadth) {
                    if (!event) return null;
                    var normalized = (0, tslib_es6.__assign)((0, tslib_es6.__assign)((0, tslib_es6.__assign)((0, 
                    tslib_es6.__assign)((0, tslib_es6.__assign)({}, event), event.breadcrumbs && {
                        breadcrumbs: event.breadcrumbs.map((function(b) {
                            return (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, b), b.data && {
                                data: (0, normalize.normalize)(b.data, depth, maxBreadth)
                            });
                        }))
                    }), event.user && {
                        user: (0, normalize.normalize)(event.user, depth, maxBreadth)
                    }), event.contexts && {
                        contexts: (0, normalize.normalize)(event.contexts, depth, maxBreadth)
                    }), event.extra && {
                        extra: (0, normalize.normalize)(event.extra, depth, maxBreadth)
                    });
                    if (event.contexts && event.contexts.trace) normalized.contexts.trace = event.contexts.trace;
                    normalized.sdkProcessingMetadata = (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, normalized.sdkProcessingMetadata), {
                        baseClientNormalized: true
                    });
                    return normalized;
                };
                BaseClient.prototype._applyClientOptions = function(event) {
                    var options = this.getOptions();
                    var environment = options.environment, release = options.release, dist = options.dist, _a = options.maxValueLength, maxValueLength = void 0 === _a ? 250 : _a;
                    if (!("environment" in event)) event.environment = "environment" in options ? environment : "production";
                    if (void 0 === event.release && void 0 !== release) event.release = release;
                    if (void 0 === event.dist && void 0 !== dist) event.dist = dist;
                    if (event.message) event.message = (0, string.truncate)(event.message, maxValueLength);
                    var exception = event.exception && event.exception.values && event.exception.values[0];
                    if (exception && exception.value) exception.value = (0, string.truncate)(exception.value, maxValueLength);
                    var request = event.request;
                    if (request && request.url) request.url = (0, string.truncate)(request.url, maxValueLength);
                };
                BaseClient.prototype._applyIntegrationsMetadata = function(event) {
                    var integrationsArray = Object.keys(this._integrations);
                    if (integrationsArray.length > 0) {
                        event.sdk = event.sdk || {};
                        event.sdk.integrations = (0, tslib_es6.__spread)(event.sdk.integrations || [], integrationsArray);
                    }
                };
                BaseClient.prototype._sendEvent = function(event) {
                    this._getBackend().sendEvent(event);
                };
                BaseClient.prototype._captureEvent = function(event, hint, scope) {
                    return this._processEvent(event, hint, scope).then((function(finalEvent) {
                        return finalEvent.event_id;
                    }), (function(reason) {
                        flags.IS_DEBUG_BUILD && logger.logger.error(reason);
                        return;
                    }));
                };
                BaseClient.prototype._processEvent = function(event, hint, scope) {
                    var _this = this;
                    var _a = this.getOptions(), beforeSend = _a.beforeSend, sampleRate = _a.sampleRate;
                    var transport = this.getTransport();
                    function recordLostEvent(outcome, category) {
                        if (transport.recordLostEvent) transport.recordLostEvent(outcome, category);
                    }
                    if (!this._isEnabled()) return (0, syncpromise.rejectedSyncPromise)(new error.SentryError("SDK not enabled, will not capture event."));
                    var isTransaction = "transaction" === event.type;
                    if (!isTransaction && "number" === typeof sampleRate && Math.random() > sampleRate) {
                        recordLostEvent("sample_rate", "event");
                        return (0, syncpromise.rejectedSyncPromise)(new error.SentryError("Discarding event because it's not included in the random sample (sampling rate = " + sampleRate + ")"));
                    }
                    return this._prepareEvent(event, scope, hint).then((function(prepared) {
                        if (null === prepared) {
                            recordLostEvent("event_processor", event.type || "event");
                            throw new error.SentryError("An event processor returned null, will not send event.");
                        }
                        var isInternalException = hint && hint.data && true === hint.data.__sentry__;
                        if (isInternalException || isTransaction || !beforeSend) return prepared;
                        var beforeSendResult = beforeSend(prepared, hint);
                        return _ensureBeforeSendRv(beforeSendResult);
                    })).then((function(processedEvent) {
                        if (null === processedEvent) {
                            recordLostEvent("before_send", event.type || "event");
                            throw new error.SentryError("`beforeSend` returned `null`, will not send event.");
                        }
                        var session = scope && scope.getSession && scope.getSession();
                        if (!isTransaction && session) _this._updateSessionFromEvent(session, processedEvent);
                        _this._sendEvent(processedEvent);
                        return processedEvent;
                    })).then(null, (function(reason) {
                        if (reason instanceof error.SentryError) throw reason;
                        _this.captureException(reason, {
                            data: {
                                __sentry__: true
                            },
                            originalException: reason
                        });
                        throw new error.SentryError("Event processing pipeline threw an error, original event will not be sent. Details have been sent as a new event.\nReason: " + reason);
                    }));
                };
                BaseClient.prototype._process = function(promise) {
                    var _this = this;
                    this._numProcessing += 1;
                    void promise.then((function(value) {
                        _this._numProcessing -= 1;
                        return value;
                    }), (function(reason) {
                        _this._numProcessing -= 1;
                        return reason;
                    }));
                };
                return BaseClient;
            }();
            function _ensureBeforeSendRv(rv) {
                var nullErr = "`beforeSend` method has to return `null` or a valid event.";
                if ((0, is.isThenable)(rv)) return rv.then((function(event) {
                    if (!((0, is.isPlainObject)(event) || null === event)) throw new error.SentryError(nullErr);
                    return event;
                }), (function(e) {
                    throw new error.SentryError("beforeSend rejected with " + e);
                })); else if (!((0, is.isPlainObject)(rv) || null === rv)) throw new error.SentryError(nullErr);
                return rv;
            }
            var version = __webpack_require__("../shared/browser/node_modules/@sentry/core/esm/version.js");
            var global = __webpack_require__("../shared/browser/node_modules/@sentry/utils/esm/global.js");
            var esm_api = __webpack_require__("../shared/browser/node_modules/@sentry/core/esm/api.js");
            var request = __webpack_require__("../shared/browser/node_modules/@sentry/core/esm/request.js");
            var NoopTransport = function() {
                function NoopTransport() {}
                NoopTransport.prototype.sendEvent = function(_) {
                    return (0, syncpromise.resolvedSyncPromise)({
                        reason: "NoopTransport: Event has been skipped because no Dsn is configured.",
                        status: "skipped"
                    });
                };
                NoopTransport.prototype.close = function(_) {
                    return (0, syncpromise.resolvedSyncPromise)(true);
                };
                return NoopTransport;
            }();
            var BaseBackend = function() {
                function BaseBackend(options) {
                    this._options = options;
                    if (!this._options.dsn) flags.IS_DEBUG_BUILD && logger.logger.warn("No DSN provided, backend will not do anything.");
                    this._transport = this._setupTransport();
                }
                BaseBackend.prototype.eventFromException = function(_exception, _hint) {
                    throw new error.SentryError("Backend has to implement `eventFromException` method");
                };
                BaseBackend.prototype.eventFromMessage = function(_message, _level, _hint) {
                    throw new error.SentryError("Backend has to implement `eventFromMessage` method");
                };
                BaseBackend.prototype.sendEvent = function(event) {
                    if (this._newTransport && this._options.dsn && this._options._experiments && this._options._experiments.newTransport) {
                        var api = (0, esm_api.initAPIDetails)(this._options.dsn, this._options._metadata, this._options.tunnel);
                        var env = (0, request.createEventEnvelope)(event, api);
                        void this._newTransport.send(env).then(null, (function(reason) {
                            flags.IS_DEBUG_BUILD && logger.logger.error("Error while sending event:", reason);
                        }));
                    } else void this._transport.sendEvent(event).then(null, (function(reason) {
                        flags.IS_DEBUG_BUILD && logger.logger.error("Error while sending event:", reason);
                    }));
                };
                BaseBackend.prototype.sendSession = function(session) {
                    if (!this._transport.sendSession) {
                        flags.IS_DEBUG_BUILD && logger.logger.warn("Dropping session because custom transport doesn't implement sendSession");
                        return;
                    }
                    if (this._newTransport && this._options.dsn && this._options._experiments && this._options._experiments.newTransport) {
                        var api = (0, esm_api.initAPIDetails)(this._options.dsn, this._options._metadata, this._options.tunnel);
                        var _a = (0, tslib_es6.__read)((0, request.createSessionEnvelope)(session, api), 1), env = _a[0];
                        void this._newTransport.send(env).then(null, (function(reason) {
                            flags.IS_DEBUG_BUILD && logger.logger.error("Error while sending session:", reason);
                        }));
                    } else void this._transport.sendSession(session).then(null, (function(reason) {
                        flags.IS_DEBUG_BUILD && logger.logger.error("Error while sending session:", reason);
                    }));
                };
                BaseBackend.prototype.getTransport = function() {
                    return this._transport;
                };
                BaseBackend.prototype._setupTransport = function() {
                    return new NoopTransport;
                };
                return BaseBackend;
            }();
            var severity = __webpack_require__("../shared/browser/node_modules/@sentry/types/esm/severity.js");
            var supports = __webpack_require__("../shared/browser/node_modules/@sentry/utils/esm/supports.js");
            var eventbuilder = __webpack_require__("../shared/browser/node_modules/@sentry/browser/esm/eventbuilder.js");
            var new_fetch = __webpack_require__("../shared/browser/node_modules/@sentry/browser/esm/transports/new-fetch.js");
            var fetch = __webpack_require__("../shared/browser/node_modules/@sentry/browser/esm/transports/fetch.js");
            var new_xhr = __webpack_require__("../shared/browser/node_modules/@sentry/browser/esm/transports/new-xhr.js");
            var xhr = __webpack_require__("../shared/browser/node_modules/@sentry/browser/esm/transports/xhr.js");
            var BrowserBackend = function(_super) {
                (0, tslib_es6.__extends)(BrowserBackend, _super);
                function BrowserBackend() {
                    return null !== _super && _super.apply(this, arguments) || this;
                }
                BrowserBackend.prototype.eventFromException = function(exception, hint) {
                    return (0, eventbuilder.eventFromException)(exception, hint, this._options.attachStacktrace);
                };
                BrowserBackend.prototype.eventFromMessage = function(message, level, hint) {
                    if (void 0 === level) level = severity.Severity.Info;
                    return (0, eventbuilder.eventFromMessage)(message, level, hint, this._options.attachStacktrace);
                };
                BrowserBackend.prototype._setupTransport = function() {
                    if (!this._options.dsn) return _super.prototype._setupTransport.call(this);
                    var transportOptions = (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, this._options.transportOptions), {
                        dsn: this._options.dsn,
                        tunnel: this._options.tunnel,
                        sendClientReports: this._options.sendClientReports,
                        _metadata: this._options._metadata
                    });
                    var api = (0, esm_api.initAPIDetails)(transportOptions.dsn, transportOptions._metadata, transportOptions.tunnel);
                    var url = (0, esm_api.getEnvelopeEndpointWithUrlEncodedAuth)(api.dsn, api.tunnel);
                    if (this._options.transport) return new this._options.transport(transportOptions);
                    if ((0, supports.supportsFetch)()) {
                        var requestOptions = (0, tslib_es6.__assign)({}, transportOptions.fetchParameters);
                        this._newTransport = (0, new_fetch.makeNewFetchTransport)({
                            requestOptions,
                            url
                        });
                        return new fetch.FetchTransport(transportOptions);
                    }
                    this._newTransport = (0, new_xhr.makeNewXHRTransport)({
                        url,
                        headers: transportOptions.headers
                    });
                    return new xhr.XHRTransport(transportOptions);
                };
                return BrowserBackend;
            }(BaseBackend);
            var esm_flags = __webpack_require__("../shared/browser/node_modules/@sentry/browser/esm/flags.js");
            var helpers = __webpack_require__("../shared/browser/node_modules/@sentry/browser/esm/helpers.js");
            var breadcrumbs = __webpack_require__("../shared/browser/node_modules/@sentry/browser/esm/integrations/breadcrumbs.js");
            var BrowserClient = function(_super) {
                (0, tslib_es6.__extends)(BrowserClient, _super);
                function BrowserClient(options) {
                    if (void 0 === options) options = {};
                    var _this = this;
                    options._metadata = options._metadata || {};
                    options._metadata.sdk = options._metadata.sdk || {
                        name: "sentry.javascript.browser",
                        packages: [ {
                            name: "npm:@sentry/browser",
                            version: version.SDK_VERSION
                        } ],
                        version: version.SDK_VERSION
                    };
                    _this = _super.call(this, BrowserBackend, options) || this;
                    return _this;
                }
                BrowserClient.prototype.showReportDialog = function(options) {
                    if (void 0 === options) options = {};
                    var document = (0, global.getGlobalObject)().document;
                    if (!document) return;
                    if (!this._isEnabled()) {
                        esm_flags.IS_DEBUG_BUILD && logger.logger.error("Trying to call showReportDialog with Sentry Client disabled");
                        return;
                    }
                    (0, helpers.injectReportDialog)((0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, options), {
                        dsn: options.dsn || this.getDsn()
                    }));
                };
                BrowserClient.prototype._prepareEvent = function(event, scope, hint) {
                    event.platform = event.platform || "javascript";
                    return _super.prototype._prepareEvent.call(this, event, scope, hint);
                };
                BrowserClient.prototype._sendEvent = function(event) {
                    var integration = this.getIntegration(breadcrumbs.Breadcrumbs);
                    if (integration) integration.addSentryBreadcrumb(event);
                    _super.prototype._sendEvent.call(this, event);
                };
                return BrowserClient;
            }(BaseClient);
        },
        "../shared/browser/node_modules/@sentry/browser/esm/eventbuilder.js": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.d(__webpack_exports__, {
                eventFromException: () => eventFromException,
                eventFromMessage: () => eventFromMessage,
                eventFromUnknownInput: () => eventFromUnknownInput,
                exceptionFromError: () => exceptionFromError
            });
            var tslib_es6 = __webpack_require__("../shared/browser/node_modules/tslib/tslib.es6.js");
            var severity = __webpack_require__("../shared/browser/node_modules/@sentry/types/esm/severity.js");
            var is = __webpack_require__("../shared/browser/node_modules/@sentry/utils/esm/is.js");
            var object = __webpack_require__("../shared/browser/node_modules/@sentry/utils/esm/object.js");
            var normalize = __webpack_require__("../shared/browser/node_modules/@sentry/utils/esm/normalize.js");
            var esm_stacktrace = __webpack_require__("../shared/browser/node_modules/@sentry/utils/esm/stacktrace.js");
            var misc = __webpack_require__("../shared/browser/node_modules/@sentry/utils/esm/misc.js");
            var syncpromise = __webpack_require__("../shared/browser/node_modules/@sentry/utils/esm/syncpromise.js");
            var UNKNOWN_FUNCTION = "?";
            var OPERA10_PRIORITY = 10;
            var OPERA11_PRIORITY = 20;
            var CHROME_PRIORITY = 30;
            var WINJS_PRIORITY = 40;
            var GECKO_PRIORITY = 50;
            function createFrame(filename, func, lineno, colno) {
                var frame = {
                    filename,
                    function: func,
                    in_app: true
                };
                if (void 0 !== lineno) frame.lineno = lineno;
                if (void 0 !== colno) frame.colno = colno;
                return frame;
            }
            var chromeRegex = /^\s*at (?:(.*?) ?\((?:address at )?)?((?:file|https?|blob|chrome-extension|address|native|eval|webpack|<anonymous>|[-a-z]+:|.*bundle|\/).*?)(?::(\d+))?(?::(\d+))?\)?\s*$/i;
            var chromeEvalRegex = /\((\S*)(?::(\d+))(?::(\d+))\)/;
            var chrome = function(line) {
                var parts = chromeRegex.exec(line);
                if (parts) {
                    var isEval = parts[2] && 0 === parts[2].indexOf("eval");
                    if (isEval) {
                        var subMatch = chromeEvalRegex.exec(parts[2]);
                        if (subMatch) {
                            parts[2] = subMatch[1];
                            parts[3] = subMatch[2];
                            parts[4] = subMatch[3];
                        }
                    }
                    var _a = (0, tslib_es6.__read)(extractSafariExtensionDetails(parts[1] || UNKNOWN_FUNCTION, parts[2]), 2), func = _a[0], filename = _a[1];
                    return createFrame(filename, func, parts[3] ? +parts[3] : void 0, parts[4] ? +parts[4] : void 0);
                }
                return;
            };
            var chromeStackParser = [ CHROME_PRIORITY, chrome ];
            var geckoREgex = /^\s*(.*?)(?:\((.*?)\))?(?:^|@)?((?:file|https?|blob|chrome|webpack|resource|moz-extension|capacitor).*?:\/.*?|\[native code\]|[^@]*(?:bundle|\d+\.js)|\/[\w\-. /=]+)(?::(\d+))?(?::(\d+))?\s*$/i;
            var geckoEvalRegex = /(\S+) line (\d+)(?: > eval line \d+)* > eval/i;
            var gecko = function(line) {
                var _a;
                var parts = geckoREgex.exec(line);
                if (parts) {
                    var isEval = parts[3] && parts[3].indexOf(" > eval") > -1;
                    if (isEval) {
                        var subMatch = geckoEvalRegex.exec(parts[3]);
                        if (subMatch) {
                            parts[1] = parts[1] || "eval";
                            parts[3] = subMatch[1];
                            parts[4] = subMatch[2];
                            parts[5] = "";
                        }
                    }
                    var filename = parts[3];
                    var func = parts[1] || UNKNOWN_FUNCTION;
                    _a = (0, tslib_es6.__read)(extractSafariExtensionDetails(func, filename), 2), func = _a[0], 
                    filename = _a[1];
                    return createFrame(filename, func, parts[4] ? +parts[4] : void 0, parts[5] ? +parts[5] : void 0);
                }
                return;
            };
            var geckoStackParser = [ GECKO_PRIORITY, gecko ];
            var winjsRegex = /^\s*at (?:((?:\[object object\])?.+) )?\(?((?:file|ms-appx|https?|webpack|blob):.*?):(\d+)(?::(\d+))?\)?\s*$/i;
            var winjs = function(line) {
                var parts = winjsRegex.exec(line);
                return parts ? createFrame(parts[2], parts[1] || UNKNOWN_FUNCTION, +parts[3], parts[4] ? +parts[4] : void 0) : void 0;
            };
            var winjsStackParser = [ WINJS_PRIORITY, winjs ];
            var opera10Regex = / line (\d+).*script (?:in )?(\S+)(?:: in function (\S+))?$/i;
            var opera10 = function(line) {
                var parts = opera10Regex.exec(line);
                return parts ? createFrame(parts[2], parts[3] || UNKNOWN_FUNCTION, +parts[1]) : void 0;
            };
            var opera10StackParser = [ OPERA10_PRIORITY, opera10 ];
            var opera11Regex = / line (\d+), column (\d+)\s*(?:in (?:<anonymous function: ([^>]+)>|([^)]+))\(.*\))? in (.*):\s*$/i;
            var opera11 = function(line) {
                var parts = opera11Regex.exec(line);
                return parts ? createFrame(parts[5], parts[3] || parts[4] || UNKNOWN_FUNCTION, +parts[1], +parts[2]) : void 0;
            };
            var opera11StackParser = [ OPERA11_PRIORITY, opera11 ];
            var extractSafariExtensionDetails = function(func, filename) {
                var isSafariExtension = -1 !== func.indexOf("safari-extension");
                var isSafariWebExtension = -1 !== func.indexOf("safari-web-extension");
                return isSafariExtension || isSafariWebExtension ? [ -1 !== func.indexOf("@") ? func.split("@")[0] : UNKNOWN_FUNCTION, isSafariExtension ? "safari-extension:" + filename : "safari-web-extension:" + filename ] : [ func, filename ];
            };
            function exceptionFromError(ex) {
                var frames = parseStackFrames(ex);
                var exception = {
                    type: ex && ex.name,
                    value: extractMessage(ex)
                };
                if (frames.length) exception.stacktrace = {
                    frames
                };
                if (void 0 === exception.type && "" === exception.value) exception.value = "Unrecoverable error caught";
                return exception;
            }
            function eventFromPlainObject(exception, syntheticException, isUnhandledRejection) {
                var event = {
                    exception: {
                        values: [ {
                            type: (0, is.isEvent)(exception) ? exception.constructor.name : isUnhandledRejection ? "UnhandledRejection" : "Error",
                            value: "Non-Error " + (isUnhandledRejection ? "promise rejection" : "exception") + " captured with keys: " + (0, 
                            object.extractExceptionKeysForMessage)(exception)
                        } ]
                    },
                    extra: {
                        __serialized__: (0, normalize.normalizeToSize)(exception)
                    }
                };
                if (syntheticException) {
                    var frames_1 = parseStackFrames(syntheticException);
                    if (frames_1.length) event.stacktrace = {
                        frames: frames_1
                    };
                }
                return event;
            }
            function eventFromError(ex) {
                return {
                    exception: {
                        values: [ exceptionFromError(ex) ]
                    }
                };
            }
            function parseStackFrames(ex) {
                var stacktrace = ex.stacktrace || ex.stack || "";
                var popSize = getPopSize(ex);
                try {
                    return (0, esm_stacktrace.createStackParser)(opera10StackParser, opera11StackParser, chromeStackParser, winjsStackParser, geckoStackParser)(stacktrace, popSize);
                } catch (e) {}
                return [];
            }
            var reactMinifiedRegexp = /Minified React error #\d+;/i;
            function getPopSize(ex) {
                if (ex) {
                    if ("number" === typeof ex.framesToPop) return ex.framesToPop;
                    if (reactMinifiedRegexp.test(ex.message)) return 1;
                }
                return 0;
            }
            function extractMessage(ex) {
                var message = ex && ex.message;
                if (!message) return "No error message";
                if (message.error && "string" === typeof message.error.message) return message.error.message;
                return message;
            }
            function eventFromException(exception, hint, attachStacktrace) {
                var syntheticException = hint && hint.syntheticException || void 0;
                var event = eventFromUnknownInput(exception, syntheticException, attachStacktrace);
                (0, misc.addExceptionMechanism)(event);
                event.level = severity.Severity.Error;
                if (hint && hint.event_id) event.event_id = hint.event_id;
                return (0, syncpromise.resolvedSyncPromise)(event);
            }
            function eventFromMessage(message, level, hint, attachStacktrace) {
                if (void 0 === level) level = severity.Severity.Info;
                var syntheticException = hint && hint.syntheticException || void 0;
                var event = eventFromString(message, syntheticException, attachStacktrace);
                event.level = level;
                if (hint && hint.event_id) event.event_id = hint.event_id;
                return (0, syncpromise.resolvedSyncPromise)(event);
            }
            function eventFromUnknownInput(exception, syntheticException, attachStacktrace, isUnhandledRejection) {
                var event;
                if ((0, is.isErrorEvent)(exception) && exception.error) {
                    var errorEvent = exception;
                    return eventFromError(errorEvent.error);
                }
                if ((0, is.isDOMError)(exception) || (0, is.isDOMException)(exception)) {
                    var domException = exception;
                    if ("stack" in exception) event = eventFromError(exception); else {
                        var name_1 = domException.name || ((0, is.isDOMError)(domException) ? "DOMError" : "DOMException");
                        var message = domException.message ? name_1 + ": " + domException.message : name_1;
                        event = eventFromString(message, syntheticException, attachStacktrace);
                        (0, misc.addExceptionTypeValue)(event, message);
                    }
                    if ("code" in domException) event.tags = (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, event.tags), {
                        "DOMException.code": "" + domException.code
                    });
                    return event;
                }
                if ((0, is.isError)(exception)) return eventFromError(exception);
                if ((0, is.isPlainObject)(exception) || (0, is.isEvent)(exception)) {
                    var objectException = exception;
                    event = eventFromPlainObject(objectException, syntheticException, isUnhandledRejection);
                    (0, misc.addExceptionMechanism)(event, {
                        synthetic: true
                    });
                    return event;
                }
                event = eventFromString(exception, syntheticException, attachStacktrace);
                (0, misc.addExceptionTypeValue)(event, "" + exception, void 0);
                (0, misc.addExceptionMechanism)(event, {
                    synthetic: true
                });
                return event;
            }
            function eventFromString(input, syntheticException, attachStacktrace) {
                var event = {
                    message: input
                };
                if (attachStacktrace && syntheticException) {
                    var frames_2 = parseStackFrames(syntheticException);
                    if (frames_2.length) event.stacktrace = {
                        frames: frames_2
                    };
                }
                return event;
            }
        },
        "../shared/browser/node_modules/@sentry/browser/esm/flags.js": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.d(__webpack_exports__, {
                IS_DEBUG_BUILD: () => IS_DEBUG_BUILD
            });
            var IS_DEBUG_BUILD = "undefined" === typeof __SENTRY_DEBUG__ ? true : __SENTRY_DEBUG__;
        },
        "../shared/browser/node_modules/@sentry/browser/esm/helpers.js": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.d(__webpack_exports__, {
                shouldIgnoreOnError: () => shouldIgnoreOnError,
                wrap: () => wrap,
                injectReportDialog: () => injectReportDialog
            });
            var tslib__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__("../shared/browser/node_modules/tslib/tslib.es6.js");
            var _sentry_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("../shared/browser/node_modules/@sentry/minimal/esm/index.js");
            var _sentry_core__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__("../shared/browser/node_modules/@sentry/core/esm/api.js");
            var _sentry_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("../shared/browser/node_modules/@sentry/utils/esm/global.js");
            var _sentry_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("../shared/browser/node_modules/@sentry/utils/esm/object.js");
            var _sentry_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("../shared/browser/node_modules/@sentry/utils/esm/misc.js");
            var _sentry_utils__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__("../shared/browser/node_modules/@sentry/utils/esm/logger.js");
            var _flags__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__("../shared/browser/node_modules/@sentry/browser/esm/flags.js");
            var global = (0, _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.getGlobalObject)();
            var ignoreOnError = 0;
            function shouldIgnoreOnError() {
                return ignoreOnError > 0;
            }
            function ignoreNextOnError() {
                ignoreOnError += 1;
                setTimeout((function() {
                    ignoreOnError -= 1;
                }));
            }
            function wrap(fn, options, before) {
                if (void 0 === options) options = {};
                if ("function" !== typeof fn) return fn;
                try {
                    var wrapper = fn.__sentry_wrapped__;
                    if (wrapper) return wrapper;
                    if ((0, _sentry_utils__WEBPACK_IMPORTED_MODULE_1__.getOriginalFunction)(fn)) return fn;
                } catch (e) {
                    return fn;
                }
                var sentryWrapped = function() {
                    var args = Array.prototype.slice.call(arguments);
                    try {
                        if (before && "function" === typeof before) before.apply(this, arguments);
                        var wrappedArguments = args.map((function(arg) {
                            return wrap(arg, options);
                        }));
                        return fn.apply(this, wrappedArguments);
                    } catch (ex) {
                        ignoreNextOnError();
                        (0, _sentry_core__WEBPACK_IMPORTED_MODULE_2__.withScope)((function(scope) {
                            scope.addEventProcessor((function(event) {
                                if (options.mechanism) {
                                    (0, _sentry_utils__WEBPACK_IMPORTED_MODULE_3__.addExceptionTypeValue)(event, void 0, void 0);
                                    (0, _sentry_utils__WEBPACK_IMPORTED_MODULE_3__.addExceptionMechanism)(event, options.mechanism);
                                }
                                event.extra = (0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_4__.__assign)({}, event.extra), {
                                    arguments: args
                                });
                                return event;
                            }));
                            (0, _sentry_core__WEBPACK_IMPORTED_MODULE_2__.captureException)(ex);
                        }));
                        throw ex;
                    }
                };
                try {
                    for (var property in fn) if (Object.prototype.hasOwnProperty.call(fn, property)) sentryWrapped[property] = fn[property];
                } catch (_oO) {}
                (0, _sentry_utils__WEBPACK_IMPORTED_MODULE_1__.markFunctionWrapped)(sentryWrapped, fn);
                (0, _sentry_utils__WEBPACK_IMPORTED_MODULE_1__.addNonEnumerableProperty)(fn, "__sentry_wrapped__", sentryWrapped);
                try {
                    var descriptor = Object.getOwnPropertyDescriptor(sentryWrapped, "name");
                    if (descriptor.configurable) Object.defineProperty(sentryWrapped, "name", {
                        get: function() {
                            return fn.name;
                        }
                    });
                } catch (_oO) {}
                return sentryWrapped;
            }
            function injectReportDialog(options) {
                if (void 0 === options) options = {};
                if (!global.document) return;
                if (!options.eventId) {
                    _flags__WEBPACK_IMPORTED_MODULE_5__.IS_DEBUG_BUILD && _sentry_utils__WEBPACK_IMPORTED_MODULE_6__.logger.error("Missing eventId option in showReportDialog call");
                    return;
                }
                if (!options.dsn) {
                    _flags__WEBPACK_IMPORTED_MODULE_5__.IS_DEBUG_BUILD && _sentry_utils__WEBPACK_IMPORTED_MODULE_6__.logger.error("Missing dsn option in showReportDialog call");
                    return;
                }
                var script = global.document.createElement("script");
                script.async = true;
                script.src = (0, _sentry_core__WEBPACK_IMPORTED_MODULE_7__.getReportDialogEndpoint)(options.dsn, options);
                if (options.onLoad) script.onload = options.onLoad;
                var injectionPoint = global.document.head || global.document.body;
                if (injectionPoint) injectionPoint.appendChild(script);
            }
        },
        "../shared/browser/node_modules/@sentry/browser/esm/index.js": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.r(__webpack_exports__);
            __webpack_require__.d(__webpack_exports__, {
                BrowserClient: () => client.BrowserClient,
                Hub: () => hub.Hub,
                Integrations: () => INTEGRATIONS,
                SDK_NAME: () => SDK_NAME,
                SDK_VERSION: () => version.SDK_VERSION,
                Scope: () => scope.Scope,
                Session: () => session.Session,
                Severity: () => severity.Severity,
                Transports: () => transports_namespaceObject,
                addBreadcrumb: () => esm.addBreadcrumb,
                addGlobalEventProcessor: () => scope.addGlobalEventProcessor,
                captureEvent: () => esm.captureEvent,
                captureException: () => esm.captureException,
                captureMessage: () => esm.captureMessage,
                close: () => sdk.close,
                configureScope: () => esm.configureScope,
                defaultIntegrations: () => sdk.defaultIntegrations,
                eventFromException: () => eventbuilder.eventFromException,
                eventFromMessage: () => eventbuilder.eventFromMessage,
                flush: () => sdk.flush,
                forceLoad: () => sdk.forceLoad,
                getCurrentHub: () => hub.getCurrentHub,
                getHubFromCarrier: () => hub.getHubFromCarrier,
                init: () => sdk.init,
                injectReportDialog: () => helpers.injectReportDialog,
                lastEventId: () => sdk.lastEventId,
                makeMain: () => hub.makeMain,
                onLoad: () => sdk.onLoad,
                setContext: () => esm.setContext,
                setExtra: () => esm.setExtra,
                setExtras: () => esm.setExtras,
                setTag: () => esm.setTag,
                setTags: () => esm.setTags,
                setUser: () => esm.setUser,
                showReportDialog: () => sdk.showReportDialog,
                startTransaction: () => esm.startTransaction,
                withScope: () => esm.withScope,
                wrap: () => sdk.wrap
            });
            var integrations_namespaceObject = {};
            __webpack_require__.r(integrations_namespaceObject);
            __webpack_require__.d(integrations_namespaceObject, {
                FunctionToString: () => functiontostring.FunctionToString,
                InboundFilters: () => inboundfilters.InboundFilters
            });
            var esm_integrations_namespaceObject = {};
            __webpack_require__.r(esm_integrations_namespaceObject);
            __webpack_require__.d(esm_integrations_namespaceObject, {
                Breadcrumbs: () => breadcrumbs.Breadcrumbs,
                Dedupe: () => dedupe.Dedupe,
                GlobalHandlers: () => globalhandlers.GlobalHandlers,
                LinkedErrors: () => linkederrors.LinkedErrors,
                TryCatch: () => trycatch.TryCatch,
                UserAgent: () => useragent.UserAgent
            });
            var transports_namespaceObject = {};
            __webpack_require__.r(transports_namespaceObject);
            __webpack_require__.d(transports_namespaceObject, {
                BaseTransport: () => base.BaseTransport,
                FetchTransport: () => fetch.FetchTransport,
                XHRTransport: () => xhr.XHRTransport,
                makeNewFetchTransport: () => new_fetch.makeNewFetchTransport,
                makeNewXHRTransport: () => new_xhr.makeNewXHRTransport
            });
            var tslib_es6 = __webpack_require__("../shared/browser/node_modules/tslib/tslib.es6.js");
            var severity = __webpack_require__("../shared/browser/node_modules/@sentry/types/esm/severity.js");
            var scope = __webpack_require__("../shared/browser/node_modules/@sentry/hub/esm/scope.js");
            var esm = __webpack_require__("../shared/browser/node_modules/@sentry/minimal/esm/index.js");
            var hub = __webpack_require__("../shared/browser/node_modules/@sentry/hub/esm/hub.js");
            var session = __webpack_require__("../shared/browser/node_modules/@sentry/hub/esm/session.js");
            var version = __webpack_require__("../shared/browser/node_modules/@sentry/core/esm/version.js");
            var client = __webpack_require__("../shared/browser/node_modules/@sentry/browser/esm/client.js");
            var helpers = __webpack_require__("../shared/browser/node_modules/@sentry/browser/esm/helpers.js");
            var eventbuilder = __webpack_require__("../shared/browser/node_modules/@sentry/browser/esm/eventbuilder.js");
            var sdk = __webpack_require__("../shared/browser/node_modules/@sentry/browser/esm/sdk.js");
            var SDK_NAME = "sentry.javascript.browser";
            var functiontostring = __webpack_require__("../shared/browser/node_modules/@sentry/core/esm/integrations/functiontostring.js");
            var inboundfilters = __webpack_require__("../shared/browser/node_modules/@sentry/core/esm/integrations/inboundfilters.js");
            var global = __webpack_require__("../shared/browser/node_modules/@sentry/utils/esm/global.js");
            var globalhandlers = __webpack_require__("../shared/browser/node_modules/@sentry/browser/esm/integrations/globalhandlers.js");
            var trycatch = __webpack_require__("../shared/browser/node_modules/@sentry/browser/esm/integrations/trycatch.js");
            var breadcrumbs = __webpack_require__("../shared/browser/node_modules/@sentry/browser/esm/integrations/breadcrumbs.js");
            var linkederrors = __webpack_require__("../shared/browser/node_modules/@sentry/browser/esm/integrations/linkederrors.js");
            var useragent = __webpack_require__("../shared/browser/node_modules/@sentry/browser/esm/integrations/useragent.js");
            var dedupe = __webpack_require__("../shared/browser/node_modules/@sentry/browser/esm/integrations/dedupe.js");
            var base = __webpack_require__("../shared/browser/node_modules/@sentry/browser/esm/transports/base.js");
            var fetch = __webpack_require__("../shared/browser/node_modules/@sentry/browser/esm/transports/fetch.js");
            var xhr = __webpack_require__("../shared/browser/node_modules/@sentry/browser/esm/transports/xhr.js");
            var new_fetch = __webpack_require__("../shared/browser/node_modules/@sentry/browser/esm/transports/new-fetch.js");
            var new_xhr = __webpack_require__("../shared/browser/node_modules/@sentry/browser/esm/transports/new-xhr.js");
            var windowIntegrations = {};
            var _window = (0, global.getGlobalObject)();
            if (_window.Sentry && _window.Sentry.Integrations) windowIntegrations = _window.Sentry.Integrations;
            var INTEGRATIONS = (0, tslib_es6.__assign)((0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, windowIntegrations), integrations_namespaceObject), esm_integrations_namespaceObject);
        },
        "../shared/browser/node_modules/@sentry/browser/esm/integrations/breadcrumbs.js": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.d(__webpack_exports__, {
                Breadcrumbs: () => Breadcrumbs
            });
            var tslib_es6 = __webpack_require__("../shared/browser/node_modules/tslib/tslib.es6.js");
            var hub = __webpack_require__("../shared/browser/node_modules/@sentry/hub/esm/hub.js");
            var severity = __webpack_require__("../shared/browser/node_modules/@sentry/types/esm/severity.js");
            var SeverityLevels = [ "fatal", "error", "warning", "log", "info", "debug", "critical" ];
            function isSupportedSeverity(level) {
                return -1 !== SeverityLevels.indexOf(level);
            }
            function severityFromString(level) {
                if ("warn" === level) return severity.Severity.Warning;
                if (isSupportedSeverity(level)) return level;
                return severity.Severity.Log;
            }
            var misc = __webpack_require__("../shared/browser/node_modules/@sentry/utils/esm/misc.js");
            var instrument = __webpack_require__("../shared/browser/node_modules/@sentry/utils/esm/instrument.js");
            var browser = __webpack_require__("../shared/browser/node_modules/@sentry/utils/esm/browser.js");
            var string = __webpack_require__("../shared/browser/node_modules/@sentry/utils/esm/string.js");
            var esm_global = __webpack_require__("../shared/browser/node_modules/@sentry/utils/esm/global.js");
            var Breadcrumbs = function() {
                function Breadcrumbs(options) {
                    this.name = Breadcrumbs.id;
                    this._options = (0, tslib_es6.__assign)({
                        console: true,
                        dom: true,
                        fetch: true,
                        history: true,
                        sentry: true,
                        xhr: true
                    }, options);
                }
                Breadcrumbs.prototype.addSentryBreadcrumb = function(event) {
                    if (!this._options.sentry) return;
                    (0, hub.getCurrentHub)().addBreadcrumb({
                        category: "sentry." + ("transaction" === event.type ? "transaction" : "event"),
                        event_id: event.event_id,
                        level: event.level,
                        message: (0, misc.getEventDescription)(event)
                    }, {
                        event
                    });
                };
                Breadcrumbs.prototype.setupOnce = function() {
                    if (this._options.console) (0, instrument.addInstrumentationHandler)("console", _consoleBreadcrumb);
                    if (this._options.dom) (0, instrument.addInstrumentationHandler)("dom", _domBreadcrumb(this._options.dom));
                    if (this._options.xhr) (0, instrument.addInstrumentationHandler)("xhr", _xhrBreadcrumb);
                    if (this._options.fetch) (0, instrument.addInstrumentationHandler)("fetch", _fetchBreadcrumb);
                    if (this._options.history) (0, instrument.addInstrumentationHandler)("history", _historyBreadcrumb);
                };
                Breadcrumbs.id = "Breadcrumbs";
                return Breadcrumbs;
            }();
            function _domBreadcrumb(dom) {
                function _innerDomBreadcrumb(handlerData) {
                    var target;
                    var keyAttrs = "object" === typeof dom ? dom.serializeAttribute : void 0;
                    if ("string" === typeof keyAttrs) keyAttrs = [ keyAttrs ];
                    try {
                        target = handlerData.event.target ? (0, browser.htmlTreeAsString)(handlerData.event.target, keyAttrs) : (0, 
                        browser.htmlTreeAsString)(handlerData.event, keyAttrs);
                    } catch (e) {
                        target = "<unknown>";
                    }
                    if (0 === target.length) return;
                    (0, hub.getCurrentHub)().addBreadcrumb({
                        category: "ui." + handlerData.name,
                        message: target
                    }, {
                        event: handlerData.event,
                        name: handlerData.name,
                        global: handlerData.global
                    });
                }
                return _innerDomBreadcrumb;
            }
            function _consoleBreadcrumb(handlerData) {
                var breadcrumb = {
                    category: "console",
                    data: {
                        arguments: handlerData.args,
                        logger: "console"
                    },
                    level: severityFromString(handlerData.level),
                    message: (0, string.safeJoin)(handlerData.args, " ")
                };
                if ("assert" === handlerData.level) if (false === handlerData.args[0]) {
                    breadcrumb.message = "Assertion failed: " + ((0, string.safeJoin)(handlerData.args.slice(1), " ") || "console.assert");
                    breadcrumb.data.arguments = handlerData.args.slice(1);
                } else return;
                (0, hub.getCurrentHub)().addBreadcrumb(breadcrumb, {
                    input: handlerData.args,
                    level: handlerData.level
                });
            }
            function _xhrBreadcrumb(handlerData) {
                if (handlerData.endTimestamp) {
                    if (handlerData.xhr.__sentry_own_request__) return;
                    var _a = handlerData.xhr.__sentry_xhr__ || {}, method = _a.method, url = _a.url, status_code = _a.status_code, body = _a.body;
                    (0, hub.getCurrentHub)().addBreadcrumb({
                        category: "xhr",
                        data: {
                            method,
                            url,
                            status_code
                        },
                        type: "http"
                    }, {
                        xhr: handlerData.xhr,
                        input: body
                    });
                    return;
                }
            }
            function _fetchBreadcrumb(handlerData) {
                if (!handlerData.endTimestamp) return;
                if (handlerData.fetchData.url.match(/sentry_key/) && "POST" === handlerData.fetchData.method) return;
                if (handlerData.error) (0, hub.getCurrentHub)().addBreadcrumb({
                    category: "fetch",
                    data: handlerData.fetchData,
                    level: severity.Severity.Error,
                    type: "http"
                }, {
                    data: handlerData.error,
                    input: handlerData.args
                }); else (0, hub.getCurrentHub)().addBreadcrumb({
                    category: "fetch",
                    data: (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, handlerData.fetchData), {
                        status_code: handlerData.response.status
                    }),
                    type: "http"
                }, {
                    input: handlerData.args,
                    response: handlerData.response
                });
            }
            function _historyBreadcrumb(handlerData) {
                var global = (0, esm_global.getGlobalObject)();
                var from = handlerData.from;
                var to = handlerData.to;
                var parsedLoc = (0, misc.parseUrl)(global.location.href);
                var parsedFrom = (0, misc.parseUrl)(from);
                var parsedTo = (0, misc.parseUrl)(to);
                if (!parsedFrom.path) parsedFrom = parsedLoc;
                if (parsedLoc.protocol === parsedTo.protocol && parsedLoc.host === parsedTo.host) to = parsedTo.relative;
                if (parsedLoc.protocol === parsedFrom.protocol && parsedLoc.host === parsedFrom.host) from = parsedFrom.relative;
                (0, hub.getCurrentHub)().addBreadcrumb({
                    category: "navigation",
                    data: {
                        from,
                        to
                    }
                });
            }
        },
        "../shared/browser/node_modules/@sentry/browser/esm/integrations/dedupe.js": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.d(__webpack_exports__, {
                Dedupe: () => Dedupe
            });
            var _sentry_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("../shared/browser/node_modules/@sentry/utils/esm/logger.js");
            var _flags__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("../shared/browser/node_modules/@sentry/browser/esm/flags.js");
            var Dedupe = function() {
                function Dedupe() {
                    this.name = Dedupe.id;
                }
                Dedupe.prototype.setupOnce = function(addGlobalEventProcessor, getCurrentHub) {
                    addGlobalEventProcessor((function(currentEvent) {
                        var self = getCurrentHub().getIntegration(Dedupe);
                        if (self) {
                            try {
                                if (_shouldDropEvent(currentEvent, self._previousEvent)) {
                                    _flags__WEBPACK_IMPORTED_MODULE_0__.IS_DEBUG_BUILD && _sentry_utils__WEBPACK_IMPORTED_MODULE_1__.logger.warn("Event dropped due to being a duplicate of previously captured event.");
                                    return null;
                                }
                            } catch (_oO) {
                                return self._previousEvent = currentEvent;
                            }
                            return self._previousEvent = currentEvent;
                        }
                        return currentEvent;
                    }));
                };
                Dedupe.id = "Dedupe";
                return Dedupe;
            }();
            function _shouldDropEvent(currentEvent, previousEvent) {
                if (!previousEvent) return false;
                if (_isSameMessageEvent(currentEvent, previousEvent)) return true;
                if (_isSameExceptionEvent(currentEvent, previousEvent)) return true;
                return false;
            }
            function _isSameMessageEvent(currentEvent, previousEvent) {
                var currentMessage = currentEvent.message;
                var previousMessage = previousEvent.message;
                if (!currentMessage && !previousMessage) return false;
                if (currentMessage && !previousMessage || !currentMessage && previousMessage) return false;
                if (currentMessage !== previousMessage) return false;
                if (!_isSameFingerprint(currentEvent, previousEvent)) return false;
                if (!_isSameStacktrace(currentEvent, previousEvent)) return false;
                return true;
            }
            function _isSameExceptionEvent(currentEvent, previousEvent) {
                var previousException = _getExceptionFromEvent(previousEvent);
                var currentException = _getExceptionFromEvent(currentEvent);
                if (!previousException || !currentException) return false;
                if (previousException.type !== currentException.type || previousException.value !== currentException.value) return false;
                if (!_isSameFingerprint(currentEvent, previousEvent)) return false;
                if (!_isSameStacktrace(currentEvent, previousEvent)) return false;
                return true;
            }
            function _isSameStacktrace(currentEvent, previousEvent) {
                var currentFrames = _getFramesFromEvent(currentEvent);
                var previousFrames = _getFramesFromEvent(previousEvent);
                if (!currentFrames && !previousFrames) return true;
                if (currentFrames && !previousFrames || !currentFrames && previousFrames) return false;
                currentFrames = currentFrames;
                previousFrames = previousFrames;
                if (previousFrames.length !== currentFrames.length) return false;
                for (var i = 0; i < previousFrames.length; i++) {
                    var frameA = previousFrames[i];
                    var frameB = currentFrames[i];
                    if (frameA.filename !== frameB.filename || frameA.lineno !== frameB.lineno || frameA.colno !== frameB.colno || frameA.function !== frameB.function) return false;
                }
                return true;
            }
            function _isSameFingerprint(currentEvent, previousEvent) {
                var currentFingerprint = currentEvent.fingerprint;
                var previousFingerprint = previousEvent.fingerprint;
                if (!currentFingerprint && !previousFingerprint) return true;
                if (currentFingerprint && !previousFingerprint || !currentFingerprint && previousFingerprint) return false;
                currentFingerprint = currentFingerprint;
                previousFingerprint = previousFingerprint;
                try {
                    return !!(currentFingerprint.join("") === previousFingerprint.join(""));
                } catch (_oO) {
                    return false;
                }
            }
            function _getExceptionFromEvent(event) {
                return event.exception && event.exception.values && event.exception.values[0];
            }
            function _getFramesFromEvent(event) {
                var exception = event.exception;
                if (exception) try {
                    return exception.values[0].stacktrace.frames;
                } catch (_oO) {
                    return;
                } else if (event.stacktrace) return event.stacktrace.frames;
                return;
            }
        },
        "../shared/browser/node_modules/@sentry/browser/esm/integrations/globalhandlers.js": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.d(__webpack_exports__, {
                GlobalHandlers: () => GlobalHandlers
            });
            var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("../shared/browser/node_modules/tslib/tslib.es6.js");
            var _sentry_core__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__("../shared/browser/node_modules/@sentry/hub/esm/hub.js");
            var _sentry_types__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__("../shared/browser/node_modules/@sentry/types/esm/severity.js");
            var _sentry_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("../shared/browser/node_modules/@sentry/utils/esm/instrument.js");
            var _sentry_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("../shared/browser/node_modules/@sentry/utils/esm/is.js");
            var _sentry_utils__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__("../shared/browser/node_modules/@sentry/utils/esm/browser.js");
            var _sentry_utils__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__("../shared/browser/node_modules/@sentry/utils/esm/logger.js");
            var _sentry_utils__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__("../shared/browser/node_modules/@sentry/utils/esm/misc.js");
            var _eventbuilder__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__("../shared/browser/node_modules/@sentry/browser/esm/eventbuilder.js");
            var _flags__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__("../shared/browser/node_modules/@sentry/browser/esm/flags.js");
            var _helpers__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("../shared/browser/node_modules/@sentry/browser/esm/helpers.js");
            var GlobalHandlers = function() {
                function GlobalHandlers(options) {
                    this.name = GlobalHandlers.id;
                    this._installFunc = {
                        onerror: _installGlobalOnErrorHandler,
                        onunhandledrejection: _installGlobalOnUnhandledRejectionHandler
                    };
                    this._options = (0, tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)({
                        onerror: true,
                        onunhandledrejection: true
                    }, options);
                }
                GlobalHandlers.prototype.setupOnce = function() {
                    Error.stackTraceLimit = 50;
                    var options = this._options;
                    for (var key in options) {
                        var installFunc = this._installFunc[key];
                        if (installFunc && options[key]) {
                            globalHandlerLog(key);
                            installFunc();
                            this._installFunc[key] = void 0;
                        }
                    }
                };
                GlobalHandlers.id = "GlobalHandlers";
                return GlobalHandlers;
            }();
            function _installGlobalOnErrorHandler() {
                (0, _sentry_utils__WEBPACK_IMPORTED_MODULE_1__.addInstrumentationHandler)("error", (function(data) {
                    var _a = (0, tslib__WEBPACK_IMPORTED_MODULE_0__.__read)(getHubAndAttachStacktrace(), 2), hub = _a[0], attachStacktrace = _a[1];
                    if (!hub.getIntegration(GlobalHandlers)) return;
                    var msg = data.msg, url = data.url, line = data.line, column = data.column, error = data.error;
                    if ((0, _helpers__WEBPACK_IMPORTED_MODULE_2__.shouldIgnoreOnError)() || error && error.__sentry_own_request__) return;
                    var event = void 0 === error && (0, _sentry_utils__WEBPACK_IMPORTED_MODULE_3__.isString)(msg) ? _eventFromIncompleteOnError(msg, url, line, column) : _enhanceEventWithInitialFrame((0, 
                    _eventbuilder__WEBPACK_IMPORTED_MODULE_4__.eventFromUnknownInput)(error || msg, void 0, attachStacktrace, false), url, line, column);
                    event.level = _sentry_types__WEBPACK_IMPORTED_MODULE_5__.Severity.Error;
                    addMechanismAndCapture(hub, error, event, "onerror");
                }));
            }
            function _installGlobalOnUnhandledRejectionHandler() {
                (0, _sentry_utils__WEBPACK_IMPORTED_MODULE_1__.addInstrumentationHandler)("unhandledrejection", (function(e) {
                    var _a = (0, tslib__WEBPACK_IMPORTED_MODULE_0__.__read)(getHubAndAttachStacktrace(), 2), hub = _a[0], attachStacktrace = _a[1];
                    if (!hub.getIntegration(GlobalHandlers)) return;
                    var error = e;
                    try {
                        if ("reason" in e) error = e.reason; else if ("detail" in e && "reason" in e.detail) error = e.detail.reason;
                    } catch (_oO) {}
                    if ((0, _helpers__WEBPACK_IMPORTED_MODULE_2__.shouldIgnoreOnError)() || error && error.__sentry_own_request__) return true;
                    var event = (0, _sentry_utils__WEBPACK_IMPORTED_MODULE_3__.isPrimitive)(error) ? _eventFromRejectionWithPrimitive(error) : (0, 
                    _eventbuilder__WEBPACK_IMPORTED_MODULE_4__.eventFromUnknownInput)(error, void 0, attachStacktrace, true);
                    event.level = _sentry_types__WEBPACK_IMPORTED_MODULE_5__.Severity.Error;
                    addMechanismAndCapture(hub, error, event, "onunhandledrejection");
                    return;
                }));
            }
            function _eventFromRejectionWithPrimitive(reason) {
                return {
                    exception: {
                        values: [ {
                            type: "UnhandledRejection",
                            value: "Non-Error promise rejection captured with value: " + String(reason)
                        } ]
                    }
                };
            }
            function _eventFromIncompleteOnError(msg, url, line, column) {
                var ERROR_TYPES_RE = /^(?:[Uu]ncaught (?:exception: )?)?(?:((?:Eval|Internal|Range|Reference|Syntax|Type|URI|)Error): )?(.*)$/i;
                var message = (0, _sentry_utils__WEBPACK_IMPORTED_MODULE_3__.isErrorEvent)(msg) ? msg.message : msg;
                var name = "Error";
                var groups = message.match(ERROR_TYPES_RE);
                if (groups) {
                    name = groups[1];
                    message = groups[2];
                }
                var event = {
                    exception: {
                        values: [ {
                            type: name,
                            value: message
                        } ]
                    }
                };
                return _enhanceEventWithInitialFrame(event, url, line, column);
            }
            function _enhanceEventWithInitialFrame(event, url, line, column) {
                var e = event.exception = event.exception || {};
                var ev = e.values = e.values || [];
                var ev0 = ev[0] = ev[0] || {};
                var ev0s = ev0.stacktrace = ev0.stacktrace || {};
                var ev0sf = ev0s.frames = ev0s.frames || [];
                var colno = isNaN(parseInt(column, 10)) ? void 0 : column;
                var lineno = isNaN(parseInt(line, 10)) ? void 0 : line;
                var filename = (0, _sentry_utils__WEBPACK_IMPORTED_MODULE_3__.isString)(url) && url.length > 0 ? url : (0, 
                _sentry_utils__WEBPACK_IMPORTED_MODULE_6__.getLocationHref)();
                if (0 === ev0sf.length) ev0sf.push({
                    colno,
                    filename,
                    function: "?",
                    in_app: true,
                    lineno
                });
                return event;
            }
            function globalHandlerLog(type) {
                _flags__WEBPACK_IMPORTED_MODULE_7__.IS_DEBUG_BUILD && _sentry_utils__WEBPACK_IMPORTED_MODULE_8__.logger.log("Global Handler attached: " + type);
            }
            function addMechanismAndCapture(hub, error, event, type) {
                (0, _sentry_utils__WEBPACK_IMPORTED_MODULE_9__.addExceptionMechanism)(event, {
                    handled: false,
                    type
                });
                hub.captureEvent(event, {
                    originalException: error
                });
            }
            function getHubAndAttachStacktrace() {
                var hub = (0, _sentry_core__WEBPACK_IMPORTED_MODULE_10__.getCurrentHub)();
                var client = hub.getClient();
                var attachStacktrace = client && client.getOptions().attachStacktrace;
                return [ hub, attachStacktrace ];
            }
        },
        "../shared/browser/node_modules/@sentry/browser/esm/integrations/linkederrors.js": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.d(__webpack_exports__, {
                LinkedErrors: () => LinkedErrors
            });
            var tslib__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("../shared/browser/node_modules/tslib/tslib.es6.js");
            var _sentry_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("../shared/browser/node_modules/@sentry/hub/esm/scope.js");
            var _sentry_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("../shared/browser/node_modules/@sentry/hub/esm/hub.js");
            var _sentry_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("../shared/browser/node_modules/@sentry/utils/esm/is.js");
            var _eventbuilder__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__("../shared/browser/node_modules/@sentry/browser/esm/eventbuilder.js");
            var DEFAULT_KEY = "cause";
            var DEFAULT_LIMIT = 5;
            var LinkedErrors = function() {
                function LinkedErrors(options) {
                    if (void 0 === options) options = {};
                    this.name = LinkedErrors.id;
                    this._key = options.key || DEFAULT_KEY;
                    this._limit = options.limit || DEFAULT_LIMIT;
                }
                LinkedErrors.prototype.setupOnce = function() {
                    (0, _sentry_core__WEBPACK_IMPORTED_MODULE_0__.addGlobalEventProcessor)((function(event, hint) {
                        var self = (0, _sentry_core__WEBPACK_IMPORTED_MODULE_1__.getCurrentHub)().getIntegration(LinkedErrors);
                        return self ? _handler(self._key, self._limit, event, hint) : event;
                    }));
                };
                LinkedErrors.id = "LinkedErrors";
                return LinkedErrors;
            }();
            function _handler(key, limit, event, hint) {
                if (!event.exception || !event.exception.values || !hint || !(0, _sentry_utils__WEBPACK_IMPORTED_MODULE_2__.isInstanceOf)(hint.originalException, Error)) return event;
                var linkedErrors = _walkErrorTree(limit, hint.originalException, key);
                event.exception.values = (0, tslib__WEBPACK_IMPORTED_MODULE_3__.__spread)(linkedErrors, event.exception.values);
                return event;
            }
            function _walkErrorTree(limit, error, key, stack) {
                if (void 0 === stack) stack = [];
                if (!(0, _sentry_utils__WEBPACK_IMPORTED_MODULE_2__.isInstanceOf)(error[key], Error) || stack.length + 1 >= limit) return stack;
                var exception = (0, _eventbuilder__WEBPACK_IMPORTED_MODULE_4__.exceptionFromError)(error[key]);
                return _walkErrorTree(limit, error[key], key, (0, tslib__WEBPACK_IMPORTED_MODULE_3__.__spread)([ exception ], stack));
            }
        },
        "../shared/browser/node_modules/@sentry/browser/esm/integrations/trycatch.js": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.d(__webpack_exports__, {
                TryCatch: () => TryCatch
            });
            var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("../shared/browser/node_modules/tslib/tslib.es6.js");
            var _sentry_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("../shared/browser/node_modules/@sentry/utils/esm/global.js");
            var _sentry_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("../shared/browser/node_modules/@sentry/utils/esm/object.js");
            var _sentry_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__("../shared/browser/node_modules/@sentry/utils/esm/stacktrace.js");
            var _helpers__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("../shared/browser/node_modules/@sentry/browser/esm/helpers.js");
            var DEFAULT_EVENT_TARGET = [ "EventTarget", "Window", "Node", "ApplicationCache", "AudioTrackList", "ChannelMergerNode", "CryptoOperation", "EventSource", "FileReader", "HTMLUnknownElement", "IDBDatabase", "IDBRequest", "IDBTransaction", "KeyOperation", "MediaController", "MessagePort", "ModalWindow", "Notification", "SVGElementInstance", "Screen", "TextTrack", "TextTrackCue", "TextTrackList", "WebSocket", "WebSocketWorker", "Worker", "XMLHttpRequest", "XMLHttpRequestEventTarget", "XMLHttpRequestUpload" ];
            var TryCatch = function() {
                function TryCatch(options) {
                    this.name = TryCatch.id;
                    this._options = (0, tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)({
                        XMLHttpRequest: true,
                        eventTarget: true,
                        requestAnimationFrame: true,
                        setInterval: true,
                        setTimeout: true
                    }, options);
                }
                TryCatch.prototype.setupOnce = function() {
                    var global = (0, _sentry_utils__WEBPACK_IMPORTED_MODULE_1__.getGlobalObject)();
                    if (this._options.setTimeout) (0, _sentry_utils__WEBPACK_IMPORTED_MODULE_2__.fill)(global, "setTimeout", _wrapTimeFunction);
                    if (this._options.setInterval) (0, _sentry_utils__WEBPACK_IMPORTED_MODULE_2__.fill)(global, "setInterval", _wrapTimeFunction);
                    if (this._options.requestAnimationFrame) (0, _sentry_utils__WEBPACK_IMPORTED_MODULE_2__.fill)(global, "requestAnimationFrame", _wrapRAF);
                    if (this._options.XMLHttpRequest && "XMLHttpRequest" in global) (0, _sentry_utils__WEBPACK_IMPORTED_MODULE_2__.fill)(XMLHttpRequest.prototype, "send", _wrapXHR);
                    var eventTargetOption = this._options.eventTarget;
                    if (eventTargetOption) {
                        var eventTarget = Array.isArray(eventTargetOption) ? eventTargetOption : DEFAULT_EVENT_TARGET;
                        eventTarget.forEach(_wrapEventTarget);
                    }
                };
                TryCatch.id = "TryCatch";
                return TryCatch;
            }();
            function _wrapTimeFunction(original) {
                return function() {
                    var args = [];
                    for (var _i = 0; _i < arguments.length; _i++) args[_i] = arguments[_i];
                    var originalCallback = args[0];
                    args[0] = (0, _helpers__WEBPACK_IMPORTED_MODULE_3__.wrap)(originalCallback, {
                        mechanism: {
                            data: {
                                function: (0, _sentry_utils__WEBPACK_IMPORTED_MODULE_4__.getFunctionName)(original)
                            },
                            handled: true,
                            type: "instrument"
                        }
                    });
                    return original.apply(this, args);
                };
            }
            function _wrapRAF(original) {
                return function(callback) {
                    return original.apply(this, [ (0, _helpers__WEBPACK_IMPORTED_MODULE_3__.wrap)(callback, {
                        mechanism: {
                            data: {
                                function: "requestAnimationFrame",
                                handler: (0, _sentry_utils__WEBPACK_IMPORTED_MODULE_4__.getFunctionName)(original)
                            },
                            handled: true,
                            type: "instrument"
                        }
                    }) ]);
                };
            }
            function _wrapXHR(originalSend) {
                return function() {
                    var args = [];
                    for (var _i = 0; _i < arguments.length; _i++) args[_i] = arguments[_i];
                    var xhr = this;
                    var xmlHttpRequestProps = [ "onload", "onerror", "onprogress", "onreadystatechange" ];
                    xmlHttpRequestProps.forEach((function(prop) {
                        if (prop in xhr && "function" === typeof xhr[prop]) (0, _sentry_utils__WEBPACK_IMPORTED_MODULE_2__.fill)(xhr, prop, (function(original) {
                            var wrapOptions = {
                                mechanism: {
                                    data: {
                                        function: prop,
                                        handler: (0, _sentry_utils__WEBPACK_IMPORTED_MODULE_4__.getFunctionName)(original)
                                    },
                                    handled: true,
                                    type: "instrument"
                                }
                            };
                            var originalFunction = (0, _sentry_utils__WEBPACK_IMPORTED_MODULE_2__.getOriginalFunction)(original);
                            if (originalFunction) wrapOptions.mechanism.data.handler = (0, _sentry_utils__WEBPACK_IMPORTED_MODULE_4__.getFunctionName)(originalFunction);
                            return (0, _helpers__WEBPACK_IMPORTED_MODULE_3__.wrap)(original, wrapOptions);
                        }));
                    }));
                    return originalSend.apply(this, args);
                };
            }
            function _wrapEventTarget(target) {
                var global = (0, _sentry_utils__WEBPACK_IMPORTED_MODULE_1__.getGlobalObject)();
                var proto = global[target] && global[target].prototype;
                if (!proto || !proto.hasOwnProperty || !proto.hasOwnProperty("addEventListener")) return;
                (0, _sentry_utils__WEBPACK_IMPORTED_MODULE_2__.fill)(proto, "addEventListener", (function(original) {
                    return function(eventName, fn, options) {
                        try {
                            if ("function" === typeof fn.handleEvent) fn.handleEvent = (0, _helpers__WEBPACK_IMPORTED_MODULE_3__.wrap)(fn.handleEvent.bind(fn), {
                                mechanism: {
                                    data: {
                                        function: "handleEvent",
                                        handler: (0, _sentry_utils__WEBPACK_IMPORTED_MODULE_4__.getFunctionName)(fn),
                                        target
                                    },
                                    handled: true,
                                    type: "instrument"
                                }
                            });
                        } catch (err) {}
                        return original.apply(this, [ eventName, (0, _helpers__WEBPACK_IMPORTED_MODULE_3__.wrap)(fn, {
                            mechanism: {
                                data: {
                                    function: "addEventListener",
                                    handler: (0, _sentry_utils__WEBPACK_IMPORTED_MODULE_4__.getFunctionName)(fn),
                                    target
                                },
                                handled: true,
                                type: "instrument"
                            }
                        }), options ]);
                    };
                }));
                (0, _sentry_utils__WEBPACK_IMPORTED_MODULE_2__.fill)(proto, "removeEventListener", (function(originalRemoveEventListener) {
                    return function(eventName, fn, options) {
                        var wrappedEventHandler = fn;
                        try {
                            var originalEventHandler = wrappedEventHandler && wrappedEventHandler.__sentry_wrapped__;
                            if (originalEventHandler) originalRemoveEventListener.call(this, eventName, originalEventHandler, options);
                        } catch (e) {}
                        return originalRemoveEventListener.call(this, eventName, wrappedEventHandler, options);
                    };
                }));
            }
        },
        "../shared/browser/node_modules/@sentry/browser/esm/integrations/useragent.js": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.d(__webpack_exports__, {
                UserAgent: () => UserAgent
            });
            var tslib__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("../shared/browser/node_modules/tslib/tslib.es6.js");
            var _sentry_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("../shared/browser/node_modules/@sentry/hub/esm/scope.js");
            var _sentry_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("../shared/browser/node_modules/@sentry/hub/esm/hub.js");
            var _sentry_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("../shared/browser/node_modules/@sentry/utils/esm/global.js");
            var global = (0, _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.getGlobalObject)();
            var UserAgent = function() {
                function UserAgent() {
                    this.name = UserAgent.id;
                }
                UserAgent.prototype.setupOnce = function() {
                    (0, _sentry_core__WEBPACK_IMPORTED_MODULE_1__.addGlobalEventProcessor)((function(event) {
                        if ((0, _sentry_core__WEBPACK_IMPORTED_MODULE_2__.getCurrentHub)().getIntegration(UserAgent)) {
                            if (!global.navigator && !global.location && !global.document) return event;
                            var url = event.request && event.request.url || global.location && global.location.href;
                            var referrer = (global.document || {}).referrer;
                            var userAgent = (global.navigator || {}).userAgent;
                            var headers = (0, tslib__WEBPACK_IMPORTED_MODULE_3__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_3__.__assign)((0, 
                            tslib__WEBPACK_IMPORTED_MODULE_3__.__assign)({}, event.request && event.request.headers), referrer && {
                                Referer: referrer
                            }), userAgent && {
                                "User-Agent": userAgent
                            });
                            var request = (0, tslib__WEBPACK_IMPORTED_MODULE_3__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_3__.__assign)({}, url && {
                                url
                            }), {
                                headers
                            });
                            return (0, tslib__WEBPACK_IMPORTED_MODULE_3__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_3__.__assign)({}, event), {
                                request
                            });
                        }
                        return event;
                    }));
                };
                UserAgent.id = "UserAgent";
                return UserAgent;
            }();
        },
        "../shared/browser/node_modules/@sentry/browser/esm/sdk.js": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.d(__webpack_exports__, {
                close: () => sdk_close,
                defaultIntegrations: () => defaultIntegrations,
                flush: () => flush,
                forceLoad: () => forceLoad,
                init: () => init,
                lastEventId: () => lastEventId,
                onLoad: () => onLoad,
                showReportDialog: () => showReportDialog,
                wrap: () => wrap
            });
            var tslib_es6 = __webpack_require__("../shared/browser/node_modules/tslib/tslib.es6.js");
            var esm_hub = __webpack_require__("../shared/browser/node_modules/@sentry/hub/esm/hub.js");
            var logger = __webpack_require__("../shared/browser/node_modules/@sentry/utils/esm/logger.js");
            var flags = __webpack_require__("../shared/browser/node_modules/@sentry/core/esm/flags.js");
            function initAndBind(clientClass, options) {
                if (true === options.debug) if (flags.IS_DEBUG_BUILD) logger.logger.enable(); else console.warn("[Sentry] Cannot initialize SDK with `debug` option using a non-debug bundle.");
                var hub = (0, esm_hub.getCurrentHub)();
                var scope = hub.getScope();
                if (scope) scope.update(options.initialScope);
                var client = new clientClass(options);
                hub.bindClient(client);
            }
            var inboundfilters = __webpack_require__("../shared/browser/node_modules/@sentry/core/esm/integrations/inboundfilters.js");
            var functiontostring = __webpack_require__("../shared/browser/node_modules/@sentry/core/esm/integrations/functiontostring.js");
            var global = __webpack_require__("../shared/browser/node_modules/@sentry/utils/esm/global.js");
            var syncpromise = __webpack_require__("../shared/browser/node_modules/@sentry/utils/esm/syncpromise.js");
            var instrument = __webpack_require__("../shared/browser/node_modules/@sentry/utils/esm/instrument.js");
            var client = __webpack_require__("../shared/browser/node_modules/@sentry/browser/esm/client.js");
            var esm_flags = __webpack_require__("../shared/browser/node_modules/@sentry/browser/esm/flags.js");
            var helpers = __webpack_require__("../shared/browser/node_modules/@sentry/browser/esm/helpers.js");
            var trycatch = __webpack_require__("../shared/browser/node_modules/@sentry/browser/esm/integrations/trycatch.js");
            var breadcrumbs = __webpack_require__("../shared/browser/node_modules/@sentry/browser/esm/integrations/breadcrumbs.js");
            var globalhandlers = __webpack_require__("../shared/browser/node_modules/@sentry/browser/esm/integrations/globalhandlers.js");
            var linkederrors = __webpack_require__("../shared/browser/node_modules/@sentry/browser/esm/integrations/linkederrors.js");
            var dedupe = __webpack_require__("../shared/browser/node_modules/@sentry/browser/esm/integrations/dedupe.js");
            var useragent = __webpack_require__("../shared/browser/node_modules/@sentry/browser/esm/integrations/useragent.js");
            var defaultIntegrations = [ new inboundfilters.InboundFilters, new functiontostring.FunctionToString, new trycatch.TryCatch, new breadcrumbs.Breadcrumbs, new globalhandlers.GlobalHandlers, new linkederrors.LinkedErrors, new dedupe.Dedupe, new useragent.UserAgent ];
            function init(options) {
                if (void 0 === options) options = {};
                if (void 0 === options.defaultIntegrations) options.defaultIntegrations = defaultIntegrations;
                if (void 0 === options.release) {
                    var window_1 = (0, global.getGlobalObject)();
                    if (window_1.SENTRY_RELEASE && window_1.SENTRY_RELEASE.id) options.release = window_1.SENTRY_RELEASE.id;
                }
                if (void 0 === options.autoSessionTracking) options.autoSessionTracking = true;
                if (void 0 === options.sendClientReports) options.sendClientReports = true;
                initAndBind(client.BrowserClient, options);
                if (options.autoSessionTracking) startSessionTracking();
            }
            function showReportDialog(options) {
                if (void 0 === options) options = {};
                var hub = (0, esm_hub.getCurrentHub)();
                var scope = hub.getScope();
                if (scope) options.user = (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, scope.getUser()), options.user);
                if (!options.eventId) options.eventId = hub.lastEventId();
                var client = hub.getClient();
                if (client) client.showReportDialog(options);
            }
            function lastEventId() {
                return (0, esm_hub.getCurrentHub)().lastEventId();
            }
            function forceLoad() {}
            function onLoad(callback) {
                callback();
            }
            function flush(timeout) {
                var client = (0, esm_hub.getCurrentHub)().getClient();
                if (client) return client.flush(timeout);
                esm_flags.IS_DEBUG_BUILD && logger.logger.warn("Cannot flush events. No client defined.");
                return (0, syncpromise.resolvedSyncPromise)(false);
            }
            function sdk_close(timeout) {
                var client = (0, esm_hub.getCurrentHub)().getClient();
                if (client) return client.close(timeout);
                esm_flags.IS_DEBUG_BUILD && logger.logger.warn("Cannot flush events and disable SDK. No client defined.");
                return (0, syncpromise.resolvedSyncPromise)(false);
            }
            function wrap(fn) {
                return (0, helpers.wrap)(fn)();
            }
            function startSessionOnHub(hub) {
                hub.startSession({
                    ignoreDuration: true
                });
                hub.captureSession();
            }
            function startSessionTracking() {
                var window = (0, global.getGlobalObject)();
                var document = window.document;
                if ("undefined" === typeof document) {
                    esm_flags.IS_DEBUG_BUILD && logger.logger.warn("Session tracking in non-browser environment with @sentry/browser is not supported.");
                    return;
                }
                var hub = (0, esm_hub.getCurrentHub)();
                if (!hub.captureSession) return;
                startSessionOnHub(hub);
                (0, instrument.addInstrumentationHandler)("history", (function(_a) {
                    var from = _a.from, to = _a.to;
                    if (!(void 0 === from || from === to)) startSessionOnHub((0, esm_hub.getCurrentHub)());
                }));
            }
        },
        "../shared/browser/node_modules/@sentry/browser/esm/transports/base.js": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.d(__webpack_exports__, {
                BaseTransport: () => BaseTransport
            });
            var tslib_es6 = __webpack_require__("../shared/browser/node_modules/tslib/tslib.es6.js");
            var api = __webpack_require__("../shared/browser/node_modules/@sentry/core/esm/api.js");
            var request = __webpack_require__("../shared/browser/node_modules/@sentry/core/esm/request.js");
            var esm_envelope = __webpack_require__("../shared/browser/node_modules/@sentry/utils/esm/envelope.js");
            var time = __webpack_require__("../shared/browser/node_modules/@sentry/utils/esm/time.js");
            function createClientReportEnvelope(discarded_events, dsn, timestamp) {
                var clientReportItem = [ {
                    type: "client_report"
                }, {
                    timestamp: timestamp || (0, time.dateTimestampInSeconds)(),
                    discarded_events
                } ];
                return (0, esm_envelope.createEnvelope)(dsn ? {
                    dsn
                } : {}, [ clientReportItem ]);
            }
            var global = __webpack_require__("../shared/browser/node_modules/@sentry/utils/esm/global.js");
            var promisebuffer = __webpack_require__("../shared/browser/node_modules/@sentry/utils/esm/promisebuffer.js");
            var logger = __webpack_require__("../shared/browser/node_modules/@sentry/utils/esm/logger.js");
            var dsn = __webpack_require__("../shared/browser/node_modules/@sentry/utils/esm/dsn.js");
            var esm_status = __webpack_require__("../shared/browser/node_modules/@sentry/utils/esm/status.js");
            var ratelimit = __webpack_require__("../shared/browser/node_modules/@sentry/utils/esm/ratelimit.js");
            var flags = __webpack_require__("../shared/browser/node_modules/@sentry/browser/esm/flags.js");
            var utils = __webpack_require__("../shared/browser/node_modules/@sentry/browser/esm/transports/utils.js");
            function requestTypeToCategory(ty) {
                var tyStr = ty;
                return "event" === tyStr ? "error" : tyStr;
            }
            var base_global = (0, global.getGlobalObject)();
            var BaseTransport = function() {
                function BaseTransport(options) {
                    var _this = this;
                    this.options = options;
                    this._buffer = (0, promisebuffer.makePromiseBuffer)(30);
                    this._rateLimits = {};
                    this._outcomes = {};
                    this._api = (0, api.initAPIDetails)(options.dsn, options._metadata, options.tunnel);
                    this.url = (0, api.getStoreEndpointWithUrlEncodedAuth)(this._api.dsn);
                    if (this.options.sendClientReports && base_global.document) base_global.document.addEventListener("visibilitychange", (function() {
                        if ("hidden" === base_global.document.visibilityState) _this._flushOutcomes();
                    }));
                }
                BaseTransport.prototype.sendEvent = function(event) {
                    return this._sendRequest((0, request.eventToSentryRequest)(event, this._api), event);
                };
                BaseTransport.prototype.sendSession = function(session) {
                    return this._sendRequest((0, request.sessionToSentryRequest)(session, this._api), session);
                };
                BaseTransport.prototype.close = function(timeout) {
                    return this._buffer.drain(timeout);
                };
                BaseTransport.prototype.recordLostEvent = function(reason, category) {
                    var _a;
                    if (!this.options.sendClientReports) return;
                    var key = requestTypeToCategory(category) + ":" + reason;
                    flags.IS_DEBUG_BUILD && logger.logger.log("Adding outcome: " + key);
                    this._outcomes[key] = (_a = this._outcomes[key], null !== _a && void 0 !== _a ? _a : 0) + 1;
                };
                BaseTransport.prototype._flushOutcomes = function() {
                    if (!this.options.sendClientReports) return;
                    var outcomes = this._outcomes;
                    this._outcomes = {};
                    if (!Object.keys(outcomes).length) {
                        flags.IS_DEBUG_BUILD && logger.logger.log("No outcomes to flush");
                        return;
                    }
                    flags.IS_DEBUG_BUILD && logger.logger.log("Flushing outcomes:\n" + JSON.stringify(outcomes, null, 2));
                    var url = (0, api.getEnvelopeEndpointWithUrlEncodedAuth)(this._api.dsn, this._api.tunnel);
                    var discardedEvents = Object.keys(outcomes).map((function(key) {
                        var _a = (0, tslib_es6.__read)(key.split(":"), 2), category = _a[0], reason = _a[1];
                        return {
                            reason,
                            category,
                            quantity: outcomes[key]
                        };
                    }));
                    var envelope = createClientReportEnvelope(discardedEvents, this._api.tunnel && (0, 
                    dsn.dsnToString)(this._api.dsn));
                    try {
                        (0, utils.sendReport)(url, (0, esm_envelope.serializeEnvelope)(envelope));
                    } catch (e) {
                        flags.IS_DEBUG_BUILD && logger.logger.error(e);
                    }
                };
                BaseTransport.prototype._handleResponse = function(_a) {
                    var requestType = _a.requestType, response = _a.response, headers = _a.headers, resolve = _a.resolve, reject = _a.reject;
                    var status = (0, esm_status.eventStatusFromHttpCode)(response.status);
                    this._rateLimits = (0, ratelimit.updateRateLimits)(this._rateLimits, headers);
                    if (this._isRateLimited(requestType)) flags.IS_DEBUG_BUILD && logger.logger.warn("Too many " + requestType + " requests, backing off until: " + this._disabledUntil(requestType));
                    if ("success" === status) {
                        resolve({
                            status
                        });
                        return;
                    }
                    reject(response);
                };
                BaseTransport.prototype._disabledUntil = function(requestType) {
                    var category = requestTypeToCategory(requestType);
                    return new Date((0, ratelimit.disabledUntil)(this._rateLimits, category));
                };
                BaseTransport.prototype._isRateLimited = function(requestType) {
                    var category = requestTypeToCategory(requestType);
                    return (0, ratelimit.isRateLimited)(this._rateLimits, category);
                };
                return BaseTransport;
            }();
        },
        "../shared/browser/node_modules/@sentry/browser/esm/transports/fetch.js": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.d(__webpack_exports__, {
                FetchTransport: () => FetchTransport
            });
            var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("../shared/browser/node_modules/tslib/tslib.es6.js");
            var _sentry_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("../shared/browser/node_modules/@sentry/utils/esm/supports.js");
            var _sentry_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("../shared/browser/node_modules/@sentry/utils/esm/syncpromise.js");
            var _sentry_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__("../shared/browser/node_modules/@sentry/utils/esm/error.js");
            var _base__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__("../shared/browser/node_modules/@sentry/browser/esm/transports/base.js");
            var _utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("../shared/browser/node_modules/@sentry/browser/esm/transports/utils.js");
            var FetchTransport = function(_super) {
                (0, tslib__WEBPACK_IMPORTED_MODULE_0__.__extends)(FetchTransport, _super);
                function FetchTransport(options, fetchImpl) {
                    if (void 0 === fetchImpl) fetchImpl = (0, _utils__WEBPACK_IMPORTED_MODULE_1__.getNativeFetchImplementation)();
                    var _this = _super.call(this, options) || this;
                    _this._fetch = fetchImpl;
                    return _this;
                }
                FetchTransport.prototype._sendRequest = function(sentryRequest, originalPayload) {
                    var _this = this;
                    if (this._isRateLimited(sentryRequest.type)) {
                        this.recordLostEvent("ratelimit_backoff", sentryRequest.type);
                        return Promise.reject({
                            event: originalPayload,
                            type: sentryRequest.type,
                            reason: "Transport for " + sentryRequest.type + " requests locked till " + this._disabledUntil(sentryRequest.type) + " due to too many requests.",
                            status: 429
                        });
                    }
                    var options = {
                        body: sentryRequest.body,
                        method: "POST",
                        referrerPolicy: (0, _sentry_utils__WEBPACK_IMPORTED_MODULE_2__.supportsReferrerPolicy)() ? "origin" : ""
                    };
                    if (void 0 !== this.options.fetchParameters) Object.assign(options, this.options.fetchParameters);
                    if (void 0 !== this.options.headers) options.headers = this.options.headers;
                    return this._buffer.add((function() {
                        return new _sentry_utils__WEBPACK_IMPORTED_MODULE_3__.SyncPromise((function(resolve, reject) {
                            void _this._fetch(sentryRequest.url, options).then((function(response) {
                                var headers = {
                                    "x-sentry-rate-limits": response.headers.get("X-Sentry-Rate-Limits"),
                                    "retry-after": response.headers.get("Retry-After")
                                };
                                _this._handleResponse({
                                    requestType: sentryRequest.type,
                                    response,
                                    headers,
                                    resolve,
                                    reject
                                });
                            })).catch(reject);
                        }));
                    })).then(void 0, (function(reason) {
                        if (reason instanceof _sentry_utils__WEBPACK_IMPORTED_MODULE_4__.SentryError) _this.recordLostEvent("queue_overflow", sentryRequest.type); else _this.recordLostEvent("network_error", sentryRequest.type);
                        throw reason;
                    }));
                };
                return FetchTransport;
            }(_base__WEBPACK_IMPORTED_MODULE_5__.BaseTransport);
        },
        "../shared/browser/node_modules/@sentry/browser/esm/transports/new-fetch.js": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.d(__webpack_exports__, {
                makeNewFetchTransport: () => makeNewFetchTransport
            });
            var tslib__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("../shared/browser/node_modules/tslib/tslib.es6.js");
            var _sentry_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("../shared/browser/node_modules/@sentry/core/esm/transports/base.js");
            var _utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("../shared/browser/node_modules/@sentry/browser/esm/transports/utils.js");
            function makeNewFetchTransport(options, nativeFetch) {
                if (void 0 === nativeFetch) nativeFetch = (0, _utils__WEBPACK_IMPORTED_MODULE_0__.getNativeFetchImplementation)();
                function makeRequest(request) {
                    var requestOptions = (0, tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({
                        body: request.body,
                        method: "POST",
                        referrerPolicy: "origin"
                    }, options.requestOptions);
                    return nativeFetch(options.url, requestOptions).then((function(response) {
                        return response.text().then((function(body) {
                            return {
                                body,
                                headers: {
                                    "x-sentry-rate-limits": response.headers.get("X-Sentry-Rate-Limits"),
                                    "retry-after": response.headers.get("Retry-After")
                                },
                                reason: response.statusText,
                                statusCode: response.status
                            };
                        }));
                    }));
                }
                return (0, _sentry_core__WEBPACK_IMPORTED_MODULE_2__.createTransport)({
                    bufferSize: options.bufferSize
                }, makeRequest);
            }
        },
        "../shared/browser/node_modules/@sentry/browser/esm/transports/new-xhr.js": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.d(__webpack_exports__, {
                makeNewXHRTransport: () => makeNewXHRTransport
            });
            var _sentry_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("../shared/browser/node_modules/@sentry/core/esm/transports/base.js");
            var _sentry_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("../shared/browser/node_modules/@sentry/utils/esm/syncpromise.js");
            var XHR_READYSTATE_DONE = 4;
            function makeNewXHRTransport(options) {
                function makeRequest(request) {
                    return new _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.SyncPromise((function(resolve, _reject) {
                        var xhr = new XMLHttpRequest;
                        xhr.onreadystatechange = function() {
                            if (xhr.readyState === XHR_READYSTATE_DONE) {
                                var response = {
                                    body: xhr.response,
                                    headers: {
                                        "x-sentry-rate-limits": xhr.getResponseHeader("X-Sentry-Rate-Limits"),
                                        "retry-after": xhr.getResponseHeader("Retry-After")
                                    },
                                    reason: xhr.statusText,
                                    statusCode: xhr.status
                                };
                                resolve(response);
                            }
                        };
                        xhr.open("POST", options.url);
                        for (var header in options.headers) if (Object.prototype.hasOwnProperty.call(options.headers, header)) xhr.setRequestHeader(header, options.headers[header]);
                        xhr.send(request.body);
                    }));
                }
                return (0, _sentry_core__WEBPACK_IMPORTED_MODULE_1__.createTransport)({
                    bufferSize: options.bufferSize
                }, makeRequest);
            }
        },
        "../shared/browser/node_modules/@sentry/browser/esm/transports/utils.js": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.d(__webpack_exports__, {
                getNativeFetchImplementation: () => getNativeFetchImplementation,
                sendReport: () => sendReport
            });
            function forget(promise) {
                void promise.then(null, (function(e) {
                    console.error(e);
                }));
            }
            var global = __webpack_require__("../shared/browser/node_modules/@sentry/utils/esm/global.js");
            var supports = __webpack_require__("../shared/browser/node_modules/@sentry/utils/esm/supports.js");
            var logger = __webpack_require__("../shared/browser/node_modules/@sentry/utils/esm/logger.js");
            var flags = __webpack_require__("../shared/browser/node_modules/@sentry/browser/esm/flags.js");
            var utils_global = (0, global.getGlobalObject)();
            var cachedFetchImpl;
            function getNativeFetchImplementation() {
                if (cachedFetchImpl) return cachedFetchImpl;
                if ((0, supports.isNativeFetch)(utils_global.fetch)) return cachedFetchImpl = utils_global.fetch.bind(utils_global);
                var document = utils_global.document;
                var fetchImpl = utils_global.fetch;
                if (document && "function" === typeof document.createElement) try {
                    var sandbox = document.createElement("iframe");
                    sandbox.hidden = true;
                    document.head.appendChild(sandbox);
                    var contentWindow = sandbox.contentWindow;
                    if (contentWindow && contentWindow.fetch) fetchImpl = contentWindow.fetch;
                    document.head.removeChild(sandbox);
                } catch (e) {
                    flags.IS_DEBUG_BUILD && logger.logger.warn("Could not create sandbox iframe for pure fetch check, bailing to window.fetch: ", e);
                }
                return cachedFetchImpl = fetchImpl.bind(utils_global);
            }
            function sendReport(url, body) {
                var isRealNavigator = "[object Navigator]" === Object.prototype.toString.call(utils_global && utils_global.navigator);
                var hasSendBeacon = isRealNavigator && "function" === typeof utils_global.navigator.sendBeacon;
                if (hasSendBeacon) {
                    var sendBeacon = utils_global.navigator.sendBeacon.bind(utils_global.navigator);
                    return sendBeacon(url, body);
                }
                if ((0, supports.supportsFetch)()) {
                    var fetch_1 = getNativeFetchImplementation();
                    return forget(fetch_1(url, {
                        body,
                        method: "POST",
                        credentials: "omit",
                        keepalive: true
                    }));
                }
            }
        },
        "../shared/browser/node_modules/@sentry/browser/esm/transports/xhr.js": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.d(__webpack_exports__, {
                XHRTransport: () => XHRTransport
            });
            var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("../shared/browser/node_modules/tslib/tslib.es6.js");
            var _sentry_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("../shared/browser/node_modules/@sentry/utils/esm/syncpromise.js");
            var _sentry_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("../shared/browser/node_modules/@sentry/utils/esm/error.js");
            var _base__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("../shared/browser/node_modules/@sentry/browser/esm/transports/base.js");
            var XHRTransport = function(_super) {
                (0, tslib__WEBPACK_IMPORTED_MODULE_0__.__extends)(XHRTransport, _super);
                function XHRTransport() {
                    return null !== _super && _super.apply(this, arguments) || this;
                }
                XHRTransport.prototype._sendRequest = function(sentryRequest, originalPayload) {
                    var _this = this;
                    if (this._isRateLimited(sentryRequest.type)) {
                        this.recordLostEvent("ratelimit_backoff", sentryRequest.type);
                        return Promise.reject({
                            event: originalPayload,
                            type: sentryRequest.type,
                            reason: "Transport for " + sentryRequest.type + " requests locked till " + this._disabledUntil(sentryRequest.type) + " due to too many requests.",
                            status: 429
                        });
                    }
                    return this._buffer.add((function() {
                        return new _sentry_utils__WEBPACK_IMPORTED_MODULE_1__.SyncPromise((function(resolve, reject) {
                            var request = new XMLHttpRequest;
                            request.onreadystatechange = function() {
                                if (4 === request.readyState) {
                                    var headers = {
                                        "x-sentry-rate-limits": request.getResponseHeader("X-Sentry-Rate-Limits"),
                                        "retry-after": request.getResponseHeader("Retry-After")
                                    };
                                    _this._handleResponse({
                                        requestType: sentryRequest.type,
                                        response: request,
                                        headers,
                                        resolve,
                                        reject
                                    });
                                }
                            };
                            request.open("POST", sentryRequest.url);
                            for (var header in _this.options.headers) if (Object.prototype.hasOwnProperty.call(_this.options.headers, header)) request.setRequestHeader(header, _this.options.headers[header]);
                            request.send(sentryRequest.body);
                        }));
                    })).then(void 0, (function(reason) {
                        if (reason instanceof _sentry_utils__WEBPACK_IMPORTED_MODULE_2__.SentryError) _this.recordLostEvent("queue_overflow", sentryRequest.type); else _this.recordLostEvent("network_error", sentryRequest.type);
                        throw reason;
                    }));
                };
                return XHRTransport;
            }(_base__WEBPACK_IMPORTED_MODULE_3__.BaseTransport);
        },
        "../shared/browser/node_modules/@sentry/core/esm/api.js": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.d(__webpack_exports__, {
                initAPIDetails: () => initAPIDetails,
                getStoreEndpointWithUrlEncodedAuth: () => getStoreEndpointWithUrlEncodedAuth,
                getEnvelopeEndpointWithUrlEncodedAuth: () => getEnvelopeEndpointWithUrlEncodedAuth,
                getReportDialogEndpoint: () => getReportDialogEndpoint
            });
            var _sentry_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("../shared/browser/node_modules/@sentry/utils/esm/dsn.js");
            var _sentry_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("../shared/browser/node_modules/@sentry/utils/esm/object.js");
            var SENTRY_API_VERSION = "7";
            (function() {
                function API(dsn, metadata, tunnel) {
                    if (void 0 === metadata) metadata = {};
                    this.dsn = dsn;
                    this._dsnObject = (0, _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.makeDsn)(dsn);
                    this.metadata = metadata;
                    this._tunnel = tunnel;
                }
                API.prototype.getDsn = function() {
                    return this._dsnObject;
                };
                API.prototype.forceEnvelope = function() {
                    return !!this._tunnel;
                };
                API.prototype.getBaseApiEndpoint = function() {
                    return getBaseApiEndpoint(this._dsnObject);
                };
                API.prototype.getStoreEndpoint = function() {
                    return getStoreEndpoint(this._dsnObject);
                };
                API.prototype.getStoreEndpointWithUrlEncodedAuth = function() {
                    return getStoreEndpointWithUrlEncodedAuth(this._dsnObject);
                };
                API.prototype.getEnvelopeEndpointWithUrlEncodedAuth = function() {
                    return getEnvelopeEndpointWithUrlEncodedAuth(this._dsnObject, this._tunnel);
                };
            })();
            function initAPIDetails(dsn, metadata, tunnel) {
                return {
                    initDsn: dsn,
                    metadata: metadata || {},
                    dsn: (0, _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.makeDsn)(dsn),
                    tunnel
                };
            }
            function getBaseApiEndpoint(dsn) {
                var protocol = dsn.protocol ? dsn.protocol + ":" : "";
                var port = dsn.port ? ":" + dsn.port : "";
                return protocol + "//" + dsn.host + port + (dsn.path ? "/" + dsn.path : "") + "/api/";
            }
            function _getIngestEndpoint(dsn, target) {
                return "" + getBaseApiEndpoint(dsn) + dsn.projectId + "/" + target + "/";
            }
            function _encodedAuth(dsn) {
                return (0, _sentry_utils__WEBPACK_IMPORTED_MODULE_1__.urlEncode)({
                    sentry_key: dsn.publicKey,
                    sentry_version: SENTRY_API_VERSION
                });
            }
            function getStoreEndpoint(dsn) {
                return _getIngestEndpoint(dsn, "store");
            }
            function getStoreEndpointWithUrlEncodedAuth(dsn) {
                return getStoreEndpoint(dsn) + "?" + _encodedAuth(dsn);
            }
            function _getEnvelopeEndpoint(dsn) {
                return _getIngestEndpoint(dsn, "envelope");
            }
            function getEnvelopeEndpointWithUrlEncodedAuth(dsn, tunnel) {
                return tunnel ? tunnel : _getEnvelopeEndpoint(dsn) + "?" + _encodedAuth(dsn);
            }
            function getReportDialogEndpoint(dsnLike, dialogOptions) {
                var dsn = (0, _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.makeDsn)(dsnLike);
                var endpoint = getBaseApiEndpoint(dsn) + "embed/error-page/";
                var encodedOptions = "dsn=" + (0, _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.dsnToString)(dsn);
                for (var key in dialogOptions) {
                    if ("dsn" === key) continue;
                    if ("user" === key) {
                        if (!dialogOptions.user) continue;
                        if (dialogOptions.user.name) encodedOptions += "&name=" + encodeURIComponent(dialogOptions.user.name);
                        if (dialogOptions.user.email) encodedOptions += "&email=" + encodeURIComponent(dialogOptions.user.email);
                    } else encodedOptions += "&" + encodeURIComponent(key) + "=" + encodeURIComponent(dialogOptions[key]);
                }
                return endpoint + "?" + encodedOptions;
            }
        },
        "../shared/browser/node_modules/@sentry/core/esm/flags.js": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.d(__webpack_exports__, {
                IS_DEBUG_BUILD: () => IS_DEBUG_BUILD
            });
            var IS_DEBUG_BUILD = "undefined" === typeof __SENTRY_DEBUG__ ? true : __SENTRY_DEBUG__;
        },
        "../shared/browser/node_modules/@sentry/core/esm/integrations/functiontostring.js": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.d(__webpack_exports__, {
                FunctionToString: () => FunctionToString
            });
            var _sentry_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("../shared/browser/node_modules/@sentry/utils/esm/object.js");
            var originalFunctionToString;
            var FunctionToString = function() {
                function FunctionToString() {
                    this.name = FunctionToString.id;
                }
                FunctionToString.prototype.setupOnce = function() {
                    originalFunctionToString = Function.prototype.toString;
                    Function.prototype.toString = function() {
                        var args = [];
                        for (var _i = 0; _i < arguments.length; _i++) args[_i] = arguments[_i];
                        var context = (0, _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.getOriginalFunction)(this) || this;
                        return originalFunctionToString.apply(context, args);
                    };
                };
                FunctionToString.id = "FunctionToString";
                return FunctionToString;
            }();
        },
        "../shared/browser/node_modules/@sentry/core/esm/integrations/inboundfilters.js": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.d(__webpack_exports__, {
                InboundFilters: () => InboundFilters
            });
            var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("../shared/browser/node_modules/tslib/tslib.es6.js");
            var _sentry_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("../shared/browser/node_modules/@sentry/utils/esm/logger.js");
            var _sentry_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("../shared/browser/node_modules/@sentry/utils/esm/misc.js");
            var _sentry_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__("../shared/browser/node_modules/@sentry/utils/esm/string.js");
            var _flags__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("../shared/browser/node_modules/@sentry/core/esm/flags.js");
            var DEFAULT_IGNORE_ERRORS = [ /^Script error\.?$/, /^Javascript error: Script error\.? on line 0$/ ];
            var InboundFilters = function() {
                function InboundFilters(_options) {
                    if (void 0 === _options) _options = {};
                    this._options = _options;
                    this.name = InboundFilters.id;
                }
                InboundFilters.prototype.setupOnce = function(addGlobalEventProcessor, getCurrentHub) {
                    addGlobalEventProcessor((function(event) {
                        var hub = getCurrentHub();
                        if (hub) {
                            var self_1 = hub.getIntegration(InboundFilters);
                            if (self_1) {
                                var client = hub.getClient();
                                var clientOptions = client ? client.getOptions() : {};
                                var options = _mergeOptions(self_1._options, clientOptions);
                                return _shouldDropEvent(event, options) ? null : event;
                            }
                        }
                        return event;
                    }));
                };
                InboundFilters.id = "InboundFilters";
                return InboundFilters;
            }();
            function _mergeOptions(internalOptions, clientOptions) {
                if (void 0 === internalOptions) internalOptions = {};
                if (void 0 === clientOptions) clientOptions = {};
                return {
                    allowUrls: (0, tslib__WEBPACK_IMPORTED_MODULE_0__.__spread)(internalOptions.whitelistUrls || [], internalOptions.allowUrls || [], clientOptions.whitelistUrls || [], clientOptions.allowUrls || []),
                    denyUrls: (0, tslib__WEBPACK_IMPORTED_MODULE_0__.__spread)(internalOptions.blacklistUrls || [], internalOptions.denyUrls || [], clientOptions.blacklistUrls || [], clientOptions.denyUrls || []),
                    ignoreErrors: (0, tslib__WEBPACK_IMPORTED_MODULE_0__.__spread)(internalOptions.ignoreErrors || [], clientOptions.ignoreErrors || [], DEFAULT_IGNORE_ERRORS),
                    ignoreInternal: void 0 !== internalOptions.ignoreInternal ? internalOptions.ignoreInternal : true
                };
            }
            function _shouldDropEvent(event, options) {
                if (options.ignoreInternal && _isSentryError(event)) {
                    _flags__WEBPACK_IMPORTED_MODULE_1__.IS_DEBUG_BUILD && _sentry_utils__WEBPACK_IMPORTED_MODULE_2__.logger.warn("Event dropped due to being internal Sentry Error.\nEvent: " + (0, 
                    _sentry_utils__WEBPACK_IMPORTED_MODULE_3__.getEventDescription)(event));
                    return true;
                }
                if (_isIgnoredError(event, options.ignoreErrors)) {
                    _flags__WEBPACK_IMPORTED_MODULE_1__.IS_DEBUG_BUILD && _sentry_utils__WEBPACK_IMPORTED_MODULE_2__.logger.warn("Event dropped due to being matched by `ignoreErrors` option.\nEvent: " + (0, 
                    _sentry_utils__WEBPACK_IMPORTED_MODULE_3__.getEventDescription)(event));
                    return true;
                }
                if (_isDeniedUrl(event, options.denyUrls)) {
                    _flags__WEBPACK_IMPORTED_MODULE_1__.IS_DEBUG_BUILD && _sentry_utils__WEBPACK_IMPORTED_MODULE_2__.logger.warn("Event dropped due to being matched by `denyUrls` option.\nEvent: " + (0, 
                    _sentry_utils__WEBPACK_IMPORTED_MODULE_3__.getEventDescription)(event) + ".\nUrl: " + _getEventFilterUrl(event));
                    return true;
                }
                if (!_isAllowedUrl(event, options.allowUrls)) {
                    _flags__WEBPACK_IMPORTED_MODULE_1__.IS_DEBUG_BUILD && _sentry_utils__WEBPACK_IMPORTED_MODULE_2__.logger.warn("Event dropped due to not being matched by `allowUrls` option.\nEvent: " + (0, 
                    _sentry_utils__WEBPACK_IMPORTED_MODULE_3__.getEventDescription)(event) + ".\nUrl: " + _getEventFilterUrl(event));
                    return true;
                }
                return false;
            }
            function _isIgnoredError(event, ignoreErrors) {
                if (!ignoreErrors || !ignoreErrors.length) return false;
                return _getPossibleEventMessages(event).some((function(message) {
                    return ignoreErrors.some((function(pattern) {
                        return (0, _sentry_utils__WEBPACK_IMPORTED_MODULE_4__.isMatchingPattern)(message, pattern);
                    }));
                }));
            }
            function _isDeniedUrl(event, denyUrls) {
                if (!denyUrls || !denyUrls.length) return false;
                var url = _getEventFilterUrl(event);
                return !url ? false : denyUrls.some((function(pattern) {
                    return (0, _sentry_utils__WEBPACK_IMPORTED_MODULE_4__.isMatchingPattern)(url, pattern);
                }));
            }
            function _isAllowedUrl(event, allowUrls) {
                if (!allowUrls || !allowUrls.length) return true;
                var url = _getEventFilterUrl(event);
                return !url ? true : allowUrls.some((function(pattern) {
                    return (0, _sentry_utils__WEBPACK_IMPORTED_MODULE_4__.isMatchingPattern)(url, pattern);
                }));
            }
            function _getPossibleEventMessages(event) {
                if (event.message) return [ event.message ];
                if (event.exception) try {
                    var _a = event.exception.values && event.exception.values[0] || {}, _b = _a.type, type = void 0 === _b ? "" : _b, _c = _a.value, value = void 0 === _c ? "" : _c;
                    return [ "" + value, type + ": " + value ];
                } catch (oO) {
                    _flags__WEBPACK_IMPORTED_MODULE_1__.IS_DEBUG_BUILD && _sentry_utils__WEBPACK_IMPORTED_MODULE_2__.logger.error("Cannot extract message for event " + (0, 
                    _sentry_utils__WEBPACK_IMPORTED_MODULE_3__.getEventDescription)(event));
                    return [];
                }
                return [];
            }
            function _isSentryError(event) {
                try {
                    return "SentryError" === event.exception.values[0].type;
                } catch (e) {}
                return false;
            }
            function _getLastValidUrl(frames) {
                if (void 0 === frames) frames = [];
                for (var i = frames.length - 1; i >= 0; i--) {
                    var frame = frames[i];
                    if (frame && "<anonymous>" !== frame.filename && "[native code]" !== frame.filename) return frame.filename || null;
                }
                return null;
            }
            function _getEventFilterUrl(event) {
                try {
                    if (event.stacktrace) return _getLastValidUrl(event.stacktrace.frames);
                    var frames_1;
                    try {
                        frames_1 = event.exception.values[0].stacktrace.frames;
                    } catch (e) {}
                    return frames_1 ? _getLastValidUrl(frames_1) : null;
                } catch (oO) {
                    _flags__WEBPACK_IMPORTED_MODULE_1__.IS_DEBUG_BUILD && _sentry_utils__WEBPACK_IMPORTED_MODULE_2__.logger.error("Cannot extract url for event " + (0, 
                    _sentry_utils__WEBPACK_IMPORTED_MODULE_3__.getEventDescription)(event));
                    return null;
                }
            }
        },
        "../shared/browser/node_modules/@sentry/core/esm/request.js": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.d(__webpack_exports__, {
                createSessionEnvelope: () => createSessionEnvelope,
                sessionToSentryRequest: () => sessionToSentryRequest,
                createEventEnvelope: () => createEventEnvelope,
                eventToSentryRequest: () => eventToSentryRequest
            });
            var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("../shared/browser/node_modules/tslib/tslib.es6.js");
            var _sentry_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("../shared/browser/node_modules/@sentry/utils/esm/dsn.js");
            var _sentry_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("../shared/browser/node_modules/@sentry/utils/esm/envelope.js");
            var _sentry_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__("../shared/browser/node_modules/@sentry/utils/esm/normalize.js");
            var _api__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("../shared/browser/node_modules/@sentry/core/esm/api.js");
            function getSdkMetadataForEnvelopeHeader(api) {
                if (!api.metadata || !api.metadata.sdk) return;
                var _a = api.metadata.sdk, name = _a.name, version = _a.version;
                return {
                    name,
                    version
                };
            }
            function enhanceEventWithSdkInfo(event, sdkInfo) {
                if (!sdkInfo) return event;
                event.sdk = event.sdk || {};
                event.sdk.name = event.sdk.name || sdkInfo.name;
                event.sdk.version = event.sdk.version || sdkInfo.version;
                event.sdk.integrations = (0, tslib__WEBPACK_IMPORTED_MODULE_0__.__spread)(event.sdk.integrations || [], sdkInfo.integrations || []);
                event.sdk.packages = (0, tslib__WEBPACK_IMPORTED_MODULE_0__.__spread)(event.sdk.packages || [], sdkInfo.packages || []);
                return event;
            }
            function createSessionEnvelope(session, api) {
                var sdkInfo = getSdkMetadataForEnvelopeHeader(api);
                var envelopeHeaders = (0, tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)({
                    sent_at: (new Date).toISOString()
                }, sdkInfo && {
                    sdk: sdkInfo
                }), !!api.tunnel && {
                    dsn: (0, _sentry_utils__WEBPACK_IMPORTED_MODULE_1__.dsnToString)(api.dsn)
                });
                var type = "aggregates" in session ? "sessions" : "session";
                var envelopeItem = [ {
                    type
                }, session ];
                var envelope = (0, _sentry_utils__WEBPACK_IMPORTED_MODULE_2__.createEnvelope)(envelopeHeaders, [ envelopeItem ]);
                return [ envelope, type ];
            }
            function sessionToSentryRequest(session, api) {
                var _a = (0, tslib__WEBPACK_IMPORTED_MODULE_0__.__read)(createSessionEnvelope(session, api), 2), envelope = _a[0], type = _a[1];
                return {
                    body: (0, _sentry_utils__WEBPACK_IMPORTED_MODULE_2__.serializeEnvelope)(envelope),
                    type,
                    url: (0, _api__WEBPACK_IMPORTED_MODULE_3__.getEnvelopeEndpointWithUrlEncodedAuth)(api.dsn, api.tunnel)
                };
            }
            function createEventEnvelope(event, api) {
                var sdkInfo = getSdkMetadataForEnvelopeHeader(api);
                var eventType = event.type || "event";
                var transactionSampling = (event.sdkProcessingMetadata || {}).transactionSampling;
                var _a = transactionSampling || {}, samplingMethod = _a.method, sampleRate = _a.rate;
                enhanceEventWithSdkInfo(event, api.metadata.sdk);
                event.tags = event.tags || {};
                event.extra = event.extra || {};
                if (!(event.sdkProcessingMetadata && event.sdkProcessingMetadata.baseClientNormalized)) {
                    event.tags.skippedNormalization = true;
                    event.extra.normalizeDepth = event.sdkProcessingMetadata ? event.sdkProcessingMetadata.normalizeDepth : "unset";
                }
                delete event.sdkProcessingMetadata;
                var envelopeHeaders = (0, tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)({
                    event_id: event.event_id,
                    sent_at: (new Date).toISOString()
                }, sdkInfo && {
                    sdk: sdkInfo
                }), !!api.tunnel && {
                    dsn: (0, _sentry_utils__WEBPACK_IMPORTED_MODULE_1__.dsnToString)(api.dsn)
                });
                var eventItem = [ {
                    type: eventType,
                    sample_rates: [ {
                        id: samplingMethod,
                        rate: sampleRate
                    } ]
                }, event ];
                return (0, _sentry_utils__WEBPACK_IMPORTED_MODULE_2__.createEnvelope)(envelopeHeaders, [ eventItem ]);
            }
            function eventToSentryRequest(event, api) {
                var sdkInfo = getSdkMetadataForEnvelopeHeader(api);
                var eventType = event.type || "event";
                var useEnvelope = "transaction" === eventType || !!api.tunnel;
                var transactionSampling = (event.sdkProcessingMetadata || {}).transactionSampling;
                var _a = transactionSampling || {}, samplingMethod = _a.method, sampleRate = _a.rate;
                enhanceEventWithSdkInfo(event, api.metadata.sdk);
                event.tags = event.tags || {};
                event.extra = event.extra || {};
                if (!(event.sdkProcessingMetadata && event.sdkProcessingMetadata.baseClientNormalized)) {
                    event.tags.skippedNormalization = true;
                    event.extra.normalizeDepth = event.sdkProcessingMetadata ? event.sdkProcessingMetadata.normalizeDepth : "unset";
                }
                delete event.sdkProcessingMetadata;
                var body;
                try {
                    body = JSON.stringify(event);
                } catch (err) {
                    event.tags.JSONStringifyError = true;
                    event.extra.JSONStringifyError = err;
                    try {
                        body = JSON.stringify((0, _sentry_utils__WEBPACK_IMPORTED_MODULE_4__.normalize)(event));
                    } catch (newErr) {
                        var innerErr = newErr;
                        body = JSON.stringify({
                            message: "JSON.stringify error after renormalization",
                            extra: {
                                message: innerErr.message,
                                stack: innerErr.stack
                            }
                        });
                    }
                }
                var req = {
                    body,
                    type: eventType,
                    url: useEnvelope ? (0, _api__WEBPACK_IMPORTED_MODULE_3__.getEnvelopeEndpointWithUrlEncodedAuth)(api.dsn, api.tunnel) : (0, 
                    _api__WEBPACK_IMPORTED_MODULE_3__.getStoreEndpointWithUrlEncodedAuth)(api.dsn)
                };
                if (useEnvelope) {
                    var envelopeHeaders = (0, tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)({
                        event_id: event.event_id,
                        sent_at: (new Date).toISOString()
                    }, sdkInfo && {
                        sdk: sdkInfo
                    }), !!api.tunnel && {
                        dsn: (0, _sentry_utils__WEBPACK_IMPORTED_MODULE_1__.dsnToString)(api.dsn)
                    });
                    var eventItem = [ {
                        type: eventType,
                        sample_rates: [ {
                            id: samplingMethod,
                            rate: sampleRate
                        } ]
                    }, req.body ];
                    var envelope = (0, _sentry_utils__WEBPACK_IMPORTED_MODULE_2__.createEnvelope)(envelopeHeaders, [ eventItem ]);
                    req.body = (0, _sentry_utils__WEBPACK_IMPORTED_MODULE_2__.serializeEnvelope)(envelope);
                }
                return req;
            }
        },
        "../shared/browser/node_modules/@sentry/core/esm/transports/base.js": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.d(__webpack_exports__, {
                createTransport: () => createTransport
            });
            var _sentry_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("../shared/browser/node_modules/@sentry/utils/esm/promisebuffer.js");
            var _sentry_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("../shared/browser/node_modules/@sentry/utils/esm/envelope.js");
            var _sentry_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("../shared/browser/node_modules/@sentry/utils/esm/ratelimit.js");
            var _sentry_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("../shared/browser/node_modules/@sentry/utils/esm/syncpromise.js");
            var _sentry_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__("../shared/browser/node_modules/@sentry/utils/esm/status.js");
            var DEFAULT_TRANSPORT_BUFFER_SIZE = 30;
            function createTransport(options, makeRequest, buffer) {
                if (void 0 === buffer) buffer = (0, _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.makePromiseBuffer)(options.bufferSize || DEFAULT_TRANSPORT_BUFFER_SIZE);
                var rateLimits = {};
                var flush = function(timeout) {
                    return buffer.drain(timeout);
                };
                function send(envelope) {
                    var envCategory = (0, _sentry_utils__WEBPACK_IMPORTED_MODULE_1__.getEnvelopeType)(envelope);
                    var category = "event" === envCategory ? "error" : envCategory;
                    var request = {
                        category,
                        body: (0, _sentry_utils__WEBPACK_IMPORTED_MODULE_1__.serializeEnvelope)(envelope)
                    };
                    if ((0, _sentry_utils__WEBPACK_IMPORTED_MODULE_2__.isRateLimited)(rateLimits, category)) return (0, 
                    _sentry_utils__WEBPACK_IMPORTED_MODULE_3__.rejectedSyncPromise)({
                        status: "rate_limit",
                        reason: getRateLimitReason(rateLimits, category)
                    });
                    var requestTask = function() {
                        return makeRequest(request).then((function(_a) {
                            var body = _a.body, headers = _a.headers, reason = _a.reason, statusCode = _a.statusCode;
                            var status = (0, _sentry_utils__WEBPACK_IMPORTED_MODULE_4__.eventStatusFromHttpCode)(statusCode);
                            if (headers) rateLimits = (0, _sentry_utils__WEBPACK_IMPORTED_MODULE_2__.updateRateLimits)(rateLimits, headers);
                            if ("success" === status) return (0, _sentry_utils__WEBPACK_IMPORTED_MODULE_3__.resolvedSyncPromise)({
                                status,
                                reason
                            });
                            return (0, _sentry_utils__WEBPACK_IMPORTED_MODULE_3__.rejectedSyncPromise)({
                                status,
                                reason: reason || body || ("rate_limit" === status ? getRateLimitReason(rateLimits, category) : "Unknown transport error")
                            });
                        }));
                    };
                    return buffer.add(requestTask);
                }
                return {
                    send,
                    flush
                };
            }
            function getRateLimitReason(rateLimits, category) {
                return "Too many " + category + " requests, backing off until: " + new Date((0, 
                _sentry_utils__WEBPACK_IMPORTED_MODULE_2__.disabledUntil)(rateLimits, category)).toISOString();
            }
        },
        "../shared/browser/node_modules/@sentry/core/esm/version.js": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.d(__webpack_exports__, {
                SDK_VERSION: () => SDK_VERSION
            });
            var SDK_VERSION = "6.19.7";
        },
        "../shared/browser/node_modules/@sentry/hub/esm/hub.js": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.d(__webpack_exports__, {
                Hub: () => Hub,
                getCurrentHub: () => getCurrentHub,
                getHubFromCarrier: () => getHubFromCarrier,
                getMainCarrier: () => getMainCarrier,
                makeMain: () => makeMain
            });
            var tslib_es6 = __webpack_require__("../shared/browser/node_modules/tslib/tslib.es6.js");
            var misc = __webpack_require__("../shared/browser/node_modules/@sentry/utils/esm/misc.js");
            var time = __webpack_require__("../shared/browser/node_modules/@sentry/utils/esm/time.js");
            var esm_logger = __webpack_require__("../shared/browser/node_modules/@sentry/utils/esm/logger.js");
            var esm_global = __webpack_require__("../shared/browser/node_modules/@sentry/utils/esm/global.js");
            var node = __webpack_require__("../shared/browser/node_modules/@sentry/utils/esm/node.js");
            var flags_IS_DEBUG_BUILD = "undefined" === typeof __SENTRY_DEBUG__ ? true : __SENTRY_DEBUG__;
            var esm_scope = __webpack_require__("../shared/browser/node_modules/@sentry/hub/esm/scope.js");
            var esm_session = __webpack_require__("../shared/browser/node_modules/@sentry/hub/esm/session.js");
            var API_VERSION = 4;
            var DEFAULT_BREADCRUMBS = 100;
            var Hub = function() {
                function Hub(client, scope, _version) {
                    if (void 0 === scope) scope = new esm_scope.Scope;
                    if (void 0 === _version) _version = API_VERSION;
                    this._version = _version;
                    this._stack = [ {} ];
                    this.getStackTop().scope = scope;
                    if (client) this.bindClient(client);
                }
                Hub.prototype.isOlderThan = function(version) {
                    return this._version < version;
                };
                Hub.prototype.bindClient = function(client) {
                    var top = this.getStackTop();
                    top.client = client;
                    if (client && client.setupIntegrations) client.setupIntegrations();
                };
                Hub.prototype.pushScope = function() {
                    var scope = esm_scope.Scope.clone(this.getScope());
                    this.getStack().push({
                        client: this.getClient(),
                        scope
                    });
                    return scope;
                };
                Hub.prototype.popScope = function() {
                    if (this.getStack().length <= 1) return false;
                    return !!this.getStack().pop();
                };
                Hub.prototype.withScope = function(callback) {
                    var scope = this.pushScope();
                    try {
                        callback(scope);
                    } finally {
                        this.popScope();
                    }
                };
                Hub.prototype.getClient = function() {
                    return this.getStackTop().client;
                };
                Hub.prototype.getScope = function() {
                    return this.getStackTop().scope;
                };
                Hub.prototype.getStack = function() {
                    return this._stack;
                };
                Hub.prototype.getStackTop = function() {
                    return this._stack[this._stack.length - 1];
                };
                Hub.prototype.captureException = function(exception, hint) {
                    var eventId = this._lastEventId = hint && hint.event_id ? hint.event_id : (0, misc.uuid4)();
                    var finalHint = hint;
                    if (!hint) {
                        var syntheticException = void 0;
                        try {
                            throw new Error("Sentry syntheticException");
                        } catch (exception) {
                            syntheticException = exception;
                        }
                        finalHint = {
                            originalException: exception,
                            syntheticException
                        };
                    }
                    this._invokeClient("captureException", exception, (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, finalHint), {
                        event_id: eventId
                    }));
                    return eventId;
                };
                Hub.prototype.captureMessage = function(message, level, hint) {
                    var eventId = this._lastEventId = hint && hint.event_id ? hint.event_id : (0, misc.uuid4)();
                    var finalHint = hint;
                    if (!hint) {
                        var syntheticException = void 0;
                        try {
                            throw new Error(message);
                        } catch (exception) {
                            syntheticException = exception;
                        }
                        finalHint = {
                            originalException: message,
                            syntheticException
                        };
                    }
                    this._invokeClient("captureMessage", message, level, (0, tslib_es6.__assign)((0, 
                    tslib_es6.__assign)({}, finalHint), {
                        event_id: eventId
                    }));
                    return eventId;
                };
                Hub.prototype.captureEvent = function(event, hint) {
                    var eventId = hint && hint.event_id ? hint.event_id : (0, misc.uuid4)();
                    if ("transaction" !== event.type) this._lastEventId = eventId;
                    this._invokeClient("captureEvent", event, (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, hint), {
                        event_id: eventId
                    }));
                    return eventId;
                };
                Hub.prototype.lastEventId = function() {
                    return this._lastEventId;
                };
                Hub.prototype.addBreadcrumb = function(breadcrumb, hint) {
                    var _a = this.getStackTop(), scope = _a.scope, client = _a.client;
                    if (!scope || !client) return;
                    var _b = client.getOptions && client.getOptions() || {}, _c = _b.beforeBreadcrumb, beforeBreadcrumb = void 0 === _c ? null : _c, _d = _b.maxBreadcrumbs, maxBreadcrumbs = void 0 === _d ? DEFAULT_BREADCRUMBS : _d;
                    if (maxBreadcrumbs <= 0) return;
                    var timestamp = (0, time.dateTimestampInSeconds)();
                    var mergedBreadcrumb = (0, tslib_es6.__assign)({
                        timestamp
                    }, breadcrumb);
                    var finalBreadcrumb = beforeBreadcrumb ? (0, esm_logger.consoleSandbox)((function() {
                        return beforeBreadcrumb(mergedBreadcrumb, hint);
                    })) : mergedBreadcrumb;
                    if (null === finalBreadcrumb) return;
                    scope.addBreadcrumb(finalBreadcrumb, maxBreadcrumbs);
                };
                Hub.prototype.setUser = function(user) {
                    var scope = this.getScope();
                    if (scope) scope.setUser(user);
                };
                Hub.prototype.setTags = function(tags) {
                    var scope = this.getScope();
                    if (scope) scope.setTags(tags);
                };
                Hub.prototype.setExtras = function(extras) {
                    var scope = this.getScope();
                    if (scope) scope.setExtras(extras);
                };
                Hub.prototype.setTag = function(key, value) {
                    var scope = this.getScope();
                    if (scope) scope.setTag(key, value);
                };
                Hub.prototype.setExtra = function(key, extra) {
                    var scope = this.getScope();
                    if (scope) scope.setExtra(key, extra);
                };
                Hub.prototype.setContext = function(name, context) {
                    var scope = this.getScope();
                    if (scope) scope.setContext(name, context);
                };
                Hub.prototype.configureScope = function(callback) {
                    var _a = this.getStackTop(), scope = _a.scope, client = _a.client;
                    if (scope && client) callback(scope);
                };
                Hub.prototype.run = function(callback) {
                    var oldHub = makeMain(this);
                    try {
                        callback(this);
                    } finally {
                        makeMain(oldHub);
                    }
                };
                Hub.prototype.getIntegration = function(integration) {
                    var client = this.getClient();
                    if (!client) return null;
                    try {
                        return client.getIntegration(integration);
                    } catch (_oO) {
                        flags_IS_DEBUG_BUILD && esm_logger.logger.warn("Cannot retrieve integration " + integration.id + " from the current Hub");
                        return null;
                    }
                };
                Hub.prototype.startSpan = function(context) {
                    return this._callExtensionMethod("startSpan", context);
                };
                Hub.prototype.startTransaction = function(context, customSamplingContext) {
                    return this._callExtensionMethod("startTransaction", context, customSamplingContext);
                };
                Hub.prototype.traceHeaders = function() {
                    return this._callExtensionMethod("traceHeaders");
                };
                Hub.prototype.captureSession = function(endSession) {
                    if (void 0 === endSession) endSession = false;
                    if (endSession) return this.endSession();
                    this._sendSessionUpdate();
                };
                Hub.prototype.endSession = function() {
                    var layer = this.getStackTop();
                    var scope = layer && layer.scope;
                    var session = scope && scope.getSession();
                    if (session) session.close();
                    this._sendSessionUpdate();
                    if (scope) scope.setSession();
                };
                Hub.prototype.startSession = function(context) {
                    var _a = this.getStackTop(), scope = _a.scope, client = _a.client;
                    var _b = client && client.getOptions() || {}, release = _b.release, environment = _b.environment;
                    var global = (0, esm_global.getGlobalObject)();
                    var userAgent = (global.navigator || {}).userAgent;
                    var session = new esm_session.Session((0, tslib_es6.__assign)((0, tslib_es6.__assign)((0, 
                    tslib_es6.__assign)({
                        release,
                        environment
                    }, scope && {
                        user: scope.getUser()
                    }), userAgent && {
                        userAgent
                    }), context));
                    if (scope) {
                        var currentSession = scope.getSession && scope.getSession();
                        if (currentSession && "ok" === currentSession.status) currentSession.update({
                            status: "exited"
                        });
                        this.endSession();
                        scope.setSession(session);
                    }
                    return session;
                };
                Hub.prototype._sendSessionUpdate = function() {
                    var _a = this.getStackTop(), scope = _a.scope, client = _a.client;
                    if (!scope) return;
                    var session = scope.getSession && scope.getSession();
                    if (session) if (client && client.captureSession) client.captureSession(session);
                };
                Hub.prototype._invokeClient = function(method) {
                    var _a;
                    var args = [];
                    for (var _i = 1; _i < arguments.length; _i++) args[_i - 1] = arguments[_i];
                    var _b = this.getStackTop(), scope = _b.scope, client = _b.client;
                    if (client && client[method]) (_a = client)[method].apply(_a, (0, tslib_es6.__spread)(args, [ scope ]));
                };
                Hub.prototype._callExtensionMethod = function(method) {
                    var args = [];
                    for (var _i = 1; _i < arguments.length; _i++) args[_i - 1] = arguments[_i];
                    var carrier = getMainCarrier();
                    var sentry = carrier.__SENTRY__;
                    if (sentry && sentry.extensions && "function" === typeof sentry.extensions[method]) return sentry.extensions[method].apply(this, args);
                    flags_IS_DEBUG_BUILD && esm_logger.logger.warn("Extension method " + method + " couldn't be found, doing nothing.");
                };
                return Hub;
            }();
            function getMainCarrier() {
                var carrier = (0, esm_global.getGlobalObject)();
                carrier.__SENTRY__ = carrier.__SENTRY__ || {
                    extensions: {},
                    hub: void 0
                };
                return carrier;
            }
            function makeMain(hub) {
                var registry = getMainCarrier();
                var oldHub = getHubFromCarrier(registry);
                setHubOnCarrier(registry, hub);
                return oldHub;
            }
            function getCurrentHub() {
                var registry = getMainCarrier();
                if (!hasHubOnCarrier(registry) || getHubFromCarrier(registry).isOlderThan(API_VERSION)) setHubOnCarrier(registry, new Hub);
                if ((0, node.isNodeEnv)()) return getHubFromActiveDomain(registry);
                return getHubFromCarrier(registry);
            }
            function getHubFromActiveDomain(registry) {
                try {
                    var sentry = getMainCarrier().__SENTRY__;
                    var activeDomain = sentry && sentry.extensions && sentry.extensions.domain && sentry.extensions.domain.active;
                    if (!activeDomain) return getHubFromCarrier(registry);
                    if (!hasHubOnCarrier(activeDomain) || getHubFromCarrier(activeDomain).isOlderThan(API_VERSION)) {
                        var registryHubTopStack = getHubFromCarrier(registry).getStackTop();
                        setHubOnCarrier(activeDomain, new Hub(registryHubTopStack.client, esm_scope.Scope.clone(registryHubTopStack.scope)));
                    }
                    return getHubFromCarrier(activeDomain);
                } catch (_Oo) {
                    return getHubFromCarrier(registry);
                }
            }
            function hasHubOnCarrier(carrier) {
                return !!(carrier && carrier.__SENTRY__ && carrier.__SENTRY__.hub);
            }
            function getHubFromCarrier(carrier) {
                return (0, esm_global.getGlobalSingleton)("hub", (function() {
                    return new Hub;
                }), carrier);
            }
            function setHubOnCarrier(carrier, hub) {
                if (!carrier) return false;
                var __SENTRY__ = carrier.__SENTRY__ = carrier.__SENTRY__ || {};
                __SENTRY__.hub = hub;
                return true;
            }
        },
        "../shared/browser/node_modules/@sentry/hub/esm/scope.js": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.d(__webpack_exports__, {
                Scope: () => Scope,
                addGlobalEventProcessor: () => addGlobalEventProcessor
            });
            var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("../shared/browser/node_modules/tslib/tslib.es6.js");
            var _sentry_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("../shared/browser/node_modules/@sentry/utils/esm/is.js");
            var _sentry_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("../shared/browser/node_modules/@sentry/utils/esm/time.js");
            var _sentry_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("../shared/browser/node_modules/@sentry/utils/esm/syncpromise.js");
            var _sentry_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__("../shared/browser/node_modules/@sentry/utils/esm/global.js");
            var MAX_BREADCRUMBS = 100;
            var Scope = function() {
                function Scope() {
                    this._notifyingListeners = false;
                    this._scopeListeners = [];
                    this._eventProcessors = [];
                    this._breadcrumbs = [];
                    this._user = {};
                    this._tags = {};
                    this._extra = {};
                    this._contexts = {};
                    this._sdkProcessingMetadata = {};
                }
                Scope.clone = function(scope) {
                    var newScope = new Scope;
                    if (scope) {
                        newScope._breadcrumbs = (0, tslib__WEBPACK_IMPORTED_MODULE_0__.__spread)(scope._breadcrumbs);
                        newScope._tags = (0, tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)({}, scope._tags);
                        newScope._extra = (0, tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)({}, scope._extra);
                        newScope._contexts = (0, tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)({}, scope._contexts);
                        newScope._user = scope._user;
                        newScope._level = scope._level;
                        newScope._span = scope._span;
                        newScope._session = scope._session;
                        newScope._transactionName = scope._transactionName;
                        newScope._fingerprint = scope._fingerprint;
                        newScope._eventProcessors = (0, tslib__WEBPACK_IMPORTED_MODULE_0__.__spread)(scope._eventProcessors);
                        newScope._requestSession = scope._requestSession;
                    }
                    return newScope;
                };
                Scope.prototype.addScopeListener = function(callback) {
                    this._scopeListeners.push(callback);
                };
                Scope.prototype.addEventProcessor = function(callback) {
                    this._eventProcessors.push(callback);
                    return this;
                };
                Scope.prototype.setUser = function(user) {
                    this._user = user || {};
                    if (this._session) this._session.update({
                        user
                    });
                    this._notifyScopeListeners();
                    return this;
                };
                Scope.prototype.getUser = function() {
                    return this._user;
                };
                Scope.prototype.getRequestSession = function() {
                    return this._requestSession;
                };
                Scope.prototype.setRequestSession = function(requestSession) {
                    this._requestSession = requestSession;
                    return this;
                };
                Scope.prototype.setTags = function(tags) {
                    this._tags = (0, tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)({}, this._tags), tags);
                    this._notifyScopeListeners();
                    return this;
                };
                Scope.prototype.setTag = function(key, value) {
                    var _a;
                    this._tags = (0, tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)({}, this._tags), (_a = {}, 
                    _a[key] = value, _a));
                    this._notifyScopeListeners();
                    return this;
                };
                Scope.prototype.setExtras = function(extras) {
                    this._extra = (0, tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)({}, this._extra), extras);
                    this._notifyScopeListeners();
                    return this;
                };
                Scope.prototype.setExtra = function(key, extra) {
                    var _a;
                    this._extra = (0, tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)({}, this._extra), (_a = {}, 
                    _a[key] = extra, _a));
                    this._notifyScopeListeners();
                    return this;
                };
                Scope.prototype.setFingerprint = function(fingerprint) {
                    this._fingerprint = fingerprint;
                    this._notifyScopeListeners();
                    return this;
                };
                Scope.prototype.setLevel = function(level) {
                    this._level = level;
                    this._notifyScopeListeners();
                    return this;
                };
                Scope.prototype.setTransactionName = function(name) {
                    this._transactionName = name;
                    this._notifyScopeListeners();
                    return this;
                };
                Scope.prototype.setTransaction = function(name) {
                    return this.setTransactionName(name);
                };
                Scope.prototype.setContext = function(key, context) {
                    var _a;
                    if (null === context) delete this._contexts[key]; else this._contexts = (0, tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)((0, 
                    tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)({}, this._contexts), (_a = {}, _a[key] = context, 
                    _a));
                    this._notifyScopeListeners();
                    return this;
                };
                Scope.prototype.setSpan = function(span) {
                    this._span = span;
                    this._notifyScopeListeners();
                    return this;
                };
                Scope.prototype.getSpan = function() {
                    return this._span;
                };
                Scope.prototype.getTransaction = function() {
                    var span = this.getSpan();
                    return span && span.transaction;
                };
                Scope.prototype.setSession = function(session) {
                    if (!session) delete this._session; else this._session = session;
                    this._notifyScopeListeners();
                    return this;
                };
                Scope.prototype.getSession = function() {
                    return this._session;
                };
                Scope.prototype.update = function(captureContext) {
                    if (!captureContext) return this;
                    if ("function" === typeof captureContext) {
                        var updatedScope = captureContext(this);
                        return updatedScope instanceof Scope ? updatedScope : this;
                    }
                    if (captureContext instanceof Scope) {
                        this._tags = (0, tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)({}, this._tags), captureContext._tags);
                        this._extra = (0, tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)({}, this._extra), captureContext._extra);
                        this._contexts = (0, tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)({}, this._contexts), captureContext._contexts);
                        if (captureContext._user && Object.keys(captureContext._user).length) this._user = captureContext._user;
                        if (captureContext._level) this._level = captureContext._level;
                        if (captureContext._fingerprint) this._fingerprint = captureContext._fingerprint;
                        if (captureContext._requestSession) this._requestSession = captureContext._requestSession;
                    } else if ((0, _sentry_utils__WEBPACK_IMPORTED_MODULE_1__.isPlainObject)(captureContext)) {
                        captureContext = captureContext;
                        this._tags = (0, tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)({}, this._tags), captureContext.tags);
                        this._extra = (0, tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)({}, this._extra), captureContext.extra);
                        this._contexts = (0, tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)({}, this._contexts), captureContext.contexts);
                        if (captureContext.user) this._user = captureContext.user;
                        if (captureContext.level) this._level = captureContext.level;
                        if (captureContext.fingerprint) this._fingerprint = captureContext.fingerprint;
                        if (captureContext.requestSession) this._requestSession = captureContext.requestSession;
                    }
                    return this;
                };
                Scope.prototype.clear = function() {
                    this._breadcrumbs = [];
                    this._tags = {};
                    this._extra = {};
                    this._user = {};
                    this._contexts = {};
                    this._level = void 0;
                    this._transactionName = void 0;
                    this._fingerprint = void 0;
                    this._requestSession = void 0;
                    this._span = void 0;
                    this._session = void 0;
                    this._notifyScopeListeners();
                    return this;
                };
                Scope.prototype.addBreadcrumb = function(breadcrumb, maxBreadcrumbs) {
                    var maxCrumbs = "number" === typeof maxBreadcrumbs ? Math.min(maxBreadcrumbs, MAX_BREADCRUMBS) : MAX_BREADCRUMBS;
                    if (maxCrumbs <= 0) return this;
                    var mergedBreadcrumb = (0, tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)({
                        timestamp: (0, _sentry_utils__WEBPACK_IMPORTED_MODULE_2__.dateTimestampInSeconds)()
                    }, breadcrumb);
                    this._breadcrumbs = (0, tslib__WEBPACK_IMPORTED_MODULE_0__.__spread)(this._breadcrumbs, [ mergedBreadcrumb ]).slice(-maxCrumbs);
                    this._notifyScopeListeners();
                    return this;
                };
                Scope.prototype.clearBreadcrumbs = function() {
                    this._breadcrumbs = [];
                    this._notifyScopeListeners();
                    return this;
                };
                Scope.prototype.applyToEvent = function(event, hint) {
                    if (this._extra && Object.keys(this._extra).length) event.extra = (0, tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)((0, 
                    tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)({}, this._extra), event.extra);
                    if (this._tags && Object.keys(this._tags).length) event.tags = (0, tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)((0, 
                    tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)({}, this._tags), event.tags);
                    if (this._user && Object.keys(this._user).length) event.user = (0, tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)((0, 
                    tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)({}, this._user), event.user);
                    if (this._contexts && Object.keys(this._contexts).length) event.contexts = (0, tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)((0, 
                    tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)({}, this._contexts), event.contexts);
                    if (this._level) event.level = this._level;
                    if (this._transactionName) event.transaction = this._transactionName;
                    if (this._span) {
                        event.contexts = (0, tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)({
                            trace: this._span.getTraceContext()
                        }, event.contexts);
                        var transactionName = this._span.transaction && this._span.transaction.name;
                        if (transactionName) event.tags = (0, tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)({
                            transaction: transactionName
                        }, event.tags);
                    }
                    this._applyFingerprint(event);
                    event.breadcrumbs = (0, tslib__WEBPACK_IMPORTED_MODULE_0__.__spread)(event.breadcrumbs || [], this._breadcrumbs);
                    event.breadcrumbs = event.breadcrumbs.length > 0 ? event.breadcrumbs : void 0;
                    event.sdkProcessingMetadata = this._sdkProcessingMetadata;
                    return this._notifyEventProcessors((0, tslib__WEBPACK_IMPORTED_MODULE_0__.__spread)(getGlobalEventProcessors(), this._eventProcessors), event, hint);
                };
                Scope.prototype.setSDKProcessingMetadata = function(newData) {
                    this._sdkProcessingMetadata = (0, tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)((0, 
                    tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)({}, this._sdkProcessingMetadata), newData);
                    return this;
                };
                Scope.prototype._notifyEventProcessors = function(processors, event, hint, index) {
                    var _this = this;
                    if (void 0 === index) index = 0;
                    return new _sentry_utils__WEBPACK_IMPORTED_MODULE_3__.SyncPromise((function(resolve, reject) {
                        var processor = processors[index];
                        if (null === event || "function" !== typeof processor) resolve(event); else {
                            var result = processor((0, tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)({}, event), hint);
                            if ((0, _sentry_utils__WEBPACK_IMPORTED_MODULE_1__.isThenable)(result)) void result.then((function(final) {
                                return _this._notifyEventProcessors(processors, final, hint, index + 1).then(resolve);
                            })).then(null, reject); else void _this._notifyEventProcessors(processors, result, hint, index + 1).then(resolve).then(null, reject);
                        }
                    }));
                };
                Scope.prototype._notifyScopeListeners = function() {
                    var _this = this;
                    if (!this._notifyingListeners) {
                        this._notifyingListeners = true;
                        this._scopeListeners.forEach((function(callback) {
                            callback(_this);
                        }));
                        this._notifyingListeners = false;
                    }
                };
                Scope.prototype._applyFingerprint = function(event) {
                    event.fingerprint = event.fingerprint ? Array.isArray(event.fingerprint) ? event.fingerprint : [ event.fingerprint ] : [];
                    if (this._fingerprint) event.fingerprint = event.fingerprint.concat(this._fingerprint);
                    if (event.fingerprint && !event.fingerprint.length) delete event.fingerprint;
                };
                return Scope;
            }();
            function getGlobalEventProcessors() {
                return (0, _sentry_utils__WEBPACK_IMPORTED_MODULE_4__.getGlobalSingleton)("globalEventProcessors", (function() {
                    return [];
                }));
            }
            function addGlobalEventProcessor(callback) {
                getGlobalEventProcessors().push(callback);
            }
        },
        "../shared/browser/node_modules/@sentry/hub/esm/session.js": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.d(__webpack_exports__, {
                Session: () => Session
            });
            var _sentry_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("../shared/browser/node_modules/@sentry/utils/esm/misc.js");
            var _sentry_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("../shared/browser/node_modules/@sentry/utils/esm/time.js");
            var _sentry_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("../shared/browser/node_modules/@sentry/utils/esm/object.js");
            var Session = function() {
                function Session(context) {
                    this.errors = 0;
                    this.sid = (0, _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.uuid4)();
                    this.duration = 0;
                    this.status = "ok";
                    this.init = true;
                    this.ignoreDuration = false;
                    var startingTime = (0, _sentry_utils__WEBPACK_IMPORTED_MODULE_1__.timestampInSeconds)();
                    this.timestamp = startingTime;
                    this.started = startingTime;
                    if (context) this.update(context);
                }
                Session.prototype.update = function(context) {
                    if (void 0 === context) context = {};
                    if (context.user) {
                        if (!this.ipAddress && context.user.ip_address) this.ipAddress = context.user.ip_address;
                        if (!this.did && !context.did) this.did = context.user.id || context.user.email || context.user.username;
                    }
                    this.timestamp = context.timestamp || (0, _sentry_utils__WEBPACK_IMPORTED_MODULE_1__.timestampInSeconds)();
                    if (context.ignoreDuration) this.ignoreDuration = context.ignoreDuration;
                    if (context.sid) this.sid = 32 === context.sid.length ? context.sid : (0, _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.uuid4)();
                    if (void 0 !== context.init) this.init = context.init;
                    if (!this.did && context.did) this.did = "" + context.did;
                    if ("number" === typeof context.started) this.started = context.started;
                    if (this.ignoreDuration) this.duration = void 0; else if ("number" === typeof context.duration) this.duration = context.duration; else {
                        var duration = this.timestamp - this.started;
                        this.duration = duration >= 0 ? duration : 0;
                    }
                    if (context.release) this.release = context.release;
                    if (context.environment) this.environment = context.environment;
                    if (!this.ipAddress && context.ipAddress) this.ipAddress = context.ipAddress;
                    if (!this.userAgent && context.userAgent) this.userAgent = context.userAgent;
                    if ("number" === typeof context.errors) this.errors = context.errors;
                    if (context.status) this.status = context.status;
                };
                Session.prototype.close = function(status) {
                    if (status) this.update({
                        status
                    }); else if ("ok" === this.status) this.update({
                        status: "exited"
                    }); else this.update();
                };
                Session.prototype.toJSON = function() {
                    return (0, _sentry_utils__WEBPACK_IMPORTED_MODULE_2__.dropUndefinedKeys)({
                        sid: "" + this.sid,
                        init: this.init,
                        started: new Date(1e3 * this.started).toISOString(),
                        timestamp: new Date(1e3 * this.timestamp).toISOString(),
                        status: this.status,
                        errors: this.errors,
                        did: "number" === typeof this.did || "string" === typeof this.did ? "" + this.did : void 0,
                        duration: this.duration,
                        attrs: {
                            release: this.release,
                            environment: this.environment,
                            ip_address: this.ipAddress,
                            user_agent: this.userAgent
                        }
                    });
                };
                return Session;
            }();
        },
        "../shared/browser/node_modules/@sentry/minimal/esm/index.js": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.d(__webpack_exports__, {
                captureException: () => captureException,
                captureMessage: () => captureMessage,
                captureEvent: () => captureEvent,
                configureScope: () => configureScope,
                addBreadcrumb: () => addBreadcrumb,
                setContext: () => setContext,
                setExtras: () => setExtras,
                setTags: () => setTags,
                setExtra: () => setExtra,
                setTag: () => setTag,
                setUser: () => setUser,
                withScope: () => withScope,
                startTransaction: () => startTransaction
            });
            var tslib__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("../shared/browser/node_modules/tslib/tslib.es6.js");
            var _sentry_hub__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("../shared/browser/node_modules/@sentry/hub/esm/hub.js");
            function callOnHub(method) {
                var args = [];
                for (var _i = 1; _i < arguments.length; _i++) args[_i - 1] = arguments[_i];
                var hub = (0, _sentry_hub__WEBPACK_IMPORTED_MODULE_0__.getCurrentHub)();
                if (hub && hub[method]) return hub[method].apply(hub, (0, tslib__WEBPACK_IMPORTED_MODULE_1__.__spread)(args));
                throw new Error("No hub defined or " + method + " was not found on the hub, please open a bug report.");
            }
            function captureException(exception, captureContext) {
                var syntheticException = new Error("Sentry syntheticException");
                return callOnHub("captureException", exception, {
                    captureContext,
                    originalException: exception,
                    syntheticException
                });
            }
            function captureMessage(message, captureContext) {
                var syntheticException = new Error(message);
                var level = "string" === typeof captureContext ? captureContext : void 0;
                var context = "string" !== typeof captureContext ? {
                    captureContext
                } : void 0;
                return callOnHub("captureMessage", message, level, (0, tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({
                    originalException: message,
                    syntheticException
                }, context));
            }
            function captureEvent(event) {
                return callOnHub("captureEvent", event);
            }
            function configureScope(callback) {
                callOnHub("configureScope", callback);
            }
            function addBreadcrumb(breadcrumb) {
                callOnHub("addBreadcrumb", breadcrumb);
            }
            function setContext(name, context) {
                callOnHub("setContext", name, context);
            }
            function setExtras(extras) {
                callOnHub("setExtras", extras);
            }
            function setTags(tags) {
                callOnHub("setTags", tags);
            }
            function setExtra(key, extra) {
                callOnHub("setExtra", key, extra);
            }
            function setTag(key, value) {
                callOnHub("setTag", key, value);
            }
            function setUser(user) {
                callOnHub("setUser", user);
            }
            function withScope(callback) {
                callOnHub("withScope", callback);
            }
            function startTransaction(context, customSamplingContext) {
                return callOnHub("startTransaction", (0, tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, context), customSamplingContext);
            }
        },
        "../shared/browser/node_modules/@sentry/tracing/esm/constants.js": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.d(__webpack_exports__, {
                FINISH_REASON_TAG: () => FINISH_REASON_TAG,
                IDLE_TRANSACTION_FINISH_REASONS: () => IDLE_TRANSACTION_FINISH_REASONS
            });
            var FINISH_REASON_TAG = "finishReason";
            var IDLE_TRANSACTION_FINISH_REASONS = [ "heartbeatFailed", "idleTimeout", "documentHidden" ];
        },
        "../shared/browser/node_modules/@sentry/tracing/esm/flags.js": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.d(__webpack_exports__, {
                IS_DEBUG_BUILD: () => IS_DEBUG_BUILD
            });
            var IS_DEBUG_BUILD = "undefined" === typeof __SENTRY_DEBUG__ ? true : __SENTRY_DEBUG__;
        },
        "../shared/browser/node_modules/@sentry/tracing/esm/hubextensions.js": (module, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.d(__webpack_exports__, {
                addExtensionMethods: () => addExtensionMethods,
                startIdleTransaction: () => startIdleTransaction
            });
            var tslib_es6 = __webpack_require__("../shared/browser/node_modules/tslib/tslib.es6.js");
            var hub = __webpack_require__("../shared/browser/node_modules/@sentry/hub/esm/hub.js");
            var logger = __webpack_require__("../shared/browser/node_modules/@sentry/utils/esm/logger.js");
            var is = __webpack_require__("../shared/browser/node_modules/@sentry/utils/esm/is.js");
            var node = __webpack_require__("../shared/browser/node_modules/@sentry/utils/esm/node.js");
            var instrument = __webpack_require__("../shared/browser/node_modules/@sentry/utils/esm/instrument.js");
            var flags = __webpack_require__("../shared/browser/node_modules/@sentry/tracing/esm/flags.js");
            var utils = __webpack_require__("../shared/browser/node_modules/@sentry/tracing/esm/utils.js");
            function registerErrorInstrumentation() {
                (0, instrument.addInstrumentationHandler)("error", errorCallback);
                (0, instrument.addInstrumentationHandler)("unhandledrejection", errorCallback);
            }
            function errorCallback() {
                var activeTransaction = (0, utils.getActiveTransaction)();
                if (activeTransaction) {
                    var status_1 = "internal_error";
                    flags.IS_DEBUG_BUILD && logger.logger.log("[Tracing] Transaction: " + status_1 + " -> Global error occured");
                    activeTransaction.setStatus(status_1);
                }
            }
            var idletransaction = __webpack_require__("../shared/browser/node_modules/@sentry/tracing/esm/idletransaction.js");
            var esm_transaction = __webpack_require__("../shared/browser/node_modules/@sentry/tracing/esm/transaction.js");
            module = __webpack_require__.hmd(module);
            function traceHeaders() {
                var scope = this.getScope();
                if (scope) {
                    var span = scope.getSpan();
                    if (span) return {
                        "sentry-trace": span.toTraceparent()
                    };
                }
                return {};
            }
            function sample(transaction, options, samplingContext) {
                if (!(0, utils.hasTracingEnabled)(options)) {
                    transaction.sampled = false;
                    return transaction;
                }
                if (void 0 !== transaction.sampled) {
                    transaction.setMetadata({
                        transactionSampling: {
                            method: "explicitly_set"
                        }
                    });
                    return transaction;
                }
                var sampleRate;
                if ("function" === typeof options.tracesSampler) {
                    sampleRate = options.tracesSampler(samplingContext);
                    transaction.setMetadata({
                        transactionSampling: {
                            method: "client_sampler",
                            rate: Number(sampleRate)
                        }
                    });
                } else if (void 0 !== samplingContext.parentSampled) {
                    sampleRate = samplingContext.parentSampled;
                    transaction.setMetadata({
                        transactionSampling: {
                            method: "inheritance"
                        }
                    });
                } else {
                    sampleRate = options.tracesSampleRate;
                    transaction.setMetadata({
                        transactionSampling: {
                            method: "client_rate",
                            rate: Number(sampleRate)
                        }
                    });
                }
                if (!isValidSampleRate(sampleRate)) {
                    flags.IS_DEBUG_BUILD && logger.logger.warn("[Tracing] Discarding transaction because of invalid sample rate.");
                    transaction.sampled = false;
                    return transaction;
                }
                if (!sampleRate) {
                    flags.IS_DEBUG_BUILD && logger.logger.log("[Tracing] Discarding transaction because " + ("function" === typeof options.tracesSampler ? "tracesSampler returned 0 or false" : "a negative sampling decision was inherited or tracesSampleRate is set to 0"));
                    transaction.sampled = false;
                    return transaction;
                }
                transaction.sampled = Math.random() < sampleRate;
                if (!transaction.sampled) {
                    flags.IS_DEBUG_BUILD && logger.logger.log("[Tracing] Discarding transaction because it's not included in the random sample (sampling rate = " + Number(sampleRate) + ")");
                    return transaction;
                }
                flags.IS_DEBUG_BUILD && logger.logger.log("[Tracing] starting " + transaction.op + " transaction - " + transaction.name);
                return transaction;
            }
            function isValidSampleRate(rate) {
                if ((0, is.isNaN)(rate) || !("number" === typeof rate || "boolean" === typeof rate)) {
                    flags.IS_DEBUG_BUILD && logger.logger.warn("[Tracing] Given sample rate is invalid. Sample rate must be a boolean or a number between 0 and 1. Got " + JSON.stringify(rate) + " of type " + JSON.stringify(typeof rate) + ".");
                    return false;
                }
                if (rate < 0 || rate > 1) {
                    flags.IS_DEBUG_BUILD && logger.logger.warn("[Tracing] Given sample rate is invalid. Sample rate must be between 0 and 1. Got " + rate + ".");
                    return false;
                }
                return true;
            }
            function _startTransaction(transactionContext, customSamplingContext) {
                var client = this.getClient();
                var options = client && client.getOptions() || {};
                var transaction = new esm_transaction.Transaction(transactionContext, this);
                transaction = sample(transaction, options, (0, tslib_es6.__assign)({
                    parentSampled: transactionContext.parentSampled,
                    transactionContext
                }, customSamplingContext));
                if (transaction.sampled) transaction.initSpanRecorder(options._experiments && options._experiments.maxSpans);
                return transaction;
            }
            function startIdleTransaction(hub, transactionContext, idleTimeout, onScope, customSamplingContext) {
                var client = hub.getClient();
                var options = client && client.getOptions() || {};
                var transaction = new idletransaction.IdleTransaction(transactionContext, hub, idleTimeout, onScope);
                transaction = sample(transaction, options, (0, tslib_es6.__assign)({
                    parentSampled: transactionContext.parentSampled,
                    transactionContext
                }, customSamplingContext));
                if (transaction.sampled) transaction.initSpanRecorder(options._experiments && options._experiments.maxSpans);
                return transaction;
            }
            function _addTracingExtensions() {
                var carrier = (0, hub.getMainCarrier)();
                if (!carrier.__SENTRY__) return;
                carrier.__SENTRY__.extensions = carrier.__SENTRY__.extensions || {};
                if (!carrier.__SENTRY__.extensions.startTransaction) carrier.__SENTRY__.extensions.startTransaction = _startTransaction;
                if (!carrier.__SENTRY__.extensions.traceHeaders) carrier.__SENTRY__.extensions.traceHeaders = traceHeaders;
            }
            function _autoloadDatabaseIntegrations() {
                var carrier = (0, hub.getMainCarrier)();
                if (!carrier.__SENTRY__) return;
                var packageToIntegrationMapping = {
                    mongodb: function() {
                        var integration = (0, node.dynamicRequire)(module, "./integrations/node/mongo");
                        return new integration.Mongo;
                    },
                    mongoose: function() {
                        var integration = (0, node.dynamicRequire)(module, "./integrations/node/mongo");
                        return new integration.Mongo({
                            mongoose: true
                        });
                    },
                    mysql: function() {
                        var integration = (0, node.dynamicRequire)(module, "./integrations/node/mysql");
                        return new integration.Mysql;
                    },
                    pg: function() {
                        var integration = (0, node.dynamicRequire)(module, "./integrations/node/postgres");
                        return new integration.Postgres;
                    }
                };
                var mappedPackages = Object.keys(packageToIntegrationMapping).filter((function(moduleName) {
                    return !!(0, node.loadModule)(moduleName);
                })).map((function(pkg) {
                    try {
                        return packageToIntegrationMapping[pkg]();
                    } catch (e) {
                        return;
                    }
                })).filter((function(p) {
                    return p;
                }));
                if (mappedPackages.length > 0) carrier.__SENTRY__.integrations = (0, tslib_es6.__spread)(carrier.__SENTRY__.integrations || [], mappedPackages);
            }
            function addExtensionMethods() {
                _addTracingExtensions();
                if ((0, node.isNodeEnv)()) _autoloadDatabaseIntegrations();
                registerErrorInstrumentation();
            }
        },
        "../shared/browser/node_modules/@sentry/tracing/esm/idletransaction.js": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.d(__webpack_exports__, {
                DEFAULT_IDLE_TIMEOUT: () => DEFAULT_IDLE_TIMEOUT,
                IdleTransaction: () => IdleTransaction
            });
            var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("../shared/browser/node_modules/tslib/tslib.es6.js");
            var _sentry_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("../shared/browser/node_modules/@sentry/utils/esm/time.js");
            var _sentry_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__("../shared/browser/node_modules/@sentry/utils/esm/logger.js");
            var _constants__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__("../shared/browser/node_modules/@sentry/tracing/esm/constants.js");
            var _flags__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("../shared/browser/node_modules/@sentry/tracing/esm/flags.js");
            var _span__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("../shared/browser/node_modules/@sentry/tracing/esm/span.js");
            var _transaction__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__("../shared/browser/node_modules/@sentry/tracing/esm/transaction.js");
            var DEFAULT_IDLE_TIMEOUT = 1e3;
            var HEARTBEAT_INTERVAL = 5e3;
            var IdleTransactionSpanRecorder = function(_super) {
                (0, tslib__WEBPACK_IMPORTED_MODULE_0__.__extends)(IdleTransactionSpanRecorder, _super);
                function IdleTransactionSpanRecorder(_pushActivity, _popActivity, transactionSpanId, maxlen) {
                    if (void 0 === transactionSpanId) transactionSpanId = "";
                    var _this = _super.call(this, maxlen) || this;
                    _this._pushActivity = _pushActivity;
                    _this._popActivity = _popActivity;
                    _this.transactionSpanId = transactionSpanId;
                    return _this;
                }
                IdleTransactionSpanRecorder.prototype.add = function(span) {
                    var _this = this;
                    if (span.spanId !== this.transactionSpanId) {
                        span.finish = function(endTimestamp) {
                            span.endTimestamp = "number" === typeof endTimestamp ? endTimestamp : (0, _sentry_utils__WEBPACK_IMPORTED_MODULE_1__.timestampWithMs)();
                            _this._popActivity(span.spanId);
                        };
                        if (void 0 === span.endTimestamp) this._pushActivity(span.spanId);
                    }
                    _super.prototype.add.call(this, span);
                };
                return IdleTransactionSpanRecorder;
            }(_span__WEBPACK_IMPORTED_MODULE_2__.SpanRecorder);
            var IdleTransaction = function(_super) {
                (0, tslib__WEBPACK_IMPORTED_MODULE_0__.__extends)(IdleTransaction, _super);
                function IdleTransaction(transactionContext, _idleHub, _idleTimeout, _onScope) {
                    if (void 0 === _idleTimeout) _idleTimeout = DEFAULT_IDLE_TIMEOUT;
                    if (void 0 === _onScope) _onScope = false;
                    var _this = _super.call(this, transactionContext, _idleHub) || this;
                    _this._idleHub = _idleHub;
                    _this._idleTimeout = _idleTimeout;
                    _this._onScope = _onScope;
                    _this.activities = {};
                    _this._heartbeatCounter = 0;
                    _this._finished = false;
                    _this._beforeFinishCallbacks = [];
                    if (_idleHub && _onScope) {
                        clearActiveTransaction(_idleHub);
                        _flags__WEBPACK_IMPORTED_MODULE_3__.IS_DEBUG_BUILD && _sentry_utils__WEBPACK_IMPORTED_MODULE_4__.logger.log("Setting idle transaction on scope. Span ID: " + _this.spanId);
                        _idleHub.configureScope((function(scope) {
                            return scope.setSpan(_this);
                        }));
                    }
                    _this._initTimeout = setTimeout((function() {
                        if (!_this._finished) _this.finish();
                    }), _this._idleTimeout);
                    return _this;
                }
                IdleTransaction.prototype.finish = function(endTimestamp) {
                    var e_1, _a;
                    var _this = this;
                    if (void 0 === endTimestamp) endTimestamp = (0, _sentry_utils__WEBPACK_IMPORTED_MODULE_1__.timestampWithMs)();
                    this._finished = true;
                    this.activities = {};
                    if (this.spanRecorder) {
                        _flags__WEBPACK_IMPORTED_MODULE_3__.IS_DEBUG_BUILD && _sentry_utils__WEBPACK_IMPORTED_MODULE_4__.logger.log("[Tracing] finishing IdleTransaction", new Date(1e3 * endTimestamp).toISOString(), this.op);
                        try {
                            for (var _b = (0, tslib__WEBPACK_IMPORTED_MODULE_0__.__values)(this._beforeFinishCallbacks), _c = _b.next(); !_c.done; _c = _b.next()) {
                                var callback = _c.value;
                                callback(this, endTimestamp);
                            }
                        } catch (e_1_1) {
                            e_1 = {
                                error: e_1_1
                            };
                        } finally {
                            try {
                                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                            } finally {
                                if (e_1) throw e_1.error;
                            }
                        }
                        this.spanRecorder.spans = this.spanRecorder.spans.filter((function(span) {
                            if (span.spanId === _this.spanId) return true;
                            if (!span.endTimestamp) {
                                span.endTimestamp = endTimestamp;
                                span.setStatus("cancelled");
                                _flags__WEBPACK_IMPORTED_MODULE_3__.IS_DEBUG_BUILD && _sentry_utils__WEBPACK_IMPORTED_MODULE_4__.logger.log("[Tracing] cancelling span since transaction ended early", JSON.stringify(span, void 0, 2));
                            }
                            var keepSpan = span.startTimestamp < endTimestamp;
                            if (!keepSpan) _flags__WEBPACK_IMPORTED_MODULE_3__.IS_DEBUG_BUILD && _sentry_utils__WEBPACK_IMPORTED_MODULE_4__.logger.log("[Tracing] discarding Span since it happened after Transaction was finished", JSON.stringify(span, void 0, 2));
                            return keepSpan;
                        }));
                        _flags__WEBPACK_IMPORTED_MODULE_3__.IS_DEBUG_BUILD && _sentry_utils__WEBPACK_IMPORTED_MODULE_4__.logger.log("[Tracing] flushing IdleTransaction");
                    } else _flags__WEBPACK_IMPORTED_MODULE_3__.IS_DEBUG_BUILD && _sentry_utils__WEBPACK_IMPORTED_MODULE_4__.logger.log("[Tracing] No active IdleTransaction");
                    if (this._onScope) clearActiveTransaction(this._idleHub);
                    return _super.prototype.finish.call(this, endTimestamp);
                };
                IdleTransaction.prototype.registerBeforeFinishCallback = function(callback) {
                    this._beforeFinishCallbacks.push(callback);
                };
                IdleTransaction.prototype.initSpanRecorder = function(maxlen) {
                    var _this = this;
                    if (!this.spanRecorder) {
                        var pushActivity = function(id) {
                            if (_this._finished) return;
                            _this._pushActivity(id);
                        };
                        var popActivity = function(id) {
                            if (_this._finished) return;
                            _this._popActivity(id);
                        };
                        this.spanRecorder = new IdleTransactionSpanRecorder(pushActivity, popActivity, this.spanId, maxlen);
                        _flags__WEBPACK_IMPORTED_MODULE_3__.IS_DEBUG_BUILD && _sentry_utils__WEBPACK_IMPORTED_MODULE_4__.logger.log("Starting heartbeat");
                        this._pingHeartbeat();
                    }
                    this.spanRecorder.add(this);
                };
                IdleTransaction.prototype._pushActivity = function(spanId) {
                    if (this._initTimeout) {
                        clearTimeout(this._initTimeout);
                        this._initTimeout = void 0;
                    }
                    _flags__WEBPACK_IMPORTED_MODULE_3__.IS_DEBUG_BUILD && _sentry_utils__WEBPACK_IMPORTED_MODULE_4__.logger.log("[Tracing] pushActivity: " + spanId);
                    this.activities[spanId] = true;
                    _flags__WEBPACK_IMPORTED_MODULE_3__.IS_DEBUG_BUILD && _sentry_utils__WEBPACK_IMPORTED_MODULE_4__.logger.log("[Tracing] new activities count", Object.keys(this.activities).length);
                };
                IdleTransaction.prototype._popActivity = function(spanId) {
                    var _this = this;
                    if (this.activities[spanId]) {
                        _flags__WEBPACK_IMPORTED_MODULE_3__.IS_DEBUG_BUILD && _sentry_utils__WEBPACK_IMPORTED_MODULE_4__.logger.log("[Tracing] popActivity " + spanId);
                        delete this.activities[spanId];
                        _flags__WEBPACK_IMPORTED_MODULE_3__.IS_DEBUG_BUILD && _sentry_utils__WEBPACK_IMPORTED_MODULE_4__.logger.log("[Tracing] new activities count", Object.keys(this.activities).length);
                    }
                    if (0 === Object.keys(this.activities).length) {
                        var timeout = this._idleTimeout;
                        var end_1 = (0, _sentry_utils__WEBPACK_IMPORTED_MODULE_1__.timestampWithMs)() + timeout / 1e3;
                        setTimeout((function() {
                            if (!_this._finished) {
                                _this.setTag(_constants__WEBPACK_IMPORTED_MODULE_5__.FINISH_REASON_TAG, _constants__WEBPACK_IMPORTED_MODULE_5__.IDLE_TRANSACTION_FINISH_REASONS[1]);
                                _this.finish(end_1);
                            }
                        }), timeout);
                    }
                };
                IdleTransaction.prototype._beat = function() {
                    if (this._finished) return;
                    var heartbeatString = Object.keys(this.activities).join("");
                    if (heartbeatString === this._prevHeartbeatString) this._heartbeatCounter += 1; else this._heartbeatCounter = 1;
                    this._prevHeartbeatString = heartbeatString;
                    if (this._heartbeatCounter >= 3) {
                        _flags__WEBPACK_IMPORTED_MODULE_3__.IS_DEBUG_BUILD && _sentry_utils__WEBPACK_IMPORTED_MODULE_4__.logger.log("[Tracing] Transaction finished because of no change for 3 heart beats");
                        this.setStatus("deadline_exceeded");
                        this.setTag(_constants__WEBPACK_IMPORTED_MODULE_5__.FINISH_REASON_TAG, _constants__WEBPACK_IMPORTED_MODULE_5__.IDLE_TRANSACTION_FINISH_REASONS[0]);
                        this.finish();
                    } else this._pingHeartbeat();
                };
                IdleTransaction.prototype._pingHeartbeat = function() {
                    var _this = this;
                    _flags__WEBPACK_IMPORTED_MODULE_3__.IS_DEBUG_BUILD && _sentry_utils__WEBPACK_IMPORTED_MODULE_4__.logger.log("pinging Heartbeat -> current counter: " + this._heartbeatCounter);
                    setTimeout((function() {
                        _this._beat();
                    }), HEARTBEAT_INTERVAL);
                };
                return IdleTransaction;
            }(_transaction__WEBPACK_IMPORTED_MODULE_6__.Transaction);
            function clearActiveTransaction(hub) {
                if (hub) {
                    var scope = hub.getScope();
                    if (scope) {
                        var transaction = scope.getTransaction();
                        if (transaction) scope.setSpan(void 0);
                    }
                }
            }
        },
        "../shared/browser/node_modules/@sentry/tracing/esm/span.js": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.d(__webpack_exports__, {
                SpanRecorder: () => SpanRecorder,
                Span: () => Span
            });
            var tslib__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("../shared/browser/node_modules/tslib/tslib.es6.js");
            var _sentry_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("../shared/browser/node_modules/@sentry/utils/esm/misc.js");
            var _sentry_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("../shared/browser/node_modules/@sentry/utils/esm/time.js");
            var _sentry_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("../shared/browser/node_modules/@sentry/utils/esm/object.js");
            var SpanRecorder = function() {
                function SpanRecorder(maxlen) {
                    if (void 0 === maxlen) maxlen = 1e3;
                    this.spans = [];
                    this._maxlen = maxlen;
                }
                SpanRecorder.prototype.add = function(span) {
                    if (this.spans.length > this._maxlen) span.spanRecorder = void 0; else this.spans.push(span);
                };
                return SpanRecorder;
            }();
            var Span = function() {
                function Span(spanContext) {
                    this.traceId = (0, _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.uuid4)();
                    this.spanId = (0, _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.uuid4)().substring(16);
                    this.startTimestamp = (0, _sentry_utils__WEBPACK_IMPORTED_MODULE_1__.timestampWithMs)();
                    this.tags = {};
                    this.data = {};
                    if (!spanContext) return this;
                    if (spanContext.traceId) this.traceId = spanContext.traceId;
                    if (spanContext.spanId) this.spanId = spanContext.spanId;
                    if (spanContext.parentSpanId) this.parentSpanId = spanContext.parentSpanId;
                    if ("sampled" in spanContext) this.sampled = spanContext.sampled;
                    if (spanContext.op) this.op = spanContext.op;
                    if (spanContext.description) this.description = spanContext.description;
                    if (spanContext.data) this.data = spanContext.data;
                    if (spanContext.tags) this.tags = spanContext.tags;
                    if (spanContext.status) this.status = spanContext.status;
                    if (spanContext.startTimestamp) this.startTimestamp = spanContext.startTimestamp;
                    if (spanContext.endTimestamp) this.endTimestamp = spanContext.endTimestamp;
                }
                Span.prototype.child = function(spanContext) {
                    return this.startChild(spanContext);
                };
                Span.prototype.startChild = function(spanContext) {
                    var childSpan = new Span((0, tslib__WEBPACK_IMPORTED_MODULE_2__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_2__.__assign)({}, spanContext), {
                        parentSpanId: this.spanId,
                        sampled: this.sampled,
                        traceId: this.traceId
                    }));
                    childSpan.spanRecorder = this.spanRecorder;
                    if (childSpan.spanRecorder) childSpan.spanRecorder.add(childSpan);
                    childSpan.transaction = this.transaction;
                    return childSpan;
                };
                Span.prototype.setTag = function(key, value) {
                    var _a;
                    this.tags = (0, tslib__WEBPACK_IMPORTED_MODULE_2__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_2__.__assign)({}, this.tags), (_a = {}, 
                    _a[key] = value, _a));
                    return this;
                };
                Span.prototype.setData = function(key, value) {
                    var _a;
                    this.data = (0, tslib__WEBPACK_IMPORTED_MODULE_2__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_2__.__assign)({}, this.data), (_a = {}, 
                    _a[key] = value, _a));
                    return this;
                };
                Span.prototype.setStatus = function(value) {
                    this.status = value;
                    return this;
                };
                Span.prototype.setHttpStatus = function(httpStatus) {
                    this.setTag("http.status_code", String(httpStatus));
                    var spanStatus = spanStatusfromHttpCode(httpStatus);
                    if ("unknown_error" !== spanStatus) this.setStatus(spanStatus);
                    return this;
                };
                Span.prototype.isSuccess = function() {
                    return "ok" === this.status;
                };
                Span.prototype.finish = function(endTimestamp) {
                    this.endTimestamp = "number" === typeof endTimestamp ? endTimestamp : (0, _sentry_utils__WEBPACK_IMPORTED_MODULE_1__.timestampWithMs)();
                };
                Span.prototype.toTraceparent = function() {
                    var sampledString = "";
                    if (void 0 !== this.sampled) sampledString = this.sampled ? "-1" : "-0";
                    return this.traceId + "-" + this.spanId + sampledString;
                };
                Span.prototype.toContext = function() {
                    return (0, _sentry_utils__WEBPACK_IMPORTED_MODULE_3__.dropUndefinedKeys)({
                        data: this.data,
                        description: this.description,
                        endTimestamp: this.endTimestamp,
                        op: this.op,
                        parentSpanId: this.parentSpanId,
                        sampled: this.sampled,
                        spanId: this.spanId,
                        startTimestamp: this.startTimestamp,
                        status: this.status,
                        tags: this.tags,
                        traceId: this.traceId
                    });
                };
                Span.prototype.updateWithContext = function(spanContext) {
                    var _a, _b, _c, _d, _e;
                    this.data = (_a = spanContext.data, null !== _a && void 0 !== _a ? _a : {});
                    this.description = spanContext.description;
                    this.endTimestamp = spanContext.endTimestamp;
                    this.op = spanContext.op;
                    this.parentSpanId = spanContext.parentSpanId;
                    this.sampled = spanContext.sampled;
                    this.spanId = (_b = spanContext.spanId, null !== _b && void 0 !== _b ? _b : this.spanId);
                    this.startTimestamp = (_c = spanContext.startTimestamp, null !== _c && void 0 !== _c ? _c : this.startTimestamp);
                    this.status = spanContext.status;
                    this.tags = (_d = spanContext.tags, null !== _d && void 0 !== _d ? _d : {});
                    this.traceId = (_e = spanContext.traceId, null !== _e && void 0 !== _e ? _e : this.traceId);
                    return this;
                };
                Span.prototype.getTraceContext = function() {
                    return (0, _sentry_utils__WEBPACK_IMPORTED_MODULE_3__.dropUndefinedKeys)({
                        data: Object.keys(this.data).length > 0 ? this.data : void 0,
                        description: this.description,
                        op: this.op,
                        parent_span_id: this.parentSpanId,
                        span_id: this.spanId,
                        status: this.status,
                        tags: Object.keys(this.tags).length > 0 ? this.tags : void 0,
                        trace_id: this.traceId
                    });
                };
                Span.prototype.toJSON = function() {
                    return (0, _sentry_utils__WEBPACK_IMPORTED_MODULE_3__.dropUndefinedKeys)({
                        data: Object.keys(this.data).length > 0 ? this.data : void 0,
                        description: this.description,
                        op: this.op,
                        parent_span_id: this.parentSpanId,
                        span_id: this.spanId,
                        start_timestamp: this.startTimestamp,
                        status: this.status,
                        tags: Object.keys(this.tags).length > 0 ? this.tags : void 0,
                        timestamp: this.endTimestamp,
                        trace_id: this.traceId
                    });
                };
                return Span;
            }();
            function spanStatusfromHttpCode(httpStatus) {
                if (httpStatus < 400 && httpStatus >= 100) return "ok";
                if (httpStatus >= 400 && httpStatus < 500) switch (httpStatus) {
                  case 401:
                    return "unauthenticated";

                  case 403:
                    return "permission_denied";

                  case 404:
                    return "not_found";

                  case 409:
                    return "already_exists";

                  case 413:
                    return "failed_precondition";

                  case 429:
                    return "resource_exhausted";

                  default:
                    return "invalid_argument";
                }
                if (httpStatus >= 500 && httpStatus < 600) switch (httpStatus) {
                  case 501:
                    return "unimplemented";

                  case 503:
                    return "unavailable";

                  case 504:
                    return "deadline_exceeded";

                  default:
                    return "internal_error";
                }
                return "unknown_error";
            }
        },
        "../shared/browser/node_modules/@sentry/tracing/esm/transaction.js": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.d(__webpack_exports__, {
                Transaction: () => Transaction
            });
            var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("../shared/browser/node_modules/tslib/tslib.es6.js");
            var _sentry_hub__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("../shared/browser/node_modules/@sentry/hub/esm/hub.js");
            var _sentry_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("../shared/browser/node_modules/@sentry/utils/esm/is.js");
            var _sentry_utils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__("../shared/browser/node_modules/@sentry/utils/esm/logger.js");
            var _sentry_utils__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__("../shared/browser/node_modules/@sentry/utils/esm/object.js");
            var _flags__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__("../shared/browser/node_modules/@sentry/tracing/esm/flags.js");
            var _span__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("../shared/browser/node_modules/@sentry/tracing/esm/span.js");
            var Transaction = function(_super) {
                (0, tslib__WEBPACK_IMPORTED_MODULE_0__.__extends)(Transaction, _super);
                function Transaction(transactionContext, hub) {
                    var _this = _super.call(this, transactionContext) || this;
                    _this._measurements = {};
                    _this._hub = (0, _sentry_hub__WEBPACK_IMPORTED_MODULE_1__.getCurrentHub)();
                    if ((0, _sentry_utils__WEBPACK_IMPORTED_MODULE_2__.isInstanceOf)(hub, _sentry_hub__WEBPACK_IMPORTED_MODULE_1__.Hub)) _this._hub = hub;
                    _this.name = transactionContext.name || "";
                    _this.metadata = transactionContext.metadata || {};
                    _this._trimEnd = transactionContext.trimEnd;
                    _this.transaction = _this;
                    return _this;
                }
                Transaction.prototype.setName = function(name) {
                    this.name = name;
                };
                Transaction.prototype.initSpanRecorder = function(maxlen) {
                    if (void 0 === maxlen) maxlen = 1e3;
                    if (!this.spanRecorder) this.spanRecorder = new _span__WEBPACK_IMPORTED_MODULE_3__.SpanRecorder(maxlen);
                    this.spanRecorder.add(this);
                };
                Transaction.prototype.setMeasurements = function(measurements) {
                    this._measurements = (0, tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)({}, measurements);
                };
                Transaction.prototype.setMetadata = function(newMetadata) {
                    this.metadata = (0, tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)({}, this.metadata), newMetadata);
                };
                Transaction.prototype.finish = function(endTimestamp) {
                    var _this = this;
                    if (void 0 !== this.endTimestamp) return;
                    if (!this.name) {
                        _flags__WEBPACK_IMPORTED_MODULE_4__.IS_DEBUG_BUILD && _sentry_utils__WEBPACK_IMPORTED_MODULE_5__.logger.warn("Transaction has no name, falling back to `<unlabeled transaction>`.");
                        this.name = "<unlabeled transaction>";
                    }
                    _super.prototype.finish.call(this, endTimestamp);
                    if (true !== this.sampled) {
                        _flags__WEBPACK_IMPORTED_MODULE_4__.IS_DEBUG_BUILD && _sentry_utils__WEBPACK_IMPORTED_MODULE_5__.logger.log("[Tracing] Discarding transaction because its trace was not chosen to be sampled.");
                        var client = this._hub.getClient();
                        var transport = client && client.getTransport && client.getTransport();
                        if (transport && transport.recordLostEvent) transport.recordLostEvent("sample_rate", "transaction");
                        return;
                    }
                    var finishedSpans = this.spanRecorder ? this.spanRecorder.spans.filter((function(s) {
                        return s !== _this && s.endTimestamp;
                    })) : [];
                    if (this._trimEnd && finishedSpans.length > 0) this.endTimestamp = finishedSpans.reduce((function(prev, current) {
                        if (prev.endTimestamp && current.endTimestamp) return prev.endTimestamp > current.endTimestamp ? prev : current;
                        return prev;
                    })).endTimestamp;
                    var transaction = {
                        contexts: {
                            trace: this.getTraceContext()
                        },
                        spans: finishedSpans,
                        start_timestamp: this.startTimestamp,
                        tags: this.tags,
                        timestamp: this.endTimestamp,
                        transaction: this.name,
                        type: "transaction",
                        sdkProcessingMetadata: this.metadata
                    };
                    var hasMeasurements = Object.keys(this._measurements).length > 0;
                    if (hasMeasurements) {
                        _flags__WEBPACK_IMPORTED_MODULE_4__.IS_DEBUG_BUILD && _sentry_utils__WEBPACK_IMPORTED_MODULE_5__.logger.log("[Measurements] Adding measurements to transaction", JSON.stringify(this._measurements, void 0, 2));
                        transaction.measurements = this._measurements;
                    }
                    _flags__WEBPACK_IMPORTED_MODULE_4__.IS_DEBUG_BUILD && _sentry_utils__WEBPACK_IMPORTED_MODULE_5__.logger.log("[Tracing] Finishing " + this.op + " transaction: " + this.name + ".");
                    return this._hub.captureEvent(transaction);
                };
                Transaction.prototype.toContext = function() {
                    var spanContext = _super.prototype.toContext.call(this);
                    return (0, _sentry_utils__WEBPACK_IMPORTED_MODULE_6__.dropUndefinedKeys)((0, tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)((0, 
                    tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)({}, spanContext), {
                        name: this.name,
                        trimEnd: this._trimEnd
                    }));
                };
                Transaction.prototype.updateWithContext = function(transactionContext) {
                    var _a;
                    _super.prototype.updateWithContext.call(this, transactionContext);
                    this.name = (_a = transactionContext.name, null !== _a && void 0 !== _a ? _a : "");
                    this._trimEnd = transactionContext.trimEnd;
                    return this;
                };
                return Transaction;
            }(_span__WEBPACK_IMPORTED_MODULE_3__.Span);
        },
        "../shared/browser/node_modules/@sentry/tracing/esm/utils.js": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.d(__webpack_exports__, {
                hasTracingEnabled: () => hasTracingEnabled,
                getActiveTransaction: () => getActiveTransaction,
                msToSec: () => msToSec,
                secToMs: () => secToMs
            });
            var _sentry_hub__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("../shared/browser/node_modules/@sentry/hub/esm/hub.js");
            function hasTracingEnabled(maybeOptions) {
                var client = (0, _sentry_hub__WEBPACK_IMPORTED_MODULE_0__.getCurrentHub)().getClient();
                var options = maybeOptions || client && client.getOptions();
                return !!options && ("tracesSampleRate" in options || "tracesSampler" in options);
            }
            function getActiveTransaction(maybeHub) {
                var hub = maybeHub || (0, _sentry_hub__WEBPACK_IMPORTED_MODULE_0__.getCurrentHub)();
                var scope = hub.getScope();
                return scope && scope.getTransaction();
            }
            function msToSec(time) {
                return time / 1e3;
            }
            function secToMs(time) {
                return 1e3 * time;
            }
        },
        "../shared/browser/node_modules/@sentry/types/esm/severity.js": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.d(__webpack_exports__, {
                Severity: () => Severity
            });
            var Severity;
            (function(Severity) {
                Severity["Fatal"] = "fatal";
                Severity["Error"] = "error";
                Severity["Warning"] = "warning";
                Severity["Log"] = "log";
                Severity["Info"] = "info";
                Severity["Debug"] = "debug";
                Severity["Critical"] = "critical";
            })(Severity || (Severity = {}));
        },
        "../shared/browser/node_modules/@sentry/utils/esm/browser.js": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.d(__webpack_exports__, {
                htmlTreeAsString: () => htmlTreeAsString,
                getLocationHref: () => getLocationHref
            });
            var _global__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("../shared/browser/node_modules/@sentry/utils/esm/global.js");
            var _is__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("../shared/browser/node_modules/@sentry/utils/esm/is.js");
            function htmlTreeAsString(elem, keyAttrs) {
                try {
                    var currentElem = elem;
                    var MAX_TRAVERSE_HEIGHT = 5;
                    var MAX_OUTPUT_LEN = 80;
                    var out = [];
                    var height = 0;
                    var len = 0;
                    var separator = " > ";
                    var sepLength = separator.length;
                    var nextStr = void 0;
                    while (currentElem && height++ < MAX_TRAVERSE_HEIGHT) {
                        nextStr = _htmlElementAsString(currentElem, keyAttrs);
                        if ("html" === nextStr || height > 1 && len + out.length * sepLength + nextStr.length >= MAX_OUTPUT_LEN) break;
                        out.push(nextStr);
                        len += nextStr.length;
                        currentElem = currentElem.parentNode;
                    }
                    return out.reverse().join(separator);
                } catch (_oO) {
                    return "<unknown>";
                }
            }
            function _htmlElementAsString(el, keyAttrs) {
                var elem = el;
                var out = [];
                var className;
                var classes;
                var key;
                var attr;
                var i;
                if (!elem || !elem.tagName) return "";
                out.push(elem.tagName.toLowerCase());
                var keyAttrPairs = keyAttrs && keyAttrs.length ? keyAttrs.filter((function(keyAttr) {
                    return elem.getAttribute(keyAttr);
                })).map((function(keyAttr) {
                    return [ keyAttr, elem.getAttribute(keyAttr) ];
                })) : null;
                if (keyAttrPairs && keyAttrPairs.length) keyAttrPairs.forEach((function(keyAttrPair) {
                    out.push("[" + keyAttrPair[0] + '="' + keyAttrPair[1] + '"]');
                })); else {
                    if (elem.id) out.push("#" + elem.id);
                    className = elem.className;
                    if (className && (0, _is__WEBPACK_IMPORTED_MODULE_0__.isString)(className)) {
                        classes = className.split(/\s+/);
                        for (i = 0; i < classes.length; i++) out.push("." + classes[i]);
                    }
                }
                var allowedAttrs = [ "type", "name", "title", "alt" ];
                for (i = 0; i < allowedAttrs.length; i++) {
                    key = allowedAttrs[i];
                    attr = elem.getAttribute(key);
                    if (attr) out.push("[" + key + '="' + attr + '"]');
                }
                return out.join("");
            }
            function getLocationHref() {
                var global = (0, _global__WEBPACK_IMPORTED_MODULE_1__.getGlobalObject)();
                try {
                    return global.document.location.href;
                } catch (oO) {
                    return "";
                }
            }
        },
        "../shared/browser/node_modules/@sentry/utils/esm/dsn.js": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.d(__webpack_exports__, {
                dsnToString: () => dsnToString,
                makeDsn: () => makeDsn
            });
            var tslib__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("../shared/browser/node_modules/tslib/tslib.es6.js");
            var _error__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("../shared/browser/node_modules/@sentry/utils/esm/error.js");
            var _flags__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("../shared/browser/node_modules/@sentry/utils/esm/flags.js");
            var DSN_REGEX = /^(?:(\w+):)\/\/(?:(\w+)(?::(\w+))?@)([\w.-]+)(?::(\d+))?\/(.+)/;
            function isValidProtocol(protocol) {
                return "http" === protocol || "https" === protocol;
            }
            function dsnToString(dsn, withPassword) {
                if (void 0 === withPassword) withPassword = false;
                var host = dsn.host, path = dsn.path, pass = dsn.pass, port = dsn.port, projectId = dsn.projectId, protocol = dsn.protocol, publicKey = dsn.publicKey;
                return protocol + "://" + publicKey + (withPassword && pass ? ":" + pass : "") + "@" + host + (port ? ":" + port : "") + "/" + (path ? path + "/" : path) + projectId;
            }
            function dsnFromString(str) {
                var match = DSN_REGEX.exec(str);
                if (!match) throw new _error__WEBPACK_IMPORTED_MODULE_0__.SentryError("Invalid Sentry Dsn: " + str);
                var _a = (0, tslib__WEBPACK_IMPORTED_MODULE_1__.__read)(match.slice(1), 6), protocol = _a[0], publicKey = _a[1], _b = _a[2], pass = void 0 === _b ? "" : _b, host = _a[3], _c = _a[4], port = void 0 === _c ? "" : _c, lastPath = _a[5];
                var path = "";
                var projectId = lastPath;
                var split = projectId.split("/");
                if (split.length > 1) {
                    path = split.slice(0, -1).join("/");
                    projectId = split.pop();
                }
                if (projectId) {
                    var projectMatch = projectId.match(/^\d+/);
                    if (projectMatch) projectId = projectMatch[0];
                }
                return dsnFromComponents({
                    host,
                    pass,
                    path,
                    projectId,
                    port,
                    protocol,
                    publicKey
                });
            }
            function dsnFromComponents(components) {
                if ("user" in components && !("publicKey" in components)) components.publicKey = components.user;
                return {
                    user: components.publicKey || "",
                    protocol: components.protocol,
                    publicKey: components.publicKey || "",
                    pass: components.pass || "",
                    host: components.host,
                    port: components.port || "",
                    path: components.path || "",
                    projectId: components.projectId
                };
            }
            function validateDsn(dsn) {
                if (!_flags__WEBPACK_IMPORTED_MODULE_2__.IS_DEBUG_BUILD) return;
                var port = dsn.port, projectId = dsn.projectId, protocol = dsn.protocol;
                var requiredComponents = [ "protocol", "publicKey", "host", "projectId" ];
                requiredComponents.forEach((function(component) {
                    if (!dsn[component]) throw new _error__WEBPACK_IMPORTED_MODULE_0__.SentryError("Invalid Sentry Dsn: " + component + " missing");
                }));
                if (!projectId.match(/^\d+$/)) throw new _error__WEBPACK_IMPORTED_MODULE_0__.SentryError("Invalid Sentry Dsn: Invalid projectId " + projectId);
                if (!isValidProtocol(protocol)) throw new _error__WEBPACK_IMPORTED_MODULE_0__.SentryError("Invalid Sentry Dsn: Invalid protocol " + protocol);
                if (port && isNaN(parseInt(port, 10))) throw new _error__WEBPACK_IMPORTED_MODULE_0__.SentryError("Invalid Sentry Dsn: Invalid port " + port);
                return true;
            }
            function makeDsn(from) {
                var components = "string" === typeof from ? dsnFromString(from) : dsnFromComponents(from);
                validateDsn(components);
                return components;
            }
        },
        "../shared/browser/node_modules/@sentry/utils/esm/envelope.js": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.d(__webpack_exports__, {
                createEnvelope: () => createEnvelope,
                getEnvelopeType: () => getEnvelopeType,
                serializeEnvelope: () => serializeEnvelope
            });
            var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("../shared/browser/node_modules/tslib/tslib.es6.js");
            var _is__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("../shared/browser/node_modules/@sentry/utils/esm/is.js");
            function createEnvelope(headers, items) {
                if (void 0 === items) items = [];
                return [ headers, items ];
            }
            function getEnvelopeType(envelope) {
                var _a = (0, tslib__WEBPACK_IMPORTED_MODULE_0__.__read)(envelope, 2), _b = (0, tslib__WEBPACK_IMPORTED_MODULE_0__.__read)(_a[1], 1), _c = (0, 
                tslib__WEBPACK_IMPORTED_MODULE_0__.__read)(_b[0], 1), firstItemHeader = _c[0];
                return firstItemHeader.type;
            }
            function serializeEnvelope(envelope) {
                var _a = (0, tslib__WEBPACK_IMPORTED_MODULE_0__.__read)(envelope, 2), headers = _a[0], items = _a[1];
                var serializedHeaders = JSON.stringify(headers);
                return items.reduce((function(acc, item) {
                    var _a = (0, tslib__WEBPACK_IMPORTED_MODULE_0__.__read)(item, 2), itemHeaders = _a[0], payload = _a[1];
                    var serializedPayload = (0, _is__WEBPACK_IMPORTED_MODULE_1__.isPrimitive)(payload) ? String(payload) : JSON.stringify(payload);
                    return acc + "\n" + JSON.stringify(itemHeaders) + "\n" + serializedPayload;
                }), serializedHeaders);
            }
        },
        "../shared/browser/node_modules/@sentry/utils/esm/error.js": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.d(__webpack_exports__, {
                SentryError: () => SentryError
            });
            var tslib_es6 = __webpack_require__("../shared/browser/node_modules/tslib/tslib.es6.js");
            var setPrototypeOf = Object.setPrototypeOf || ({
                __proto__: []
            } instanceof Array ? setProtoOf : mixinProperties);
            function setProtoOf(obj, proto) {
                obj.__proto__ = proto;
                return obj;
            }
            function mixinProperties(obj, proto) {
                for (var prop in proto) if (!Object.prototype.hasOwnProperty.call(obj, prop)) obj[prop] = proto[prop];
                return obj;
            }
            var SentryError = function(_super) {
                (0, tslib_es6.__extends)(SentryError, _super);
                function SentryError(message) {
                    var _newTarget = this.constructor;
                    var _this = _super.call(this, message) || this;
                    _this.message = message;
                    _this.name = _newTarget.prototype.constructor.name;
                    setPrototypeOf(_this, _newTarget.prototype);
                    return _this;
                }
                return SentryError;
            }(Error);
        },
        "../shared/browser/node_modules/@sentry/utils/esm/flags.js": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.d(__webpack_exports__, {
                IS_DEBUG_BUILD: () => IS_DEBUG_BUILD
            });
            var IS_DEBUG_BUILD = "undefined" === typeof __SENTRY_DEBUG__ ? true : __SENTRY_DEBUG__;
        },
        "../shared/browser/node_modules/@sentry/utils/esm/global.js": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.d(__webpack_exports__, {
                getGlobalObject: () => getGlobalObject,
                getGlobalSingleton: () => getGlobalSingleton
            });
            var _node__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("../shared/browser/node_modules/@sentry/utils/esm/node.js");
            var fallbackGlobalObject = {};
            function getGlobalObject() {
                return (0, _node__WEBPACK_IMPORTED_MODULE_0__.isNodeEnv)() ? __webpack_require__.g : "undefined" !== typeof window ? window : "undefined" !== typeof self ? self : fallbackGlobalObject;
            }
            function getGlobalSingleton(name, creator, obj) {
                var global = obj || getGlobalObject();
                var __SENTRY__ = global.__SENTRY__ = global.__SENTRY__ || {};
                var singleton = __SENTRY__[name] || (__SENTRY__[name] = creator());
                return singleton;
            }
        },
        "../shared/browser/node_modules/@sentry/utils/esm/instrument.js": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.d(__webpack_exports__, {
                addInstrumentationHandler: () => addInstrumentationHandler
            });
            var tslib__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("../shared/browser/node_modules/tslib/tslib.es6.js");
            var _flags__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("../shared/browser/node_modules/@sentry/utils/esm/flags.js");
            var _global__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("../shared/browser/node_modules/@sentry/utils/esm/global.js");
            var _is__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__("../shared/browser/node_modules/@sentry/utils/esm/is.js");
            var _logger__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("../shared/browser/node_modules/@sentry/utils/esm/logger.js");
            var _object__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__("../shared/browser/node_modules/@sentry/utils/esm/object.js");
            var _stacktrace__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__("../shared/browser/node_modules/@sentry/utils/esm/stacktrace.js");
            var _supports__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__("../shared/browser/node_modules/@sentry/utils/esm/supports.js");
            var global = (0, _global__WEBPACK_IMPORTED_MODULE_0__.getGlobalObject)();
            var handlers = {};
            var instrumented = {};
            function instrument(type) {
                if (instrumented[type]) return;
                instrumented[type] = true;
                switch (type) {
                  case "console":
                    instrumentConsole();
                    break;

                  case "dom":
                    instrumentDOM();
                    break;

                  case "xhr":
                    instrumentXHR();
                    break;

                  case "fetch":
                    instrumentFetch();
                    break;

                  case "history":
                    instrumentHistory();
                    break;

                  case "error":
                    instrumentError();
                    break;

                  case "unhandledrejection":
                    instrumentUnhandledRejection();
                    break;

                  default:
                    _flags__WEBPACK_IMPORTED_MODULE_1__.IS_DEBUG_BUILD && _logger__WEBPACK_IMPORTED_MODULE_2__.logger.warn("unknown instrumentation type:", type);
                    return;
                }
            }
            function addInstrumentationHandler(type, callback) {
                handlers[type] = handlers[type] || [];
                handlers[type].push(callback);
                instrument(type);
            }
            function triggerHandlers(type, data) {
                var e_1, _a;
                if (!type || !handlers[type]) return;
                try {
                    for (var _b = (0, tslib__WEBPACK_IMPORTED_MODULE_3__.__values)(handlers[type] || []), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var handler = _c.value;
                        try {
                            handler(data);
                        } catch (e) {
                            _flags__WEBPACK_IMPORTED_MODULE_1__.IS_DEBUG_BUILD && _logger__WEBPACK_IMPORTED_MODULE_2__.logger.error("Error while triggering instrumentation handler.\nType: " + type + "\nName: " + (0, 
                            _stacktrace__WEBPACK_IMPORTED_MODULE_4__.getFunctionName)(handler) + "\nError:", e);
                        }
                    }
                } catch (e_1_1) {
                    e_1 = {
                        error: e_1_1
                    };
                } finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    } finally {
                        if (e_1) throw e_1.error;
                    }
                }
            }
            function instrumentConsole() {
                if (!("console" in global)) return;
                _logger__WEBPACK_IMPORTED_MODULE_2__.CONSOLE_LEVELS.forEach((function(level) {
                    if (!(level in global.console)) return;
                    (0, _object__WEBPACK_IMPORTED_MODULE_5__.fill)(global.console, level, (function(originalConsoleMethod) {
                        return function() {
                            var args = [];
                            for (var _i = 0; _i < arguments.length; _i++) args[_i] = arguments[_i];
                            triggerHandlers("console", {
                                args,
                                level
                            });
                            if (originalConsoleMethod) originalConsoleMethod.apply(global.console, args);
                        };
                    }));
                }));
            }
            function instrumentFetch() {
                if (!(0, _supports__WEBPACK_IMPORTED_MODULE_6__.supportsNativeFetch)()) return;
                (0, _object__WEBPACK_IMPORTED_MODULE_5__.fill)(global, "fetch", (function(originalFetch) {
                    return function() {
                        var args = [];
                        for (var _i = 0; _i < arguments.length; _i++) args[_i] = arguments[_i];
                        var handlerData = {
                            args,
                            fetchData: {
                                method: getFetchMethod(args),
                                url: getFetchUrl(args)
                            },
                            startTimestamp: Date.now()
                        };
                        triggerHandlers("fetch", (0, tslib__WEBPACK_IMPORTED_MODULE_3__.__assign)({}, handlerData));
                        return originalFetch.apply(global, args).then((function(response) {
                            triggerHandlers("fetch", (0, tslib__WEBPACK_IMPORTED_MODULE_3__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_3__.__assign)({}, handlerData), {
                                endTimestamp: Date.now(),
                                response
                            }));
                            return response;
                        }), (function(error) {
                            triggerHandlers("fetch", (0, tslib__WEBPACK_IMPORTED_MODULE_3__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_3__.__assign)({}, handlerData), {
                                endTimestamp: Date.now(),
                                error
                            }));
                            throw error;
                        }));
                    };
                }));
            }
            function getFetchMethod(fetchArgs) {
                if (void 0 === fetchArgs) fetchArgs = [];
                if ("Request" in global && (0, _is__WEBPACK_IMPORTED_MODULE_7__.isInstanceOf)(fetchArgs[0], Request) && fetchArgs[0].method) return String(fetchArgs[0].method).toUpperCase();
                if (fetchArgs[1] && fetchArgs[1].method) return String(fetchArgs[1].method).toUpperCase();
                return "GET";
            }
            function getFetchUrl(fetchArgs) {
                if (void 0 === fetchArgs) fetchArgs = [];
                if ("string" === typeof fetchArgs[0]) return fetchArgs[0];
                if ("Request" in global && (0, _is__WEBPACK_IMPORTED_MODULE_7__.isInstanceOf)(fetchArgs[0], Request)) return fetchArgs[0].url;
                return String(fetchArgs[0]);
            }
            function instrumentXHR() {
                if (!("XMLHttpRequest" in global)) return;
                var xhrproto = XMLHttpRequest.prototype;
                (0, _object__WEBPACK_IMPORTED_MODULE_5__.fill)(xhrproto, "open", (function(originalOpen) {
                    return function() {
                        var args = [];
                        for (var _i = 0; _i < arguments.length; _i++) args[_i] = arguments[_i];
                        var xhr = this;
                        var url = args[1];
                        var xhrInfo = xhr.__sentry_xhr__ = {
                            method: (0, _is__WEBPACK_IMPORTED_MODULE_7__.isString)(args[0]) ? args[0].toUpperCase() : args[0],
                            url: args[1]
                        };
                        if ((0, _is__WEBPACK_IMPORTED_MODULE_7__.isString)(url) && "POST" === xhrInfo.method && url.match(/sentry_key/)) xhr.__sentry_own_request__ = true;
                        var onreadystatechangeHandler = function() {
                            if (4 === xhr.readyState) {
                                try {
                                    xhrInfo.status_code = xhr.status;
                                } catch (e) {}
                                triggerHandlers("xhr", {
                                    args,
                                    endTimestamp: Date.now(),
                                    startTimestamp: Date.now(),
                                    xhr
                                });
                            }
                        };
                        if ("onreadystatechange" in xhr && "function" === typeof xhr.onreadystatechange) (0, 
                        _object__WEBPACK_IMPORTED_MODULE_5__.fill)(xhr, "onreadystatechange", (function(original) {
                            return function() {
                                var readyStateArgs = [];
                                for (var _i = 0; _i < arguments.length; _i++) readyStateArgs[_i] = arguments[_i];
                                onreadystatechangeHandler();
                                return original.apply(xhr, readyStateArgs);
                            };
                        })); else xhr.addEventListener("readystatechange", onreadystatechangeHandler);
                        return originalOpen.apply(xhr, args);
                    };
                }));
                (0, _object__WEBPACK_IMPORTED_MODULE_5__.fill)(xhrproto, "send", (function(originalSend) {
                    return function() {
                        var args = [];
                        for (var _i = 0; _i < arguments.length; _i++) args[_i] = arguments[_i];
                        if (this.__sentry_xhr__ && void 0 !== args[0]) this.__sentry_xhr__.body = args[0];
                        triggerHandlers("xhr", {
                            args,
                            startTimestamp: Date.now(),
                            xhr: this
                        });
                        return originalSend.apply(this, args);
                    };
                }));
            }
            var lastHref;
            function instrumentHistory() {
                if (!(0, _supports__WEBPACK_IMPORTED_MODULE_6__.supportsHistory)()) return;
                var oldOnPopState = global.onpopstate;
                global.onpopstate = function() {
                    var args = [];
                    for (var _i = 0; _i < arguments.length; _i++) args[_i] = arguments[_i];
                    var to = global.location.href;
                    var from = lastHref;
                    lastHref = to;
                    triggerHandlers("history", {
                        from,
                        to
                    });
                    if (oldOnPopState) try {
                        return oldOnPopState.apply(this, args);
                    } catch (_oO) {}
                };
                function historyReplacementFunction(originalHistoryFunction) {
                    return function() {
                        var args = [];
                        for (var _i = 0; _i < arguments.length; _i++) args[_i] = arguments[_i];
                        var url = args.length > 2 ? args[2] : void 0;
                        if (url) {
                            var from = lastHref;
                            var to = String(url);
                            lastHref = to;
                            triggerHandlers("history", {
                                from,
                                to
                            });
                        }
                        return originalHistoryFunction.apply(this, args);
                    };
                }
                (0, _object__WEBPACK_IMPORTED_MODULE_5__.fill)(global.history, "pushState", historyReplacementFunction);
                (0, _object__WEBPACK_IMPORTED_MODULE_5__.fill)(global.history, "replaceState", historyReplacementFunction);
            }
            var debounceDuration = 1e3;
            var debounceTimerID;
            var lastCapturedEvent;
            function shouldShortcircuitPreviousDebounce(previous, current) {
                if (!previous) return true;
                if (previous.type !== current.type) return true;
                try {
                    if (previous.target !== current.target) return true;
                } catch (e) {}
                return false;
            }
            function shouldSkipDOMEvent(event) {
                if ("keypress" !== event.type) return false;
                try {
                    var target = event.target;
                    if (!target || !target.tagName) return true;
                    if ("INPUT" === target.tagName || "TEXTAREA" === target.tagName || target.isContentEditable) return false;
                } catch (e) {}
                return true;
            }
            function makeDOMEventHandler(handler, globalListener) {
                if (void 0 === globalListener) globalListener = false;
                return function(event) {
                    if (!event || lastCapturedEvent === event) return;
                    if (shouldSkipDOMEvent(event)) return;
                    var name = "keypress" === event.type ? "input" : event.type;
                    if (void 0 === debounceTimerID) {
                        handler({
                            event,
                            name,
                            global: globalListener
                        });
                        lastCapturedEvent = event;
                    } else if (shouldShortcircuitPreviousDebounce(lastCapturedEvent, event)) {
                        handler({
                            event,
                            name,
                            global: globalListener
                        });
                        lastCapturedEvent = event;
                    }
                    clearTimeout(debounceTimerID);
                    debounceTimerID = global.setTimeout((function() {
                        debounceTimerID = void 0;
                    }), debounceDuration);
                };
            }
            function instrumentDOM() {
                if (!("document" in global)) return;
                var triggerDOMHandler = triggerHandlers.bind(null, "dom");
                var globalDOMEventHandler = makeDOMEventHandler(triggerDOMHandler, true);
                global.document.addEventListener("click", globalDOMEventHandler, false);
                global.document.addEventListener("keypress", globalDOMEventHandler, false);
                [ "EventTarget", "Node" ].forEach((function(target) {
                    var proto = global[target] && global[target].prototype;
                    if (!proto || !proto.hasOwnProperty || !proto.hasOwnProperty("addEventListener")) return;
                    (0, _object__WEBPACK_IMPORTED_MODULE_5__.fill)(proto, "addEventListener", (function(originalAddEventListener) {
                        return function(type, listener, options) {
                            if ("click" === type || "keypress" == type) try {
                                var el = this;
                                var handlers_1 = el.__sentry_instrumentation_handlers__ = el.__sentry_instrumentation_handlers__ || {};
                                var handlerForType = handlers_1[type] = handlers_1[type] || {
                                    refCount: 0
                                };
                                if (!handlerForType.handler) {
                                    var handler = makeDOMEventHandler(triggerDOMHandler);
                                    handlerForType.handler = handler;
                                    originalAddEventListener.call(this, type, handler, options);
                                }
                                handlerForType.refCount += 1;
                            } catch (e) {}
                            return originalAddEventListener.call(this, type, listener, options);
                        };
                    }));
                    (0, _object__WEBPACK_IMPORTED_MODULE_5__.fill)(proto, "removeEventListener", (function(originalRemoveEventListener) {
                        return function(type, listener, options) {
                            if ("click" === type || "keypress" == type) try {
                                var el = this;
                                var handlers_2 = el.__sentry_instrumentation_handlers__ || {};
                                var handlerForType = handlers_2[type];
                                if (handlerForType) {
                                    handlerForType.refCount -= 1;
                                    if (handlerForType.refCount <= 0) {
                                        originalRemoveEventListener.call(this, type, handlerForType.handler, options);
                                        handlerForType.handler = void 0;
                                        delete handlers_2[type];
                                    }
                                    if (0 === Object.keys(handlers_2).length) delete el.__sentry_instrumentation_handlers__;
                                }
                            } catch (e) {}
                            return originalRemoveEventListener.call(this, type, listener, options);
                        };
                    }));
                }));
            }
            var _oldOnErrorHandler = null;
            function instrumentError() {
                _oldOnErrorHandler = global.onerror;
                global.onerror = function(msg, url, line, column, error) {
                    triggerHandlers("error", {
                        column,
                        error,
                        line,
                        msg,
                        url
                    });
                    if (_oldOnErrorHandler) return _oldOnErrorHandler.apply(this, arguments);
                    return false;
                };
            }
            var _oldOnUnhandledRejectionHandler = null;
            function instrumentUnhandledRejection() {
                _oldOnUnhandledRejectionHandler = global.onunhandledrejection;
                global.onunhandledrejection = function(e) {
                    triggerHandlers("unhandledrejection", e);
                    if (_oldOnUnhandledRejectionHandler) return _oldOnUnhandledRejectionHandler.apply(this, arguments);
                    return true;
                };
            }
        },
        "../shared/browser/node_modules/@sentry/utils/esm/is.js": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.d(__webpack_exports__, {
                isError: () => isError,
                isErrorEvent: () => isErrorEvent,
                isDOMError: () => isDOMError,
                isDOMException: () => isDOMException,
                isString: () => isString,
                isPrimitive: () => isPrimitive,
                isPlainObject: () => isPlainObject,
                isEvent: () => isEvent,
                isElement: () => isElement,
                isRegExp: () => isRegExp,
                isThenable: () => isThenable,
                isSyntheticEvent: () => isSyntheticEvent,
                isNaN: () => isNaN,
                isInstanceOf: () => isInstanceOf
            });
            var objectToString = Object.prototype.toString;
            function isError(wat) {
                switch (objectToString.call(wat)) {
                  case "[object Error]":
                  case "[object Exception]":
                  case "[object DOMException]":
                    return true;

                  default:
                    return isInstanceOf(wat, Error);
                }
            }
            function isBuiltin(wat, ty) {
                return objectToString.call(wat) === "[object " + ty + "]";
            }
            function isErrorEvent(wat) {
                return isBuiltin(wat, "ErrorEvent");
            }
            function isDOMError(wat) {
                return isBuiltin(wat, "DOMError");
            }
            function isDOMException(wat) {
                return isBuiltin(wat, "DOMException");
            }
            function isString(wat) {
                return isBuiltin(wat, "String");
            }
            function isPrimitive(wat) {
                return null === wat || "object" !== typeof wat && "function" !== typeof wat;
            }
            function isPlainObject(wat) {
                return isBuiltin(wat, "Object");
            }
            function isEvent(wat) {
                return "undefined" !== typeof Event && isInstanceOf(wat, Event);
            }
            function isElement(wat) {
                return "undefined" !== typeof Element && isInstanceOf(wat, Element);
            }
            function isRegExp(wat) {
                return isBuiltin(wat, "RegExp");
            }
            function isThenable(wat) {
                return Boolean(wat && wat.then && "function" === typeof wat.then);
            }
            function isSyntheticEvent(wat) {
                return isPlainObject(wat) && "nativeEvent" in wat && "preventDefault" in wat && "stopPropagation" in wat;
            }
            function isNaN(wat) {
                return "number" === typeof wat && wat !== wat;
            }
            function isInstanceOf(wat, base) {
                try {
                    return wat instanceof base;
                } catch (_e) {
                    return false;
                }
            }
        },
        "../shared/browser/node_modules/@sentry/utils/esm/logger.js": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.d(__webpack_exports__, {
                CONSOLE_LEVELS: () => CONSOLE_LEVELS,
                consoleSandbox: () => consoleSandbox,
                logger: () => logger
            });
            var tslib__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("../shared/browser/node_modules/tslib/tslib.es6.js");
            var _flags__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("../shared/browser/node_modules/@sentry/utils/esm/flags.js");
            var _global__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("../shared/browser/node_modules/@sentry/utils/esm/global.js");
            var global = (0, _global__WEBPACK_IMPORTED_MODULE_0__.getGlobalObject)();
            var PREFIX = "Sentry Logger ";
            var CONSOLE_LEVELS = [ "debug", "info", "warn", "error", "log", "assert" ];
            function consoleSandbox(callback) {
                var global = (0, _global__WEBPACK_IMPORTED_MODULE_0__.getGlobalObject)();
                if (!("console" in global)) return callback();
                var originalConsole = global.console;
                var wrappedLevels = {};
                CONSOLE_LEVELS.forEach((function(level) {
                    var originalWrappedFunc = originalConsole[level] && originalConsole[level].__sentry_original__;
                    if (level in global.console && originalWrappedFunc) {
                        wrappedLevels[level] = originalConsole[level];
                        originalConsole[level] = originalWrappedFunc;
                    }
                }));
                try {
                    return callback();
                } finally {
                    Object.keys(wrappedLevels).forEach((function(level) {
                        originalConsole[level] = wrappedLevels[level];
                    }));
                }
            }
            function makeLogger() {
                var enabled = false;
                var logger = {
                    enable: function() {
                        enabled = true;
                    },
                    disable: function() {
                        enabled = false;
                    }
                };
                if (_flags__WEBPACK_IMPORTED_MODULE_1__.IS_DEBUG_BUILD) CONSOLE_LEVELS.forEach((function(name) {
                    logger[name] = function() {
                        var args = [];
                        for (var _i = 0; _i < arguments.length; _i++) args[_i] = arguments[_i];
                        if (enabled) consoleSandbox((function() {
                            var _a;
                            (_a = global.console)[name].apply(_a, (0, tslib__WEBPACK_IMPORTED_MODULE_2__.__spread)([ PREFIX + "[" + name + "]:" ], args));
                        }));
                    };
                })); else CONSOLE_LEVELS.forEach((function(name) {
                    logger[name] = function() {
                        return;
                    };
                }));
                return logger;
            }
            var logger;
            if (_flags__WEBPACK_IMPORTED_MODULE_1__.IS_DEBUG_BUILD) logger = (0, _global__WEBPACK_IMPORTED_MODULE_0__.getGlobalSingleton)("logger", makeLogger); else logger = makeLogger();
        },
        "../shared/browser/node_modules/@sentry/utils/esm/misc.js": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.d(__webpack_exports__, {
                uuid4: () => uuid4,
                parseUrl: () => parseUrl,
                getEventDescription: () => getEventDescription,
                addExceptionTypeValue: () => addExceptionTypeValue,
                addExceptionMechanism: () => addExceptionMechanism,
                checkOrSetAlreadyCaught: () => checkOrSetAlreadyCaught
            });
            var tslib__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("../shared/browser/node_modules/tslib/tslib.es6.js");
            var _global__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("../shared/browser/node_modules/@sentry/utils/esm/global.js");
            var _object__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("../shared/browser/node_modules/@sentry/utils/esm/object.js");
            function uuid4() {
                var global = (0, _global__WEBPACK_IMPORTED_MODULE_0__.getGlobalObject)();
                var crypto = global.crypto || global.msCrypto;
                if (!(void 0 === crypto) && crypto.getRandomValues) {
                    var arr = new Uint16Array(8);
                    crypto.getRandomValues(arr);
                    arr[3] = 4095 & arr[3] | 16384;
                    arr[4] = 16383 & arr[4] | 32768;
                    var pad = function(num) {
                        var v = num.toString(16);
                        while (v.length < 4) v = "0" + v;
                        return v;
                    };
                    return pad(arr[0]) + pad(arr[1]) + pad(arr[2]) + pad(arr[3]) + pad(arr[4]) + pad(arr[5]) + pad(arr[6]) + pad(arr[7]);
                }
                return "xxxxxxxxxxxx4xxxyxxxxxxxxxxxxxxx".replace(/[xy]/g, (function(c) {
                    var r = 16 * Math.random() | 0;
                    var v = "x" === c ? r : 3 & r | 8;
                    return v.toString(16);
                }));
            }
            function parseUrl(url) {
                if (!url) return {};
                var match = url.match(/^(([^:/?#]+):)?(\/\/([^/?#]*))?([^?#]*)(\?([^#]*))?(#(.*))?$/);
                if (!match) return {};
                var query = match[6] || "";
                var fragment = match[8] || "";
                return {
                    host: match[4],
                    path: match[5],
                    protocol: match[2],
                    relative: match[5] + query + fragment
                };
            }
            function getFirstException(event) {
                return event.exception && event.exception.values ? event.exception.values[0] : void 0;
            }
            function getEventDescription(event) {
                var message = event.message, eventId = event.event_id;
                if (message) return message;
                var firstException = getFirstException(event);
                if (firstException) {
                    if (firstException.type && firstException.value) return firstException.type + ": " + firstException.value;
                    return firstException.type || firstException.value || eventId || "<unknown>";
                }
                return eventId || "<unknown>";
            }
            function addExceptionTypeValue(event, value, type) {
                var exception = event.exception = event.exception || {};
                var values = exception.values = exception.values || [];
                var firstException = values[0] = values[0] || {};
                if (!firstException.value) firstException.value = value || "";
                if (!firstException.type) firstException.type = type || "Error";
            }
            function addExceptionMechanism(event, newMechanism) {
                var firstException = getFirstException(event);
                if (!firstException) return;
                var defaultMechanism = {
                    type: "generic",
                    handled: true
                };
                var currentMechanism = firstException.mechanism;
                firstException.mechanism = (0, tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0, 
                tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, defaultMechanism), currentMechanism), newMechanism);
                if (newMechanism && "data" in newMechanism) {
                    var mergedData = (0, tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({}, currentMechanism && currentMechanism.data), newMechanism.data);
                    firstException.mechanism.data = mergedData;
                }
            }
            function checkOrSetAlreadyCaught(exception) {
                if (exception && exception.__sentry_captured__) return true;
                try {
                    (0, _object__WEBPACK_IMPORTED_MODULE_2__.addNonEnumerableProperty)(exception, "__sentry_captured__", true);
                } catch (err) {}
                return false;
            }
        },
        "../shared/browser/node_modules/@sentry/utils/esm/node.js": (module, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.d(__webpack_exports__, {
                dynamicRequire: () => dynamicRequire,
                isNodeEnv: () => isNodeEnv,
                loadModule: () => loadModule
            });
            function isBrowserBundle() {
                return "undefined" !== typeof __SENTRY_BROWSER_BUNDLE__ && !!__SENTRY_BROWSER_BUNDLE__;
            }
            module = __webpack_require__.hmd(module);
            function isNodeEnv() {
                return !isBrowserBundle() && "[object process]" === Object.prototype.toString.call("undefined" !== typeof process ? process : 0);
            }
            function dynamicRequire(mod, request) {
                return mod.require(request);
            }
            function loadModule(moduleName) {
                var mod;
                try {
                    mod = dynamicRequire(module, moduleName);
                } catch (e) {}
                try {
                    var cwd = dynamicRequire(module, "process").cwd;
                    mod = dynamicRequire(module, cwd() + "/node_modules/" + moduleName);
                } catch (e) {}
                return mod;
            }
        },
        "../shared/browser/node_modules/@sentry/utils/esm/normalize.js": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.d(__webpack_exports__, {
                normalize: () => normalize,
                normalizeToSize: () => normalizeToSize
            });
            var tslib_es6 = __webpack_require__("../shared/browser/node_modules/tslib/tslib.es6.js");
            var is = __webpack_require__("../shared/browser/node_modules/@sentry/utils/esm/is.js");
            function memoBuilder() {
                var hasWeakSet = "function" === typeof WeakSet;
                var inner = hasWeakSet ? new WeakSet : [];
                function memoize(obj) {
                    if (hasWeakSet) {
                        if (inner.has(obj)) return true;
                        inner.add(obj);
                        return false;
                    }
                    for (var i = 0; i < inner.length; i++) {
                        var value = inner[i];
                        if (value === obj) return true;
                    }
                    inner.push(obj);
                    return false;
                }
                function unmemoize(obj) {
                    if (hasWeakSet) inner.delete(obj); else for (var i = 0; i < inner.length; i++) if (inner[i] === obj) {
                        inner.splice(i, 1);
                        break;
                    }
                }
                return [ memoize, unmemoize ];
            }
            var object = __webpack_require__("../shared/browser/node_modules/@sentry/utils/esm/object.js");
            var stacktrace = __webpack_require__("../shared/browser/node_modules/@sentry/utils/esm/stacktrace.js");
            function normalize(input, depth, maxProperties) {
                if (void 0 === depth) depth = +1 / 0;
                if (void 0 === maxProperties) maxProperties = +1 / 0;
                try {
                    return visit("", input, depth, maxProperties);
                } catch (err) {
                    return {
                        ERROR: "**non-serializable** (" + err + ")"
                    };
                }
            }
            function normalizeToSize(object, depth, maxSize) {
                if (void 0 === depth) depth = 3;
                if (void 0 === maxSize) maxSize = 100 * 1024;
                var normalized = normalize(object, depth);
                if (jsonSize(normalized) > maxSize) return normalizeToSize(object, depth - 1, maxSize);
                return normalized;
            }
            function visit(key, value, depth, maxProperties, memo) {
                if (void 0 === depth) depth = +1 / 0;
                if (void 0 === maxProperties) maxProperties = +1 / 0;
                if (void 0 === memo) memo = memoBuilder();
                var _a = (0, tslib_es6.__read)(memo, 2), memoize = _a[0], unmemoize = _a[1];
                var valueWithToJSON = value;
                if (valueWithToJSON && "function" === typeof valueWithToJSON.toJSON) try {
                    return valueWithToJSON.toJSON();
                } catch (err) {}
                if (null === value || [ "number", "boolean", "string" ].includes(typeof value) && !(0, 
                is.isNaN)(value)) return value;
                var stringified = stringifyValue(key, value);
                if (!stringified.startsWith("[object ")) return stringified;
                if (0 === depth) return stringified.replace("object ", "");
                if (memoize(value)) return "[Circular ~]";
                var normalized = Array.isArray(value) ? [] : {};
                var numAdded = 0;
                var visitable = (0, is.isError)(value) || (0, is.isEvent)(value) ? (0, object.convertToPlainObject)(value) : value;
                for (var visitKey in visitable) {
                    if (!Object.prototype.hasOwnProperty.call(visitable, visitKey)) continue;
                    if (numAdded >= maxProperties) {
                        normalized[visitKey] = "[MaxProperties ~]";
                        break;
                    }
                    var visitValue = visitable[visitKey];
                    normalized[visitKey] = visit(visitKey, visitValue, depth - 1, maxProperties, memo);
                    numAdded += 1;
                }
                unmemoize(value);
                return normalized;
            }
            function stringifyValue(key, value) {
                try {
                    if ("domain" === key && value && "object" === typeof value && value._events) return "[Domain]";
                    if ("domainEmitter" === key) return "[DomainEmitter]";
                    if ("undefined" !== typeof __webpack_require__.g && value === __webpack_require__.g) return "[Global]";
                    if ("undefined" !== typeof window && value === window) return "[Window]";
                    if ("undefined" !== typeof document && value === document) return "[Document]";
                    if ((0, is.isSyntheticEvent)(value)) return "[SyntheticEvent]";
                    if ("number" === typeof value && value !== value) return "[NaN]";
                    if (void 0 === value) return "[undefined]";
                    if ("function" === typeof value) return "[Function: " + (0, stacktrace.getFunctionName)(value) + "]";
                    if ("symbol" === typeof value) return "[" + String(value) + "]";
                    if ("bigint" === typeof value) return "[BigInt: " + String(value) + "]";
                    return "[object " + Object.getPrototypeOf(value).constructor.name + "]";
                } catch (err) {
                    return "**non-serializable** (" + err + ")";
                }
            }
            function utf8Length(value) {
                return ~-encodeURI(value).split(/%..|./).length;
            }
            function jsonSize(value) {
                return utf8Length(JSON.stringify(value));
            }
        },
        "../shared/browser/node_modules/@sentry/utils/esm/object.js": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.d(__webpack_exports__, {
                fill: () => fill,
                addNonEnumerableProperty: () => addNonEnumerableProperty,
                markFunctionWrapped: () => markFunctionWrapped,
                getOriginalFunction: () => getOriginalFunction,
                urlEncode: () => urlEncode,
                convertToPlainObject: () => convertToPlainObject,
                extractExceptionKeysForMessage: () => extractExceptionKeysForMessage,
                dropUndefinedKeys: () => dropUndefinedKeys
            });
            var tslib__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("../shared/browser/node_modules/tslib/tslib.es6.js");
            var _browser__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("../shared/browser/node_modules/@sentry/utils/esm/browser.js");
            var _is__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("../shared/browser/node_modules/@sentry/utils/esm/is.js");
            var _string__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__("../shared/browser/node_modules/@sentry/utils/esm/string.js");
            function fill(source, name, replacementFactory) {
                if (!(name in source)) return;
                var original = source[name];
                var wrapped = replacementFactory(original);
                if ("function" === typeof wrapped) try {
                    markFunctionWrapped(wrapped, original);
                } catch (_Oo) {}
                source[name] = wrapped;
            }
            function addNonEnumerableProperty(obj, name, value) {
                Object.defineProperty(obj, name, {
                    value,
                    writable: true,
                    configurable: true
                });
            }
            function markFunctionWrapped(wrapped, original) {
                var proto = original.prototype || {};
                wrapped.prototype = original.prototype = proto;
                addNonEnumerableProperty(wrapped, "__sentry_original__", original);
            }
            function getOriginalFunction(func) {
                return func.__sentry_original__;
            }
            function urlEncode(object) {
                return Object.keys(object).map((function(key) {
                    return encodeURIComponent(key) + "=" + encodeURIComponent(object[key]);
                })).join("&");
            }
            function convertToPlainObject(value) {
                var newObj = value;
                if ((0, _is__WEBPACK_IMPORTED_MODULE_0__.isError)(value)) newObj = (0, tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({
                    message: value.message,
                    name: value.name,
                    stack: value.stack
                }, getOwnProperties(value)); else if ((0, _is__WEBPACK_IMPORTED_MODULE_0__.isEvent)(value)) {
                    var event_1 = value;
                    newObj = (0, tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({
                        type: event_1.type,
                        target: serializeEventTarget(event_1.target),
                        currentTarget: serializeEventTarget(event_1.currentTarget)
                    }, getOwnProperties(event_1));
                    if ("undefined" !== typeof CustomEvent && (0, _is__WEBPACK_IMPORTED_MODULE_0__.isInstanceOf)(value, CustomEvent)) newObj.detail = event_1.detail;
                }
                return newObj;
            }
            function serializeEventTarget(target) {
                try {
                    return (0, _is__WEBPACK_IMPORTED_MODULE_0__.isElement)(target) ? (0, _browser__WEBPACK_IMPORTED_MODULE_2__.htmlTreeAsString)(target) : Object.prototype.toString.call(target);
                } catch (_oO) {
                    return "<unknown>";
                }
            }
            function getOwnProperties(obj) {
                var extractedProps = {};
                for (var property in obj) if (Object.prototype.hasOwnProperty.call(obj, property)) extractedProps[property] = obj[property];
                return extractedProps;
            }
            function extractExceptionKeysForMessage(exception, maxLength) {
                if (void 0 === maxLength) maxLength = 40;
                var keys = Object.keys(convertToPlainObject(exception));
                keys.sort();
                if (!keys.length) return "[object has no keys]";
                if (keys[0].length >= maxLength) return (0, _string__WEBPACK_IMPORTED_MODULE_3__.truncate)(keys[0], maxLength);
                for (var includedKeys = keys.length; includedKeys > 0; includedKeys--) {
                    var serialized = keys.slice(0, includedKeys).join(", ");
                    if (serialized.length > maxLength) continue;
                    if (includedKeys === keys.length) return serialized;
                    return (0, _string__WEBPACK_IMPORTED_MODULE_3__.truncate)(serialized, maxLength);
                }
                return "";
            }
            function dropUndefinedKeys(val) {
                var e_1, _a;
                if ((0, _is__WEBPACK_IMPORTED_MODULE_0__.isPlainObject)(val)) {
                    var rv = {};
                    try {
                        for (var _b = (0, tslib__WEBPACK_IMPORTED_MODULE_1__.__values)(Object.keys(val)), _c = _b.next(); !_c.done; _c = _b.next()) {
                            var key = _c.value;
                            if ("undefined" !== typeof val[key]) rv[key] = dropUndefinedKeys(val[key]);
                        }
                    } catch (e_1_1) {
                        e_1 = {
                            error: e_1_1
                        };
                    } finally {
                        try {
                            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                        } finally {
                            if (e_1) throw e_1.error;
                        }
                    }
                    return rv;
                }
                if (Array.isArray(val)) return val.map(dropUndefinedKeys);
                return val;
            }
        },
        "../shared/browser/node_modules/@sentry/utils/esm/promisebuffer.js": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.d(__webpack_exports__, {
                makePromiseBuffer: () => makePromiseBuffer
            });
            var _error__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("../shared/browser/node_modules/@sentry/utils/esm/error.js");
            var _syncpromise__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("../shared/browser/node_modules/@sentry/utils/esm/syncpromise.js");
            function makePromiseBuffer(limit) {
                var buffer = [];
                function isReady() {
                    return void 0 === limit || buffer.length < limit;
                }
                function remove(task) {
                    return buffer.splice(buffer.indexOf(task), 1)[0];
                }
                function add(taskProducer) {
                    if (!isReady()) return (0, _syncpromise__WEBPACK_IMPORTED_MODULE_0__.rejectedSyncPromise)(new _error__WEBPACK_IMPORTED_MODULE_1__.SentryError("Not adding Promise due to buffer limit reached."));
                    var task = taskProducer();
                    if (-1 === buffer.indexOf(task)) buffer.push(task);
                    void task.then((function() {
                        return remove(task);
                    })).then(null, (function() {
                        return remove(task).then(null, (function() {}));
                    }));
                    return task;
                }
                function drain(timeout) {
                    return new _syncpromise__WEBPACK_IMPORTED_MODULE_0__.SyncPromise((function(resolve, reject) {
                        var counter = buffer.length;
                        if (!counter) return resolve(true);
                        var capturedSetTimeout = setTimeout((function() {
                            if (timeout && timeout > 0) resolve(false);
                        }), timeout);
                        buffer.forEach((function(item) {
                            void (0, _syncpromise__WEBPACK_IMPORTED_MODULE_0__.resolvedSyncPromise)(item).then((function() {
                                if (!--counter) {
                                    clearTimeout(capturedSetTimeout);
                                    resolve(true);
                                }
                            }), reject);
                        }));
                    }));
                }
                return {
                    $: buffer,
                    add,
                    drain
                };
            }
        },
        "../shared/browser/node_modules/@sentry/utils/esm/ratelimit.js": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.d(__webpack_exports__, {
                disabledUntil: () => disabledUntil,
                isRateLimited: () => isRateLimited,
                updateRateLimits: () => updateRateLimits
            });
            var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("../shared/browser/node_modules/tslib/tslib.es6.js");
            var DEFAULT_RETRY_AFTER = 60 * 1e3;
            function parseRetryAfterHeader(header, now) {
                if (void 0 === now) now = Date.now();
                var headerDelay = parseInt("" + header, 10);
                if (!isNaN(headerDelay)) return 1e3 * headerDelay;
                var headerDate = Date.parse("" + header);
                if (!isNaN(headerDate)) return headerDate - now;
                return DEFAULT_RETRY_AFTER;
            }
            function disabledUntil(limits, category) {
                return limits[category] || limits.all || 0;
            }
            function isRateLimited(limits, category, now) {
                if (void 0 === now) now = Date.now();
                return disabledUntil(limits, category) > now;
            }
            function updateRateLimits(limits, headers, now) {
                var e_1, _a, e_2, _b;
                if (void 0 === now) now = Date.now();
                var updatedRateLimits = (0, tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)({}, limits);
                var rateLimitHeader = headers["x-sentry-rate-limits"];
                var retryAfterHeader = headers["retry-after"];
                if (rateLimitHeader) try {
                    for (var _c = (0, tslib__WEBPACK_IMPORTED_MODULE_0__.__values)(rateLimitHeader.trim().split(",")), _d = _c.next(); !_d.done; _d = _c.next()) {
                        var limit = _d.value;
                        var parameters = limit.split(":", 2);
                        var headerDelay = parseInt(parameters[0], 10);
                        var delay = 1e3 * (!isNaN(headerDelay) ? headerDelay : 60);
                        if (!parameters[1]) updatedRateLimits.all = now + delay; else try {
                            for (var _e = (e_2 = void 0, (0, tslib__WEBPACK_IMPORTED_MODULE_0__.__values)(parameters[1].split(";"))), _f = _e.next(); !_f.done; _f = _e.next()) {
                                var category = _f.value;
                                updatedRateLimits[category] = now + delay;
                            }
                        } catch (e_2_1) {
                            e_2 = {
                                error: e_2_1
                            };
                        } finally {
                            try {
                                if (_f && !_f.done && (_b = _e.return)) _b.call(_e);
                            } finally {
                                if (e_2) throw e_2.error;
                            }
                        }
                    }
                } catch (e_1_1) {
                    e_1 = {
                        error: e_1_1
                    };
                } finally {
                    try {
                        if (_d && !_d.done && (_a = _c.return)) _a.call(_c);
                    } finally {
                        if (e_1) throw e_1.error;
                    }
                } else if (retryAfterHeader) updatedRateLimits.all = now + parseRetryAfterHeader(retryAfterHeader, now);
                return updatedRateLimits;
            }
        },
        "../shared/browser/node_modules/@sentry/utils/esm/stacktrace.js": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.d(__webpack_exports__, {
                createStackParser: () => createStackParser,
                getFunctionName: () => getFunctionName
            });
            var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("../shared/browser/node_modules/tslib/tslib.es6.js");
            var STACKTRACE_LIMIT = 50;
            function createStackParser() {
                var parsers = [];
                for (var _i = 0; _i < arguments.length; _i++) parsers[_i] = arguments[_i];
                var sortedParsers = parsers.sort((function(a, b) {
                    return a[0] - b[0];
                })).map((function(p) {
                    return p[1];
                }));
                return function(stack, skipFirst) {
                    var e_1, _a, e_2, _b;
                    if (void 0 === skipFirst) skipFirst = 0;
                    var frames = [];
                    try {
                        for (var _c = (0, tslib__WEBPACK_IMPORTED_MODULE_0__.__values)(stack.split("\n").slice(skipFirst)), _d = _c.next(); !_d.done; _d = _c.next()) {
                            var line = _d.value;
                            try {
                                for (var sortedParsers_1 = (e_2 = void 0, (0, tslib__WEBPACK_IMPORTED_MODULE_0__.__values)(sortedParsers)), sortedParsers_1_1 = sortedParsers_1.next(); !sortedParsers_1_1.done; sortedParsers_1_1 = sortedParsers_1.next()) {
                                    var parser = sortedParsers_1_1.value;
                                    var frame = parser(line);
                                    if (frame) {
                                        frames.push(frame);
                                        break;
                                    }
                                }
                            } catch (e_2_1) {
                                e_2 = {
                                    error: e_2_1
                                };
                            } finally {
                                try {
                                    if (sortedParsers_1_1 && !sortedParsers_1_1.done && (_b = sortedParsers_1.return)) _b.call(sortedParsers_1);
                                } finally {
                                    if (e_2) throw e_2.error;
                                }
                            }
                        }
                    } catch (e_1_1) {
                        e_1 = {
                            error: e_1_1
                        };
                    } finally {
                        try {
                            if (_d && !_d.done && (_a = _c.return)) _a.call(_c);
                        } finally {
                            if (e_1) throw e_1.error;
                        }
                    }
                    return stripSentryFramesAndReverse(frames);
                };
            }
            function stripSentryFramesAndReverse(stack) {
                if (!stack.length) return [];
                var localStack = stack;
                var firstFrameFunction = localStack[0].function || "";
                var lastFrameFunction = localStack[localStack.length - 1].function || "";
                if (-1 !== firstFrameFunction.indexOf("captureMessage") || -1 !== firstFrameFunction.indexOf("captureException")) localStack = localStack.slice(1);
                if (-1 !== lastFrameFunction.indexOf("sentryWrapped")) localStack = localStack.slice(0, -1);
                return localStack.slice(0, STACKTRACE_LIMIT).map((function(frame) {
                    return (0, tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)((0, tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)({}, frame), {
                        filename: frame.filename || localStack[0].filename,
                        function: frame.function || "?"
                    });
                })).reverse();
            }
            var defaultFunctionName = "<anonymous>";
            function getFunctionName(fn) {
                try {
                    if (!fn || "function" !== typeof fn) return defaultFunctionName;
                    return fn.name || defaultFunctionName;
                } catch (e) {
                    return defaultFunctionName;
                }
            }
        },
        "../shared/browser/node_modules/@sentry/utils/esm/status.js": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.d(__webpack_exports__, {
                eventStatusFromHttpCode: () => eventStatusFromHttpCode
            });
            function eventStatusFromHttpCode(code) {
                if (code >= 200 && code < 300) return "success";
                if (429 === code) return "rate_limit";
                if (code >= 400 && code < 500) return "invalid";
                if (code >= 500) return "failed";
                return "unknown";
            }
        },
        "../shared/browser/node_modules/@sentry/utils/esm/string.js": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.d(__webpack_exports__, {
                truncate: () => truncate,
                safeJoin: () => safeJoin,
                isMatchingPattern: () => isMatchingPattern
            });
            var _is__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("../shared/browser/node_modules/@sentry/utils/esm/is.js");
            function truncate(str, max) {
                if (void 0 === max) max = 0;
                if ("string" !== typeof str || 0 === max) return str;
                return str.length <= max ? str : str.substr(0, max) + "...";
            }
            function safeJoin(input, delimiter) {
                if (!Array.isArray(input)) return "";
                var output = [];
                for (var i = 0; i < input.length; i++) {
                    var value = input[i];
                    try {
                        output.push(String(value));
                    } catch (e) {
                        output.push("[value cannot be serialized]");
                    }
                }
                return output.join(delimiter);
            }
            function isMatchingPattern(value, pattern) {
                if (!(0, _is__WEBPACK_IMPORTED_MODULE_0__.isString)(value)) return false;
                if ((0, _is__WEBPACK_IMPORTED_MODULE_0__.isRegExp)(pattern)) return pattern.test(value);
                if ("string" === typeof pattern) return -1 !== value.indexOf(pattern);
                return false;
            }
        },
        "../shared/browser/node_modules/@sentry/utils/esm/supports.js": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.d(__webpack_exports__, {
                supportsFetch: () => supportsFetch,
                isNativeFetch: () => isNativeFetch,
                supportsNativeFetch: () => supportsNativeFetch,
                supportsReferrerPolicy: () => supportsReferrerPolicy,
                supportsHistory: () => supportsHistory
            });
            var _flags__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("../shared/browser/node_modules/@sentry/utils/esm/flags.js");
            var _global__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("../shared/browser/node_modules/@sentry/utils/esm/global.js");
            var _logger__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__("../shared/browser/node_modules/@sentry/utils/esm/logger.js");
            function supportsFetch() {
                if (!("fetch" in (0, _global__WEBPACK_IMPORTED_MODULE_0__.getGlobalObject)())) return false;
                try {
                    new Headers;
                    new Request("");
                    new Response;
                    return true;
                } catch (e) {
                    return false;
                }
            }
            function isNativeFetch(func) {
                return func && /^function fetch\(\)\s+\{\s+\[native code\]\s+\}$/.test(func.toString());
            }
            function supportsNativeFetch() {
                if (!supportsFetch()) return false;
                var global = (0, _global__WEBPACK_IMPORTED_MODULE_0__.getGlobalObject)();
                if (isNativeFetch(global.fetch)) return true;
                var result = false;
                var doc = global.document;
                if (doc && "function" === typeof doc.createElement) try {
                    var sandbox = doc.createElement("iframe");
                    sandbox.hidden = true;
                    doc.head.appendChild(sandbox);
                    if (sandbox.contentWindow && sandbox.contentWindow.fetch) result = isNativeFetch(sandbox.contentWindow.fetch);
                    doc.head.removeChild(sandbox);
                } catch (err) {
                    _flags__WEBPACK_IMPORTED_MODULE_1__.IS_DEBUG_BUILD && _logger__WEBPACK_IMPORTED_MODULE_2__.logger.warn("Could not create sandbox iframe for pure fetch check, bailing to window.fetch: ", err);
                }
                return result;
            }
            function supportsReferrerPolicy() {
                if (!supportsFetch()) return false;
                try {
                    new Request("_", {
                        referrerPolicy: "origin"
                    });
                    return true;
                } catch (e) {
                    return false;
                }
            }
            function supportsHistory() {
                var global = (0, _global__WEBPACK_IMPORTED_MODULE_0__.getGlobalObject)();
                var chrome = global.chrome;
                var isChromePackagedApp = chrome && chrome.app && chrome.app.runtime;
                var hasHistoryApi = "history" in global && !!global.history.pushState && !!global.history.replaceState;
                return !isChromePackagedApp && hasHistoryApi;
            }
        },
        "../shared/browser/node_modules/@sentry/utils/esm/syncpromise.js": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.d(__webpack_exports__, {
                resolvedSyncPromise: () => resolvedSyncPromise,
                rejectedSyncPromise: () => rejectedSyncPromise,
                SyncPromise: () => SyncPromise
            });
            var _is__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("../shared/browser/node_modules/@sentry/utils/esm/is.js");
            function resolvedSyncPromise(value) {
                return new SyncPromise((function(resolve) {
                    resolve(value);
                }));
            }
            function rejectedSyncPromise(reason) {
                return new SyncPromise((function(_, reject) {
                    reject(reason);
                }));
            }
            var SyncPromise = function() {
                function SyncPromise(executor) {
                    var _this = this;
                    this._state = 0;
                    this._handlers = [];
                    this._resolve = function(value) {
                        _this._setResult(1, value);
                    };
                    this._reject = function(reason) {
                        _this._setResult(2, reason);
                    };
                    this._setResult = function(state, value) {
                        if (0 !== _this._state) return;
                        if ((0, _is__WEBPACK_IMPORTED_MODULE_0__.isThenable)(value)) {
                            void value.then(_this._resolve, _this._reject);
                            return;
                        }
                        _this._state = state;
                        _this._value = value;
                        _this._executeHandlers();
                    };
                    this._executeHandlers = function() {
                        if (0 === _this._state) return;
                        var cachedHandlers = _this._handlers.slice();
                        _this._handlers = [];
                        cachedHandlers.forEach((function(handler) {
                            if (handler[0]) return;
                            if (1 === _this._state) handler[1](_this._value);
                            if (2 === _this._state) handler[2](_this._value);
                            handler[0] = true;
                        }));
                    };
                    try {
                        executor(this._resolve, this._reject);
                    } catch (e) {
                        this._reject(e);
                    }
                }
                SyncPromise.prototype.then = function(onfulfilled, onrejected) {
                    var _this = this;
                    return new SyncPromise((function(resolve, reject) {
                        _this._handlers.push([ false, function(result) {
                            if (!onfulfilled) resolve(result); else try {
                                resolve(onfulfilled(result));
                            } catch (e) {
                                reject(e);
                            }
                        }, function(reason) {
                            if (!onrejected) reject(reason); else try {
                                resolve(onrejected(reason));
                            } catch (e) {
                                reject(e);
                            }
                        } ]);
                        _this._executeHandlers();
                    }));
                };
                SyncPromise.prototype.catch = function(onrejected) {
                    return this.then((function(val) {
                        return val;
                    }), onrejected);
                };
                SyncPromise.prototype.finally = function(onfinally) {
                    var _this = this;
                    return new SyncPromise((function(resolve, reject) {
                        var val;
                        var isRejected;
                        return _this.then((function(value) {
                            isRejected = false;
                            val = value;
                            if (onfinally) onfinally();
                        }), (function(reason) {
                            isRejected = true;
                            val = reason;
                            if (onfinally) onfinally();
                        })).then((function() {
                            if (isRejected) {
                                reject(val);
                                return;
                            }
                            resolve(val);
                        }));
                    }));
                };
                return SyncPromise;
            }();
        },
        "../shared/browser/node_modules/@sentry/utils/esm/time.js": (module, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.d(__webpack_exports__, {
                dateTimestampInSeconds: () => dateTimestampInSeconds,
                timestampInSeconds: () => timestampInSeconds,
                timestampWithMs: () => timestampWithMs,
                browserPerformanceTimeOrigin: () => browserPerformanceTimeOrigin
            });
            var _global__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__("../shared/browser/node_modules/@sentry/utils/esm/global.js");
            var _node__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__("../shared/browser/node_modules/@sentry/utils/esm/node.js");
            module = __webpack_require__.hmd(module);
            var dateTimestampSource = {
                nowSeconds: function() {
                    return Date.now() / 1e3;
                }
            };
            function getBrowserPerformance() {
                var performance = (0, _global__WEBPACK_IMPORTED_MODULE_0__.getGlobalObject)().performance;
                if (!performance || !performance.now) return;
                var timeOrigin = Date.now() - performance.now();
                return {
                    now: function() {
                        return performance.now();
                    },
                    timeOrigin
                };
            }
            function getNodePerformance() {
                try {
                    var perfHooks = (0, _node__WEBPACK_IMPORTED_MODULE_1__.dynamicRequire)(module, "perf_hooks");
                    return perfHooks.performance;
                } catch (_) {
                    return;
                }
            }
            var platformPerformance = (0, _node__WEBPACK_IMPORTED_MODULE_1__.isNodeEnv)() ? getNodePerformance() : getBrowserPerformance();
            var timestampSource = void 0 === platformPerformance ? dateTimestampSource : {
                nowSeconds: function() {
                    return (platformPerformance.timeOrigin + platformPerformance.now()) / 1e3;
                }
            };
            var dateTimestampInSeconds = dateTimestampSource.nowSeconds.bind(dateTimestampSource);
            var timestampInSeconds = timestampSource.nowSeconds.bind(timestampSource);
            var timestampWithMs = timestampInSeconds;
            var browserPerformanceTimeOrigin = function() {
                var performance = (0, _global__WEBPACK_IMPORTED_MODULE_0__.getGlobalObject)().performance;
                if (!performance || !performance.now) {
                    "none";
                    return;
                }
                var threshold = 3600 * 1e3;
                var performanceNow = performance.now();
                var dateNow = Date.now();
                var timeOriginDelta = performance.timeOrigin ? Math.abs(performance.timeOrigin + performanceNow - dateNow) : threshold;
                var timeOriginIsReliable = timeOriginDelta < threshold;
                var navigationStart = performance.timing && performance.timing.navigationStart;
                var hasNavigationStart = "number" === typeof navigationStart;
                var navigationStartDelta = hasNavigationStart ? Math.abs(navigationStart + performanceNow - dateNow) : threshold;
                var navigationStartIsReliable = navigationStartDelta < threshold;
                if (timeOriginIsReliable || navigationStartIsReliable) if (timeOriginDelta <= navigationStartDelta) {
                    "timeOrigin";
                    return performance.timeOrigin;
                } else {
                    "navigationStart";
                    return navigationStart;
                }
                "dateNow";
                return dateNow;
            }();
        },
        "../shared/browser/node_modules/core-js/internals/a-callable.js": (module, __unused_webpack_exports, __webpack_require__) => {
            var isCallable = __webpack_require__("../shared/browser/node_modules/core-js/internals/is-callable.js");
            var tryToString = __webpack_require__("../shared/browser/node_modules/core-js/internals/try-to-string.js");
            var $TypeError = TypeError;
            module.exports = function(argument) {
                if (isCallable(argument)) return argument;
                throw $TypeError(tryToString(argument) + " is not a function");
            };
        },
        "../shared/browser/node_modules/core-js/internals/a-constructor.js": (module, __unused_webpack_exports, __webpack_require__) => {
            var isConstructor = __webpack_require__("../shared/browser/node_modules/core-js/internals/is-constructor.js");
            var tryToString = __webpack_require__("../shared/browser/node_modules/core-js/internals/try-to-string.js");
            var $TypeError = TypeError;
            module.exports = function(argument) {
                if (isConstructor(argument)) return argument;
                throw $TypeError(tryToString(argument) + " is not a constructor");
            };
        },
        "../shared/browser/node_modules/core-js/internals/a-possible-prototype.js": (module, __unused_webpack_exports, __webpack_require__) => {
            var isCallable = __webpack_require__("../shared/browser/node_modules/core-js/internals/is-callable.js");
            var $String = String;
            var $TypeError = TypeError;
            module.exports = function(argument) {
                if ("object" == typeof argument || isCallable(argument)) return argument;
                throw $TypeError("Can't set " + $String(argument) + " as a prototype");
            };
        },
        "../shared/browser/node_modules/core-js/internals/add-to-unscopables.js": (module, __unused_webpack_exports, __webpack_require__) => {
            var wellKnownSymbol = __webpack_require__("../shared/browser/node_modules/core-js/internals/well-known-symbol.js");
            var create = __webpack_require__("../shared/browser/node_modules/core-js/internals/object-create.js");
            var defineProperty = __webpack_require__("../shared/browser/node_modules/core-js/internals/object-define-property.js").f;
            var UNSCOPABLES = wellKnownSymbol("unscopables");
            var ArrayPrototype = Array.prototype;
            if (void 0 == ArrayPrototype[UNSCOPABLES]) defineProperty(ArrayPrototype, UNSCOPABLES, {
                configurable: true,
                value: create(null)
            });
            module.exports = function(key) {
                ArrayPrototype[UNSCOPABLES][key] = true;
            };
        },
        "../shared/browser/node_modules/core-js/internals/advance-string-index.js": (module, __unused_webpack_exports, __webpack_require__) => {
            "use strict";
            var charAt = __webpack_require__("../shared/browser/node_modules/core-js/internals/string-multibyte.js").charAt;
            module.exports = function(S, index, unicode) {
                return index + (unicode ? charAt(S, index).length : 1);
            };
        },
        "../shared/browser/node_modules/core-js/internals/an-object.js": (module, __unused_webpack_exports, __webpack_require__) => {
            var isObject = __webpack_require__("../shared/browser/node_modules/core-js/internals/is-object.js");
            var $String = String;
            var $TypeError = TypeError;
            module.exports = function(argument) {
                if (isObject(argument)) return argument;
                throw $TypeError($String(argument) + " is not an object");
            };
        },
        "../shared/browser/node_modules/core-js/internals/array-for-each.js": (module, __unused_webpack_exports, __webpack_require__) => {
            "use strict";
            var $forEach = __webpack_require__("../shared/browser/node_modules/core-js/internals/array-iteration.js").forEach;
            var arrayMethodIsStrict = __webpack_require__("../shared/browser/node_modules/core-js/internals/array-method-is-strict.js");
            var STRICT_METHOD = arrayMethodIsStrict("forEach");
            module.exports = !STRICT_METHOD ? function(callbackfn) {
                return $forEach(this, callbackfn, arguments.length > 1 ? arguments[1] : void 0);
            } : [].forEach;
        },
        "../shared/browser/node_modules/core-js/internals/array-includes.js": (module, __unused_webpack_exports, __webpack_require__) => {
            var toIndexedObject = __webpack_require__("../shared/browser/node_modules/core-js/internals/to-indexed-object.js");
            var toAbsoluteIndex = __webpack_require__("../shared/browser/node_modules/core-js/internals/to-absolute-index.js");
            var lengthOfArrayLike = __webpack_require__("../shared/browser/node_modules/core-js/internals/length-of-array-like.js");
            var createMethod = function(IS_INCLUDES) {
                return function($this, el, fromIndex) {
                    var O = toIndexedObject($this);
                    var length = lengthOfArrayLike(O);
                    var index = toAbsoluteIndex(fromIndex, length);
                    var value;
                    if (IS_INCLUDES && el != el) while (length > index) {
                        value = O[index++];
                        if (value != value) return true;
                    } else for (;length > index; index++) if ((IS_INCLUDES || index in O) && O[index] === el) return IS_INCLUDES || index || 0;
                    return !IS_INCLUDES && -1;
                };
            };
            module.exports = {
                includes: createMethod(true),
                indexOf: createMethod(false)
            };
        },
        "../shared/browser/node_modules/core-js/internals/array-iteration.js": (module, __unused_webpack_exports, __webpack_require__) => {
            var bind = __webpack_require__("../shared/browser/node_modules/core-js/internals/function-bind-context.js");
            var uncurryThis = __webpack_require__("../shared/browser/node_modules/core-js/internals/function-uncurry-this.js");
            var IndexedObject = __webpack_require__("../shared/browser/node_modules/core-js/internals/indexed-object.js");
            var toObject = __webpack_require__("../shared/browser/node_modules/core-js/internals/to-object.js");
            var lengthOfArrayLike = __webpack_require__("../shared/browser/node_modules/core-js/internals/length-of-array-like.js");
            var arraySpeciesCreate = __webpack_require__("../shared/browser/node_modules/core-js/internals/array-species-create.js");
            var push = uncurryThis([].push);
            var createMethod = function(TYPE) {
                var IS_MAP = 1 == TYPE;
                var IS_FILTER = 2 == TYPE;
                var IS_SOME = 3 == TYPE;
                var IS_EVERY = 4 == TYPE;
                var IS_FIND_INDEX = 6 == TYPE;
                var IS_FILTER_REJECT = 7 == TYPE;
                var NO_HOLES = 5 == TYPE || IS_FIND_INDEX;
                return function($this, callbackfn, that, specificCreate) {
                    var O = toObject($this);
                    var self = IndexedObject(O);
                    var boundFunction = bind(callbackfn, that);
                    var length = lengthOfArrayLike(self);
                    var index = 0;
                    var create = specificCreate || arraySpeciesCreate;
                    var target = IS_MAP ? create($this, length) : IS_FILTER || IS_FILTER_REJECT ? create($this, 0) : void 0;
                    var value, result;
                    for (;length > index; index++) if (NO_HOLES || index in self) {
                        value = self[index];
                        result = boundFunction(value, index, O);
                        if (TYPE) if (IS_MAP) target[index] = result; else if (result) switch (TYPE) {
                          case 3:
                            return true;

                          case 5:
                            return value;

                          case 6:
                            return index;

                          case 2:
                            push(target, value);
                        } else switch (TYPE) {
                          case 4:
                            return false;

                          case 7:
                            push(target, value);
                        }
                    }
                    return IS_FIND_INDEX ? -1 : IS_SOME || IS_EVERY ? IS_EVERY : target;
                };
            };
            module.exports = {
                forEach: createMethod(0),
                map: createMethod(1),
                filter: createMethod(2),
                some: createMethod(3),
                every: createMethod(4),
                find: createMethod(5),
                findIndex: createMethod(6),
                filterReject: createMethod(7)
            };
        },
        "../shared/browser/node_modules/core-js/internals/array-method-has-species-support.js": (module, __unused_webpack_exports, __webpack_require__) => {
            var fails = __webpack_require__("../shared/browser/node_modules/core-js/internals/fails.js");
            var wellKnownSymbol = __webpack_require__("../shared/browser/node_modules/core-js/internals/well-known-symbol.js");
            var V8_VERSION = __webpack_require__("../shared/browser/node_modules/core-js/internals/engine-v8-version.js");
            var SPECIES = wellKnownSymbol("species");
            module.exports = function(METHOD_NAME) {
                return V8_VERSION >= 51 || !fails((function() {
                    var array = [];
                    var constructor = array.constructor = {};
                    constructor[SPECIES] = function() {
                        return {
                            foo: 1
                        };
                    };
                    return 1 !== array[METHOD_NAME](Boolean).foo;
                }));
            };
        },
        "../shared/browser/node_modules/core-js/internals/array-method-is-strict.js": (module, __unused_webpack_exports, __webpack_require__) => {
            "use strict";
            var fails = __webpack_require__("../shared/browser/node_modules/core-js/internals/fails.js");
            module.exports = function(METHOD_NAME, argument) {
                var method = [][METHOD_NAME];
                return !!method && fails((function() {
                    method.call(null, argument || function() {
                        return 1;
                    }, 1);
                }));
            };
        },
        "../shared/browser/node_modules/core-js/internals/array-slice-simple.js": (module, __unused_webpack_exports, __webpack_require__) => {
            var toAbsoluteIndex = __webpack_require__("../shared/browser/node_modules/core-js/internals/to-absolute-index.js");
            var lengthOfArrayLike = __webpack_require__("../shared/browser/node_modules/core-js/internals/length-of-array-like.js");
            var createProperty = __webpack_require__("../shared/browser/node_modules/core-js/internals/create-property.js");
            var $Array = Array;
            var max = Math.max;
            module.exports = function(O, start, end) {
                var length = lengthOfArrayLike(O);
                var k = toAbsoluteIndex(start, length);
                var fin = toAbsoluteIndex(void 0 === end ? length : end, length);
                var result = $Array(max(fin - k, 0));
                for (var n = 0; k < fin; k++, n++) createProperty(result, n, O[k]);
                result.length = n;
                return result;
            };
        },
        "../shared/browser/node_modules/core-js/internals/array-slice.js": (module, __unused_webpack_exports, __webpack_require__) => {
            var uncurryThis = __webpack_require__("../shared/browser/node_modules/core-js/internals/function-uncurry-this.js");
            module.exports = uncurryThis([].slice);
        },
        "../shared/browser/node_modules/core-js/internals/array-species-constructor.js": (module, __unused_webpack_exports, __webpack_require__) => {
            var isArray = __webpack_require__("../shared/browser/node_modules/core-js/internals/is-array.js");
            var isConstructor = __webpack_require__("../shared/browser/node_modules/core-js/internals/is-constructor.js");
            var isObject = __webpack_require__("../shared/browser/node_modules/core-js/internals/is-object.js");
            var wellKnownSymbol = __webpack_require__("../shared/browser/node_modules/core-js/internals/well-known-symbol.js");
            var SPECIES = wellKnownSymbol("species");
            var $Array = Array;
            module.exports = function(originalArray) {
                var C;
                if (isArray(originalArray)) {
                    C = originalArray.constructor;
                    if (isConstructor(C) && (C === $Array || isArray(C.prototype))) C = void 0; else if (isObject(C)) {
                        C = C[SPECIES];
                        if (null === C) C = void 0;
                    }
                }
                return void 0 === C ? $Array : C;
            };
        },
        "../shared/browser/node_modules/core-js/internals/array-species-create.js": (module, __unused_webpack_exports, __webpack_require__) => {
            var arraySpeciesConstructor = __webpack_require__("../shared/browser/node_modules/core-js/internals/array-species-constructor.js");
            module.exports = function(originalArray, length) {
                return new (arraySpeciesConstructor(originalArray))(0 === length ? 0 : length);
            };
        },
        "../shared/browser/node_modules/core-js/internals/classof-raw.js": (module, __unused_webpack_exports, __webpack_require__) => {
            var uncurryThis = __webpack_require__("../shared/browser/node_modules/core-js/internals/function-uncurry-this.js");
            var toString = uncurryThis({}.toString);
            var stringSlice = uncurryThis("".slice);
            module.exports = function(it) {
                return stringSlice(toString(it), 8, -1);
            };
        },
        "../shared/browser/node_modules/core-js/internals/classof.js": (module, __unused_webpack_exports, __webpack_require__) => {
            var TO_STRING_TAG_SUPPORT = __webpack_require__("../shared/browser/node_modules/core-js/internals/to-string-tag-support.js");
            var isCallable = __webpack_require__("../shared/browser/node_modules/core-js/internals/is-callable.js");
            var classofRaw = __webpack_require__("../shared/browser/node_modules/core-js/internals/classof-raw.js");
            var wellKnownSymbol = __webpack_require__("../shared/browser/node_modules/core-js/internals/well-known-symbol.js");
            var TO_STRING_TAG = wellKnownSymbol("toStringTag");
            var $Object = Object;
            var CORRECT_ARGUMENTS = "Arguments" == classofRaw(function() {
                return arguments;
            }());
            var tryGet = function(it, key) {
                try {
                    return it[key];
                } catch (error) {}
            };
            module.exports = TO_STRING_TAG_SUPPORT ? classofRaw : function(it) {
                var O, tag, result;
                return void 0 === it ? "Undefined" : null === it ? "Null" : "string" == typeof (tag = tryGet(O = $Object(it), TO_STRING_TAG)) ? tag : CORRECT_ARGUMENTS ? classofRaw(O) : "Object" == (result = classofRaw(O)) && isCallable(O.callee) ? "Arguments" : result;
            };
        },
        "../shared/browser/node_modules/core-js/internals/copy-constructor-properties.js": (module, __unused_webpack_exports, __webpack_require__) => {
            var hasOwn = __webpack_require__("../shared/browser/node_modules/core-js/internals/has-own-property.js");
            var ownKeys = __webpack_require__("../shared/browser/node_modules/core-js/internals/own-keys.js");
            var getOwnPropertyDescriptorModule = __webpack_require__("../shared/browser/node_modules/core-js/internals/object-get-own-property-descriptor.js");
            var definePropertyModule = __webpack_require__("../shared/browser/node_modules/core-js/internals/object-define-property.js");
            module.exports = function(target, source, exceptions) {
                var keys = ownKeys(source);
                var defineProperty = definePropertyModule.f;
                var getOwnPropertyDescriptor = getOwnPropertyDescriptorModule.f;
                for (var i = 0; i < keys.length; i++) {
                    var key = keys[i];
                    if (!hasOwn(target, key) && !(exceptions && hasOwn(exceptions, key))) defineProperty(target, key, getOwnPropertyDescriptor(source, key));
                }
            };
        },
        "../shared/browser/node_modules/core-js/internals/correct-is-regexp-logic.js": (module, __unused_webpack_exports, __webpack_require__) => {
            var wellKnownSymbol = __webpack_require__("../shared/browser/node_modules/core-js/internals/well-known-symbol.js");
            var MATCH = wellKnownSymbol("match");
            module.exports = function(METHOD_NAME) {
                var regexp = /./;
                try {
                    "/./"[METHOD_NAME](regexp);
                } catch (error1) {
                    try {
                        regexp[MATCH] = false;
                        return "/./"[METHOD_NAME](regexp);
                    } catch (error2) {}
                }
                return false;
            };
        },
        "../shared/browser/node_modules/core-js/internals/correct-prototype-getter.js": (module, __unused_webpack_exports, __webpack_require__) => {
            var fails = __webpack_require__("../shared/browser/node_modules/core-js/internals/fails.js");
            module.exports = !fails((function() {
                function F() {}
                F.prototype.constructor = null;
                return Object.getPrototypeOf(new F) !== F.prototype;
            }));
        },
        "../shared/browser/node_modules/core-js/internals/create-non-enumerable-property.js": (module, __unused_webpack_exports, __webpack_require__) => {
            var DESCRIPTORS = __webpack_require__("../shared/browser/node_modules/core-js/internals/descriptors.js");
            var definePropertyModule = __webpack_require__("../shared/browser/node_modules/core-js/internals/object-define-property.js");
            var createPropertyDescriptor = __webpack_require__("../shared/browser/node_modules/core-js/internals/create-property-descriptor.js");
            module.exports = DESCRIPTORS ? function(object, key, value) {
                return definePropertyModule.f(object, key, createPropertyDescriptor(1, value));
            } : function(object, key, value) {
                object[key] = value;
                return object;
            };
        },
        "../shared/browser/node_modules/core-js/internals/create-property-descriptor.js": module => {
            module.exports = function(bitmap, value) {
                return {
                    enumerable: !(1 & bitmap),
                    configurable: !(2 & bitmap),
                    writable: !(4 & bitmap),
                    value
                };
            };
        },
        "../shared/browser/node_modules/core-js/internals/create-property.js": (module, __unused_webpack_exports, __webpack_require__) => {
            "use strict";
            var toPropertyKey = __webpack_require__("../shared/browser/node_modules/core-js/internals/to-property-key.js");
            var definePropertyModule = __webpack_require__("../shared/browser/node_modules/core-js/internals/object-define-property.js");
            var createPropertyDescriptor = __webpack_require__("../shared/browser/node_modules/core-js/internals/create-property-descriptor.js");
            module.exports = function(object, key, value) {
                var propertyKey = toPropertyKey(key);
                if (propertyKey in object) definePropertyModule.f(object, propertyKey, createPropertyDescriptor(0, value)); else object[propertyKey] = value;
            };
        },
        "../shared/browser/node_modules/core-js/internals/define-built-in.js": (module, __unused_webpack_exports, __webpack_require__) => {
            var isCallable = __webpack_require__("../shared/browser/node_modules/core-js/internals/is-callable.js");
            var definePropertyModule = __webpack_require__("../shared/browser/node_modules/core-js/internals/object-define-property.js");
            var makeBuiltIn = __webpack_require__("../shared/browser/node_modules/core-js/internals/make-built-in.js");
            var defineGlobalProperty = __webpack_require__("../shared/browser/node_modules/core-js/internals/define-global-property.js");
            module.exports = function(O, key, value, options) {
                if (!options) options = {};
                var simple = options.enumerable;
                var name = void 0 !== options.name ? options.name : key;
                if (isCallable(value)) makeBuiltIn(value, name, options);
                if (options.global) if (simple) O[key] = value; else defineGlobalProperty(key, value); else {
                    try {
                        if (!options.unsafe) delete O[key]; else if (O[key]) simple = true;
                    } catch (error) {}
                    if (simple) O[key] = value; else definePropertyModule.f(O, key, {
                        value,
                        enumerable: false,
                        configurable: !options.nonConfigurable,
                        writable: !options.nonWritable
                    });
                }
                return O;
            };
        },
        "../shared/browser/node_modules/core-js/internals/define-global-property.js": (module, __unused_webpack_exports, __webpack_require__) => {
            var global = __webpack_require__("../shared/browser/node_modules/core-js/internals/global.js");
            var defineProperty = Object.defineProperty;
            module.exports = function(key, value) {
                try {
                    defineProperty(global, key, {
                        value,
                        configurable: true,
                        writable: true
                    });
                } catch (error) {
                    global[key] = value;
                }
                return value;
            };
        },
        "../shared/browser/node_modules/core-js/internals/descriptors.js": (module, __unused_webpack_exports, __webpack_require__) => {
            var fails = __webpack_require__("../shared/browser/node_modules/core-js/internals/fails.js");
            module.exports = !fails((function() {
                return 7 != Object.defineProperty({}, 1, {
                    get: function() {
                        return 7;
                    }
                })[1];
            }));
        },
        "../shared/browser/node_modules/core-js/internals/document-create-element.js": (module, __unused_webpack_exports, __webpack_require__) => {
            var global = __webpack_require__("../shared/browser/node_modules/core-js/internals/global.js");
            var isObject = __webpack_require__("../shared/browser/node_modules/core-js/internals/is-object.js");
            var document = global.document;
            var EXISTS = isObject(document) && isObject(document.createElement);
            module.exports = function(it) {
                return EXISTS ? document.createElement(it) : {};
            };
        },
        "../shared/browser/node_modules/core-js/internals/does-not-exceed-safe-integer.js": module => {
            var $TypeError = TypeError;
            var MAX_SAFE_INTEGER = 9007199254740991;
            module.exports = function(it) {
                if (it > MAX_SAFE_INTEGER) throw $TypeError("Maximum allowed index exceeded");
                return it;
            };
        },
        "../shared/browser/node_modules/core-js/internals/dom-iterables.js": module => {
            module.exports = {
                CSSRuleList: 0,
                CSSStyleDeclaration: 0,
                CSSValueList: 0,
                ClientRectList: 0,
                DOMRectList: 0,
                DOMStringList: 0,
                DOMTokenList: 1,
                DataTransferItemList: 0,
                FileList: 0,
                HTMLAllCollection: 0,
                HTMLCollection: 0,
                HTMLFormElement: 0,
                HTMLSelectElement: 0,
                MediaList: 0,
                MimeTypeArray: 0,
                NamedNodeMap: 0,
                NodeList: 1,
                PaintRequestList: 0,
                Plugin: 0,
                PluginArray: 0,
                SVGLengthList: 0,
                SVGNumberList: 0,
                SVGPathSegList: 0,
                SVGPointList: 0,
                SVGStringList: 0,
                SVGTransformList: 0,
                SourceBufferList: 0,
                StyleSheetList: 0,
                TextTrackCueList: 0,
                TextTrackList: 0,
                TouchList: 0
            };
        },
        "../shared/browser/node_modules/core-js/internals/dom-token-list-prototype.js": (module, __unused_webpack_exports, __webpack_require__) => {
            var documentCreateElement = __webpack_require__("../shared/browser/node_modules/core-js/internals/document-create-element.js");
            var classList = documentCreateElement("span").classList;
            var DOMTokenListPrototype = classList && classList.constructor && classList.constructor.prototype;
            module.exports = DOMTokenListPrototype === Object.prototype ? void 0 : DOMTokenListPrototype;
        },
        "../shared/browser/node_modules/core-js/internals/engine-user-agent.js": (module, __unused_webpack_exports, __webpack_require__) => {
            var getBuiltIn = __webpack_require__("../shared/browser/node_modules/core-js/internals/get-built-in.js");
            module.exports = getBuiltIn("navigator", "userAgent") || "";
        },
        "../shared/browser/node_modules/core-js/internals/engine-v8-version.js": (module, __unused_webpack_exports, __webpack_require__) => {
            var global = __webpack_require__("../shared/browser/node_modules/core-js/internals/global.js");
            var userAgent = __webpack_require__("../shared/browser/node_modules/core-js/internals/engine-user-agent.js");
            var process = global.process;
            var Deno = global.Deno;
            var versions = process && process.versions || Deno && Deno.version;
            var v8 = versions && versions.v8;
            var match, version;
            if (v8) {
                match = v8.split(".");
                version = match[0] > 0 && match[0] < 4 ? 1 : +(match[0] + match[1]);
            }
            if (!version && userAgent) {
                match = userAgent.match(/Edge\/(\d+)/);
                if (!match || match[1] >= 74) {
                    match = userAgent.match(/Chrome\/(\d+)/);
                    if (match) version = +match[1];
                }
            }
            module.exports = version;
        },
        "../shared/browser/node_modules/core-js/internals/enum-bug-keys.js": module => {
            module.exports = [ "constructor", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "toLocaleString", "toString", "valueOf" ];
        },
        "../shared/browser/node_modules/core-js/internals/export.js": (module, __unused_webpack_exports, __webpack_require__) => {
            var global = __webpack_require__("../shared/browser/node_modules/core-js/internals/global.js");
            var getOwnPropertyDescriptor = __webpack_require__("../shared/browser/node_modules/core-js/internals/object-get-own-property-descriptor.js").f;
            var createNonEnumerableProperty = __webpack_require__("../shared/browser/node_modules/core-js/internals/create-non-enumerable-property.js");
            var defineBuiltIn = __webpack_require__("../shared/browser/node_modules/core-js/internals/define-built-in.js");
            var defineGlobalProperty = __webpack_require__("../shared/browser/node_modules/core-js/internals/define-global-property.js");
            var copyConstructorProperties = __webpack_require__("../shared/browser/node_modules/core-js/internals/copy-constructor-properties.js");
            var isForced = __webpack_require__("../shared/browser/node_modules/core-js/internals/is-forced.js");
            module.exports = function(options, source) {
                var TARGET = options.target;
                var GLOBAL = options.global;
                var STATIC = options.stat;
                var FORCED, target, key, targetProperty, sourceProperty, descriptor;
                if (GLOBAL) target = global; else if (STATIC) target = global[TARGET] || defineGlobalProperty(TARGET, {}); else target = (global[TARGET] || {}).prototype;
                if (target) for (key in source) {
                    sourceProperty = source[key];
                    if (options.dontCallGetSet) {
                        descriptor = getOwnPropertyDescriptor(target, key);
                        targetProperty = descriptor && descriptor.value;
                    } else targetProperty = target[key];
                    FORCED = isForced(GLOBAL ? key : TARGET + (STATIC ? "." : "#") + key, options.forced);
                    if (!FORCED && void 0 !== targetProperty) {
                        if (typeof sourceProperty == typeof targetProperty) continue;
                        copyConstructorProperties(sourceProperty, targetProperty);
                    }
                    if (options.sham || targetProperty && targetProperty.sham) createNonEnumerableProperty(sourceProperty, "sham", true);
                    defineBuiltIn(target, key, sourceProperty, options);
                }
            };
        },
        "../shared/browser/node_modules/core-js/internals/fails.js": module => {
            module.exports = function(exec) {
                try {
                    return !!exec();
                } catch (error) {
                    return true;
                }
            };
        },
        "../shared/browser/node_modules/core-js/internals/fix-regexp-well-known-symbol-logic.js": (module, __unused_webpack_exports, __webpack_require__) => {
            "use strict";
            __webpack_require__("../shared/browser/node_modules/core-js/modules/es.regexp.exec.js");
            var uncurryThis = __webpack_require__("../shared/browser/node_modules/core-js/internals/function-uncurry-this.js");
            var defineBuiltIn = __webpack_require__("../shared/browser/node_modules/core-js/internals/define-built-in.js");
            var regexpExec = __webpack_require__("../shared/browser/node_modules/core-js/internals/regexp-exec.js");
            var fails = __webpack_require__("../shared/browser/node_modules/core-js/internals/fails.js");
            var wellKnownSymbol = __webpack_require__("../shared/browser/node_modules/core-js/internals/well-known-symbol.js");
            var createNonEnumerableProperty = __webpack_require__("../shared/browser/node_modules/core-js/internals/create-non-enumerable-property.js");
            var SPECIES = wellKnownSymbol("species");
            var RegExpPrototype = RegExp.prototype;
            module.exports = function(KEY, exec, FORCED, SHAM) {
                var SYMBOL = wellKnownSymbol(KEY);
                var DELEGATES_TO_SYMBOL = !fails((function() {
                    var O = {};
                    O[SYMBOL] = function() {
                        return 7;
                    };
                    return 7 != ""[KEY](O);
                }));
                var DELEGATES_TO_EXEC = DELEGATES_TO_SYMBOL && !fails((function() {
                    var execCalled = false;
                    var re = /a/;
                    if ("split" === KEY) {
                        re = {};
                        re.constructor = {};
                        re.constructor[SPECIES] = function() {
                            return re;
                        };
                        re.flags = "";
                        re[SYMBOL] = /./[SYMBOL];
                    }
                    re.exec = function() {
                        execCalled = true;
                        return null;
                    };
                    re[SYMBOL]("");
                    return !execCalled;
                }));
                if (!DELEGATES_TO_SYMBOL || !DELEGATES_TO_EXEC || FORCED) {
                    var uncurriedNativeRegExpMethod = uncurryThis(/./[SYMBOL]);
                    var methods = exec(SYMBOL, ""[KEY], (function(nativeMethod, regexp, str, arg2, forceStringMethod) {
                        var uncurriedNativeMethod = uncurryThis(nativeMethod);
                        var $exec = regexp.exec;
                        if ($exec === regexpExec || $exec === RegExpPrototype.exec) {
                            if (DELEGATES_TO_SYMBOL && !forceStringMethod) return {
                                done: true,
                                value: uncurriedNativeRegExpMethod(regexp, str, arg2)
                            };
                            return {
                                done: true,
                                value: uncurriedNativeMethod(str, regexp, arg2)
                            };
                        }
                        return {
                            done: false
                        };
                    }));
                    defineBuiltIn(String.prototype, KEY, methods[0]);
                    defineBuiltIn(RegExpPrototype, SYMBOL, methods[1]);
                }
                if (SHAM) createNonEnumerableProperty(RegExpPrototype[SYMBOL], "sham", true);
            };
        },
        "../shared/browser/node_modules/core-js/internals/function-apply.js": (module, __unused_webpack_exports, __webpack_require__) => {
            var NATIVE_BIND = __webpack_require__("../shared/browser/node_modules/core-js/internals/function-bind-native.js");
            var FunctionPrototype = Function.prototype;
            var apply = FunctionPrototype.apply;
            var call = FunctionPrototype.call;
            module.exports = "object" == typeof Reflect && Reflect.apply || (NATIVE_BIND ? call.bind(apply) : function() {
                return call.apply(apply, arguments);
            });
        },
        "../shared/browser/node_modules/core-js/internals/function-bind-context.js": (module, __unused_webpack_exports, __webpack_require__) => {
            var uncurryThis = __webpack_require__("../shared/browser/node_modules/core-js/internals/function-uncurry-this.js");
            var aCallable = __webpack_require__("../shared/browser/node_modules/core-js/internals/a-callable.js");
            var NATIVE_BIND = __webpack_require__("../shared/browser/node_modules/core-js/internals/function-bind-native.js");
            var bind = uncurryThis(uncurryThis.bind);
            module.exports = function(fn, that) {
                aCallable(fn);
                return void 0 === that ? fn : NATIVE_BIND ? bind(fn, that) : function() {
                    return fn.apply(that, arguments);
                };
            };
        },
        "../shared/browser/node_modules/core-js/internals/function-bind-native.js": (module, __unused_webpack_exports, __webpack_require__) => {
            var fails = __webpack_require__("../shared/browser/node_modules/core-js/internals/fails.js");
            module.exports = !fails((function() {
                var test = function() {}.bind();
                return "function" != typeof test || test.hasOwnProperty("prototype");
            }));
        },
        "../shared/browser/node_modules/core-js/internals/function-call.js": (module, __unused_webpack_exports, __webpack_require__) => {
            var NATIVE_BIND = __webpack_require__("../shared/browser/node_modules/core-js/internals/function-bind-native.js");
            var call = Function.prototype.call;
            module.exports = NATIVE_BIND ? call.bind(call) : function() {
                return call.apply(call, arguments);
            };
        },
        "../shared/browser/node_modules/core-js/internals/function-name.js": (module, __unused_webpack_exports, __webpack_require__) => {
            var DESCRIPTORS = __webpack_require__("../shared/browser/node_modules/core-js/internals/descriptors.js");
            var hasOwn = __webpack_require__("../shared/browser/node_modules/core-js/internals/has-own-property.js");
            var FunctionPrototype = Function.prototype;
            var getDescriptor = DESCRIPTORS && Object.getOwnPropertyDescriptor;
            var EXISTS = hasOwn(FunctionPrototype, "name");
            var PROPER = EXISTS && "something" === function() {}.name;
            var CONFIGURABLE = EXISTS && (!DESCRIPTORS || DESCRIPTORS && getDescriptor(FunctionPrototype, "name").configurable);
            module.exports = {
                EXISTS,
                PROPER,
                CONFIGURABLE
            };
        },
        "../shared/browser/node_modules/core-js/internals/function-uncurry-this.js": (module, __unused_webpack_exports, __webpack_require__) => {
            var NATIVE_BIND = __webpack_require__("../shared/browser/node_modules/core-js/internals/function-bind-native.js");
            var FunctionPrototype = Function.prototype;
            var bind = FunctionPrototype.bind;
            var call = FunctionPrototype.call;
            var uncurryThis = NATIVE_BIND && bind.bind(call, call);
            module.exports = NATIVE_BIND ? function(fn) {
                return fn && uncurryThis(fn);
            } : function(fn) {
                return fn && function() {
                    return call.apply(fn, arguments);
                };
            };
        },
        "../shared/browser/node_modules/core-js/internals/get-built-in.js": (module, __unused_webpack_exports, __webpack_require__) => {
            var global = __webpack_require__("../shared/browser/node_modules/core-js/internals/global.js");
            var isCallable = __webpack_require__("../shared/browser/node_modules/core-js/internals/is-callable.js");
            var aFunction = function(argument) {
                return isCallable(argument) ? argument : void 0;
            };
            module.exports = function(namespace, method) {
                return arguments.length < 2 ? aFunction(global[namespace]) : global[namespace] && global[namespace][method];
            };
        },
        "../shared/browser/node_modules/core-js/internals/get-method.js": (module, __unused_webpack_exports, __webpack_require__) => {
            var aCallable = __webpack_require__("../shared/browser/node_modules/core-js/internals/a-callable.js");
            var isNullOrUndefined = __webpack_require__("../shared/browser/node_modules/core-js/internals/is-null-or-undefined.js");
            module.exports = function(V, P) {
                var func = V[P];
                return isNullOrUndefined(func) ? void 0 : aCallable(func);
            };
        },
        "../shared/browser/node_modules/core-js/internals/global.js": (module, __unused_webpack_exports, __webpack_require__) => {
            var check = function(it) {
                return it && it.Math == Math && it;
            };
            module.exports = check("object" == typeof globalThis && globalThis) || check("object" == typeof window && window) || check("object" == typeof self && self) || check("object" == typeof __webpack_require__.g && __webpack_require__.g) || function() {
                return this;
            }() || Function("return this")();
        },
        "../shared/browser/node_modules/core-js/internals/has-own-property.js": (module, __unused_webpack_exports, __webpack_require__) => {
            var uncurryThis = __webpack_require__("../shared/browser/node_modules/core-js/internals/function-uncurry-this.js");
            var toObject = __webpack_require__("../shared/browser/node_modules/core-js/internals/to-object.js");
            var hasOwnProperty = uncurryThis({}.hasOwnProperty);
            module.exports = Object.hasOwn || function(it, key) {
                return hasOwnProperty(toObject(it), key);
            };
        },
        "../shared/browser/node_modules/core-js/internals/hidden-keys.js": module => {
            module.exports = {};
        },
        "../shared/browser/node_modules/core-js/internals/html.js": (module, __unused_webpack_exports, __webpack_require__) => {
            var getBuiltIn = __webpack_require__("../shared/browser/node_modules/core-js/internals/get-built-in.js");
            module.exports = getBuiltIn("document", "documentElement");
        },
        "../shared/browser/node_modules/core-js/internals/ie8-dom-define.js": (module, __unused_webpack_exports, __webpack_require__) => {
            var DESCRIPTORS = __webpack_require__("../shared/browser/node_modules/core-js/internals/descriptors.js");
            var fails = __webpack_require__("../shared/browser/node_modules/core-js/internals/fails.js");
            var createElement = __webpack_require__("../shared/browser/node_modules/core-js/internals/document-create-element.js");
            module.exports = !DESCRIPTORS && !fails((function() {
                return 7 != Object.defineProperty(createElement("div"), "a", {
                    get: function() {
                        return 7;
                    }
                }).a;
            }));
        },
        "../shared/browser/node_modules/core-js/internals/indexed-object.js": (module, __unused_webpack_exports, __webpack_require__) => {
            var uncurryThis = __webpack_require__("../shared/browser/node_modules/core-js/internals/function-uncurry-this.js");
            var fails = __webpack_require__("../shared/browser/node_modules/core-js/internals/fails.js");
            var classof = __webpack_require__("../shared/browser/node_modules/core-js/internals/classof-raw.js");
            var $Object = Object;
            var split = uncurryThis("".split);
            module.exports = fails((function() {
                return !$Object("z").propertyIsEnumerable(0);
            })) ? function(it) {
                return "String" == classof(it) ? split(it, "") : $Object(it);
            } : $Object;
        },
        "../shared/browser/node_modules/core-js/internals/inherit-if-required.js": (module, __unused_webpack_exports, __webpack_require__) => {
            var isCallable = __webpack_require__("../shared/browser/node_modules/core-js/internals/is-callable.js");
            var isObject = __webpack_require__("../shared/browser/node_modules/core-js/internals/is-object.js");
            var setPrototypeOf = __webpack_require__("../shared/browser/node_modules/core-js/internals/object-set-prototype-of.js");
            module.exports = function($this, dummy, Wrapper) {
                var NewTarget, NewTargetPrototype;
                if (setPrototypeOf && isCallable(NewTarget = dummy.constructor) && NewTarget !== Wrapper && isObject(NewTargetPrototype = NewTarget.prototype) && NewTargetPrototype !== Wrapper.prototype) setPrototypeOf($this, NewTargetPrototype);
                return $this;
            };
        },
        "../shared/browser/node_modules/core-js/internals/inspect-source.js": (module, __unused_webpack_exports, __webpack_require__) => {
            var uncurryThis = __webpack_require__("../shared/browser/node_modules/core-js/internals/function-uncurry-this.js");
            var isCallable = __webpack_require__("../shared/browser/node_modules/core-js/internals/is-callable.js");
            var store = __webpack_require__("../shared/browser/node_modules/core-js/internals/shared-store.js");
            var functionToString = uncurryThis(Function.toString);
            if (!isCallable(store.inspectSource)) store.inspectSource = function(it) {
                return functionToString(it);
            };
            module.exports = store.inspectSource;
        },
        "../shared/browser/node_modules/core-js/internals/internal-state.js": (module, __unused_webpack_exports, __webpack_require__) => {
            var NATIVE_WEAK_MAP = __webpack_require__("../shared/browser/node_modules/core-js/internals/weak-map-basic-detection.js");
            var global = __webpack_require__("../shared/browser/node_modules/core-js/internals/global.js");
            var uncurryThis = __webpack_require__("../shared/browser/node_modules/core-js/internals/function-uncurry-this.js");
            var isObject = __webpack_require__("../shared/browser/node_modules/core-js/internals/is-object.js");
            var createNonEnumerableProperty = __webpack_require__("../shared/browser/node_modules/core-js/internals/create-non-enumerable-property.js");
            var hasOwn = __webpack_require__("../shared/browser/node_modules/core-js/internals/has-own-property.js");
            var shared = __webpack_require__("../shared/browser/node_modules/core-js/internals/shared-store.js");
            var sharedKey = __webpack_require__("../shared/browser/node_modules/core-js/internals/shared-key.js");
            var hiddenKeys = __webpack_require__("../shared/browser/node_modules/core-js/internals/hidden-keys.js");
            var OBJECT_ALREADY_INITIALIZED = "Object already initialized";
            var TypeError = global.TypeError;
            var WeakMap = global.WeakMap;
            var set, get, has;
            var enforce = function(it) {
                return has(it) ? get(it) : set(it, {});
            };
            var getterFor = function(TYPE) {
                return function(it) {
                    var state;
                    if (!isObject(it) || (state = get(it)).type !== TYPE) throw TypeError("Incompatible receiver, " + TYPE + " required");
                    return state;
                };
            };
            if (NATIVE_WEAK_MAP || shared.state) {
                var store = shared.state || (shared.state = new WeakMap);
                var wmget = uncurryThis(store.get);
                var wmhas = uncurryThis(store.has);
                var wmset = uncurryThis(store.set);
                set = function(it, metadata) {
                    if (wmhas(store, it)) throw TypeError(OBJECT_ALREADY_INITIALIZED);
                    metadata.facade = it;
                    wmset(store, it, metadata);
                    return metadata;
                };
                get = function(it) {
                    return wmget(store, it) || {};
                };
                has = function(it) {
                    return wmhas(store, it);
                };
            } else {
                var STATE = sharedKey("state");
                hiddenKeys[STATE] = true;
                set = function(it, metadata) {
                    if (hasOwn(it, STATE)) throw TypeError(OBJECT_ALREADY_INITIALIZED);
                    metadata.facade = it;
                    createNonEnumerableProperty(it, STATE, metadata);
                    return metadata;
                };
                get = function(it) {
                    return hasOwn(it, STATE) ? it[STATE] : {};
                };
                has = function(it) {
                    return hasOwn(it, STATE);
                };
            }
            module.exports = {
                set,
                get,
                has,
                enforce,
                getterFor
            };
        },
        "../shared/browser/node_modules/core-js/internals/is-array.js": (module, __unused_webpack_exports, __webpack_require__) => {
            var classof = __webpack_require__("../shared/browser/node_modules/core-js/internals/classof-raw.js");
            module.exports = Array.isArray || function(argument) {
                return "Array" == classof(argument);
            };
        },
        "../shared/browser/node_modules/core-js/internals/is-callable.js": module => {
            module.exports = function(argument) {
                return "function" == typeof argument;
            };
        },
        "../shared/browser/node_modules/core-js/internals/is-constructor.js": (module, __unused_webpack_exports, __webpack_require__) => {
            var uncurryThis = __webpack_require__("../shared/browser/node_modules/core-js/internals/function-uncurry-this.js");
            var fails = __webpack_require__("../shared/browser/node_modules/core-js/internals/fails.js");
            var isCallable = __webpack_require__("../shared/browser/node_modules/core-js/internals/is-callable.js");
            var classof = __webpack_require__("../shared/browser/node_modules/core-js/internals/classof.js");
            var getBuiltIn = __webpack_require__("../shared/browser/node_modules/core-js/internals/get-built-in.js");
            var inspectSource = __webpack_require__("../shared/browser/node_modules/core-js/internals/inspect-source.js");
            var noop = function() {};
            var empty = [];
            var construct = getBuiltIn("Reflect", "construct");
            var constructorRegExp = /^\s*(?:class|function)\b/;
            var exec = uncurryThis(constructorRegExp.exec);
            var INCORRECT_TO_STRING = !constructorRegExp.exec(noop);
            var isConstructorModern = function(argument) {
                if (!isCallable(argument)) return false;
                try {
                    construct(noop, empty, argument);
                    return true;
                } catch (error) {
                    return false;
                }
            };
            var isConstructorLegacy = function(argument) {
                if (!isCallable(argument)) return false;
                switch (classof(argument)) {
                  case "AsyncFunction":
                  case "GeneratorFunction":
                  case "AsyncGeneratorFunction":
                    return false;
                }
                try {
                    return INCORRECT_TO_STRING || !!exec(constructorRegExp, inspectSource(argument));
                } catch (error) {
                    return true;
                }
            };
            isConstructorLegacy.sham = true;
            module.exports = !construct || fails((function() {
                var called;
                return isConstructorModern(isConstructorModern.call) || !isConstructorModern(Object) || !isConstructorModern((function() {
                    called = true;
                })) || called;
            })) ? isConstructorLegacy : isConstructorModern;
        },
        "../shared/browser/node_modules/core-js/internals/is-forced.js": (module, __unused_webpack_exports, __webpack_require__) => {
            var fails = __webpack_require__("../shared/browser/node_modules/core-js/internals/fails.js");
            var isCallable = __webpack_require__("../shared/browser/node_modules/core-js/internals/is-callable.js");
            var replacement = /#|\.prototype\./;
            var isForced = function(feature, detection) {
                var value = data[normalize(feature)];
                return value == POLYFILL ? true : value == NATIVE ? false : isCallable(detection) ? fails(detection) : !!detection;
            };
            var normalize = isForced.normalize = function(string) {
                return String(string).replace(replacement, ".").toLowerCase();
            };
            var data = isForced.data = {};
            var NATIVE = isForced.NATIVE = "N";
            var POLYFILL = isForced.POLYFILL = "P";
            module.exports = isForced;
        },
        "../shared/browser/node_modules/core-js/internals/is-null-or-undefined.js": module => {
            module.exports = function(it) {
                return null === it || void 0 === it;
            };
        },
        "../shared/browser/node_modules/core-js/internals/is-object.js": (module, __unused_webpack_exports, __webpack_require__) => {
            var isCallable = __webpack_require__("../shared/browser/node_modules/core-js/internals/is-callable.js");
            var documentAll = "object" == typeof document && document.all;
            var SPECIAL_DOCUMENT_ALL = "undefined" == typeof documentAll && void 0 !== documentAll;
            module.exports = SPECIAL_DOCUMENT_ALL ? function(it) {
                return "object" == typeof it ? null !== it : isCallable(it) || it === documentAll;
            } : function(it) {
                return "object" == typeof it ? null !== it : isCallable(it);
            };
        },
        "../shared/browser/node_modules/core-js/internals/is-pure.js": module => {
            module.exports = false;
        },
        "../shared/browser/node_modules/core-js/internals/is-regexp.js": (module, __unused_webpack_exports, __webpack_require__) => {
            var isObject = __webpack_require__("../shared/browser/node_modules/core-js/internals/is-object.js");
            var classof = __webpack_require__("../shared/browser/node_modules/core-js/internals/classof-raw.js");
            var wellKnownSymbol = __webpack_require__("../shared/browser/node_modules/core-js/internals/well-known-symbol.js");
            var MATCH = wellKnownSymbol("match");
            module.exports = function(it) {
                var isRegExp;
                return isObject(it) && (void 0 !== (isRegExp = it[MATCH]) ? !!isRegExp : "RegExp" == classof(it));
            };
        },
        "../shared/browser/node_modules/core-js/internals/is-symbol.js": (module, __unused_webpack_exports, __webpack_require__) => {
            var getBuiltIn = __webpack_require__("../shared/browser/node_modules/core-js/internals/get-built-in.js");
            var isCallable = __webpack_require__("../shared/browser/node_modules/core-js/internals/is-callable.js");
            var isPrototypeOf = __webpack_require__("../shared/browser/node_modules/core-js/internals/object-is-prototype-of.js");
            var USE_SYMBOL_AS_UID = __webpack_require__("../shared/browser/node_modules/core-js/internals/use-symbol-as-uid.js");
            var $Object = Object;
            module.exports = USE_SYMBOL_AS_UID ? function(it) {
                return "symbol" == typeof it;
            } : function(it) {
                var $Symbol = getBuiltIn("Symbol");
                return isCallable($Symbol) && isPrototypeOf($Symbol.prototype, $Object(it));
            };
        },
        "../shared/browser/node_modules/core-js/internals/iterator-create-constructor.js": (module, __unused_webpack_exports, __webpack_require__) => {
            "use strict";
            var IteratorPrototype = __webpack_require__("../shared/browser/node_modules/core-js/internals/iterators-core.js").IteratorPrototype;
            var create = __webpack_require__("../shared/browser/node_modules/core-js/internals/object-create.js");
            var createPropertyDescriptor = __webpack_require__("../shared/browser/node_modules/core-js/internals/create-property-descriptor.js");
            var setToStringTag = __webpack_require__("../shared/browser/node_modules/core-js/internals/set-to-string-tag.js");
            var Iterators = __webpack_require__("../shared/browser/node_modules/core-js/internals/iterators.js");
            var returnThis = function() {
                return this;
            };
            module.exports = function(IteratorConstructor, NAME, next, ENUMERABLE_NEXT) {
                var TO_STRING_TAG = NAME + " Iterator";
                IteratorConstructor.prototype = create(IteratorPrototype, {
                    next: createPropertyDescriptor(+!ENUMERABLE_NEXT, next)
                });
                setToStringTag(IteratorConstructor, TO_STRING_TAG, false, true);
                Iterators[TO_STRING_TAG] = returnThis;
                return IteratorConstructor;
            };
        },
        "../shared/browser/node_modules/core-js/internals/iterator-define.js": (module, __unused_webpack_exports, __webpack_require__) => {
            "use strict";
            var $ = __webpack_require__("../shared/browser/node_modules/core-js/internals/export.js");
            var call = __webpack_require__("../shared/browser/node_modules/core-js/internals/function-call.js");
            var IS_PURE = __webpack_require__("../shared/browser/node_modules/core-js/internals/is-pure.js");
            var FunctionName = __webpack_require__("../shared/browser/node_modules/core-js/internals/function-name.js");
            var isCallable = __webpack_require__("../shared/browser/node_modules/core-js/internals/is-callable.js");
            var createIteratorConstructor = __webpack_require__("../shared/browser/node_modules/core-js/internals/iterator-create-constructor.js");
            var getPrototypeOf = __webpack_require__("../shared/browser/node_modules/core-js/internals/object-get-prototype-of.js");
            var setPrototypeOf = __webpack_require__("../shared/browser/node_modules/core-js/internals/object-set-prototype-of.js");
            var setToStringTag = __webpack_require__("../shared/browser/node_modules/core-js/internals/set-to-string-tag.js");
            var createNonEnumerableProperty = __webpack_require__("../shared/browser/node_modules/core-js/internals/create-non-enumerable-property.js");
            var defineBuiltIn = __webpack_require__("../shared/browser/node_modules/core-js/internals/define-built-in.js");
            var wellKnownSymbol = __webpack_require__("../shared/browser/node_modules/core-js/internals/well-known-symbol.js");
            var Iterators = __webpack_require__("../shared/browser/node_modules/core-js/internals/iterators.js");
            var IteratorsCore = __webpack_require__("../shared/browser/node_modules/core-js/internals/iterators-core.js");
            var PROPER_FUNCTION_NAME = FunctionName.PROPER;
            var CONFIGURABLE_FUNCTION_NAME = FunctionName.CONFIGURABLE;
            var IteratorPrototype = IteratorsCore.IteratorPrototype;
            var BUGGY_SAFARI_ITERATORS = IteratorsCore.BUGGY_SAFARI_ITERATORS;
            var ITERATOR = wellKnownSymbol("iterator");
            var KEYS = "keys";
            var VALUES = "values";
            var ENTRIES = "entries";
            var returnThis = function() {
                return this;
            };
            module.exports = function(Iterable, NAME, IteratorConstructor, next, DEFAULT, IS_SET, FORCED) {
                createIteratorConstructor(IteratorConstructor, NAME, next);
                var getIterationMethod = function(KIND) {
                    if (KIND === DEFAULT && defaultIterator) return defaultIterator;
                    if (!BUGGY_SAFARI_ITERATORS && KIND in IterablePrototype) return IterablePrototype[KIND];
                    switch (KIND) {
                      case KEYS:
                      case VALUES:
                      case ENTRIES:
                        return function() {
                            return new IteratorConstructor(this, KIND);
                        };
                    }
                    return function() {
                        return new IteratorConstructor(this);
                    };
                };
                var TO_STRING_TAG = NAME + " Iterator";
                var INCORRECT_VALUES_NAME = false;
                var IterablePrototype = Iterable.prototype;
                var nativeIterator = IterablePrototype[ITERATOR] || IterablePrototype["@@iterator"] || DEFAULT && IterablePrototype[DEFAULT];
                var defaultIterator = !BUGGY_SAFARI_ITERATORS && nativeIterator || getIterationMethod(DEFAULT);
                var anyNativeIterator = "Array" == NAME ? IterablePrototype.entries || nativeIterator : nativeIterator;
                var CurrentIteratorPrototype, methods, KEY;
                if (anyNativeIterator) {
                    CurrentIteratorPrototype = getPrototypeOf(anyNativeIterator.call(new Iterable));
                    if (CurrentIteratorPrototype !== Object.prototype && CurrentIteratorPrototype.next) {
                        if (!IS_PURE && getPrototypeOf(CurrentIteratorPrototype) !== IteratorPrototype) if (setPrototypeOf) setPrototypeOf(CurrentIteratorPrototype, IteratorPrototype); else if (!isCallable(CurrentIteratorPrototype[ITERATOR])) defineBuiltIn(CurrentIteratorPrototype, ITERATOR, returnThis);
                        setToStringTag(CurrentIteratorPrototype, TO_STRING_TAG, true, true);
                        if (IS_PURE) Iterators[TO_STRING_TAG] = returnThis;
                    }
                }
                if (PROPER_FUNCTION_NAME && DEFAULT == VALUES && nativeIterator && nativeIterator.name !== VALUES) if (!IS_PURE && CONFIGURABLE_FUNCTION_NAME) createNonEnumerableProperty(IterablePrototype, "name", VALUES); else {
                    INCORRECT_VALUES_NAME = true;
                    defaultIterator = function() {
                        return call(nativeIterator, this);
                    };
                }
                if (DEFAULT) {
                    methods = {
                        values: getIterationMethod(VALUES),
                        keys: IS_SET ? defaultIterator : getIterationMethod(KEYS),
                        entries: getIterationMethod(ENTRIES)
                    };
                    if (FORCED) {
                        for (KEY in methods) if (BUGGY_SAFARI_ITERATORS || INCORRECT_VALUES_NAME || !(KEY in IterablePrototype)) defineBuiltIn(IterablePrototype, KEY, methods[KEY]);
                    } else $({
                        target: NAME,
                        proto: true,
                        forced: BUGGY_SAFARI_ITERATORS || INCORRECT_VALUES_NAME
                    }, methods);
                }
                if ((!IS_PURE || FORCED) && IterablePrototype[ITERATOR] !== defaultIterator) defineBuiltIn(IterablePrototype, ITERATOR, defaultIterator, {
                    name: DEFAULT
                });
                Iterators[NAME] = defaultIterator;
                return methods;
            };
        },
        "../shared/browser/node_modules/core-js/internals/iterators-core.js": (module, __unused_webpack_exports, __webpack_require__) => {
            "use strict";
            var fails = __webpack_require__("../shared/browser/node_modules/core-js/internals/fails.js");
            var isCallable = __webpack_require__("../shared/browser/node_modules/core-js/internals/is-callable.js");
            var isObject = __webpack_require__("../shared/browser/node_modules/core-js/internals/is-object.js");
            var create = __webpack_require__("../shared/browser/node_modules/core-js/internals/object-create.js");
            var getPrototypeOf = __webpack_require__("../shared/browser/node_modules/core-js/internals/object-get-prototype-of.js");
            var defineBuiltIn = __webpack_require__("../shared/browser/node_modules/core-js/internals/define-built-in.js");
            var wellKnownSymbol = __webpack_require__("../shared/browser/node_modules/core-js/internals/well-known-symbol.js");
            var IS_PURE = __webpack_require__("../shared/browser/node_modules/core-js/internals/is-pure.js");
            var ITERATOR = wellKnownSymbol("iterator");
            var BUGGY_SAFARI_ITERATORS = false;
            var IteratorPrototype, PrototypeOfArrayIteratorPrototype, arrayIterator;
            if ([].keys) {
                arrayIterator = [].keys();
                if (!("next" in arrayIterator)) BUGGY_SAFARI_ITERATORS = true; else {
                    PrototypeOfArrayIteratorPrototype = getPrototypeOf(getPrototypeOf(arrayIterator));
                    if (PrototypeOfArrayIteratorPrototype !== Object.prototype) IteratorPrototype = PrototypeOfArrayIteratorPrototype;
                }
            }
            var NEW_ITERATOR_PROTOTYPE = !isObject(IteratorPrototype) || fails((function() {
                var test = {};
                return IteratorPrototype[ITERATOR].call(test) !== test;
            }));
            if (NEW_ITERATOR_PROTOTYPE) IteratorPrototype = {}; else if (IS_PURE) IteratorPrototype = create(IteratorPrototype);
            if (!isCallable(IteratorPrototype[ITERATOR])) defineBuiltIn(IteratorPrototype, ITERATOR, (function() {
                return this;
            }));
            module.exports = {
                IteratorPrototype,
                BUGGY_SAFARI_ITERATORS
            };
        },
        "../shared/browser/node_modules/core-js/internals/iterators.js": module => {
            module.exports = {};
        },
        "../shared/browser/node_modules/core-js/internals/length-of-array-like.js": (module, __unused_webpack_exports, __webpack_require__) => {
            var toLength = __webpack_require__("../shared/browser/node_modules/core-js/internals/to-length.js");
            module.exports = function(obj) {
                return toLength(obj.length);
            };
        },
        "../shared/browser/node_modules/core-js/internals/make-built-in.js": (module, __unused_webpack_exports, __webpack_require__) => {
            var fails = __webpack_require__("../shared/browser/node_modules/core-js/internals/fails.js");
            var isCallable = __webpack_require__("../shared/browser/node_modules/core-js/internals/is-callable.js");
            var hasOwn = __webpack_require__("../shared/browser/node_modules/core-js/internals/has-own-property.js");
            var DESCRIPTORS = __webpack_require__("../shared/browser/node_modules/core-js/internals/descriptors.js");
            var CONFIGURABLE_FUNCTION_NAME = __webpack_require__("../shared/browser/node_modules/core-js/internals/function-name.js").CONFIGURABLE;
            var inspectSource = __webpack_require__("../shared/browser/node_modules/core-js/internals/inspect-source.js");
            var InternalStateModule = __webpack_require__("../shared/browser/node_modules/core-js/internals/internal-state.js");
            var enforceInternalState = InternalStateModule.enforce;
            var getInternalState = InternalStateModule.get;
            var defineProperty = Object.defineProperty;
            var CONFIGURABLE_LENGTH = DESCRIPTORS && !fails((function() {
                return 8 !== defineProperty((function() {}), "length", {
                    value: 8
                }).length;
            }));
            var TEMPLATE = String(String).split("String");
            var makeBuiltIn = module.exports = function(value, name, options) {
                if ("Symbol(" === String(name).slice(0, 7)) name = "[" + String(name).replace(/^Symbol\(([^)]*)\)/, "$1") + "]";
                if (options && options.getter) name = "get " + name;
                if (options && options.setter) name = "set " + name;
                if (!hasOwn(value, "name") || CONFIGURABLE_FUNCTION_NAME && value.name !== name) if (DESCRIPTORS) defineProperty(value, "name", {
                    value: name,
                    configurable: true
                }); else value.name = name;
                if (CONFIGURABLE_LENGTH && options && hasOwn(options, "arity") && value.length !== options.arity) defineProperty(value, "length", {
                    value: options.arity
                });
                try {
                    if (options && hasOwn(options, "constructor") && options.constructor) {
                        if (DESCRIPTORS) defineProperty(value, "prototype", {
                            writable: false
                        });
                    } else if (value.prototype) value.prototype = void 0;
                } catch (error) {}
                var state = enforceInternalState(value);
                if (!hasOwn(state, "source")) state.source = TEMPLATE.join("string" == typeof name ? name : "");
                return value;
            };
            Function.prototype.toString = makeBuiltIn((function() {
                return isCallable(this) && getInternalState(this).source || inspectSource(this);
            }), "toString");
        },
        "../shared/browser/node_modules/core-js/internals/math-trunc.js": module => {
            var ceil = Math.ceil;
            var floor = Math.floor;
            module.exports = Math.trunc || function(x) {
                var n = +x;
                return (n > 0 ? floor : ceil)(n);
            };
        },
        "../shared/browser/node_modules/core-js/internals/not-a-regexp.js": (module, __unused_webpack_exports, __webpack_require__) => {
            var isRegExp = __webpack_require__("../shared/browser/node_modules/core-js/internals/is-regexp.js");
            var $TypeError = TypeError;
            module.exports = function(it) {
                if (isRegExp(it)) throw $TypeError("The method doesn't accept regular expressions");
                return it;
            };
        },
        "../shared/browser/node_modules/core-js/internals/object-create.js": (module, __unused_webpack_exports, __webpack_require__) => {
            var anObject = __webpack_require__("../shared/browser/node_modules/core-js/internals/an-object.js");
            var definePropertiesModule = __webpack_require__("../shared/browser/node_modules/core-js/internals/object-define-properties.js");
            var enumBugKeys = __webpack_require__("../shared/browser/node_modules/core-js/internals/enum-bug-keys.js");
            var hiddenKeys = __webpack_require__("../shared/browser/node_modules/core-js/internals/hidden-keys.js");
            var html = __webpack_require__("../shared/browser/node_modules/core-js/internals/html.js");
            var documentCreateElement = __webpack_require__("../shared/browser/node_modules/core-js/internals/document-create-element.js");
            var sharedKey = __webpack_require__("../shared/browser/node_modules/core-js/internals/shared-key.js");
            var GT = ">";
            var LT = "<";
            var PROTOTYPE = "prototype";
            var SCRIPT = "script";
            var IE_PROTO = sharedKey("IE_PROTO");
            var EmptyConstructor = function() {};
            var scriptTag = function(content) {
                return LT + SCRIPT + GT + content + LT + "/" + SCRIPT + GT;
            };
            var NullProtoObjectViaActiveX = function(activeXDocument) {
                activeXDocument.write(scriptTag(""));
                activeXDocument.close();
                var temp = activeXDocument.parentWindow.Object;
                activeXDocument = null;
                return temp;
            };
            var NullProtoObjectViaIFrame = function() {
                var iframe = documentCreateElement("iframe");
                var JS = "java" + SCRIPT + ":";
                var iframeDocument;
                iframe.style.display = "none";
                html.appendChild(iframe);
                iframe.src = String(JS);
                iframeDocument = iframe.contentWindow.document;
                iframeDocument.open();
                iframeDocument.write(scriptTag("document.F=Object"));
                iframeDocument.close();
                return iframeDocument.F;
            };
            var activeXDocument;
            var NullProtoObject = function() {
                try {
                    activeXDocument = new ActiveXObject("htmlfile");
                } catch (error) {}
                NullProtoObject = "undefined" != typeof document ? document.domain && activeXDocument ? NullProtoObjectViaActiveX(activeXDocument) : NullProtoObjectViaIFrame() : NullProtoObjectViaActiveX(activeXDocument);
                var length = enumBugKeys.length;
                while (length--) delete NullProtoObject[PROTOTYPE][enumBugKeys[length]];
                return NullProtoObject();
            };
            hiddenKeys[IE_PROTO] = true;
            module.exports = Object.create || function(O, Properties) {
                var result;
                if (null !== O) {
                    EmptyConstructor[PROTOTYPE] = anObject(O);
                    result = new EmptyConstructor;
                    EmptyConstructor[PROTOTYPE] = null;
                    result[IE_PROTO] = O;
                } else result = NullProtoObject();
                return void 0 === Properties ? result : definePropertiesModule.f(result, Properties);
            };
        },
        "../shared/browser/node_modules/core-js/internals/object-define-properties.js": (__unused_webpack_module, exports, __webpack_require__) => {
            var DESCRIPTORS = __webpack_require__("../shared/browser/node_modules/core-js/internals/descriptors.js");
            var V8_PROTOTYPE_DEFINE_BUG = __webpack_require__("../shared/browser/node_modules/core-js/internals/v8-prototype-define-bug.js");
            var definePropertyModule = __webpack_require__("../shared/browser/node_modules/core-js/internals/object-define-property.js");
            var anObject = __webpack_require__("../shared/browser/node_modules/core-js/internals/an-object.js");
            var toIndexedObject = __webpack_require__("../shared/browser/node_modules/core-js/internals/to-indexed-object.js");
            var objectKeys = __webpack_require__("../shared/browser/node_modules/core-js/internals/object-keys.js");
            exports.f = DESCRIPTORS && !V8_PROTOTYPE_DEFINE_BUG ? Object.defineProperties : function(O, Properties) {
                anObject(O);
                var props = toIndexedObject(Properties);
                var keys = objectKeys(Properties);
                var length = keys.length;
                var index = 0;
                var key;
                while (length > index) definePropertyModule.f(O, key = keys[index++], props[key]);
                return O;
            };
        },
        "../shared/browser/node_modules/core-js/internals/object-define-property.js": (__unused_webpack_module, exports, __webpack_require__) => {
            var DESCRIPTORS = __webpack_require__("../shared/browser/node_modules/core-js/internals/descriptors.js");
            var IE8_DOM_DEFINE = __webpack_require__("../shared/browser/node_modules/core-js/internals/ie8-dom-define.js");
            var V8_PROTOTYPE_DEFINE_BUG = __webpack_require__("../shared/browser/node_modules/core-js/internals/v8-prototype-define-bug.js");
            var anObject = __webpack_require__("../shared/browser/node_modules/core-js/internals/an-object.js");
            var toPropertyKey = __webpack_require__("../shared/browser/node_modules/core-js/internals/to-property-key.js");
            var $TypeError = TypeError;
            var $defineProperty = Object.defineProperty;
            var $getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;
            var ENUMERABLE = "enumerable";
            var CONFIGURABLE = "configurable";
            var WRITABLE = "writable";
            exports.f = DESCRIPTORS ? V8_PROTOTYPE_DEFINE_BUG ? function(O, P, Attributes) {
                anObject(O);
                P = toPropertyKey(P);
                anObject(Attributes);
                if ("function" === typeof O && "prototype" === P && "value" in Attributes && WRITABLE in Attributes && !Attributes[WRITABLE]) {
                    var current = $getOwnPropertyDescriptor(O, P);
                    if (current && current[WRITABLE]) {
                        O[P] = Attributes.value;
                        Attributes = {
                            configurable: CONFIGURABLE in Attributes ? Attributes[CONFIGURABLE] : current[CONFIGURABLE],
                            enumerable: ENUMERABLE in Attributes ? Attributes[ENUMERABLE] : current[ENUMERABLE],
                            writable: false
                        };
                    }
                }
                return $defineProperty(O, P, Attributes);
            } : $defineProperty : function(O, P, Attributes) {
                anObject(O);
                P = toPropertyKey(P);
                anObject(Attributes);
                if (IE8_DOM_DEFINE) try {
                    return $defineProperty(O, P, Attributes);
                } catch (error) {}
                if ("get" in Attributes || "set" in Attributes) throw $TypeError("Accessors not supported");
                if ("value" in Attributes) O[P] = Attributes.value;
                return O;
            };
        },
        "../shared/browser/node_modules/core-js/internals/object-get-own-property-descriptor.js": (__unused_webpack_module, exports, __webpack_require__) => {
            var DESCRIPTORS = __webpack_require__("../shared/browser/node_modules/core-js/internals/descriptors.js");
            var call = __webpack_require__("../shared/browser/node_modules/core-js/internals/function-call.js");
            var propertyIsEnumerableModule = __webpack_require__("../shared/browser/node_modules/core-js/internals/object-property-is-enumerable.js");
            var createPropertyDescriptor = __webpack_require__("../shared/browser/node_modules/core-js/internals/create-property-descriptor.js");
            var toIndexedObject = __webpack_require__("../shared/browser/node_modules/core-js/internals/to-indexed-object.js");
            var toPropertyKey = __webpack_require__("../shared/browser/node_modules/core-js/internals/to-property-key.js");
            var hasOwn = __webpack_require__("../shared/browser/node_modules/core-js/internals/has-own-property.js");
            var IE8_DOM_DEFINE = __webpack_require__("../shared/browser/node_modules/core-js/internals/ie8-dom-define.js");
            var $getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;
            exports.f = DESCRIPTORS ? $getOwnPropertyDescriptor : function(O, P) {
                O = toIndexedObject(O);
                P = toPropertyKey(P);
                if (IE8_DOM_DEFINE) try {
                    return $getOwnPropertyDescriptor(O, P);
                } catch (error) {}
                if (hasOwn(O, P)) return createPropertyDescriptor(!call(propertyIsEnumerableModule.f, O, P), O[P]);
            };
        },
        "../shared/browser/node_modules/core-js/internals/object-get-own-property-names-external.js": (module, __unused_webpack_exports, __webpack_require__) => {
            var classof = __webpack_require__("../shared/browser/node_modules/core-js/internals/classof-raw.js");
            var toIndexedObject = __webpack_require__("../shared/browser/node_modules/core-js/internals/to-indexed-object.js");
            var $getOwnPropertyNames = __webpack_require__("../shared/browser/node_modules/core-js/internals/object-get-own-property-names.js").f;
            var arraySlice = __webpack_require__("../shared/browser/node_modules/core-js/internals/array-slice-simple.js");
            var windowNames = "object" == typeof window && window && Object.getOwnPropertyNames ? Object.getOwnPropertyNames(window) : [];
            var getWindowNames = function(it) {
                try {
                    return $getOwnPropertyNames(it);
                } catch (error) {
                    return arraySlice(windowNames);
                }
            };
            module.exports.f = function(it) {
                return windowNames && "Window" == classof(it) ? getWindowNames(it) : $getOwnPropertyNames(toIndexedObject(it));
            };
        },
        "../shared/browser/node_modules/core-js/internals/object-get-own-property-names.js": (__unused_webpack_module, exports, __webpack_require__) => {
            var internalObjectKeys = __webpack_require__("../shared/browser/node_modules/core-js/internals/object-keys-internal.js");
            var enumBugKeys = __webpack_require__("../shared/browser/node_modules/core-js/internals/enum-bug-keys.js");
            var hiddenKeys = enumBugKeys.concat("length", "prototype");
            exports.f = Object.getOwnPropertyNames || function(O) {
                return internalObjectKeys(O, hiddenKeys);
            };
        },
        "../shared/browser/node_modules/core-js/internals/object-get-own-property-symbols.js": (__unused_webpack_module, exports) => {
            exports.f = Object.getOwnPropertySymbols;
        },
        "../shared/browser/node_modules/core-js/internals/object-get-prototype-of.js": (module, __unused_webpack_exports, __webpack_require__) => {
            var hasOwn = __webpack_require__("../shared/browser/node_modules/core-js/internals/has-own-property.js");
            var isCallable = __webpack_require__("../shared/browser/node_modules/core-js/internals/is-callable.js");
            var toObject = __webpack_require__("../shared/browser/node_modules/core-js/internals/to-object.js");
            var sharedKey = __webpack_require__("../shared/browser/node_modules/core-js/internals/shared-key.js");
            var CORRECT_PROTOTYPE_GETTER = __webpack_require__("../shared/browser/node_modules/core-js/internals/correct-prototype-getter.js");
            var IE_PROTO = sharedKey("IE_PROTO");
            var $Object = Object;
            var ObjectPrototype = $Object.prototype;
            module.exports = CORRECT_PROTOTYPE_GETTER ? $Object.getPrototypeOf : function(O) {
                var object = toObject(O);
                if (hasOwn(object, IE_PROTO)) return object[IE_PROTO];
                var constructor = object.constructor;
                if (isCallable(constructor) && object instanceof constructor) return constructor.prototype;
                return object instanceof $Object ? ObjectPrototype : null;
            };
        },
        "../shared/browser/node_modules/core-js/internals/object-is-prototype-of.js": (module, __unused_webpack_exports, __webpack_require__) => {
            var uncurryThis = __webpack_require__("../shared/browser/node_modules/core-js/internals/function-uncurry-this.js");
            module.exports = uncurryThis({}.isPrototypeOf);
        },
        "../shared/browser/node_modules/core-js/internals/object-keys-internal.js": (module, __unused_webpack_exports, __webpack_require__) => {
            var uncurryThis = __webpack_require__("../shared/browser/node_modules/core-js/internals/function-uncurry-this.js");
            var hasOwn = __webpack_require__("../shared/browser/node_modules/core-js/internals/has-own-property.js");
            var toIndexedObject = __webpack_require__("../shared/browser/node_modules/core-js/internals/to-indexed-object.js");
            var indexOf = __webpack_require__("../shared/browser/node_modules/core-js/internals/array-includes.js").indexOf;
            var hiddenKeys = __webpack_require__("../shared/browser/node_modules/core-js/internals/hidden-keys.js");
            var push = uncurryThis([].push);
            module.exports = function(object, names) {
                var O = toIndexedObject(object);
                var i = 0;
                var result = [];
                var key;
                for (key in O) !hasOwn(hiddenKeys, key) && hasOwn(O, key) && push(result, key);
                while (names.length > i) if (hasOwn(O, key = names[i++])) ~indexOf(result, key) || push(result, key);
                return result;
            };
        },
        "../shared/browser/node_modules/core-js/internals/object-keys.js": (module, __unused_webpack_exports, __webpack_require__) => {
            var internalObjectKeys = __webpack_require__("../shared/browser/node_modules/core-js/internals/object-keys-internal.js");
            var enumBugKeys = __webpack_require__("../shared/browser/node_modules/core-js/internals/enum-bug-keys.js");
            module.exports = Object.keys || function(O) {
                return internalObjectKeys(O, enumBugKeys);
            };
        },
        "../shared/browser/node_modules/core-js/internals/object-property-is-enumerable.js": (__unused_webpack_module, exports) => {
            "use strict";
            var $propertyIsEnumerable = {}.propertyIsEnumerable;
            var getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;
            var NASHORN_BUG = getOwnPropertyDescriptor && !$propertyIsEnumerable.call({
                1: 2
            }, 1);
            exports.f = NASHORN_BUG ? function(V) {
                var descriptor = getOwnPropertyDescriptor(this, V);
                return !!descriptor && descriptor.enumerable;
            } : $propertyIsEnumerable;
        },
        "../shared/browser/node_modules/core-js/internals/object-set-prototype-of.js": (module, __unused_webpack_exports, __webpack_require__) => {
            var uncurryThis = __webpack_require__("../shared/browser/node_modules/core-js/internals/function-uncurry-this.js");
            var anObject = __webpack_require__("../shared/browser/node_modules/core-js/internals/an-object.js");
            var aPossiblePrototype = __webpack_require__("../shared/browser/node_modules/core-js/internals/a-possible-prototype.js");
            module.exports = Object.setPrototypeOf || ("__proto__" in {} ? function() {
                var CORRECT_SETTER = false;
                var test = {};
                var setter;
                try {
                    setter = uncurryThis(Object.getOwnPropertyDescriptor(Object.prototype, "__proto__").set);
                    setter(test, []);
                    CORRECT_SETTER = test instanceof Array;
                } catch (error) {}
                return function(O, proto) {
                    anObject(O);
                    aPossiblePrototype(proto);
                    if (CORRECT_SETTER) setter(O, proto); else O.__proto__ = proto;
                    return O;
                };
            }() : void 0);
        },
        "../shared/browser/node_modules/core-js/internals/object-to-string.js": (module, __unused_webpack_exports, __webpack_require__) => {
            "use strict";
            var TO_STRING_TAG_SUPPORT = __webpack_require__("../shared/browser/node_modules/core-js/internals/to-string-tag-support.js");
            var classof = __webpack_require__("../shared/browser/node_modules/core-js/internals/classof.js");
            module.exports = TO_STRING_TAG_SUPPORT ? {}.toString : function() {
                return "[object " + classof(this) + "]";
            };
        },
        "../shared/browser/node_modules/core-js/internals/ordinary-to-primitive.js": (module, __unused_webpack_exports, __webpack_require__) => {
            var call = __webpack_require__("../shared/browser/node_modules/core-js/internals/function-call.js");
            var isCallable = __webpack_require__("../shared/browser/node_modules/core-js/internals/is-callable.js");
            var isObject = __webpack_require__("../shared/browser/node_modules/core-js/internals/is-object.js");
            var $TypeError = TypeError;
            module.exports = function(input, pref) {
                var fn, val;
                if ("string" === pref && isCallable(fn = input.toString) && !isObject(val = call(fn, input))) return val;
                if (isCallable(fn = input.valueOf) && !isObject(val = call(fn, input))) return val;
                if ("string" !== pref && isCallable(fn = input.toString) && !isObject(val = call(fn, input))) return val;
                throw $TypeError("Can't convert object to primitive value");
            };
        },
        "../shared/browser/node_modules/core-js/internals/own-keys.js": (module, __unused_webpack_exports, __webpack_require__) => {
            var getBuiltIn = __webpack_require__("../shared/browser/node_modules/core-js/internals/get-built-in.js");
            var uncurryThis = __webpack_require__("../shared/browser/node_modules/core-js/internals/function-uncurry-this.js");
            var getOwnPropertyNamesModule = __webpack_require__("../shared/browser/node_modules/core-js/internals/object-get-own-property-names.js");
            var getOwnPropertySymbolsModule = __webpack_require__("../shared/browser/node_modules/core-js/internals/object-get-own-property-symbols.js");
            var anObject = __webpack_require__("../shared/browser/node_modules/core-js/internals/an-object.js");
            var concat = uncurryThis([].concat);
            module.exports = getBuiltIn("Reflect", "ownKeys") || function(it) {
                var keys = getOwnPropertyNamesModule.f(anObject(it));
                var getOwnPropertySymbols = getOwnPropertySymbolsModule.f;
                return getOwnPropertySymbols ? concat(keys, getOwnPropertySymbols(it)) : keys;
            };
        },
        "../shared/browser/node_modules/core-js/internals/path.js": (module, __unused_webpack_exports, __webpack_require__) => {
            var global = __webpack_require__("../shared/browser/node_modules/core-js/internals/global.js");
            module.exports = global;
        },
        "../shared/browser/node_modules/core-js/internals/regexp-exec-abstract.js": (module, __unused_webpack_exports, __webpack_require__) => {
            var call = __webpack_require__("../shared/browser/node_modules/core-js/internals/function-call.js");
            var anObject = __webpack_require__("../shared/browser/node_modules/core-js/internals/an-object.js");
            var isCallable = __webpack_require__("../shared/browser/node_modules/core-js/internals/is-callable.js");
            var classof = __webpack_require__("../shared/browser/node_modules/core-js/internals/classof-raw.js");
            var regexpExec = __webpack_require__("../shared/browser/node_modules/core-js/internals/regexp-exec.js");
            var $TypeError = TypeError;
            module.exports = function(R, S) {
                var exec = R.exec;
                if (isCallable(exec)) {
                    var result = call(exec, R, S);
                    if (null !== result) anObject(result);
                    return result;
                }
                if ("RegExp" === classof(R)) return call(regexpExec, R, S);
                throw $TypeError("RegExp#exec called on incompatible receiver");
            };
        },
        "../shared/browser/node_modules/core-js/internals/regexp-exec.js": (module, __unused_webpack_exports, __webpack_require__) => {
            "use strict";
            var call = __webpack_require__("../shared/browser/node_modules/core-js/internals/function-call.js");
            var uncurryThis = __webpack_require__("../shared/browser/node_modules/core-js/internals/function-uncurry-this.js");
            var toString = __webpack_require__("../shared/browser/node_modules/core-js/internals/to-string.js");
            var regexpFlags = __webpack_require__("../shared/browser/node_modules/core-js/internals/regexp-flags.js");
            var stickyHelpers = __webpack_require__("../shared/browser/node_modules/core-js/internals/regexp-sticky-helpers.js");
            var shared = __webpack_require__("../shared/browser/node_modules/core-js/internals/shared.js");
            var create = __webpack_require__("../shared/browser/node_modules/core-js/internals/object-create.js");
            var getInternalState = __webpack_require__("../shared/browser/node_modules/core-js/internals/internal-state.js").get;
            var UNSUPPORTED_DOT_ALL = __webpack_require__("../shared/browser/node_modules/core-js/internals/regexp-unsupported-dot-all.js");
            var UNSUPPORTED_NCG = __webpack_require__("../shared/browser/node_modules/core-js/internals/regexp-unsupported-ncg.js");
            var nativeReplace = shared("native-string-replace", String.prototype.replace);
            var nativeExec = RegExp.prototype.exec;
            var patchedExec = nativeExec;
            var charAt = uncurryThis("".charAt);
            var indexOf = uncurryThis("".indexOf);
            var replace = uncurryThis("".replace);
            var stringSlice = uncurryThis("".slice);
            var UPDATES_LAST_INDEX_WRONG = function() {
                var re1 = /a/;
                var re2 = /b*/g;
                call(nativeExec, re1, "a");
                call(nativeExec, re2, "a");
                return 0 !== re1.lastIndex || 0 !== re2.lastIndex;
            }();
            var UNSUPPORTED_Y = stickyHelpers.BROKEN_CARET;
            var NPCG_INCLUDED = void 0 !== /()??/.exec("")[1];
            var PATCH = UPDATES_LAST_INDEX_WRONG || NPCG_INCLUDED || UNSUPPORTED_Y || UNSUPPORTED_DOT_ALL || UNSUPPORTED_NCG;
            if (PATCH) patchedExec = function(string) {
                var re = this;
                var state = getInternalState(re);
                var str = toString(string);
                var raw = state.raw;
                var result, reCopy, lastIndex, match, i, object, group;
                if (raw) {
                    raw.lastIndex = re.lastIndex;
                    result = call(patchedExec, raw, str);
                    re.lastIndex = raw.lastIndex;
                    return result;
                }
                var groups = state.groups;
                var sticky = UNSUPPORTED_Y && re.sticky;
                var flags = call(regexpFlags, re);
                var source = re.source;
                var charsAdded = 0;
                var strCopy = str;
                if (sticky) {
                    flags = replace(flags, "y", "");
                    if (-1 === indexOf(flags, "g")) flags += "g";
                    strCopy = stringSlice(str, re.lastIndex);
                    if (re.lastIndex > 0 && (!re.multiline || re.multiline && "\n" !== charAt(str, re.lastIndex - 1))) {
                        source = "(?: " + source + ")";
                        strCopy = " " + strCopy;
                        charsAdded++;
                    }
                    reCopy = new RegExp("^(?:" + source + ")", flags);
                }
                if (NPCG_INCLUDED) reCopy = new RegExp("^" + source + "$(?!\\s)", flags);
                if (UPDATES_LAST_INDEX_WRONG) lastIndex = re.lastIndex;
                match = call(nativeExec, sticky ? reCopy : re, strCopy);
                if (sticky) if (match) {
                    match.input = stringSlice(match.input, charsAdded);
                    match[0] = stringSlice(match[0], charsAdded);
                    match.index = re.lastIndex;
                    re.lastIndex += match[0].length;
                } else re.lastIndex = 0; else if (UPDATES_LAST_INDEX_WRONG && match) re.lastIndex = re.global ? match.index + match[0].length : lastIndex;
                if (NPCG_INCLUDED && match && match.length > 1) call(nativeReplace, match[0], reCopy, (function() {
                    for (i = 1; i < arguments.length - 2; i++) if (void 0 === arguments[i]) match[i] = void 0;
                }));
                if (match && groups) {
                    match.groups = object = create(null);
                    for (i = 0; i < groups.length; i++) {
                        group = groups[i];
                        object[group[0]] = match[group[1]];
                    }
                }
                return match;
            };
            module.exports = patchedExec;
        },
        "../shared/browser/node_modules/core-js/internals/regexp-flags.js": (module, __unused_webpack_exports, __webpack_require__) => {
            "use strict";
            var anObject = __webpack_require__("../shared/browser/node_modules/core-js/internals/an-object.js");
            module.exports = function() {
                var that = anObject(this);
                var result = "";
                if (that.hasIndices) result += "d";
                if (that.global) result += "g";
                if (that.ignoreCase) result += "i";
                if (that.multiline) result += "m";
                if (that.dotAll) result += "s";
                if (that.unicode) result += "u";
                if (that.unicodeSets) result += "v";
                if (that.sticky) result += "y";
                return result;
            };
        },
        "../shared/browser/node_modules/core-js/internals/regexp-get-flags.js": (module, __unused_webpack_exports, __webpack_require__) => {
            var call = __webpack_require__("../shared/browser/node_modules/core-js/internals/function-call.js");
            var hasOwn = __webpack_require__("../shared/browser/node_modules/core-js/internals/has-own-property.js");
            var isPrototypeOf = __webpack_require__("../shared/browser/node_modules/core-js/internals/object-is-prototype-of.js");
            var regExpFlags = __webpack_require__("../shared/browser/node_modules/core-js/internals/regexp-flags.js");
            var RegExpPrototype = RegExp.prototype;
            module.exports = function(R) {
                var flags = R.flags;
                return void 0 === flags && !("flags" in RegExpPrototype) && !hasOwn(R, "flags") && isPrototypeOf(RegExpPrototype, R) ? call(regExpFlags, R) : flags;
            };
        },
        "../shared/browser/node_modules/core-js/internals/regexp-sticky-helpers.js": (module, __unused_webpack_exports, __webpack_require__) => {
            var fails = __webpack_require__("../shared/browser/node_modules/core-js/internals/fails.js");
            var global = __webpack_require__("../shared/browser/node_modules/core-js/internals/global.js");
            var $RegExp = global.RegExp;
            var UNSUPPORTED_Y = fails((function() {
                var re = $RegExp("a", "y");
                re.lastIndex = 2;
                return null != re.exec("abcd");
            }));
            var MISSED_STICKY = UNSUPPORTED_Y || fails((function() {
                return !$RegExp("a", "y").sticky;
            }));
            var BROKEN_CARET = UNSUPPORTED_Y || fails((function() {
                var re = $RegExp("^r", "gy");
                re.lastIndex = 2;
                return null != re.exec("str");
            }));
            module.exports = {
                BROKEN_CARET,
                MISSED_STICKY,
                UNSUPPORTED_Y
            };
        },
        "../shared/browser/node_modules/core-js/internals/regexp-unsupported-dot-all.js": (module, __unused_webpack_exports, __webpack_require__) => {
            var fails = __webpack_require__("../shared/browser/node_modules/core-js/internals/fails.js");
            var global = __webpack_require__("../shared/browser/node_modules/core-js/internals/global.js");
            var $RegExp = global.RegExp;
            module.exports = fails((function() {
                var re = $RegExp(".", "s");
                return !(re.dotAll && re.exec("\n") && "s" === re.flags);
            }));
        },
        "../shared/browser/node_modules/core-js/internals/regexp-unsupported-ncg.js": (module, __unused_webpack_exports, __webpack_require__) => {
            var fails = __webpack_require__("../shared/browser/node_modules/core-js/internals/fails.js");
            var global = __webpack_require__("../shared/browser/node_modules/core-js/internals/global.js");
            var $RegExp = global.RegExp;
            module.exports = fails((function() {
                var re = $RegExp("(?<a>b)", "g");
                return "b" !== re.exec("b").groups.a || "bc" !== "b".replace(re, "$<a>c");
            }));
        },
        "../shared/browser/node_modules/core-js/internals/require-object-coercible.js": (module, __unused_webpack_exports, __webpack_require__) => {
            var isNullOrUndefined = __webpack_require__("../shared/browser/node_modules/core-js/internals/is-null-or-undefined.js");
            var $TypeError = TypeError;
            module.exports = function(it) {
                if (isNullOrUndefined(it)) throw $TypeError("Can't call method on " + it);
                return it;
            };
        },
        "../shared/browser/node_modules/core-js/internals/set-to-string-tag.js": (module, __unused_webpack_exports, __webpack_require__) => {
            var defineProperty = __webpack_require__("../shared/browser/node_modules/core-js/internals/object-define-property.js").f;
            var hasOwn = __webpack_require__("../shared/browser/node_modules/core-js/internals/has-own-property.js");
            var wellKnownSymbol = __webpack_require__("../shared/browser/node_modules/core-js/internals/well-known-symbol.js");
            var TO_STRING_TAG = wellKnownSymbol("toStringTag");
            module.exports = function(target, TAG, STATIC) {
                if (target && !STATIC) target = target.prototype;
                if (target && !hasOwn(target, TO_STRING_TAG)) defineProperty(target, TO_STRING_TAG, {
                    configurable: true,
                    value: TAG
                });
            };
        },
        "../shared/browser/node_modules/core-js/internals/shared-key.js": (module, __unused_webpack_exports, __webpack_require__) => {
            var shared = __webpack_require__("../shared/browser/node_modules/core-js/internals/shared.js");
            var uid = __webpack_require__("../shared/browser/node_modules/core-js/internals/uid.js");
            var keys = shared("keys");
            module.exports = function(key) {
                return keys[key] || (keys[key] = uid(key));
            };
        },
        "../shared/browser/node_modules/core-js/internals/shared-store.js": (module, __unused_webpack_exports, __webpack_require__) => {
            var global = __webpack_require__("../shared/browser/node_modules/core-js/internals/global.js");
            var defineGlobalProperty = __webpack_require__("../shared/browser/node_modules/core-js/internals/define-global-property.js");
            var SHARED = "__core-js_shared__";
            var store = global[SHARED] || defineGlobalProperty(SHARED, {});
            module.exports = store;
        },
        "../shared/browser/node_modules/core-js/internals/shared.js": (module, __unused_webpack_exports, __webpack_require__) => {
            var IS_PURE = __webpack_require__("../shared/browser/node_modules/core-js/internals/is-pure.js");
            var store = __webpack_require__("../shared/browser/node_modules/core-js/internals/shared-store.js");
            (module.exports = function(key, value) {
                return store[key] || (store[key] = void 0 !== value ? value : {});
            })("versions", []).push({
                version: "3.25.0",
                mode: IS_PURE ? "pure" : "global",
                copyright: "© 2014-2022 Denis Pushkarev (zloirock.ru)",
                license: "https://github.com/zloirock/core-js/blob/v3.25.0/LICENSE",
                source: "https://github.com/zloirock/core-js"
            });
        },
        "../shared/browser/node_modules/core-js/internals/species-constructor.js": (module, __unused_webpack_exports, __webpack_require__) => {
            var anObject = __webpack_require__("../shared/browser/node_modules/core-js/internals/an-object.js");
            var aConstructor = __webpack_require__("../shared/browser/node_modules/core-js/internals/a-constructor.js");
            var isNullOrUndefined = __webpack_require__("../shared/browser/node_modules/core-js/internals/is-null-or-undefined.js");
            var wellKnownSymbol = __webpack_require__("../shared/browser/node_modules/core-js/internals/well-known-symbol.js");
            var SPECIES = wellKnownSymbol("species");
            module.exports = function(O, defaultConstructor) {
                var C = anObject(O).constructor;
                var S;
                return void 0 === C || isNullOrUndefined(S = anObject(C)[SPECIES]) ? defaultConstructor : aConstructor(S);
            };
        },
        "../shared/browser/node_modules/core-js/internals/string-multibyte.js": (module, __unused_webpack_exports, __webpack_require__) => {
            var uncurryThis = __webpack_require__("../shared/browser/node_modules/core-js/internals/function-uncurry-this.js");
            var toIntegerOrInfinity = __webpack_require__("../shared/browser/node_modules/core-js/internals/to-integer-or-infinity.js");
            var toString = __webpack_require__("../shared/browser/node_modules/core-js/internals/to-string.js");
            var requireObjectCoercible = __webpack_require__("../shared/browser/node_modules/core-js/internals/require-object-coercible.js");
            var charAt = uncurryThis("".charAt);
            var charCodeAt = uncurryThis("".charCodeAt);
            var stringSlice = uncurryThis("".slice);
            var createMethod = function(CONVERT_TO_STRING) {
                return function($this, pos) {
                    var S = toString(requireObjectCoercible($this));
                    var position = toIntegerOrInfinity(pos);
                    var size = S.length;
                    var first, second;
                    if (position < 0 || position >= size) return CONVERT_TO_STRING ? "" : void 0;
                    first = charCodeAt(S, position);
                    return first < 55296 || first > 56319 || position + 1 === size || (second = charCodeAt(S, position + 1)) < 56320 || second > 57343 ? CONVERT_TO_STRING ? charAt(S, position) : first : CONVERT_TO_STRING ? stringSlice(S, position, position + 2) : (first - 55296 << 10) + (second - 56320) + 65536;
                };
            };
            module.exports = {
                codeAt: createMethod(false),
                charAt: createMethod(true)
            };
        },
        "../shared/browser/node_modules/core-js/internals/string-trim.js": (module, __unused_webpack_exports, __webpack_require__) => {
            var uncurryThis = __webpack_require__("../shared/browser/node_modules/core-js/internals/function-uncurry-this.js");
            var requireObjectCoercible = __webpack_require__("../shared/browser/node_modules/core-js/internals/require-object-coercible.js");
            var toString = __webpack_require__("../shared/browser/node_modules/core-js/internals/to-string.js");
            var whitespaces = __webpack_require__("../shared/browser/node_modules/core-js/internals/whitespaces.js");
            var replace = uncurryThis("".replace);
            var whitespace = "[" + whitespaces + "]";
            var ltrim = RegExp("^" + whitespace + whitespace + "*");
            var rtrim = RegExp(whitespace + whitespace + "*$");
            var createMethod = function(TYPE) {
                return function($this) {
                    var string = toString(requireObjectCoercible($this));
                    if (1 & TYPE) string = replace(string, ltrim, "");
                    if (2 & TYPE) string = replace(string, rtrim, "");
                    return string;
                };
            };
            module.exports = {
                start: createMethod(1),
                end: createMethod(2),
                trim: createMethod(3)
            };
        },
        "../shared/browser/node_modules/core-js/internals/symbol-constructor-detection.js": (module, __unused_webpack_exports, __webpack_require__) => {
            var V8_VERSION = __webpack_require__("../shared/browser/node_modules/core-js/internals/engine-v8-version.js");
            var fails = __webpack_require__("../shared/browser/node_modules/core-js/internals/fails.js");
            module.exports = !!Object.getOwnPropertySymbols && !fails((function() {
                var symbol = Symbol();
                return !String(symbol) || !(Object(symbol) instanceof Symbol) || !Symbol.sham && V8_VERSION && V8_VERSION < 41;
            }));
        },
        "../shared/browser/node_modules/core-js/internals/symbol-define-to-primitive.js": (module, __unused_webpack_exports, __webpack_require__) => {
            var call = __webpack_require__("../shared/browser/node_modules/core-js/internals/function-call.js");
            var getBuiltIn = __webpack_require__("../shared/browser/node_modules/core-js/internals/get-built-in.js");
            var wellKnownSymbol = __webpack_require__("../shared/browser/node_modules/core-js/internals/well-known-symbol.js");
            var defineBuiltIn = __webpack_require__("../shared/browser/node_modules/core-js/internals/define-built-in.js");
            module.exports = function() {
                var Symbol = getBuiltIn("Symbol");
                var SymbolPrototype = Symbol && Symbol.prototype;
                var valueOf = SymbolPrototype && SymbolPrototype.valueOf;
                var TO_PRIMITIVE = wellKnownSymbol("toPrimitive");
                if (SymbolPrototype && !SymbolPrototype[TO_PRIMITIVE]) defineBuiltIn(SymbolPrototype, TO_PRIMITIVE, (function(hint) {
                    return call(valueOf, this);
                }), {
                    arity: 1
                });
            };
        },
        "../shared/browser/node_modules/core-js/internals/symbol-registry-detection.js": (module, __unused_webpack_exports, __webpack_require__) => {
            var NATIVE_SYMBOL = __webpack_require__("../shared/browser/node_modules/core-js/internals/symbol-constructor-detection.js");
            module.exports = NATIVE_SYMBOL && !!Symbol["for"] && !!Symbol.keyFor;
        },
        "../shared/browser/node_modules/core-js/internals/this-number-value.js": (module, __unused_webpack_exports, __webpack_require__) => {
            var uncurryThis = __webpack_require__("../shared/browser/node_modules/core-js/internals/function-uncurry-this.js");
            module.exports = uncurryThis(1..valueOf);
        },
        "../shared/browser/node_modules/core-js/internals/to-absolute-index.js": (module, __unused_webpack_exports, __webpack_require__) => {
            var toIntegerOrInfinity = __webpack_require__("../shared/browser/node_modules/core-js/internals/to-integer-or-infinity.js");
            var max = Math.max;
            var min = Math.min;
            module.exports = function(index, length) {
                var integer = toIntegerOrInfinity(index);
                return integer < 0 ? max(integer + length, 0) : min(integer, length);
            };
        },
        "../shared/browser/node_modules/core-js/internals/to-indexed-object.js": (module, __unused_webpack_exports, __webpack_require__) => {
            var IndexedObject = __webpack_require__("../shared/browser/node_modules/core-js/internals/indexed-object.js");
            var requireObjectCoercible = __webpack_require__("../shared/browser/node_modules/core-js/internals/require-object-coercible.js");
            module.exports = function(it) {
                return IndexedObject(requireObjectCoercible(it));
            };
        },
        "../shared/browser/node_modules/core-js/internals/to-integer-or-infinity.js": (module, __unused_webpack_exports, __webpack_require__) => {
            var trunc = __webpack_require__("../shared/browser/node_modules/core-js/internals/math-trunc.js");
            module.exports = function(argument) {
                var number = +argument;
                return number !== number || 0 === number ? 0 : trunc(number);
            };
        },
        "../shared/browser/node_modules/core-js/internals/to-length.js": (module, __unused_webpack_exports, __webpack_require__) => {
            var toIntegerOrInfinity = __webpack_require__("../shared/browser/node_modules/core-js/internals/to-integer-or-infinity.js");
            var min = Math.min;
            module.exports = function(argument) {
                return argument > 0 ? min(toIntegerOrInfinity(argument), 9007199254740991) : 0;
            };
        },
        "../shared/browser/node_modules/core-js/internals/to-object.js": (module, __unused_webpack_exports, __webpack_require__) => {
            var requireObjectCoercible = __webpack_require__("../shared/browser/node_modules/core-js/internals/require-object-coercible.js");
            var $Object = Object;
            module.exports = function(argument) {
                return $Object(requireObjectCoercible(argument));
            };
        },
        "../shared/browser/node_modules/core-js/internals/to-primitive.js": (module, __unused_webpack_exports, __webpack_require__) => {
            var call = __webpack_require__("../shared/browser/node_modules/core-js/internals/function-call.js");
            var isObject = __webpack_require__("../shared/browser/node_modules/core-js/internals/is-object.js");
            var isSymbol = __webpack_require__("../shared/browser/node_modules/core-js/internals/is-symbol.js");
            var getMethod = __webpack_require__("../shared/browser/node_modules/core-js/internals/get-method.js");
            var ordinaryToPrimitive = __webpack_require__("../shared/browser/node_modules/core-js/internals/ordinary-to-primitive.js");
            var wellKnownSymbol = __webpack_require__("../shared/browser/node_modules/core-js/internals/well-known-symbol.js");
            var $TypeError = TypeError;
            var TO_PRIMITIVE = wellKnownSymbol("toPrimitive");
            module.exports = function(input, pref) {
                if (!isObject(input) || isSymbol(input)) return input;
                var exoticToPrim = getMethod(input, TO_PRIMITIVE);
                var result;
                if (exoticToPrim) {
                    if (void 0 === pref) pref = "default";
                    result = call(exoticToPrim, input, pref);
                    if (!isObject(result) || isSymbol(result)) return result;
                    throw $TypeError("Can't convert object to primitive value");
                }
                if (void 0 === pref) pref = "number";
                return ordinaryToPrimitive(input, pref);
            };
        },
        "../shared/browser/node_modules/core-js/internals/to-property-key.js": (module, __unused_webpack_exports, __webpack_require__) => {
            var toPrimitive = __webpack_require__("../shared/browser/node_modules/core-js/internals/to-primitive.js");
            var isSymbol = __webpack_require__("../shared/browser/node_modules/core-js/internals/is-symbol.js");
            module.exports = function(argument) {
                var key = toPrimitive(argument, "string");
                return isSymbol(key) ? key : key + "";
            };
        },
        "../shared/browser/node_modules/core-js/internals/to-string-tag-support.js": (module, __unused_webpack_exports, __webpack_require__) => {
            var wellKnownSymbol = __webpack_require__("../shared/browser/node_modules/core-js/internals/well-known-symbol.js");
            var TO_STRING_TAG = wellKnownSymbol("toStringTag");
            var test = {};
            test[TO_STRING_TAG] = "z";
            module.exports = "[object z]" === String(test);
        },
        "../shared/browser/node_modules/core-js/internals/to-string.js": (module, __unused_webpack_exports, __webpack_require__) => {
            var classof = __webpack_require__("../shared/browser/node_modules/core-js/internals/classof.js");
            var $String = String;
            module.exports = function(argument) {
                if ("Symbol" === classof(argument)) throw TypeError("Cannot convert a Symbol value to a string");
                return $String(argument);
            };
        },
        "../shared/browser/node_modules/core-js/internals/try-to-string.js": module => {
            var $String = String;
            module.exports = function(argument) {
                try {
                    return $String(argument);
                } catch (error) {
                    return "Object";
                }
            };
        },
        "../shared/browser/node_modules/core-js/internals/uid.js": (module, __unused_webpack_exports, __webpack_require__) => {
            var uncurryThis = __webpack_require__("../shared/browser/node_modules/core-js/internals/function-uncurry-this.js");
            var id = 0;
            var postfix = Math.random();
            var toString = uncurryThis(1..toString);
            module.exports = function(key) {
                return "Symbol(" + (void 0 === key ? "" : key) + ")_" + toString(++id + postfix, 36);
            };
        },
        "../shared/browser/node_modules/core-js/internals/use-symbol-as-uid.js": (module, __unused_webpack_exports, __webpack_require__) => {
            var NATIVE_SYMBOL = __webpack_require__("../shared/browser/node_modules/core-js/internals/symbol-constructor-detection.js");
            module.exports = NATIVE_SYMBOL && !Symbol.sham && "symbol" == typeof Symbol.iterator;
        },
        "../shared/browser/node_modules/core-js/internals/v8-prototype-define-bug.js": (module, __unused_webpack_exports, __webpack_require__) => {
            var DESCRIPTORS = __webpack_require__("../shared/browser/node_modules/core-js/internals/descriptors.js");
            var fails = __webpack_require__("../shared/browser/node_modules/core-js/internals/fails.js");
            module.exports = DESCRIPTORS && fails((function() {
                return 42 != Object.defineProperty((function() {}), "prototype", {
                    value: 42,
                    writable: false
                }).prototype;
            }));
        },
        "../shared/browser/node_modules/core-js/internals/weak-map-basic-detection.js": (module, __unused_webpack_exports, __webpack_require__) => {
            var global = __webpack_require__("../shared/browser/node_modules/core-js/internals/global.js");
            var isCallable = __webpack_require__("../shared/browser/node_modules/core-js/internals/is-callable.js");
            var WeakMap = global.WeakMap;
            module.exports = isCallable(WeakMap) && /native code/.test(String(WeakMap));
        },
        "../shared/browser/node_modules/core-js/internals/well-known-symbol-define.js": (module, __unused_webpack_exports, __webpack_require__) => {
            var path = __webpack_require__("../shared/browser/node_modules/core-js/internals/path.js");
            var hasOwn = __webpack_require__("../shared/browser/node_modules/core-js/internals/has-own-property.js");
            var wrappedWellKnownSymbolModule = __webpack_require__("../shared/browser/node_modules/core-js/internals/well-known-symbol-wrapped.js");
            var defineProperty = __webpack_require__("../shared/browser/node_modules/core-js/internals/object-define-property.js").f;
            module.exports = function(NAME) {
                var Symbol = path.Symbol || (path.Symbol = {});
                if (!hasOwn(Symbol, NAME)) defineProperty(Symbol, NAME, {
                    value: wrappedWellKnownSymbolModule.f(NAME)
                });
            };
        },
        "../shared/browser/node_modules/core-js/internals/well-known-symbol-wrapped.js": (__unused_webpack_module, exports, __webpack_require__) => {
            var wellKnownSymbol = __webpack_require__("../shared/browser/node_modules/core-js/internals/well-known-symbol.js");
            exports.f = wellKnownSymbol;
        },
        "../shared/browser/node_modules/core-js/internals/well-known-symbol.js": (module, __unused_webpack_exports, __webpack_require__) => {
            var global = __webpack_require__("../shared/browser/node_modules/core-js/internals/global.js");
            var shared = __webpack_require__("../shared/browser/node_modules/core-js/internals/shared.js");
            var hasOwn = __webpack_require__("../shared/browser/node_modules/core-js/internals/has-own-property.js");
            var uid = __webpack_require__("../shared/browser/node_modules/core-js/internals/uid.js");
            var NATIVE_SYMBOL = __webpack_require__("../shared/browser/node_modules/core-js/internals/symbol-constructor-detection.js");
            var USE_SYMBOL_AS_UID = __webpack_require__("../shared/browser/node_modules/core-js/internals/use-symbol-as-uid.js");
            var WellKnownSymbolsStore = shared("wks");
            var Symbol = global.Symbol;
            var symbolFor = Symbol && Symbol["for"];
            var createWellKnownSymbol = USE_SYMBOL_AS_UID ? Symbol : Symbol && Symbol.withoutSetter || uid;
            module.exports = function(name) {
                if (!hasOwn(WellKnownSymbolsStore, name) || !(NATIVE_SYMBOL || "string" == typeof WellKnownSymbolsStore[name])) {
                    var description = "Symbol." + name;
                    if (NATIVE_SYMBOL && hasOwn(Symbol, name)) WellKnownSymbolsStore[name] = Symbol[name]; else if (USE_SYMBOL_AS_UID && symbolFor) WellKnownSymbolsStore[name] = symbolFor(description); else WellKnownSymbolsStore[name] = createWellKnownSymbol(description);
                }
                return WellKnownSymbolsStore[name];
            };
        },
        "../shared/browser/node_modules/core-js/internals/whitespaces.js": module => {
            module.exports = "\t\n\v\f\r      " + "          　\u2028\u2029\ufeff";
        },
        "../shared/browser/node_modules/core-js/modules/es.array.concat.js": (__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {
            "use strict";
            var $ = __webpack_require__("../shared/browser/node_modules/core-js/internals/export.js");
            var fails = __webpack_require__("../shared/browser/node_modules/core-js/internals/fails.js");
            var isArray = __webpack_require__("../shared/browser/node_modules/core-js/internals/is-array.js");
            var isObject = __webpack_require__("../shared/browser/node_modules/core-js/internals/is-object.js");
            var toObject = __webpack_require__("../shared/browser/node_modules/core-js/internals/to-object.js");
            var lengthOfArrayLike = __webpack_require__("../shared/browser/node_modules/core-js/internals/length-of-array-like.js");
            var doesNotExceedSafeInteger = __webpack_require__("../shared/browser/node_modules/core-js/internals/does-not-exceed-safe-integer.js");
            var createProperty = __webpack_require__("../shared/browser/node_modules/core-js/internals/create-property.js");
            var arraySpeciesCreate = __webpack_require__("../shared/browser/node_modules/core-js/internals/array-species-create.js");
            var arrayMethodHasSpeciesSupport = __webpack_require__("../shared/browser/node_modules/core-js/internals/array-method-has-species-support.js");
            var wellKnownSymbol = __webpack_require__("../shared/browser/node_modules/core-js/internals/well-known-symbol.js");
            var V8_VERSION = __webpack_require__("../shared/browser/node_modules/core-js/internals/engine-v8-version.js");
            var IS_CONCAT_SPREADABLE = wellKnownSymbol("isConcatSpreadable");
            var IS_CONCAT_SPREADABLE_SUPPORT = V8_VERSION >= 51 || !fails((function() {
                var array = [];
                array[IS_CONCAT_SPREADABLE] = false;
                return array.concat()[0] !== array;
            }));
            var SPECIES_SUPPORT = arrayMethodHasSpeciesSupport("concat");
            var isConcatSpreadable = function(O) {
                if (!isObject(O)) return false;
                var spreadable = O[IS_CONCAT_SPREADABLE];
                return void 0 !== spreadable ? !!spreadable : isArray(O);
            };
            var FORCED = !IS_CONCAT_SPREADABLE_SUPPORT || !SPECIES_SUPPORT;
            $({
                target: "Array",
                proto: true,
                arity: 1,
                forced: FORCED
            }, {
                concat: function(arg) {
                    var O = toObject(this);
                    var A = arraySpeciesCreate(O, 0);
                    var n = 0;
                    var i, k, length, len, E;
                    for (i = -1, length = arguments.length; i < length; i++) {
                        E = -1 === i ? O : arguments[i];
                        if (isConcatSpreadable(E)) {
                            len = lengthOfArrayLike(E);
                            doesNotExceedSafeInteger(n + len);
                            for (k = 0; k < len; k++, n++) if (k in E) createProperty(A, n, E[k]);
                        } else {
                            doesNotExceedSafeInteger(n + 1);
                            createProperty(A, n++, E);
                        }
                    }
                    A.length = n;
                    return A;
                }
            });
        },
        "../shared/browser/node_modules/core-js/modules/es.array.filter.js": (__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {
            "use strict";
            var $ = __webpack_require__("../shared/browser/node_modules/core-js/internals/export.js");
            var $filter = __webpack_require__("../shared/browser/node_modules/core-js/internals/array-iteration.js").filter;
            var arrayMethodHasSpeciesSupport = __webpack_require__("../shared/browser/node_modules/core-js/internals/array-method-has-species-support.js");
            var HAS_SPECIES_SUPPORT = arrayMethodHasSpeciesSupport("filter");
            $({
                target: "Array",
                proto: true,
                forced: !HAS_SPECIES_SUPPORT
            }, {
                filter: function(callbackfn) {
                    return $filter(this, callbackfn, arguments.length > 1 ? arguments[1] : void 0);
                }
            });
        },
        "../shared/browser/node_modules/core-js/modules/es.array.find.js": (__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {
            "use strict";
            var $ = __webpack_require__("../shared/browser/node_modules/core-js/internals/export.js");
            var $find = __webpack_require__("../shared/browser/node_modules/core-js/internals/array-iteration.js").find;
            var addToUnscopables = __webpack_require__("../shared/browser/node_modules/core-js/internals/add-to-unscopables.js");
            var FIND = "find";
            var SKIPS_HOLES = true;
            if (FIND in []) Array(1)[FIND]((function() {
                SKIPS_HOLES = false;
            }));
            $({
                target: "Array",
                proto: true,
                forced: SKIPS_HOLES
            }, {
                find: function(callbackfn) {
                    return $find(this, callbackfn, arguments.length > 1 ? arguments[1] : void 0);
                }
            });
            addToUnscopables(FIND);
        },
        "../shared/browser/node_modules/core-js/modules/es.array.for-each.js": (__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {
            "use strict";
            var $ = __webpack_require__("../shared/browser/node_modules/core-js/internals/export.js");
            var forEach = __webpack_require__("../shared/browser/node_modules/core-js/internals/array-for-each.js");
            $({
                target: "Array",
                proto: true,
                forced: [].forEach != forEach
            }, {
                forEach
            });
        },
        "../shared/browser/node_modules/core-js/modules/es.array.includes.js": (__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {
            "use strict";
            var $ = __webpack_require__("../shared/browser/node_modules/core-js/internals/export.js");
            var $includes = __webpack_require__("../shared/browser/node_modules/core-js/internals/array-includes.js").includes;
            var fails = __webpack_require__("../shared/browser/node_modules/core-js/internals/fails.js");
            var addToUnscopables = __webpack_require__("../shared/browser/node_modules/core-js/internals/add-to-unscopables.js");
            var BROKEN_ON_SPARSE = fails((function() {
                return !Array(1).includes();
            }));
            $({
                target: "Array",
                proto: true,
                forced: BROKEN_ON_SPARSE
            }, {
                includes: function(el) {
                    return $includes(this, el, arguments.length > 1 ? arguments[1] : void 0);
                }
            });
            addToUnscopables("includes");
        },
        "../shared/browser/node_modules/core-js/modules/es.array.iterator.js": (module, __unused_webpack_exports, __webpack_require__) => {
            "use strict";
            var toIndexedObject = __webpack_require__("../shared/browser/node_modules/core-js/internals/to-indexed-object.js");
            var addToUnscopables = __webpack_require__("../shared/browser/node_modules/core-js/internals/add-to-unscopables.js");
            var Iterators = __webpack_require__("../shared/browser/node_modules/core-js/internals/iterators.js");
            var InternalStateModule = __webpack_require__("../shared/browser/node_modules/core-js/internals/internal-state.js");
            var defineProperty = __webpack_require__("../shared/browser/node_modules/core-js/internals/object-define-property.js").f;
            var defineIterator = __webpack_require__("../shared/browser/node_modules/core-js/internals/iterator-define.js");
            var IS_PURE = __webpack_require__("../shared/browser/node_modules/core-js/internals/is-pure.js");
            var DESCRIPTORS = __webpack_require__("../shared/browser/node_modules/core-js/internals/descriptors.js");
            var ARRAY_ITERATOR = "Array Iterator";
            var setInternalState = InternalStateModule.set;
            var getInternalState = InternalStateModule.getterFor(ARRAY_ITERATOR);
            module.exports = defineIterator(Array, "Array", (function(iterated, kind) {
                setInternalState(this, {
                    type: ARRAY_ITERATOR,
                    target: toIndexedObject(iterated),
                    index: 0,
                    kind
                });
            }), (function() {
                var state = getInternalState(this);
                var target = state.target;
                var kind = state.kind;
                var index = state.index++;
                if (!target || index >= target.length) {
                    state.target = void 0;
                    return {
                        value: void 0,
                        done: true
                    };
                }
                if ("keys" == kind) return {
                    value: index,
                    done: false
                };
                if ("values" == kind) return {
                    value: target[index],
                    done: false
                };
                return {
                    value: [ index, target[index] ],
                    done: false
                };
            }), "values");
            var values = Iterators.Arguments = Iterators.Array;
            addToUnscopables("keys");
            addToUnscopables("values");
            addToUnscopables("entries");
            if (!IS_PURE && DESCRIPTORS && "values" !== values.name) try {
                defineProperty(values, "name", {
                    value: "values"
                });
            } catch (error) {}
        },
        "../shared/browser/node_modules/core-js/modules/es.date.to-string.js": (__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {
            var uncurryThis = __webpack_require__("../shared/browser/node_modules/core-js/internals/function-uncurry-this.js");
            var defineBuiltIn = __webpack_require__("../shared/browser/node_modules/core-js/internals/define-built-in.js");
            var DatePrototype = Date.prototype;
            var INVALID_DATE = "Invalid Date";
            var TO_STRING = "toString";
            var nativeDateToString = uncurryThis(DatePrototype[TO_STRING]);
            var thisTimeValue = uncurryThis(DatePrototype.getTime);
            if (String(new Date(NaN)) != INVALID_DATE) defineBuiltIn(DatePrototype, TO_STRING, (function() {
                var value = thisTimeValue(this);
                return value === value ? nativeDateToString(this) : INVALID_DATE;
            }));
        },
        "../shared/browser/node_modules/core-js/modules/es.json.stringify.js": (__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {
            var $ = __webpack_require__("../shared/browser/node_modules/core-js/internals/export.js");
            var getBuiltIn = __webpack_require__("../shared/browser/node_modules/core-js/internals/get-built-in.js");
            var apply = __webpack_require__("../shared/browser/node_modules/core-js/internals/function-apply.js");
            var call = __webpack_require__("../shared/browser/node_modules/core-js/internals/function-call.js");
            var uncurryThis = __webpack_require__("../shared/browser/node_modules/core-js/internals/function-uncurry-this.js");
            var fails = __webpack_require__("../shared/browser/node_modules/core-js/internals/fails.js");
            var isArray = __webpack_require__("../shared/browser/node_modules/core-js/internals/is-array.js");
            var isCallable = __webpack_require__("../shared/browser/node_modules/core-js/internals/is-callable.js");
            var isObject = __webpack_require__("../shared/browser/node_modules/core-js/internals/is-object.js");
            var isSymbol = __webpack_require__("../shared/browser/node_modules/core-js/internals/is-symbol.js");
            var arraySlice = __webpack_require__("../shared/browser/node_modules/core-js/internals/array-slice.js");
            var NATIVE_SYMBOL = __webpack_require__("../shared/browser/node_modules/core-js/internals/symbol-constructor-detection.js");
            var $stringify = getBuiltIn("JSON", "stringify");
            var exec = uncurryThis(/./.exec);
            var charAt = uncurryThis("".charAt);
            var charCodeAt = uncurryThis("".charCodeAt);
            var replace = uncurryThis("".replace);
            var numberToString = uncurryThis(1..toString);
            var tester = /[\uD800-\uDFFF]/g;
            var low = /^[\uD800-\uDBFF]$/;
            var hi = /^[\uDC00-\uDFFF]$/;
            var WRONG_SYMBOLS_CONVERSION = !NATIVE_SYMBOL || fails((function() {
                var symbol = getBuiltIn("Symbol")();
                return "[null]" != $stringify([ symbol ]) || "{}" != $stringify({
                    a: symbol
                }) || "{}" != $stringify(Object(symbol));
            }));
            var ILL_FORMED_UNICODE = fails((function() {
                return '"\\udf06\\ud834"' !== $stringify("\udf06\ud834") || '"\\udead"' !== $stringify("\udead");
            }));
            var stringifyWithSymbolsFix = function(it, replacer) {
                var args = arraySlice(arguments);
                var $replacer = replacer;
                if (!isObject(replacer) && void 0 === it || isSymbol(it)) return;
                if (!isArray(replacer)) replacer = function(key, value) {
                    if (isCallable($replacer)) value = call($replacer, this, key, value);
                    if (!isSymbol(value)) return value;
                };
                args[1] = replacer;
                return apply($stringify, null, args);
            };
            var fixIllFormed = function(match, offset, string) {
                var prev = charAt(string, offset - 1);
                var next = charAt(string, offset + 1);
                if (exec(low, match) && !exec(hi, next) || exec(hi, match) && !exec(low, prev)) return "\\u" + numberToString(charCodeAt(match, 0), 16);
                return match;
            };
            if ($stringify) $({
                target: "JSON",
                stat: true,
                arity: 3,
                forced: WRONG_SYMBOLS_CONVERSION || ILL_FORMED_UNICODE
            }, {
                stringify: function(it, replacer, space) {
                    var args = arraySlice(arguments);
                    var result = apply(WRONG_SYMBOLS_CONVERSION ? stringifyWithSymbolsFix : $stringify, null, args);
                    return ILL_FORMED_UNICODE && "string" == typeof result ? replace(result, tester, fixIllFormed) : result;
                }
            });
        },
        "../shared/browser/node_modules/core-js/modules/es.number.constructor.js": (__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {
            "use strict";
            var DESCRIPTORS = __webpack_require__("../shared/browser/node_modules/core-js/internals/descriptors.js");
            var global = __webpack_require__("../shared/browser/node_modules/core-js/internals/global.js");
            var uncurryThis = __webpack_require__("../shared/browser/node_modules/core-js/internals/function-uncurry-this.js");
            var isForced = __webpack_require__("../shared/browser/node_modules/core-js/internals/is-forced.js");
            var defineBuiltIn = __webpack_require__("../shared/browser/node_modules/core-js/internals/define-built-in.js");
            var hasOwn = __webpack_require__("../shared/browser/node_modules/core-js/internals/has-own-property.js");
            var inheritIfRequired = __webpack_require__("../shared/browser/node_modules/core-js/internals/inherit-if-required.js");
            var isPrototypeOf = __webpack_require__("../shared/browser/node_modules/core-js/internals/object-is-prototype-of.js");
            var isSymbol = __webpack_require__("../shared/browser/node_modules/core-js/internals/is-symbol.js");
            var toPrimitive = __webpack_require__("../shared/browser/node_modules/core-js/internals/to-primitive.js");
            var fails = __webpack_require__("../shared/browser/node_modules/core-js/internals/fails.js");
            var getOwnPropertyNames = __webpack_require__("../shared/browser/node_modules/core-js/internals/object-get-own-property-names.js").f;
            var getOwnPropertyDescriptor = __webpack_require__("../shared/browser/node_modules/core-js/internals/object-get-own-property-descriptor.js").f;
            var defineProperty = __webpack_require__("../shared/browser/node_modules/core-js/internals/object-define-property.js").f;
            var thisNumberValue = __webpack_require__("../shared/browser/node_modules/core-js/internals/this-number-value.js");
            var trim = __webpack_require__("../shared/browser/node_modules/core-js/internals/string-trim.js").trim;
            var NUMBER = "Number";
            var NativeNumber = global[NUMBER];
            var NumberPrototype = NativeNumber.prototype;
            var TypeError = global.TypeError;
            var arraySlice = uncurryThis("".slice);
            var charCodeAt = uncurryThis("".charCodeAt);
            var toNumeric = function(value) {
                var primValue = toPrimitive(value, "number");
                return "bigint" == typeof primValue ? primValue : toNumber(primValue);
            };
            var toNumber = function(argument) {
                var it = toPrimitive(argument, "number");
                var first, third, radix, maxCode, digits, length, index, code;
                if (isSymbol(it)) throw TypeError("Cannot convert a Symbol value to a number");
                if ("string" == typeof it && it.length > 2) {
                    it = trim(it);
                    first = charCodeAt(it, 0);
                    if (43 === first || 45 === first) {
                        third = charCodeAt(it, 2);
                        if (88 === third || 120 === third) return NaN;
                    } else if (48 === first) {
                        switch (charCodeAt(it, 1)) {
                          case 66:
                          case 98:
                            radix = 2;
                            maxCode = 49;
                            break;

                          case 79:
                          case 111:
                            radix = 8;
                            maxCode = 55;
                            break;

                          default:
                            return +it;
                        }
                        digits = arraySlice(it, 2);
                        length = digits.length;
                        for (index = 0; index < length; index++) {
                            code = charCodeAt(digits, index);
                            if (code < 48 || code > maxCode) return NaN;
                        }
                        return parseInt(digits, radix);
                    }
                }
                return +it;
            };
            if (isForced(NUMBER, !NativeNumber(" 0o1") || !NativeNumber("0b1") || NativeNumber("+0x1"))) {
                var NumberWrapper = function(value) {
                    var n = arguments.length < 1 ? 0 : NativeNumber(toNumeric(value));
                    var dummy = this;
                    return isPrototypeOf(NumberPrototype, dummy) && fails((function() {
                        thisNumberValue(dummy);
                    })) ? inheritIfRequired(Object(n), dummy, NumberWrapper) : n;
                };
                for (var key, keys = DESCRIPTORS ? getOwnPropertyNames(NativeNumber) : ("MAX_VALUE,MIN_VALUE,NaN,NEGATIVE_INFINITY,POSITIVE_INFINITY," + "EPSILON,MAX_SAFE_INTEGER,MIN_SAFE_INTEGER,isFinite,isInteger,isNaN,isSafeInteger,parseFloat,parseInt," + "fromString,range").split(","), j = 0; keys.length > j; j++) if (hasOwn(NativeNumber, key = keys[j]) && !hasOwn(NumberWrapper, key)) defineProperty(NumberWrapper, key, getOwnPropertyDescriptor(NativeNumber, key));
                NumberWrapper.prototype = NumberPrototype;
                NumberPrototype.constructor = NumberWrapper;
                defineBuiltIn(global, NUMBER, NumberWrapper, {
                    constructor: true
                });
            }
        },
        "../shared/browser/node_modules/core-js/modules/es.number.is-nan.js": (__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {
            var $ = __webpack_require__("../shared/browser/node_modules/core-js/internals/export.js");
            $({
                target: "Number",
                stat: true
            }, {
                isNaN: function(number) {
                    return number != number;
                }
            });
        },
        "../shared/browser/node_modules/core-js/modules/es.object.define-properties.js": (__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {
            var $ = __webpack_require__("../shared/browser/node_modules/core-js/internals/export.js");
            var DESCRIPTORS = __webpack_require__("../shared/browser/node_modules/core-js/internals/descriptors.js");
            var defineProperties = __webpack_require__("../shared/browser/node_modules/core-js/internals/object-define-properties.js").f;
            $({
                target: "Object",
                stat: true,
                forced: Object.defineProperties !== defineProperties,
                sham: !DESCRIPTORS
            }, {
                defineProperties
            });
        },
        "../shared/browser/node_modules/core-js/modules/es.object.define-property.js": (__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {
            var $ = __webpack_require__("../shared/browser/node_modules/core-js/internals/export.js");
            var DESCRIPTORS = __webpack_require__("../shared/browser/node_modules/core-js/internals/descriptors.js");
            var defineProperty = __webpack_require__("../shared/browser/node_modules/core-js/internals/object-define-property.js").f;
            $({
                target: "Object",
                stat: true,
                forced: Object.defineProperty !== defineProperty,
                sham: !DESCRIPTORS
            }, {
                defineProperty
            });
        },
        "../shared/browser/node_modules/core-js/modules/es.object.get-own-property-descriptor.js": (__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {
            var $ = __webpack_require__("../shared/browser/node_modules/core-js/internals/export.js");
            var fails = __webpack_require__("../shared/browser/node_modules/core-js/internals/fails.js");
            var toIndexedObject = __webpack_require__("../shared/browser/node_modules/core-js/internals/to-indexed-object.js");
            var nativeGetOwnPropertyDescriptor = __webpack_require__("../shared/browser/node_modules/core-js/internals/object-get-own-property-descriptor.js").f;
            var DESCRIPTORS = __webpack_require__("../shared/browser/node_modules/core-js/internals/descriptors.js");
            var FAILS_ON_PRIMITIVES = fails((function() {
                nativeGetOwnPropertyDescriptor(1);
            }));
            var FORCED = !DESCRIPTORS || FAILS_ON_PRIMITIVES;
            $({
                target: "Object",
                stat: true,
                forced: FORCED,
                sham: !DESCRIPTORS
            }, {
                getOwnPropertyDescriptor: function(it, key) {
                    return nativeGetOwnPropertyDescriptor(toIndexedObject(it), key);
                }
            });
        },
        "../shared/browser/node_modules/core-js/modules/es.object.get-own-property-descriptors.js": (__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {
            var $ = __webpack_require__("../shared/browser/node_modules/core-js/internals/export.js");
            var DESCRIPTORS = __webpack_require__("../shared/browser/node_modules/core-js/internals/descriptors.js");
            var ownKeys = __webpack_require__("../shared/browser/node_modules/core-js/internals/own-keys.js");
            var toIndexedObject = __webpack_require__("../shared/browser/node_modules/core-js/internals/to-indexed-object.js");
            var getOwnPropertyDescriptorModule = __webpack_require__("../shared/browser/node_modules/core-js/internals/object-get-own-property-descriptor.js");
            var createProperty = __webpack_require__("../shared/browser/node_modules/core-js/internals/create-property.js");
            $({
                target: "Object",
                stat: true,
                sham: !DESCRIPTORS
            }, {
                getOwnPropertyDescriptors: function(object) {
                    var O = toIndexedObject(object);
                    var getOwnPropertyDescriptor = getOwnPropertyDescriptorModule.f;
                    var keys = ownKeys(O);
                    var result = {};
                    var index = 0;
                    var key, descriptor;
                    while (keys.length > index) {
                        descriptor = getOwnPropertyDescriptor(O, key = keys[index++]);
                        if (void 0 !== descriptor) createProperty(result, key, descriptor);
                    }
                    return result;
                }
            });
        },
        "../shared/browser/node_modules/core-js/modules/es.object.get-own-property-symbols.js": (__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {
            var $ = __webpack_require__("../shared/browser/node_modules/core-js/internals/export.js");
            var NATIVE_SYMBOL = __webpack_require__("../shared/browser/node_modules/core-js/internals/symbol-constructor-detection.js");
            var fails = __webpack_require__("../shared/browser/node_modules/core-js/internals/fails.js");
            var getOwnPropertySymbolsModule = __webpack_require__("../shared/browser/node_modules/core-js/internals/object-get-own-property-symbols.js");
            var toObject = __webpack_require__("../shared/browser/node_modules/core-js/internals/to-object.js");
            var FORCED = !NATIVE_SYMBOL || fails((function() {
                getOwnPropertySymbolsModule.f(1);
            }));
            $({
                target: "Object",
                stat: true,
                forced: FORCED
            }, {
                getOwnPropertySymbols: function(it) {
                    var $getOwnPropertySymbols = getOwnPropertySymbolsModule.f;
                    return $getOwnPropertySymbols ? $getOwnPropertySymbols(toObject(it)) : [];
                }
            });
        },
        "../shared/browser/node_modules/core-js/modules/es.object.keys.js": (__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {
            var $ = __webpack_require__("../shared/browser/node_modules/core-js/internals/export.js");
            var toObject = __webpack_require__("../shared/browser/node_modules/core-js/internals/to-object.js");
            var nativeKeys = __webpack_require__("../shared/browser/node_modules/core-js/internals/object-keys.js");
            var fails = __webpack_require__("../shared/browser/node_modules/core-js/internals/fails.js");
            var FAILS_ON_PRIMITIVES = fails((function() {
                nativeKeys(1);
            }));
            $({
                target: "Object",
                stat: true,
                forced: FAILS_ON_PRIMITIVES
            }, {
                keys: function(it) {
                    return nativeKeys(toObject(it));
                }
            });
        },
        "../shared/browser/node_modules/core-js/modules/es.object.to-string.js": (__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {
            var TO_STRING_TAG_SUPPORT = __webpack_require__("../shared/browser/node_modules/core-js/internals/to-string-tag-support.js");
            var defineBuiltIn = __webpack_require__("../shared/browser/node_modules/core-js/internals/define-built-in.js");
            var toString = __webpack_require__("../shared/browser/node_modules/core-js/internals/object-to-string.js");
            if (!TO_STRING_TAG_SUPPORT) defineBuiltIn(Object.prototype, "toString", toString, {
                unsafe: true
            });
        },
        "../shared/browser/node_modules/core-js/modules/es.regexp.exec.js": (__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {
            "use strict";
            var $ = __webpack_require__("../shared/browser/node_modules/core-js/internals/export.js");
            var exec = __webpack_require__("../shared/browser/node_modules/core-js/internals/regexp-exec.js");
            $({
                target: "RegExp",
                proto: true,
                forced: /./.exec !== exec
            }, {
                exec
            });
        },
        "../shared/browser/node_modules/core-js/modules/es.regexp.to-string.js": (__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {
            "use strict";
            var PROPER_FUNCTION_NAME = __webpack_require__("../shared/browser/node_modules/core-js/internals/function-name.js").PROPER;
            var defineBuiltIn = __webpack_require__("../shared/browser/node_modules/core-js/internals/define-built-in.js");
            var anObject = __webpack_require__("../shared/browser/node_modules/core-js/internals/an-object.js");
            var $toString = __webpack_require__("../shared/browser/node_modules/core-js/internals/to-string.js");
            var fails = __webpack_require__("../shared/browser/node_modules/core-js/internals/fails.js");
            var getRegExpFlags = __webpack_require__("../shared/browser/node_modules/core-js/internals/regexp-get-flags.js");
            var TO_STRING = "toString";
            var RegExpPrototype = RegExp.prototype;
            var nativeToString = RegExpPrototype[TO_STRING];
            var NOT_GENERIC = fails((function() {
                return "/a/b" != nativeToString.call({
                    source: "a",
                    flags: "b"
                });
            }));
            var INCORRECT_NAME = PROPER_FUNCTION_NAME && nativeToString.name != TO_STRING;
            if (NOT_GENERIC || INCORRECT_NAME) defineBuiltIn(RegExp.prototype, TO_STRING, (function() {
                var R = anObject(this);
                var pattern = $toString(R.source);
                var flags = $toString(getRegExpFlags(R));
                return "/" + pattern + "/" + flags;
            }), {
                unsafe: true
            });
        },
        "../shared/browser/node_modules/core-js/modules/es.string.includes.js": (__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {
            "use strict";
            var $ = __webpack_require__("../shared/browser/node_modules/core-js/internals/export.js");
            var uncurryThis = __webpack_require__("../shared/browser/node_modules/core-js/internals/function-uncurry-this.js");
            var notARegExp = __webpack_require__("../shared/browser/node_modules/core-js/internals/not-a-regexp.js");
            var requireObjectCoercible = __webpack_require__("../shared/browser/node_modules/core-js/internals/require-object-coercible.js");
            var toString = __webpack_require__("../shared/browser/node_modules/core-js/internals/to-string.js");
            var correctIsRegExpLogic = __webpack_require__("../shared/browser/node_modules/core-js/internals/correct-is-regexp-logic.js");
            var stringIndexOf = uncurryThis("".indexOf);
            $({
                target: "String",
                proto: true,
                forced: !correctIsRegExpLogic("includes")
            }, {
                includes: function(searchString) {
                    return !!~stringIndexOf(toString(requireObjectCoercible(this)), toString(notARegExp(searchString)), arguments.length > 1 ? arguments[1] : void 0);
                }
            });
        },
        "../shared/browser/node_modules/core-js/modules/es.string.match.js": (__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {
            "use strict";
            var call = __webpack_require__("../shared/browser/node_modules/core-js/internals/function-call.js");
            var fixRegExpWellKnownSymbolLogic = __webpack_require__("../shared/browser/node_modules/core-js/internals/fix-regexp-well-known-symbol-logic.js");
            var anObject = __webpack_require__("../shared/browser/node_modules/core-js/internals/an-object.js");
            var isNullOrUndefined = __webpack_require__("../shared/browser/node_modules/core-js/internals/is-null-or-undefined.js");
            var toLength = __webpack_require__("../shared/browser/node_modules/core-js/internals/to-length.js");
            var toString = __webpack_require__("../shared/browser/node_modules/core-js/internals/to-string.js");
            var requireObjectCoercible = __webpack_require__("../shared/browser/node_modules/core-js/internals/require-object-coercible.js");
            var getMethod = __webpack_require__("../shared/browser/node_modules/core-js/internals/get-method.js");
            var advanceStringIndex = __webpack_require__("../shared/browser/node_modules/core-js/internals/advance-string-index.js");
            var regExpExec = __webpack_require__("../shared/browser/node_modules/core-js/internals/regexp-exec-abstract.js");
            fixRegExpWellKnownSymbolLogic("match", (function(MATCH, nativeMatch, maybeCallNative) {
                return [ function(regexp) {
                    var O = requireObjectCoercible(this);
                    var matcher = isNullOrUndefined(regexp) ? void 0 : getMethod(regexp, MATCH);
                    return matcher ? call(matcher, regexp, O) : new RegExp(regexp)[MATCH](toString(O));
                }, function(string) {
                    var rx = anObject(this);
                    var S = toString(string);
                    var res = maybeCallNative(nativeMatch, rx, S);
                    if (res.done) return res.value;
                    if (!rx.global) return regExpExec(rx, S);
                    var fullUnicode = rx.unicode;
                    rx.lastIndex = 0;
                    var A = [];
                    var n = 0;
                    var result;
                    while (null !== (result = regExpExec(rx, S))) {
                        var matchStr = toString(result[0]);
                        A[n] = matchStr;
                        if ("" === matchStr) rx.lastIndex = advanceStringIndex(S, toLength(rx.lastIndex), fullUnicode);
                        n++;
                    }
                    return 0 === n ? null : A;
                } ];
            }));
        },
        "../shared/browser/node_modules/core-js/modules/es.string.split.js": (__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {
            "use strict";
            var apply = __webpack_require__("../shared/browser/node_modules/core-js/internals/function-apply.js");
            var call = __webpack_require__("../shared/browser/node_modules/core-js/internals/function-call.js");
            var uncurryThis = __webpack_require__("../shared/browser/node_modules/core-js/internals/function-uncurry-this.js");
            var fixRegExpWellKnownSymbolLogic = __webpack_require__("../shared/browser/node_modules/core-js/internals/fix-regexp-well-known-symbol-logic.js");
            var anObject = __webpack_require__("../shared/browser/node_modules/core-js/internals/an-object.js");
            var isNullOrUndefined = __webpack_require__("../shared/browser/node_modules/core-js/internals/is-null-or-undefined.js");
            var isRegExp = __webpack_require__("../shared/browser/node_modules/core-js/internals/is-regexp.js");
            var requireObjectCoercible = __webpack_require__("../shared/browser/node_modules/core-js/internals/require-object-coercible.js");
            var speciesConstructor = __webpack_require__("../shared/browser/node_modules/core-js/internals/species-constructor.js");
            var advanceStringIndex = __webpack_require__("../shared/browser/node_modules/core-js/internals/advance-string-index.js");
            var toLength = __webpack_require__("../shared/browser/node_modules/core-js/internals/to-length.js");
            var toString = __webpack_require__("../shared/browser/node_modules/core-js/internals/to-string.js");
            var getMethod = __webpack_require__("../shared/browser/node_modules/core-js/internals/get-method.js");
            var arraySlice = __webpack_require__("../shared/browser/node_modules/core-js/internals/array-slice-simple.js");
            var callRegExpExec = __webpack_require__("../shared/browser/node_modules/core-js/internals/regexp-exec-abstract.js");
            var regexpExec = __webpack_require__("../shared/browser/node_modules/core-js/internals/regexp-exec.js");
            var stickyHelpers = __webpack_require__("../shared/browser/node_modules/core-js/internals/regexp-sticky-helpers.js");
            var fails = __webpack_require__("../shared/browser/node_modules/core-js/internals/fails.js");
            var UNSUPPORTED_Y = stickyHelpers.UNSUPPORTED_Y;
            var MAX_UINT32 = 4294967295;
            var min = Math.min;
            var $push = [].push;
            var exec = uncurryThis(/./.exec);
            var push = uncurryThis($push);
            var stringSlice = uncurryThis("".slice);
            var SPLIT_WORKS_WITH_OVERWRITTEN_EXEC = !fails((function() {
                var re = /(?:)/;
                var originalExec = re.exec;
                re.exec = function() {
                    return originalExec.apply(this, arguments);
                };
                var result = "ab".split(re);
                return 2 !== result.length || "a" !== result[0] || "b" !== result[1];
            }));
            fixRegExpWellKnownSymbolLogic("split", (function(SPLIT, nativeSplit, maybeCallNative) {
                var internalSplit;
                if ("c" == "abbc".split(/(b)*/)[1] || 4 != "test".split(/(?:)/, -1).length || 2 != "ab".split(/(?:ab)*/).length || 4 != ".".split(/(.?)(.?)/).length || ".".split(/()()/).length > 1 || "".split(/.?/).length) internalSplit = function(separator, limit) {
                    var string = toString(requireObjectCoercible(this));
                    var lim = void 0 === limit ? MAX_UINT32 : limit >>> 0;
                    if (0 === lim) return [];
                    if (void 0 === separator) return [ string ];
                    if (!isRegExp(separator)) return call(nativeSplit, string, separator, lim);
                    var output = [];
                    var flags = (separator.ignoreCase ? "i" : "") + (separator.multiline ? "m" : "") + (separator.unicode ? "u" : "") + (separator.sticky ? "y" : "");
                    var lastLastIndex = 0;
                    var separatorCopy = new RegExp(separator.source, flags + "g");
                    var match, lastIndex, lastLength;
                    while (match = call(regexpExec, separatorCopy, string)) {
                        lastIndex = separatorCopy.lastIndex;
                        if (lastIndex > lastLastIndex) {
                            push(output, stringSlice(string, lastLastIndex, match.index));
                            if (match.length > 1 && match.index < string.length) apply($push, output, arraySlice(match, 1));
                            lastLength = match[0].length;
                            lastLastIndex = lastIndex;
                            if (output.length >= lim) break;
                        }
                        if (separatorCopy.lastIndex === match.index) separatorCopy.lastIndex++;
                    }
                    if (lastLastIndex === string.length) {
                        if (lastLength || !exec(separatorCopy, "")) push(output, "");
                    } else push(output, stringSlice(string, lastLastIndex));
                    return output.length > lim ? arraySlice(output, 0, lim) : output;
                }; else if ("0".split(void 0, 0).length) internalSplit = function(separator, limit) {
                    return void 0 === separator && 0 === limit ? [] : call(nativeSplit, this, separator, limit);
                }; else internalSplit = nativeSplit;
                return [ function(separator, limit) {
                    var O = requireObjectCoercible(this);
                    var splitter = isNullOrUndefined(separator) ? void 0 : getMethod(separator, SPLIT);
                    return splitter ? call(splitter, separator, O, limit) : call(internalSplit, toString(O), separator, limit);
                }, function(string, limit) {
                    var rx = anObject(this);
                    var S = toString(string);
                    var res = maybeCallNative(internalSplit, rx, S, limit, internalSplit !== nativeSplit);
                    if (res.done) return res.value;
                    var C = speciesConstructor(rx, RegExp);
                    var unicodeMatching = rx.unicode;
                    var flags = (rx.ignoreCase ? "i" : "") + (rx.multiline ? "m" : "") + (rx.unicode ? "u" : "") + (UNSUPPORTED_Y ? "g" : "y");
                    var splitter = new C(UNSUPPORTED_Y ? "^(?:" + rx.source + ")" : rx, flags);
                    var lim = void 0 === limit ? MAX_UINT32 : limit >>> 0;
                    if (0 === lim) return [];
                    if (0 === S.length) return null === callRegExpExec(splitter, S) ? [ S ] : [];
                    var p = 0;
                    var q = 0;
                    var A = [];
                    while (q < S.length) {
                        splitter.lastIndex = UNSUPPORTED_Y ? 0 : q;
                        var z = callRegExpExec(splitter, UNSUPPORTED_Y ? stringSlice(S, q) : S);
                        var e;
                        if (null === z || (e = min(toLength(splitter.lastIndex + (UNSUPPORTED_Y ? q : 0)), S.length)) === p) q = advanceStringIndex(S, q, unicodeMatching); else {
                            push(A, stringSlice(S, p, q));
                            if (A.length === lim) return A;
                            for (var i = 1; i <= z.length - 1; i++) {
                                push(A, z[i]);
                                if (A.length === lim) return A;
                            }
                            q = p = e;
                        }
                    }
                    push(A, stringSlice(S, p));
                    return A;
                } ];
            }), !SPLIT_WORKS_WITH_OVERWRITTEN_EXEC, UNSUPPORTED_Y);
        },
        "../shared/browser/node_modules/core-js/modules/es.symbol.constructor.js": (__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {
            "use strict";
            var $ = __webpack_require__("../shared/browser/node_modules/core-js/internals/export.js");
            var global = __webpack_require__("../shared/browser/node_modules/core-js/internals/global.js");
            var call = __webpack_require__("../shared/browser/node_modules/core-js/internals/function-call.js");
            var uncurryThis = __webpack_require__("../shared/browser/node_modules/core-js/internals/function-uncurry-this.js");
            var IS_PURE = __webpack_require__("../shared/browser/node_modules/core-js/internals/is-pure.js");
            var DESCRIPTORS = __webpack_require__("../shared/browser/node_modules/core-js/internals/descriptors.js");
            var NATIVE_SYMBOL = __webpack_require__("../shared/browser/node_modules/core-js/internals/symbol-constructor-detection.js");
            var fails = __webpack_require__("../shared/browser/node_modules/core-js/internals/fails.js");
            var hasOwn = __webpack_require__("../shared/browser/node_modules/core-js/internals/has-own-property.js");
            var isPrototypeOf = __webpack_require__("../shared/browser/node_modules/core-js/internals/object-is-prototype-of.js");
            var anObject = __webpack_require__("../shared/browser/node_modules/core-js/internals/an-object.js");
            var toIndexedObject = __webpack_require__("../shared/browser/node_modules/core-js/internals/to-indexed-object.js");
            var toPropertyKey = __webpack_require__("../shared/browser/node_modules/core-js/internals/to-property-key.js");
            var $toString = __webpack_require__("../shared/browser/node_modules/core-js/internals/to-string.js");
            var createPropertyDescriptor = __webpack_require__("../shared/browser/node_modules/core-js/internals/create-property-descriptor.js");
            var nativeObjectCreate = __webpack_require__("../shared/browser/node_modules/core-js/internals/object-create.js");
            var objectKeys = __webpack_require__("../shared/browser/node_modules/core-js/internals/object-keys.js");
            var getOwnPropertyNamesModule = __webpack_require__("../shared/browser/node_modules/core-js/internals/object-get-own-property-names.js");
            var getOwnPropertyNamesExternal = __webpack_require__("../shared/browser/node_modules/core-js/internals/object-get-own-property-names-external.js");
            var getOwnPropertySymbolsModule = __webpack_require__("../shared/browser/node_modules/core-js/internals/object-get-own-property-symbols.js");
            var getOwnPropertyDescriptorModule = __webpack_require__("../shared/browser/node_modules/core-js/internals/object-get-own-property-descriptor.js");
            var definePropertyModule = __webpack_require__("../shared/browser/node_modules/core-js/internals/object-define-property.js");
            var definePropertiesModule = __webpack_require__("../shared/browser/node_modules/core-js/internals/object-define-properties.js");
            var propertyIsEnumerableModule = __webpack_require__("../shared/browser/node_modules/core-js/internals/object-property-is-enumerable.js");
            var defineBuiltIn = __webpack_require__("../shared/browser/node_modules/core-js/internals/define-built-in.js");
            var shared = __webpack_require__("../shared/browser/node_modules/core-js/internals/shared.js");
            var sharedKey = __webpack_require__("../shared/browser/node_modules/core-js/internals/shared-key.js");
            var hiddenKeys = __webpack_require__("../shared/browser/node_modules/core-js/internals/hidden-keys.js");
            var uid = __webpack_require__("../shared/browser/node_modules/core-js/internals/uid.js");
            var wellKnownSymbol = __webpack_require__("../shared/browser/node_modules/core-js/internals/well-known-symbol.js");
            var wrappedWellKnownSymbolModule = __webpack_require__("../shared/browser/node_modules/core-js/internals/well-known-symbol-wrapped.js");
            var defineWellKnownSymbol = __webpack_require__("../shared/browser/node_modules/core-js/internals/well-known-symbol-define.js");
            var defineSymbolToPrimitive = __webpack_require__("../shared/browser/node_modules/core-js/internals/symbol-define-to-primitive.js");
            var setToStringTag = __webpack_require__("../shared/browser/node_modules/core-js/internals/set-to-string-tag.js");
            var InternalStateModule = __webpack_require__("../shared/browser/node_modules/core-js/internals/internal-state.js");
            var $forEach = __webpack_require__("../shared/browser/node_modules/core-js/internals/array-iteration.js").forEach;
            var HIDDEN = sharedKey("hidden");
            var SYMBOL = "Symbol";
            var PROTOTYPE = "prototype";
            var setInternalState = InternalStateModule.set;
            var getInternalState = InternalStateModule.getterFor(SYMBOL);
            var ObjectPrototype = Object[PROTOTYPE];
            var $Symbol = global.Symbol;
            var SymbolPrototype = $Symbol && $Symbol[PROTOTYPE];
            var TypeError = global.TypeError;
            var QObject = global.QObject;
            var nativeGetOwnPropertyDescriptor = getOwnPropertyDescriptorModule.f;
            var nativeDefineProperty = definePropertyModule.f;
            var nativeGetOwnPropertyNames = getOwnPropertyNamesExternal.f;
            var nativePropertyIsEnumerable = propertyIsEnumerableModule.f;
            var push = uncurryThis([].push);
            var AllSymbols = shared("symbols");
            var ObjectPrototypeSymbols = shared("op-symbols");
            var WellKnownSymbolsStore = shared("wks");
            var USE_SETTER = !QObject || !QObject[PROTOTYPE] || !QObject[PROTOTYPE].findChild;
            var setSymbolDescriptor = DESCRIPTORS && fails((function() {
                return 7 != nativeObjectCreate(nativeDefineProperty({}, "a", {
                    get: function() {
                        return nativeDefineProperty(this, "a", {
                            value: 7
                        }).a;
                    }
                })).a;
            })) ? function(O, P, Attributes) {
                var ObjectPrototypeDescriptor = nativeGetOwnPropertyDescriptor(ObjectPrototype, P);
                if (ObjectPrototypeDescriptor) delete ObjectPrototype[P];
                nativeDefineProperty(O, P, Attributes);
                if (ObjectPrototypeDescriptor && O !== ObjectPrototype) nativeDefineProperty(ObjectPrototype, P, ObjectPrototypeDescriptor);
            } : nativeDefineProperty;
            var wrap = function(tag, description) {
                var symbol = AllSymbols[tag] = nativeObjectCreate(SymbolPrototype);
                setInternalState(symbol, {
                    type: SYMBOL,
                    tag,
                    description
                });
                if (!DESCRIPTORS) symbol.description = description;
                return symbol;
            };
            var $defineProperty = function(O, P, Attributes) {
                if (O === ObjectPrototype) $defineProperty(ObjectPrototypeSymbols, P, Attributes);
                anObject(O);
                var key = toPropertyKey(P);
                anObject(Attributes);
                if (hasOwn(AllSymbols, key)) {
                    if (!Attributes.enumerable) {
                        if (!hasOwn(O, HIDDEN)) nativeDefineProperty(O, HIDDEN, createPropertyDescriptor(1, {}));
                        O[HIDDEN][key] = true;
                    } else {
                        if (hasOwn(O, HIDDEN) && O[HIDDEN][key]) O[HIDDEN][key] = false;
                        Attributes = nativeObjectCreate(Attributes, {
                            enumerable: createPropertyDescriptor(0, false)
                        });
                    }
                    return setSymbolDescriptor(O, key, Attributes);
                }
                return nativeDefineProperty(O, key, Attributes);
            };
            var $defineProperties = function(O, Properties) {
                anObject(O);
                var properties = toIndexedObject(Properties);
                var keys = objectKeys(properties).concat($getOwnPropertySymbols(properties));
                $forEach(keys, (function(key) {
                    if (!DESCRIPTORS || call($propertyIsEnumerable, properties, key)) $defineProperty(O, key, properties[key]);
                }));
                return O;
            };
            var $create = function(O, Properties) {
                return void 0 === Properties ? nativeObjectCreate(O) : $defineProperties(nativeObjectCreate(O), Properties);
            };
            var $propertyIsEnumerable = function(V) {
                var P = toPropertyKey(V);
                var enumerable = call(nativePropertyIsEnumerable, this, P);
                if (this === ObjectPrototype && hasOwn(AllSymbols, P) && !hasOwn(ObjectPrototypeSymbols, P)) return false;
                return enumerable || !hasOwn(this, P) || !hasOwn(AllSymbols, P) || hasOwn(this, HIDDEN) && this[HIDDEN][P] ? enumerable : true;
            };
            var $getOwnPropertyDescriptor = function(O, P) {
                var it = toIndexedObject(O);
                var key = toPropertyKey(P);
                if (it === ObjectPrototype && hasOwn(AllSymbols, key) && !hasOwn(ObjectPrototypeSymbols, key)) return;
                var descriptor = nativeGetOwnPropertyDescriptor(it, key);
                if (descriptor && hasOwn(AllSymbols, key) && !(hasOwn(it, HIDDEN) && it[HIDDEN][key])) descriptor.enumerable = true;
                return descriptor;
            };
            var $getOwnPropertyNames = function(O) {
                var names = nativeGetOwnPropertyNames(toIndexedObject(O));
                var result = [];
                $forEach(names, (function(key) {
                    if (!hasOwn(AllSymbols, key) && !hasOwn(hiddenKeys, key)) push(result, key);
                }));
                return result;
            };
            var $getOwnPropertySymbols = function(O) {
                var IS_OBJECT_PROTOTYPE = O === ObjectPrototype;
                var names = nativeGetOwnPropertyNames(IS_OBJECT_PROTOTYPE ? ObjectPrototypeSymbols : toIndexedObject(O));
                var result = [];
                $forEach(names, (function(key) {
                    if (hasOwn(AllSymbols, key) && (!IS_OBJECT_PROTOTYPE || hasOwn(ObjectPrototype, key))) push(result, AllSymbols[key]);
                }));
                return result;
            };
            if (!NATIVE_SYMBOL) {
                $Symbol = function() {
                    if (isPrototypeOf(SymbolPrototype, this)) throw TypeError("Symbol is not a constructor");
                    var description = !arguments.length || void 0 === arguments[0] ? void 0 : $toString(arguments[0]);
                    var tag = uid(description);
                    var setter = function(value) {
                        if (this === ObjectPrototype) call(setter, ObjectPrototypeSymbols, value);
                        if (hasOwn(this, HIDDEN) && hasOwn(this[HIDDEN], tag)) this[HIDDEN][tag] = false;
                        setSymbolDescriptor(this, tag, createPropertyDescriptor(1, value));
                    };
                    if (DESCRIPTORS && USE_SETTER) setSymbolDescriptor(ObjectPrototype, tag, {
                        configurable: true,
                        set: setter
                    });
                    return wrap(tag, description);
                };
                SymbolPrototype = $Symbol[PROTOTYPE];
                defineBuiltIn(SymbolPrototype, "toString", (function() {
                    return getInternalState(this).tag;
                }));
                defineBuiltIn($Symbol, "withoutSetter", (function(description) {
                    return wrap(uid(description), description);
                }));
                propertyIsEnumerableModule.f = $propertyIsEnumerable;
                definePropertyModule.f = $defineProperty;
                definePropertiesModule.f = $defineProperties;
                getOwnPropertyDescriptorModule.f = $getOwnPropertyDescriptor;
                getOwnPropertyNamesModule.f = getOwnPropertyNamesExternal.f = $getOwnPropertyNames;
                getOwnPropertySymbolsModule.f = $getOwnPropertySymbols;
                wrappedWellKnownSymbolModule.f = function(name) {
                    return wrap(wellKnownSymbol(name), name);
                };
                if (DESCRIPTORS) {
                    nativeDefineProperty(SymbolPrototype, "description", {
                        configurable: true,
                        get: function() {
                            return getInternalState(this).description;
                        }
                    });
                    if (!IS_PURE) defineBuiltIn(ObjectPrototype, "propertyIsEnumerable", $propertyIsEnumerable, {
                        unsafe: true
                    });
                }
            }
            $({
                global: true,
                constructor: true,
                wrap: true,
                forced: !NATIVE_SYMBOL,
                sham: !NATIVE_SYMBOL
            }, {
                Symbol: $Symbol
            });
            $forEach(objectKeys(WellKnownSymbolsStore), (function(name) {
                defineWellKnownSymbol(name);
            }));
            $({
                target: SYMBOL,
                stat: true,
                forced: !NATIVE_SYMBOL
            }, {
                useSetter: function() {
                    USE_SETTER = true;
                },
                useSimple: function() {
                    USE_SETTER = false;
                }
            });
            $({
                target: "Object",
                stat: true,
                forced: !NATIVE_SYMBOL,
                sham: !DESCRIPTORS
            }, {
                create: $create,
                defineProperty: $defineProperty,
                defineProperties: $defineProperties,
                getOwnPropertyDescriptor: $getOwnPropertyDescriptor
            });
            $({
                target: "Object",
                stat: true,
                forced: !NATIVE_SYMBOL
            }, {
                getOwnPropertyNames: $getOwnPropertyNames
            });
            defineSymbolToPrimitive();
            setToStringTag($Symbol, SYMBOL);
            hiddenKeys[HIDDEN] = true;
        },
        "../shared/browser/node_modules/core-js/modules/es.symbol.for.js": (__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {
            var $ = __webpack_require__("../shared/browser/node_modules/core-js/internals/export.js");
            var getBuiltIn = __webpack_require__("../shared/browser/node_modules/core-js/internals/get-built-in.js");
            var hasOwn = __webpack_require__("../shared/browser/node_modules/core-js/internals/has-own-property.js");
            var toString = __webpack_require__("../shared/browser/node_modules/core-js/internals/to-string.js");
            var shared = __webpack_require__("../shared/browser/node_modules/core-js/internals/shared.js");
            var NATIVE_SYMBOL_REGISTRY = __webpack_require__("../shared/browser/node_modules/core-js/internals/symbol-registry-detection.js");
            var StringToSymbolRegistry = shared("string-to-symbol-registry");
            var SymbolToStringRegistry = shared("symbol-to-string-registry");
            $({
                target: "Symbol",
                stat: true,
                forced: !NATIVE_SYMBOL_REGISTRY
            }, {
                for: function(key) {
                    var string = toString(key);
                    if (hasOwn(StringToSymbolRegistry, string)) return StringToSymbolRegistry[string];
                    var symbol = getBuiltIn("Symbol")(string);
                    StringToSymbolRegistry[string] = symbol;
                    SymbolToStringRegistry[symbol] = string;
                    return symbol;
                }
            });
        },
        "../shared/browser/node_modules/core-js/modules/es.symbol.js": (__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {
            __webpack_require__("../shared/browser/node_modules/core-js/modules/es.symbol.constructor.js");
            __webpack_require__("../shared/browser/node_modules/core-js/modules/es.symbol.for.js");
            __webpack_require__("../shared/browser/node_modules/core-js/modules/es.symbol.key-for.js");
            __webpack_require__("../shared/browser/node_modules/core-js/modules/es.json.stringify.js");
            __webpack_require__("../shared/browser/node_modules/core-js/modules/es.object.get-own-property-symbols.js");
        },
        "../shared/browser/node_modules/core-js/modules/es.symbol.key-for.js": (__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {
            var $ = __webpack_require__("../shared/browser/node_modules/core-js/internals/export.js");
            var hasOwn = __webpack_require__("../shared/browser/node_modules/core-js/internals/has-own-property.js");
            var isSymbol = __webpack_require__("../shared/browser/node_modules/core-js/internals/is-symbol.js");
            var tryToString = __webpack_require__("../shared/browser/node_modules/core-js/internals/try-to-string.js");
            var shared = __webpack_require__("../shared/browser/node_modules/core-js/internals/shared.js");
            var NATIVE_SYMBOL_REGISTRY = __webpack_require__("../shared/browser/node_modules/core-js/internals/symbol-registry-detection.js");
            var SymbolToStringRegistry = shared("symbol-to-string-registry");
            $({
                target: "Symbol",
                stat: true,
                forced: !NATIVE_SYMBOL_REGISTRY
            }, {
                keyFor: function(sym) {
                    if (!isSymbol(sym)) throw TypeError(tryToString(sym) + " is not a symbol");
                    if (hasOwn(SymbolToStringRegistry, sym)) return SymbolToStringRegistry[sym];
                }
            });
        },
        "../shared/browser/node_modules/core-js/modules/web.dom-collections.for-each.js": (__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {
            var global = __webpack_require__("../shared/browser/node_modules/core-js/internals/global.js");
            var DOMIterables = __webpack_require__("../shared/browser/node_modules/core-js/internals/dom-iterables.js");
            var DOMTokenListPrototype = __webpack_require__("../shared/browser/node_modules/core-js/internals/dom-token-list-prototype.js");
            var forEach = __webpack_require__("../shared/browser/node_modules/core-js/internals/array-for-each.js");
            var createNonEnumerableProperty = __webpack_require__("../shared/browser/node_modules/core-js/internals/create-non-enumerable-property.js");
            var handlePrototype = function(CollectionPrototype) {
                if (CollectionPrototype && CollectionPrototype.forEach !== forEach) try {
                    createNonEnumerableProperty(CollectionPrototype, "forEach", forEach);
                } catch (error) {
                    CollectionPrototype.forEach = forEach;
                }
            };
            for (var COLLECTION_NAME in DOMIterables) if (DOMIterables[COLLECTION_NAME]) handlePrototype(global[COLLECTION_NAME] && global[COLLECTION_NAME].prototype);
            handlePrototype(DOMTokenListPrototype);
        },
        "../shared/browser/node_modules/core-js/modules/web.dom-collections.iterator.js": (__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {
            var global = __webpack_require__("../shared/browser/node_modules/core-js/internals/global.js");
            var DOMIterables = __webpack_require__("../shared/browser/node_modules/core-js/internals/dom-iterables.js");
            var DOMTokenListPrototype = __webpack_require__("../shared/browser/node_modules/core-js/internals/dom-token-list-prototype.js");
            var ArrayIteratorMethods = __webpack_require__("../shared/browser/node_modules/core-js/modules/es.array.iterator.js");
            var createNonEnumerableProperty = __webpack_require__("../shared/browser/node_modules/core-js/internals/create-non-enumerable-property.js");
            var wellKnownSymbol = __webpack_require__("../shared/browser/node_modules/core-js/internals/well-known-symbol.js");
            var ITERATOR = wellKnownSymbol("iterator");
            var TO_STRING_TAG = wellKnownSymbol("toStringTag");
            var ArrayValues = ArrayIteratorMethods.values;
            var handlePrototype = function(CollectionPrototype, COLLECTION_NAME) {
                if (CollectionPrototype) {
                    if (CollectionPrototype[ITERATOR] !== ArrayValues) try {
                        createNonEnumerableProperty(CollectionPrototype, ITERATOR, ArrayValues);
                    } catch (error) {
                        CollectionPrototype[ITERATOR] = ArrayValues;
                    }
                    if (!CollectionPrototype[TO_STRING_TAG]) createNonEnumerableProperty(CollectionPrototype, TO_STRING_TAG, COLLECTION_NAME);
                    if (DOMIterables[COLLECTION_NAME]) for (var METHOD_NAME in ArrayIteratorMethods) if (CollectionPrototype[METHOD_NAME] !== ArrayIteratorMethods[METHOD_NAME]) try {
                        createNonEnumerableProperty(CollectionPrototype, METHOD_NAME, ArrayIteratorMethods[METHOD_NAME]);
                    } catch (error) {
                        CollectionPrototype[METHOD_NAME] = ArrayIteratorMethods[METHOD_NAME];
                    }
                }
            };
            for (var COLLECTION_NAME in DOMIterables) handlePrototype(global[COLLECTION_NAME] && global[COLLECTION_NAME].prototype, COLLECTION_NAME);
            handlePrototype(DOMTokenListPrototype, "DOMTokenList");
        },
        "../shared/browser/node_modules/lodash/_baseGet.js": (module, __unused_webpack_exports, __webpack_require__) => {
            var castPath = __webpack_require__("../shared/browser/node_modules/lodash/_castPath.js"), toKey = __webpack_require__("../shared/browser/node_modules/lodash/_toKey.js");
            function baseGet(object, path) {
                path = castPath(path, object);
                var index = 0, length = path.length;
                while (null != object && index < length) object = object[toKey(path[index++])];
                return index && index == length ? object : void 0;
            }
            module.exports = baseGet;
        },
        "../shared/browser/node_modules/lodash/_castPath.js": (module, __unused_webpack_exports, __webpack_require__) => {
            var isArray = __webpack_require__("../shared/browser/node_modules/lodash/isArray.js"), isKey = __webpack_require__("../shared/browser/node_modules/lodash/_isKey.js"), stringToPath = __webpack_require__("../shared/browser/node_modules/lodash/_stringToPath.js"), toString = __webpack_require__("../shared/browser/node_modules/lodash/toString.js");
            function castPath(value, object) {
                if (isArray(value)) return value;
                return isKey(value, object) ? [ value ] : stringToPath(toString(value));
            }
            module.exports = castPath;
        },
        "../shared/browser/node_modules/lodash/_isKey.js": (module, __unused_webpack_exports, __webpack_require__) => {
            var isArray = __webpack_require__("../shared/browser/node_modules/lodash/isArray.js"), isSymbol = __webpack_require__("../shared/browser/node_modules/lodash/isSymbol.js");
            var reIsDeepProp = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/, reIsPlainProp = /^\w*$/;
            function isKey(value, object) {
                if (isArray(value)) return false;
                var type = typeof value;
                if ("number" == type || "symbol" == type || "boolean" == type || null == value || isSymbol(value)) return true;
                return reIsPlainProp.test(value) || !reIsDeepProp.test(value) || null != object && value in Object(object);
            }
            module.exports = isKey;
        },
        "../shared/browser/node_modules/lodash/_memoizeCapped.js": module => {
            function identity(value) {
                return value;
            }
            module.exports = identity;
        },
        "../shared/browser/node_modules/lodash/_stringToPath.js": (module, __unused_webpack_exports, __webpack_require__) => {
            var memoizeCapped = __webpack_require__("../shared/browser/node_modules/lodash/_memoizeCapped.js");
            var rePropName = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g;
            var reEscapeChar = /\\(\\)?/g;
            var stringToPath = memoizeCapped((function(string) {
                var result = [];
                if (46 === string.charCodeAt(0)) result.push("");
                string.replace(rePropName, (function(match, number, quote, subString) {
                    result.push(quote ? subString.replace(reEscapeChar, "$1") : number || match);
                }));
                return result;
            }));
            module.exports = stringToPath;
        },
        "../shared/browser/node_modules/lodash/_toKey.js": module => {
            function identity(value) {
                return value;
            }
            module.exports = identity;
        },
        "../shared/browser/node_modules/lodash/get.js": (module, __unused_webpack_exports, __webpack_require__) => {
            var baseGet = __webpack_require__("../shared/browser/node_modules/lodash/_baseGet.js");
            function get(object, path, defaultValue) {
                var result = null == object ? void 0 : baseGet(object, path);
                return void 0 === result ? defaultValue : result;
            }
            module.exports = get;
        },
        "../shared/browser/node_modules/lodash/isArray.js": module => {
            var isArray = Array.isArray;
            module.exports = isArray;
        },
        "../shared/browser/node_modules/lodash/isSymbol.js": module => {
            function stubFalse() {
                return false;
            }
            module.exports = stubFalse;
        },
        "../shared/browser/node_modules/lodash/toString.js": module => {
            function identity(value) {
                return value;
            }
            module.exports = identity;
        },
        "../shared/browser/node_modules/tslib/tslib.es6.js": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.d(__webpack_exports__, {
                __extends: () => __extends,
                __assign: () => __assign,
                __rest: () => __rest,
                __values: () => __values,
                __read: () => __read,
                __spread: () => __spread
            });
            var extendStatics = function(d, b) {
                extendStatics = Object.setPrototypeOf || {
                    __proto__: []
                } instanceof Array && function(d, b) {
                    d.__proto__ = b;
                } || function(d, b) {
                    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
                };
                return extendStatics(d, b);
            };
            function __extends(d, b) {
                extendStatics(d, b);
                function __() {
                    this.constructor = d;
                }
                d.prototype = null === b ? Object.create(b) : (__.prototype = b.prototype, new __);
            }
            var __assign = function() {
                __assign = Object.assign || function(t) {
                    for (var s, i = 1, n = arguments.length; i < n; i++) {
                        s = arguments[i];
                        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
                    }
                    return t;
                };
                return __assign.apply(this, arguments);
            };
            function __rest(s, e) {
                var t = {};
                for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];
                if (null != s && "function" === typeof Object.getOwnPropertySymbols) {
                    var i = 0;
                    for (p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];
                }
                return t;
            }
            function __values(o) {
                var s = "function" === typeof Symbol && Symbol.iterator, m = s && o[s], i = 0;
                if (m) return m.call(o);
                if (o && "number" === typeof o.length) return {
                    next: function() {
                        if (o && i >= o.length) o = void 0;
                        return {
                            value: o && o[i++],
                            done: !o
                        };
                    }
                };
                throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
            }
            function __read(o, n) {
                var m = "function" === typeof Symbol && o[Symbol.iterator];
                if (!m) return o;
                var r, e, i = m.call(o), ar = [];
                try {
                    while ((void 0 === n || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
                } catch (error) {
                    e = {
                        error
                    };
                } finally {
                    try {
                        if (r && !r.done && (m = i["return"])) m.call(i);
                    } finally {
                        if (e) throw e.error;
                    }
                }
                return ar;
            }
            function __spread() {
                for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));
                return ar;
            }
        },
        "../shared/browser/utils/get-env.js": (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
            "use strict";
            __webpack_require__.d(__webpack_exports__, {
                default: () => getEnv
            });
            function getEnv(key) {
                var ENV = window.__ENV__ || {};
                if (key) return ENV[key];
                return ENV;
            }
        }
    };
    var __webpack_module_cache__ = {};
    function __webpack_require__(moduleId) {
        var cachedModule = __webpack_module_cache__[moduleId];
        if (void 0 !== cachedModule) return cachedModule.exports;
        var module = __webpack_module_cache__[moduleId] = {
            id: moduleId,
            loaded: false,
            exports: {}
        };
        __webpack_modules__[moduleId](module, module.exports, __webpack_require__);
        module.loaded = true;
        return module.exports;
    }
    (() => {
        __webpack_require__.n = module => {
            var getter = module && module.__esModule ? () => module["default"] : () => module;
            __webpack_require__.d(getter, {
                a: getter
            });
            return getter;
        };
    })();
    (() => {
        __webpack_require__.d = (exports, definition) => {
            for (var key in definition) if (__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) Object.defineProperty(exports, key, {
                enumerable: true,
                get: definition[key]
            });
        };
    })();
    (() => {
        __webpack_require__.g = function() {
            if ("object" === typeof globalThis) return globalThis;
            try {
                return this || new Function("return this")();
            } catch (e) {
                if ("object" === typeof window) return window;
            }
        }();
    })();
    (() => {
        __webpack_require__.hmd = module => {
            module = Object.create(module);
            if (!module.children) module.children = [];
            Object.defineProperty(module, "exports", {
                enumerable: true,
                set: () => {
                    throw new Error("ES Modules may not assign module.exports or exports.*, Use ESM export syntax, instead: " + module.id);
                }
            });
            return module;
        };
    })();
    (() => {
        __webpack_require__.o = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);
    })();
    (() => {
        __webpack_require__.r = exports => {
            if ("undefined" !== typeof Symbol && Symbol.toStringTag) Object.defineProperty(exports, Symbol.toStringTag, {
                value: "Module"
            });
            Object.defineProperty(exports, "__esModule", {
                value: true
            });
        };
    })();
    (() => {
        "use strict";
        __webpack_require__("../shared/browser/node_modules/core-js/modules/es.regexp.exec.js");
        __webpack_require__("../shared/browser/node_modules/core-js/modules/es.string.split.js");
        __webpack_require__("../shared/browser/node_modules/core-js/modules/es.date.to-string.js");
        __webpack_require__("../shared/browser/node_modules/core-js/modules/es.object.to-string.js");
        __webpack_require__("../shared/browser/node_modules/core-js/modules/es.regexp.to-string.js");
        __webpack_require__("../shared/browser/node_modules/core-js/modules/es.array.includes.js");
        __webpack_require__("../shared/browser/node_modules/core-js/modules/es.string.includes.js");
        __webpack_require__("../shared/browser/node_modules/core-js/modules/es.number.constructor.js");
        __webpack_require__("../shared/browser/node_modules/core-js/modules/es.number.is-nan.js");
        __webpack_require__("../shared/browser/node_modules/core-js/modules/es.array.concat.js");
        __webpack_require__("../shared/browser/node_modules/core-js/modules/es.array.iterator.js");
        __webpack_require__("../shared/browser/node_modules/core-js/modules/web.dom-collections.iterator.js");
        __webpack_require__("../shared/browser/node_modules/core-js/modules/es.array.find.js");
        __webpack_require__("../shared/browser/node_modules/core-js/modules/es.string.match.js");
        __webpack_require__("../shared/browser/node_modules/core-js/modules/es.object.define-property.js");
        __webpack_require__("../shared/browser/node_modules/core-js/modules/es.object.keys.js");
        __webpack_require__("../shared/browser/node_modules/core-js/modules/es.symbol.js");
        __webpack_require__("../shared/browser/node_modules/core-js/modules/es.array.filter.js");
        __webpack_require__("../shared/browser/node_modules/core-js/modules/es.object.get-own-property-descriptor.js");
        __webpack_require__("../shared/browser/node_modules/core-js/modules/es.array.for-each.js");
        __webpack_require__("../shared/browser/node_modules/core-js/modules/web.dom-collections.for-each.js");
        __webpack_require__("../shared/browser/node_modules/core-js/modules/es.object.get-own-property-descriptors.js");
        __webpack_require__("../shared/browser/node_modules/core-js/modules/es.object.define-properties.js");
        var esm = __webpack_require__("../shared/browser/node_modules/@sentry/browser/esm/index.js");
        var sdk = __webpack_require__("../shared/browser/node_modules/@sentry/browser/esm/sdk.js");
        var minimal_esm = __webpack_require__("../shared/browser/node_modules/@sentry/minimal/esm/index.js");
        var get = __webpack_require__("../shared/browser/node_modules/lodash/get.js");
        var get_default = __webpack_require__.n(get);
        var hubextensions = __webpack_require__("../shared/browser/node_modules/@sentry/tracing/esm/hubextensions.js");
        var tslib_es6 = __webpack_require__("../shared/browser/node_modules/tslib/tslib.es6.js");
        var logger = __webpack_require__("../shared/browser/node_modules/@sentry/utils/esm/logger.js");
        var global = __webpack_require__("../shared/browser/node_modules/@sentry/utils/esm/global.js");
        var flags = __webpack_require__("../shared/browser/node_modules/@sentry/tracing/esm/flags.js");
        var idletransaction = __webpack_require__("../shared/browser/node_modules/@sentry/tracing/esm/idletransaction.js");
        var utils = __webpack_require__("../shared/browser/node_modules/@sentry/tracing/esm/utils.js");
        var TRACEPARENT_REGEXP = new RegExp("^[ \\t]*" + "([0-9a-f]{32})?" + "-?([0-9a-f]{16})?" + "-?([01])?" + "[ \\t]*$");
        function extractTraceparentData(traceparent) {
            var matches = traceparent.match(TRACEPARENT_REGEXP);
            if (matches) {
                var parentSampled = void 0;
                if ("1" === matches[3]) parentSampled = true; else if ("0" === matches[3]) parentSampled = false;
                return {
                    traceId: matches[1],
                    parentSampled,
                    parentSpanId: matches[2]
                };
            }
            return;
        }
        var constants = __webpack_require__("../shared/browser/node_modules/@sentry/tracing/esm/constants.js");
        var backgroundtab_global = (0, global.getGlobalObject)();
        function registerBackgroundTabDetection() {
            if (backgroundtab_global && backgroundtab_global.document) backgroundtab_global.document.addEventListener("visibilitychange", (function() {
                var activeTransaction = (0, utils.getActiveTransaction)();
                if (backgroundtab_global.document.hidden && activeTransaction) {
                    var statusType = "cancelled";
                    flags.IS_DEBUG_BUILD && logger.logger.log("[Tracing] Transaction: " + statusType + " -> since tab moved to the background, op: " + activeTransaction.op);
                    if (!activeTransaction.status) activeTransaction.setStatus(statusType);
                    activeTransaction.setTag("visibilitychange", "document.hidden");
                    activeTransaction.setTag(constants.FINISH_REASON_TAG, constants.IDLE_TRANSACTION_FINISH_REASONS[2]);
                    activeTransaction.finish();
                }
            })); else flags.IS_DEBUG_BUILD && logger.logger.warn("[Tracing] Could not set up background tab detection due to lack of global document");
        }
        var node = __webpack_require__("../shared/browser/node_modules/@sentry/utils/esm/node.js");
        var time = __webpack_require__("../shared/browser/node_modules/@sentry/utils/esm/time.js");
        var browser = __webpack_require__("../shared/browser/node_modules/@sentry/utils/esm/browser.js");
        var bindReporter = function(callback, metric, reportAllChanges) {
            var prevValue;
            return function(forceReport) {
                if (metric.value >= 0) if (forceReport || reportAllChanges) {
                    metric.delta = metric.value - (prevValue || 0);
                    if (metric.delta || void 0 === prevValue) {
                        prevValue = metric.value;
                        callback(metric);
                    }
                }
            };
        };
        var generateUniqueID = function() {
            return "v2-" + Date.now() + "-" + (Math.floor(Math.random() * (9e12 - 1)) + 1e12);
        };
        var initMetric = function(name, value) {
            return {
                name,
                value: null !== value && void 0 !== value ? value : -1,
                delta: 0,
                entries: [],
                id: generateUniqueID()
            };
        };
        var observe = function(type, callback) {
            try {
                if (PerformanceObserver.supportedEntryTypes.includes(type)) {
                    if ("first-input" === type && !("PerformanceEventTiming" in self)) return;
                    var po = new PerformanceObserver((function(l) {
                        return l.getEntries().map(callback);
                    }));
                    po.observe({
                        type,
                        buffered: true
                    });
                    return po;
                }
            } catch (e) {}
            return;
        };
        var onHidden = function(cb, once) {
            var onHiddenOrPageHide = function(event) {
                if ("pagehide" === event.type || "hidden" === (0, global.getGlobalObject)().document.visibilityState) {
                    cb(event);
                    if (once) {
                        removeEventListener("visibilitychange", onHiddenOrPageHide, true);
                        removeEventListener("pagehide", onHiddenOrPageHide, true);
                    }
                }
            };
            addEventListener("visibilitychange", onHiddenOrPageHide, true);
            addEventListener("pagehide", onHiddenOrPageHide, true);
        };
        var getCLS = function(onReport, reportAllChanges) {
            var metric = initMetric("CLS", 0);
            var report;
            var sessionValue = 0;
            var sessionEntries = [];
            var entryHandler = function(entry) {
                if (entry && !entry.hadRecentInput) {
                    var firstSessionEntry = sessionEntries[0];
                    var lastSessionEntry = sessionEntries[sessionEntries.length - 1];
                    if (sessionValue && 0 !== sessionEntries.length && entry.startTime - lastSessionEntry.startTime < 1e3 && entry.startTime - firstSessionEntry.startTime < 5e3) {
                        sessionValue += entry.value;
                        sessionEntries.push(entry);
                    } else {
                        sessionValue = entry.value;
                        sessionEntries = [ entry ];
                    }
                    if (sessionValue > metric.value) {
                        metric.value = sessionValue;
                        metric.entries = sessionEntries;
                        if (report) report();
                    }
                }
            };
            var po = observe("layout-shift", entryHandler);
            if (po) {
                report = bindReporter(onReport, metric, reportAllChanges);
                onHidden((function() {
                    po.takeRecords().map(entryHandler);
                    report(true);
                }));
            }
        };
        var firstHiddenTime = -1;
        var initHiddenTime = function() {
            return "hidden" === (0, global.getGlobalObject)().document.visibilityState ? 0 : 1 / 0;
        };
        var trackChanges = function() {
            onHidden((function(_a) {
                var timeStamp = _a.timeStamp;
                firstHiddenTime = timeStamp;
            }), true);
        };
        var getVisibilityWatcher = function() {
            if (firstHiddenTime < 0) {
                firstHiddenTime = initHiddenTime();
                trackChanges();
            }
            return {
                get firstHiddenTime() {
                    return firstHiddenTime;
                }
            };
        };
        var getFID = function(onReport, reportAllChanges) {
            var visibilityWatcher = getVisibilityWatcher();
            var metric = initMetric("FID");
            var report;
            var entryHandler = function(entry) {
                if (report && entry.startTime < visibilityWatcher.firstHiddenTime) {
                    metric.value = entry.processingStart - entry.startTime;
                    metric.entries.push(entry);
                    report(true);
                }
            };
            var po = observe("first-input", entryHandler);
            if (po) {
                report = bindReporter(onReport, metric, reportAllChanges);
                onHidden((function() {
                    po.takeRecords().map(entryHandler);
                    po.disconnect();
                }), true);
            }
        };
        var reportedMetricIDs = {};
        var getLCP = function(onReport, reportAllChanges) {
            var visibilityWatcher = getVisibilityWatcher();
            var metric = initMetric("LCP");
            var report;
            var entryHandler = function(entry) {
                var value = entry.startTime;
                if (value < visibilityWatcher.firstHiddenTime) {
                    metric.value = value;
                    metric.entries.push(entry);
                }
                if (report) report();
            };
            var po = observe("largest-contentful-paint", entryHandler);
            if (po) {
                report = bindReporter(onReport, metric, reportAllChanges);
                var stopListening_1 = function() {
                    if (!reportedMetricIDs[metric.id]) {
                        po.takeRecords().map(entryHandler);
                        po.disconnect();
                        reportedMetricIDs[metric.id] = true;
                        report(true);
                    }
                };
                [ "keydown", "click" ].forEach((function(type) {
                    addEventListener(type, stopListening_1, {
                        once: true,
                        capture: true
                    });
                }));
                onHidden(stopListening_1, true);
            }
        };
        var metrics_global = (0, global.getGlobalObject)();
        var MetricsInstrumentation = function() {
            function MetricsInstrumentation(_reportAllChanges) {
                if (void 0 === _reportAllChanges) _reportAllChanges = false;
                this._reportAllChanges = _reportAllChanges;
                this._measurements = {};
                this._performanceCursor = 0;
                if (!(0, node.isNodeEnv)() && metrics_global && metrics_global.performance && metrics_global.document) {
                    if (metrics_global.performance.mark) metrics_global.performance.mark("sentry-tracing-init");
                    this._trackCLS();
                    this._trackLCP();
                    this._trackFID();
                }
            }
            MetricsInstrumentation.prototype.addPerformanceEntries = function(transaction) {
                var _this = this;
                if (!metrics_global || !metrics_global.performance || !metrics_global.performance.getEntries || !time.browserPerformanceTimeOrigin) return;
                flags.IS_DEBUG_BUILD && logger.logger.log("[Tracing] Adding & adjusting spans using Performance API");
                var timeOrigin = (0, utils.msToSec)(time.browserPerformanceTimeOrigin);
                var responseStartTimestamp;
                var requestStartTimestamp;
                metrics_global.performance.getEntries().slice(this._performanceCursor).forEach((function(entry) {
                    var startTime = (0, utils.msToSec)(entry.startTime);
                    var duration = (0, utils.msToSec)(entry.duration);
                    if ("navigation" === transaction.op && timeOrigin + startTime < transaction.startTimestamp) return;
                    switch (entry.entryType) {
                      case "navigation":
                        addNavigationSpans(transaction, entry, timeOrigin);
                        responseStartTimestamp = timeOrigin + (0, utils.msToSec)(entry.responseStart);
                        requestStartTimestamp = timeOrigin + (0, utils.msToSec)(entry.requestStart);
                        break;

                      case "mark":
                      case "paint":
                      case "measure":
                        var startTimestamp = addMeasureSpans(transaction, entry, startTime, duration, timeOrigin);
                        var firstHidden = getVisibilityWatcher();
                        var shouldRecord = entry.startTime < firstHidden.firstHiddenTime;
                        if ("first-paint" === entry.name && shouldRecord) {
                            flags.IS_DEBUG_BUILD && logger.logger.log("[Measurements] Adding FP");
                            _this._measurements["fp"] = {
                                value: entry.startTime
                            };
                            _this._measurements["mark.fp"] = {
                                value: startTimestamp
                            };
                        }
                        if ("first-contentful-paint" === entry.name && shouldRecord) {
                            flags.IS_DEBUG_BUILD && logger.logger.log("[Measurements] Adding FCP");
                            _this._measurements["fcp"] = {
                                value: entry.startTime
                            };
                            _this._measurements["mark.fcp"] = {
                                value: startTimestamp
                            };
                        }
                        break;

                      case "resource":
                        var resourceName = entry.name.replace(metrics_global.location.origin, "");
                        addResourceSpans(transaction, entry, resourceName, startTime, duration, timeOrigin);
                    }
                }));
                this._performanceCursor = Math.max(performance.getEntries().length - 1, 0);
                this._trackNavigator(transaction);
                if ("pageload" === transaction.op) {
                    var timeOrigin_1 = (0, utils.msToSec)(time.browserPerformanceTimeOrigin);
                    if ("number" === typeof responseStartTimestamp) {
                        flags.IS_DEBUG_BUILD && logger.logger.log("[Measurements] Adding TTFB");
                        this._measurements["ttfb"] = {
                            value: 1e3 * (responseStartTimestamp - transaction.startTimestamp)
                        };
                        if ("number" === typeof requestStartTimestamp && requestStartTimestamp <= responseStartTimestamp) this._measurements["ttfb.requestTime"] = {
                            value: 1e3 * (responseStartTimestamp - requestStartTimestamp)
                        };
                    }
                    [ "fcp", "fp", "lcp" ].forEach((function(name) {
                        if (!_this._measurements[name] || timeOrigin_1 >= transaction.startTimestamp) return;
                        var oldValue = _this._measurements[name].value;
                        var measurementTimestamp = timeOrigin_1 + (0, utils.msToSec)(oldValue);
                        var normalizedValue = Math.abs(1e3 * (measurementTimestamp - transaction.startTimestamp));
                        var delta = normalizedValue - oldValue;
                        flags.IS_DEBUG_BUILD && logger.logger.log("[Measurements] Normalized " + name + " from " + oldValue + " to " + normalizedValue + " (" + delta + ")");
                        _this._measurements[name].value = normalizedValue;
                    }));
                    if (this._measurements["mark.fid"] && this._measurements["fid"]) _startChild(transaction, {
                        description: "first input delay",
                        endTimestamp: this._measurements["mark.fid"].value + (0, utils.msToSec)(this._measurements["fid"].value),
                        op: "web.vitals",
                        startTimestamp: this._measurements["mark.fid"].value
                    });
                    if (!("fcp" in this._measurements)) delete this._measurements.cls;
                    transaction.setMeasurements(this._measurements);
                    tagMetricInfo(transaction, this._lcpEntry, this._clsEntry);
                    transaction.setTag("sentry_reportAllChanges", this._reportAllChanges);
                }
            };
            MetricsInstrumentation.prototype._trackNavigator = function(transaction) {
                var navigator = metrics_global.navigator;
                if (!navigator) return;
                var connection = navigator.connection;
                if (connection) {
                    if (connection.effectiveType) transaction.setTag("effectiveConnectionType", connection.effectiveType);
                    if (connection.type) transaction.setTag("connectionType", connection.type);
                    if (isMeasurementValue(connection.rtt)) this._measurements["connection.rtt"] = {
                        value: connection.rtt
                    };
                    if (isMeasurementValue(connection.downlink)) this._measurements["connection.downlink"] = {
                        value: connection.downlink
                    };
                }
                if (isMeasurementValue(navigator.deviceMemory)) transaction.setTag("deviceMemory", String(navigator.deviceMemory));
                if (isMeasurementValue(navigator.hardwareConcurrency)) transaction.setTag("hardwareConcurrency", String(navigator.hardwareConcurrency));
            };
            MetricsInstrumentation.prototype._trackCLS = function() {
                var _this = this;
                getCLS((function(metric) {
                    var entry = metric.entries.pop();
                    if (!entry) return;
                    flags.IS_DEBUG_BUILD && logger.logger.log("[Measurements] Adding CLS");
                    _this._measurements["cls"] = {
                        value: metric.value
                    };
                    _this._clsEntry = entry;
                }));
            };
            MetricsInstrumentation.prototype._trackLCP = function() {
                var _this = this;
                getLCP((function(metric) {
                    var entry = metric.entries.pop();
                    if (!entry) return;
                    var timeOrigin = (0, utils.msToSec)(time.browserPerformanceTimeOrigin);
                    var startTime = (0, utils.msToSec)(entry.startTime);
                    flags.IS_DEBUG_BUILD && logger.logger.log("[Measurements] Adding LCP");
                    _this._measurements["lcp"] = {
                        value: metric.value
                    };
                    _this._measurements["mark.lcp"] = {
                        value: timeOrigin + startTime
                    };
                    _this._lcpEntry = entry;
                }), this._reportAllChanges);
            };
            MetricsInstrumentation.prototype._trackFID = function() {
                var _this = this;
                getFID((function(metric) {
                    var entry = metric.entries.pop();
                    if (!entry) return;
                    var timeOrigin = (0, utils.msToSec)(time.browserPerformanceTimeOrigin);
                    var startTime = (0, utils.msToSec)(entry.startTime);
                    flags.IS_DEBUG_BUILD && logger.logger.log("[Measurements] Adding FID");
                    _this._measurements["fid"] = {
                        value: metric.value
                    };
                    _this._measurements["mark.fid"] = {
                        value: timeOrigin + startTime
                    };
                }));
            };
            return MetricsInstrumentation;
        }();
        function addNavigationSpans(transaction, entry, timeOrigin) {
            [ "unloadEvent", "redirect", "domContentLoadedEvent", "loadEvent", "connect" ].forEach((function(event) {
                addPerformanceNavigationTiming(transaction, entry, event, timeOrigin);
            }));
            addPerformanceNavigationTiming(transaction, entry, "secureConnection", timeOrigin, "TLS/SSL", "connectEnd");
            addPerformanceNavigationTiming(transaction, entry, "fetch", timeOrigin, "cache", "domainLookupStart");
            addPerformanceNavigationTiming(transaction, entry, "domainLookup", timeOrigin, "DNS");
            addRequest(transaction, entry, timeOrigin);
        }
        function addMeasureSpans(transaction, entry, startTime, duration, timeOrigin) {
            var measureStartTimestamp = timeOrigin + startTime;
            var measureEndTimestamp = measureStartTimestamp + duration;
            _startChild(transaction, {
                description: entry.name,
                endTimestamp: measureEndTimestamp,
                op: entry.entryType,
                startTimestamp: measureStartTimestamp
            });
            return measureStartTimestamp;
        }
        function addResourceSpans(transaction, entry, resourceName, startTime, duration, timeOrigin) {
            if ("xmlhttprequest" === entry.initiatorType || "fetch" === entry.initiatorType) return;
            var data = {};
            if ("transferSize" in entry) data["Transfer Size"] = entry.transferSize;
            if ("encodedBodySize" in entry) data["Encoded Body Size"] = entry.encodedBodySize;
            if ("decodedBodySize" in entry) data["Decoded Body Size"] = entry.decodedBodySize;
            var startTimestamp = timeOrigin + startTime;
            var endTimestamp = startTimestamp + duration;
            _startChild(transaction, {
                description: resourceName,
                endTimestamp,
                op: entry.initiatorType ? "resource." + entry.initiatorType : "resource",
                startTimestamp,
                data
            });
        }
        function addPerformanceNavigationTiming(transaction, entry, event, timeOrigin, description, eventEnd) {
            var end = eventEnd ? entry[eventEnd] : entry[event + "End"];
            var start = entry[event + "Start"];
            if (!start || !end) return;
            _startChild(transaction, {
                op: "browser",
                description: null !== description && void 0 !== description ? description : event,
                startTimestamp: timeOrigin + (0, utils.msToSec)(start),
                endTimestamp: timeOrigin + (0, utils.msToSec)(end)
            });
        }
        function addRequest(transaction, entry, timeOrigin) {
            _startChild(transaction, {
                op: "browser",
                description: "request",
                startTimestamp: timeOrigin + (0, utils.msToSec)(entry.requestStart),
                endTimestamp: timeOrigin + (0, utils.msToSec)(entry.responseEnd)
            });
            _startChild(transaction, {
                op: "browser",
                description: "response",
                startTimestamp: timeOrigin + (0, utils.msToSec)(entry.responseStart),
                endTimestamp: timeOrigin + (0, utils.msToSec)(entry.responseEnd)
            });
        }
        function _startChild(transaction, _a) {
            var startTimestamp = _a.startTimestamp, ctx = (0, tslib_es6.__rest)(_a, [ "startTimestamp" ]);
            if (startTimestamp && transaction.startTimestamp > startTimestamp) transaction.startTimestamp = startTimestamp;
            return transaction.startChild((0, tslib_es6.__assign)({
                startTimestamp
            }, ctx));
        }
        function isMeasurementValue(value) {
            return "number" === typeof value && isFinite(value);
        }
        function tagMetricInfo(transaction, lcpEntry, clsEntry) {
            if (lcpEntry) {
                flags.IS_DEBUG_BUILD && logger.logger.log("[Measurements] Adding LCP Data");
                if (lcpEntry.element) transaction.setTag("lcp.element", (0, browser.htmlTreeAsString)(lcpEntry.element));
                if (lcpEntry.id) transaction.setTag("lcp.id", lcpEntry.id);
                if (lcpEntry.url) transaction.setTag("lcp.url", lcpEntry.url.trim().slice(0, 200));
                transaction.setTag("lcp.size", lcpEntry.size);
            }
            if (clsEntry && clsEntry.sources) {
                flags.IS_DEBUG_BUILD && logger.logger.log("[Measurements] Adding CLS Data");
                clsEntry.sources.forEach((function(source, index) {
                    return transaction.setTag("cls.source." + (index + 1), (0, browser.htmlTreeAsString)(source.node));
                }));
            }
        }
        var string = __webpack_require__("../shared/browser/node_modules/@sentry/utils/esm/string.js");
        var instrument = __webpack_require__("../shared/browser/node_modules/@sentry/utils/esm/instrument.js");
        var is = __webpack_require__("../shared/browser/node_modules/@sentry/utils/esm/is.js");
        var DEFAULT_TRACING_ORIGINS = [ "localhost", /^\// ];
        var defaultRequestInstrumentationOptions = {
            traceFetch: true,
            traceXHR: true,
            tracingOrigins: DEFAULT_TRACING_ORIGINS
        };
        function instrumentOutgoingRequests(_options) {
            var _a = (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, defaultRequestInstrumentationOptions), _options), traceFetch = _a.traceFetch, traceXHR = _a.traceXHR, tracingOrigins = _a.tracingOrigins, shouldCreateSpanForRequest = _a.shouldCreateSpanForRequest;
            var urlMap = {};
            var defaultShouldCreateSpan = function(url) {
                if (urlMap[url]) return urlMap[url];
                var origins = tracingOrigins;
                urlMap[url] = origins.some((function(origin) {
                    return (0, string.isMatchingPattern)(url, origin);
                })) && !(0, string.isMatchingPattern)(url, "sentry_key");
                return urlMap[url];
            };
            var shouldCreateSpan = defaultShouldCreateSpan;
            if ("function" === typeof shouldCreateSpanForRequest) shouldCreateSpan = function(url) {
                return defaultShouldCreateSpan(url) && shouldCreateSpanForRequest(url);
            };
            var spans = {};
            if (traceFetch) (0, instrument.addInstrumentationHandler)("fetch", (function(handlerData) {
                fetchCallback(handlerData, shouldCreateSpan, spans);
            }));
            if (traceXHR) (0, instrument.addInstrumentationHandler)("xhr", (function(handlerData) {
                xhrCallback(handlerData, shouldCreateSpan, spans);
            }));
        }
        function fetchCallback(handlerData, shouldCreateSpan, spans) {
            if (!(0, utils.hasTracingEnabled)() || !(handlerData.fetchData && shouldCreateSpan(handlerData.fetchData.url))) return;
            if (handlerData.endTimestamp) {
                var spanId = handlerData.fetchData.__span;
                if (!spanId) return;
                var span = spans[spanId];
                if (span) {
                    if (handlerData.response) span.setHttpStatus(handlerData.response.status); else if (handlerData.error) span.setStatus("internal_error");
                    span.finish();
                    delete spans[spanId];
                }
                return;
            }
            var activeTransaction = (0, utils.getActiveTransaction)();
            if (activeTransaction) {
                span = activeTransaction.startChild({
                    data: (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, handlerData.fetchData), {
                        type: "fetch"
                    }),
                    description: handlerData.fetchData.method + " " + handlerData.fetchData.url,
                    op: "http.client"
                });
                handlerData.fetchData.__span = span.spanId;
                spans[span.spanId] = span;
                var request = handlerData.args[0] = handlerData.args[0];
                var options = handlerData.args[1] = handlerData.args[1] || {};
                var headers = options.headers;
                if ((0, is.isInstanceOf)(request, Request)) headers = request.headers;
                if (headers) if ("function" === typeof headers.append) headers.append("sentry-trace", span.toTraceparent()); else if (Array.isArray(headers)) headers = (0, 
                tslib_es6.__spread)(headers, [ [ "sentry-trace", span.toTraceparent() ] ]); else headers = (0, 
                tslib_es6.__assign)((0, tslib_es6.__assign)({}, headers), {
                    "sentry-trace": span.toTraceparent()
                }); else headers = {
                    "sentry-trace": span.toTraceparent()
                };
                options.headers = headers;
            }
        }
        function xhrCallback(handlerData, shouldCreateSpan, spans) {
            if (!(0, utils.hasTracingEnabled)() || handlerData.xhr && handlerData.xhr.__sentry_own_request__ || !(handlerData.xhr && handlerData.xhr.__sentry_xhr__ && shouldCreateSpan(handlerData.xhr.__sentry_xhr__.url))) return;
            var xhr = handlerData.xhr.__sentry_xhr__;
            if (handlerData.endTimestamp) {
                var spanId = handlerData.xhr.__sentry_xhr_span_id__;
                if (!spanId) return;
                var span = spans[spanId];
                if (span) {
                    span.setHttpStatus(xhr.status_code);
                    span.finish();
                    delete spans[spanId];
                }
                return;
            }
            var activeTransaction = (0, utils.getActiveTransaction)();
            if (activeTransaction) {
                span = activeTransaction.startChild({
                    data: (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, xhr.data), {
                        type: "xhr",
                        method: xhr.method,
                        url: xhr.url
                    }),
                    description: xhr.method + " " + xhr.url,
                    op: "http.client"
                });
                handlerData.xhr.__sentry_xhr_span_id__ = span.spanId;
                spans[handlerData.xhr.__sentry_xhr_span_id__] = span;
                if (handlerData.xhr.setRequestHeader) try {
                    handlerData.xhr.setRequestHeader("sentry-trace", span.toTraceparent());
                } catch (_) {}
            }
        }
        var router_global = (0, global.getGlobalObject)();
        function instrumentRoutingWithDefaults(customStartTransaction, startTransactionOnPageLoad, startTransactionOnLocationChange) {
            if (void 0 === startTransactionOnPageLoad) startTransactionOnPageLoad = true;
            if (void 0 === startTransactionOnLocationChange) startTransactionOnLocationChange = true;
            if (!router_global || !router_global.location) {
                flags.IS_DEBUG_BUILD && logger.logger.warn("Could not initialize routing instrumentation due to invalid location");
                return;
            }
            var startingUrl = router_global.location.href;
            var activeTransaction;
            if (startTransactionOnPageLoad) activeTransaction = customStartTransaction({
                name: router_global.location.pathname,
                op: "pageload"
            });
            if (startTransactionOnLocationChange) (0, instrument.addInstrumentationHandler)("history", (function(_a) {
                var to = _a.to, from = _a.from;
                if (void 0 === from && startingUrl && -1 !== startingUrl.indexOf(to)) {
                    startingUrl = void 0;
                    return;
                }
                if (from !== to) {
                    startingUrl = void 0;
                    if (activeTransaction) {
                        flags.IS_DEBUG_BUILD && logger.logger.log("[Tracing] Finishing current transaction with op: " + activeTransaction.op);
                        activeTransaction.finish();
                    }
                    activeTransaction = customStartTransaction({
                        name: router_global.location.pathname,
                        op: "navigation"
                    });
                }
            }));
        }
        var DEFAULT_MAX_TRANSACTION_DURATION_SECONDS = 600;
        var DEFAULT_BROWSER_TRACING_OPTIONS = (0, tslib_es6.__assign)({
            idleTimeout: idletransaction.DEFAULT_IDLE_TIMEOUT,
            markBackgroundTransactions: true,
            maxTransactionDuration: DEFAULT_MAX_TRANSACTION_DURATION_SECONDS,
            routingInstrumentation: instrumentRoutingWithDefaults,
            startTransactionOnLocationChange: true,
            startTransactionOnPageLoad: true
        }, defaultRequestInstrumentationOptions);
        var BrowserTracing = function() {
            function BrowserTracing(_options) {
                this.name = BrowserTracing.id;
                this._configuredIdleTimeout = void 0;
                var tracingOrigins = defaultRequestInstrumentationOptions.tracingOrigins;
                if (_options) {
                    this._configuredIdleTimeout = _options.idleTimeout;
                    if (_options.tracingOrigins && Array.isArray(_options.tracingOrigins) && 0 !== _options.tracingOrigins.length) tracingOrigins = _options.tracingOrigins; else flags.IS_DEBUG_BUILD && (this._emitOptionsWarning = true);
                }
                this.options = (0, tslib_es6.__assign)((0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, DEFAULT_BROWSER_TRACING_OPTIONS), _options), {
                    tracingOrigins
                });
                var _metricOptions = this.options._metricOptions;
                this._metrics = new MetricsInstrumentation(_metricOptions && _metricOptions._reportAllChanges);
            }
            BrowserTracing.prototype.setupOnce = function(_, getCurrentHub) {
                var _this = this;
                this._getCurrentHub = getCurrentHub;
                if (this._emitOptionsWarning) {
                    flags.IS_DEBUG_BUILD && logger.logger.warn("[Tracing] You need to define `tracingOrigins` in the options. Set an array of urls or patterns to trace.");
                    flags.IS_DEBUG_BUILD && logger.logger.warn("[Tracing] We added a reasonable default for you: " + defaultRequestInstrumentationOptions.tracingOrigins);
                }
                var _a = this.options, instrumentRouting = _a.routingInstrumentation, startTransactionOnLocationChange = _a.startTransactionOnLocationChange, startTransactionOnPageLoad = _a.startTransactionOnPageLoad, markBackgroundTransactions = _a.markBackgroundTransactions, traceFetch = _a.traceFetch, traceXHR = _a.traceXHR, tracingOrigins = _a.tracingOrigins, shouldCreateSpanForRequest = _a.shouldCreateSpanForRequest;
                instrumentRouting((function(context) {
                    return _this._createRouteTransaction(context);
                }), startTransactionOnPageLoad, startTransactionOnLocationChange);
                if (markBackgroundTransactions) registerBackgroundTabDetection();
                instrumentOutgoingRequests({
                    traceFetch,
                    traceXHR,
                    tracingOrigins,
                    shouldCreateSpanForRequest
                });
            };
            BrowserTracing.prototype._createRouteTransaction = function(context) {
                var _this = this;
                if (!this._getCurrentHub) {
                    flags.IS_DEBUG_BUILD && logger.logger.warn("[Tracing] Did not create " + context.op + " transaction because _getCurrentHub is invalid.");
                    return;
                }
                var _a = this.options, beforeNavigate = _a.beforeNavigate, idleTimeout = _a.idleTimeout, maxTransactionDuration = _a.maxTransactionDuration;
                var parentContextFromHeader = "pageload" === context.op ? getHeaderContext() : void 0;
                var expandedContext = (0, tslib_es6.__assign)((0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, context), parentContextFromHeader), {
                    trimEnd: true
                });
                var modifiedContext = "function" === typeof beforeNavigate ? beforeNavigate(expandedContext) : expandedContext;
                var finalContext = void 0 === modifiedContext ? (0, tslib_es6.__assign)((0, tslib_es6.__assign)({}, expandedContext), {
                    sampled: false
                }) : modifiedContext;
                if (false === finalContext.sampled) flags.IS_DEBUG_BUILD && logger.logger.log("[Tracing] Will not send " + finalContext.op + " transaction because of beforeNavigate.");
                flags.IS_DEBUG_BUILD && logger.logger.log("[Tracing] Starting " + finalContext.op + " transaction on scope");
                var hub = this._getCurrentHub();
                var location = (0, global.getGlobalObject)().location;
                var idleTransaction = (0, hubextensions.startIdleTransaction)(hub, finalContext, idleTimeout, true, {
                    location
                });
                idleTransaction.registerBeforeFinishCallback((function(transaction, endTimestamp) {
                    _this._metrics.addPerformanceEntries(transaction);
                    adjustTransactionDuration((0, utils.secToMs)(maxTransactionDuration), transaction, endTimestamp);
                }));
                idleTransaction.setTag("idleTimeout", this._configuredIdleTimeout);
                return idleTransaction;
            };
            BrowserTracing.id = "BrowserTracing";
            return BrowserTracing;
        }();
        function getHeaderContext() {
            var header = getMetaContent("sentry-trace");
            if (header) return extractTraceparentData(header);
            return;
        }
        function getMetaContent(metaName) {
            var el = (0, global.getGlobalObject)().document.querySelector("meta[name=" + metaName + "]");
            return el ? el.getAttribute("content") : null;
        }
        function adjustTransactionDuration(maxDuration, transaction, endTimestamp) {
            var diff = endTimestamp - transaction.startTimestamp;
            var isOutdatedTransaction = endTimestamp && (diff > maxDuration || diff < 0);
            if (isOutdatedTransaction) {
                transaction.setStatus("deadline_exceeded");
                transaction.setTag("maxTransactionDurationExceeded", "true");
            }
        }
        (0, hubextensions.addExtensionMethods)();
        var get_env = __webpack_require__("../shared/browser/utils/get-env.js");
        function ownKeys(object, enumerableOnly) {
            var keys = Object.keys(object);
            if (Object.getOwnPropertySymbols) {
                var symbols = Object.getOwnPropertySymbols(object);
                if (enumerableOnly) symbols = symbols.filter((function(sym) {
                    return Object.getOwnPropertyDescriptor(object, sym).enumerable;
                }));
                keys.push.apply(keys, symbols);
            }
            return keys;
        }
        function _objectSpread(target) {
            for (var i = 1; i < arguments.length; i++) {
                var source = null != arguments[i] ? arguments[i] : {};
                if (i % 2) ownKeys(Object(source), true).forEach((function(key) {
                    _defineProperty(target, key, source[key]);
                })); else if (Object.getOwnPropertyDescriptors) Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); else ownKeys(Object(source)).forEach((function(key) {
                    Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
                }));
            }
            return target;
        }
        function _defineProperty(obj, key, value) {
            if (key in obj) Object.defineProperty(obj, key, {
                value,
                enumerable: true,
                configurable: true,
                writable: true
            }); else obj[key] = value;
            return obj;
        }
        var errorTypesEnum = {
            CUSTOM_CODES: "CUSTOM_CODES"
        };
        var errorPositionEnum = {
            TOP: "top",
            BOTTOM: "bottom"
        };
        function getErrorLine(error) {
            if (!(error && error.stack)) return;
            var stack = error.stack.toString().split(/\r\n|\n/);
            var frameRE = /:(\d+):(?:\d+)[^\d]*$/;
            var firstTrace;
            var frame;
            do {
                frame = stack.shift();
                firstTrace = frameRE.exec(frame);
                if (!frame) break;
            } while (!frameRE.exec(frame) || frame.includes("at <anonymous>") || 1 === +(firstTrace && firstTrace[1]));
            var causeTrace = +(firstTrace && firstTrace[1] || "0");
            return causeTrace;
        }
        function setEventErrorInfo(event, position) {
            if (!event.contexts) event.contexts = {};
            event.contexts.error_info = {
                position,
                error_type: errorTypesEnum.CUSTOM_CODES
            };
        }
        try {
            var _getEnv = (0, get_env["default"])(), APP_ENV = _getEnv.APP_ENV, SENTRY_TRACES_SAMPLE_RATE = _getEnv.SENTRY_TRACES_SAMPLE_RATE;
            var sampleRate = Number(SENTRY_TRACES_SAMPLE_RATE);
            if (Number.isNaN(sampleRate)) sampleRate = 0;
            var options = {
                debug: false,
                environment: APP_ENV,
                release: "".concat(APP_ENV, "@").concat("undefined_theme_Arise_1.0.0_f274af2bc"),
                dsn: (0, get_env["default"])(void 0 || "SENTRY_DSN") || "",
                autoSessionTracking: false,
                ignoreErrors: [ "ReportingObserver [deprecation]" ],
                blacklistUrls: [ /^localhost/, /extensions\//i, /^chrome:\/\//i, /^chrome-extensions:\/\//i, /^safari-extension:\/\//i, /^file:\/\//i ],
                tracesSampleRate: sampleRate,
                integrations: [ new BrowserTracing ],
                beforeSend: function(event, hint) {
                    var error = hint.originalException;
                    var frames = event && event.exception && event.exception.values && event.exception.values[0] && event.exception.values[0].stacktrace && event.exception.values[0].stacktrace.frames;
                    var traceFrames = frames || [];
                    var errorLine = getErrorLine(error) || traceFrames[0] && traceFrames[0].lineno;
                    var file = traceFrames.find((function(frame) {
                        return frame.lineno === errorLine;
                    }));
                    var errorFile = get_default()(file, "filename", void 0) || get_default()(traceFrames[0], "filename", void 0);
                    if (errorFile === window.location.href) {
                        if ("undefined" !== typeof window.__CUSTOM_HEADER_START__ && "undefined" !== typeof window.__CUSTOM_HEADER_END__) {
                            var isHeadError = errorLine >= +window.__CUSTOM_HEADER_START__ && errorLine <= +window.__CUSTOM_HEADER_END__;
                            if (isHeadError) setEventErrorInfo(event, errorPositionEnum.TOP);
                        }
                        if ("undefined" !== typeof window.__CUSTOM_FOOTER_START__) {
                            var isFootError = errorLine >= +window.__CUSTOM_FOOTER_START__ && ("undefined" !== typeof window.__CUSTOM_FOOTER_END__ ? errorLine <= +window.__CUSTOM_FOOTER_END__ : true);
                            if (isFootError) setEventErrorInfo(event, errorPositionEnum.BOTTOM);
                        }
                    }
                    return event;
                },
                beforeBreadcrumb: function(breadcrumb, hint) {
                    var response = get_default()(hint, "xhr.response", void 0);
                    if ("xhr" === breadcrumb.category && response) try {
                        var trace_id = response.match(/trace_id":"(\S*?)"/)[1] || "";
                        return _objectSpread(_objectSpread({}, breadcrumb), {}, {
                            data: _objectSpread(_objectSpread({}, breadcrumb.data), {}, {
                                trace_id
                            })
                        });
                    } catch (err) {
                        return breadcrumb;
                    }
                    return breadcrumb;
                }
            };
            if (-1 === sampleRate) delete options.tracesSampleRate;
            sdk.init(options);
            var eventOn = get_default()(window, "Shopline.event", void 0);
            if (eventOn) eventOn.on("Sentry::CaptureMessage", (function() {
                minimal_esm.captureMessage.apply(esm, arguments);
            }));
        } catch (e) {
            console.error(e);
        }
    })();
    (() => {
        "use strict";
    })();
})();